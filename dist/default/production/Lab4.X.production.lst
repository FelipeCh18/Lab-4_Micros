

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 18 22:58:45 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.40
    52                           ; Generated 04/07/2022 GMT
    53                           ; 
    54                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  0000'                    __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _Numero_2_Char
    92  0000' 20                 	db	32
    93                           
    94                           ;initializer for _Numero_1_Char
    95  0001' 20                 	db	32
    96                           
    97                           ;initializer for _Operador
    98  0002' 20                 	db	32
    99                           
   100                           ;initializer for _interfaz
   101  0003' 08                 	db	8
   102                           
   103                           ;initializer for _heart
   104  0004' 00                 	db	0
   105  0005' 1B                 	db	27
   106  0006' 1F                 	db	31
   107  0007' 1F                 	db	31
   108  0008' 0E                 	db	14
   109  0009' 04                 	db	4
   110  000A' 00                 	db	0
   111  000B' 00                 	db	0
   112                           
   113                           	psect	idataBANK0
   114  0000'                    __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for _persona
   118  0000' 0E                 	db	14
   119  0001' 0E                 	db	14
   120  0002' 04                 	db	4
   121  0003' 1F                 	db	31
   122  0004' 04                 	db	4
   123  0005' 04                 	db	4
   124  0006' 0A                 	db	10
   125  0007' 11                 	db	17
   126  0000                     _LATC	set	3979
   127  0000                     _TRISC	set	3988
   128  0000                     _LATC7	set	31839
   129  0000                     _LATE2	set	31850
   130  0000                     _RB7	set	31759
   131  0000                     _RB6	set	31758
   132  0000                     _RB5	set	31757
   133  0000                     _POR	set	32385
   134  0000                     _PD	set	32386
   135  0000                     _TMR0ON	set	32431
   136  0000                     _GIE	set	32663
   137  0000                     _TMR0IE	set	32661
   138  0000                     _LATE1	set	31849
   139  0000                     _LATB	set	3978
   140  0000                     _LATD	set	3980
   141  0000                     _RB4	set	31756
   142  0000                     _TRISB	set	3987
   143  0000                     _TRISD	set	3989
   144  0000                     _ADCON1	set	4033
   145  0000                     _LATE0	set	31848
   146  0000                     _OSCCON	set	4051
   147  0000                     _T0CON	set	4053
   148  0000                     _TO	set	32387
   149  0000                     _RBPU	set	32655
   150  0000                     _TRISE	set	3990
   151  0000                     _TMR0IF	set	32658
   152  0000                     _TMR0	set	4054
   153                           
   154                           	psect	smallconst
   155  0000'                    __psmallconst:
   156                           	callstack 0
   157  0000' 00                 	db	0
   158  0001'                    STR_7:
   159  0001' 4D                 	db	77	;'M'
   160  0002' 6F                 	db	111	;'o'
   161  0003' 64                 	db	100	;'d'
   162  0004' 6F                 	db	111	;'o'
   163  0005' 20                 	db	32
   164  0006' 46                 	db	70	;'F'
   165  0007' 61                 	db	97	;'a'
   166  0008' 63                 	db	99	;'c'
   167  0009' 74                 	db	116	;'t'
   168  000A' 6F                 	db	111	;'o'
   169  000B' 72                 	db	114	;'r'
   170  000C' 69                 	db	105	;'i'
   171  000D' 61                 	db	97	;'a'
   172  000E' 6C                 	db	108	;'l'
   173  000F' 00                 	db	0
   174  0010'                    STR_3:
   175  0010' 4D                 	db	77	;'M'
   176  0011' 6F                 	db	111	;'o'
   177  0012' 64                 	db	100	;'d'
   178  0013' 6F                 	db	111	;'o'
   179  0014' 20                 	db	32
   180  0015' 50                 	db	80	;'P'
   181  0016' 6F                 	db	111	;'o'
   182  0017' 74                 	db	116	;'t'
   183  0018' 65                 	db	101	;'e'
   184  0019' 6E                 	db	110	;'n'
   185  001A' 63                 	db	99	;'c'
   186  001B' 69                 	db	105	;'i'
   187  001C' 61                 	db	97	;'a'
   188  001D' 00                 	db	0
   189  001E'                    STR_13:
   190  001E' 49                 	db	73	;'I'
   191  001F' 6E                 	db	110	;'n'
   192  0020' 64                 	db	100	;'d'
   193  0021' 65                 	db	101	;'e'
   194  0022' 74                 	db	116	;'t'
   195  0023' 65                 	db	101	;'e'
   196  0024' 72                 	db	114	;'r'
   197  0025' 6D                 	db	109	;'m'
   198  0026' 69                 	db	105	;'i'
   199  0027' 6E                 	db	110	;'n'
   200  0028' 61                 	db	97	;'a'
   201  0029' 64                 	db	100	;'d'
   202  002A' 6F                 	db	111	;'o'
   203  002B' 00                 	db	0
   204  002C'                    STR_11:
   205  002C' 4C                 	db	76	;'L'
   206  002D' 56                 	db	86	;'V'
   207  002E' 50                 	db	80	;'P'
   208  002F' 20                 	db	32
   209  0030' 41                 	db	65	;'A'
   210  0031' 63                 	db	99	;'c'
   211  0032' 74                 	db	116	;'t'
   212  0033' 69                 	db	105	;'i'
   213  0034' 76                 	db	118	;'v'
   214  0035' 61                 	db	97	;'a'
   215  0036' 64                 	db	100	;'d'
   216  0037' 6F                 	db	111	;'o'
   217  0038' 00                 	db	0
   218  0039'                    STR_9:
   219  0039' 4D                 	db	77	;'M'
   220  003A' 6F                 	db	111	;'o'
   221  003B' 64                 	db	100	;'d'
   222  003C' 6F                 	db	111	;'o'
   223  003D' 20                 	db	32
   224  003E' 52                 	db	82	;'R'
   225  003F' 65                 	db	101	;'e'
   226  0040' 73                 	db	115	;'s'
   227  0041' 74                 	db	116	;'t'
   228  0042' 61                 	db	97	;'a'
   229  0043' 00                 	db	0
   230  0044'                    STR_5:
   231  0044' 4D                 	db	77	;'M'
   232  0045' 6F                 	db	111	;'o'
   233  0046' 64                 	db	100	;'d'
   234  0047' 6F                 	db	111	;'o'
   235  0048' 20                 	db	32
   236  0049' 53                 	db	83	;'S'
   237  004A' 75                 	db	117	;'u'
   238  004B' 6D                 	db	109	;'m'
   239  004C' 61                 	db	97	;'a'
   240  004D' 00                 	db	0
   241  004E'                    STR_12:
   242  004E' 49                 	db	73	;'I'
   243  004F' 6E                 	db	110	;'n'
   244  0050' 66                 	db	102	;'f'
   245  0051' 69                 	db	105	;'i'
   246  0052' 6E                 	db	110	;'n'
   247  0053' 69                 	db	105	;'i'
   248  0054' 74                 	db	116	;'t'
   249  0055' 6F                 	db	111	;'o'
   250  0056' 00                 	db	0
   251  0057'                    STR_1:
   252  0057' 45                 	db	69	;'E'
   253  0058' 6E                 	db	110	;'n'
   254  0059' 65                 	db	101	;'e'
   255  005A' 72                 	db	114	;'r'
   256  005B' 67                 	db	103	;'g'
   257  005C' 69                 	db	105	;'i'
   258  005D' 61                 	db	97	;'a'
   259  005E' 00                 	db	0
   260  005F'                    STR_2:
   261  005F' 4D                 	db	77	;'M'
   262  0060' 43                 	db	67	;'C'
   263  0061' 4C                 	db	76	;'L'
   264  0062' 52                 	db	82	;'R'
   265  0063' 00                 	db	0
   266  0064' 00                 	db	0	; dummy byte at the end
   267  0000                     
   268                           ; #config settings
   269                           
   270                           	psect	cinit
   271  0000'                    __pcinit:
   272                           	callstack 0
   273  0000'                    start_initialization:
   274                           	callstack 0
   275  0000'                    __initialization:
   276                           	callstack 0
   277                           
   278                           ; Initialize objects allocated to BANK0 (8 bytes)
   279                           ; load TBLPTR registers with __pidataBANK0
   280  0000' 0E00'              	movlw	low __pidataBANK0
   281  0002' 6EF6               	movwf	tblptrl,c
   282  0004' 0E00'              	movlw	high __pidataBANK0
   283  0006' 6EF7               	movwf	tblptrh,c
   284  0008' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
   285  000A' 6EF8               	movwf	tblptru,c
   286  000C' EE00' F000'        	lfsr	0,__pdataBANK0
   287  0010' EE10 F008          	lfsr	1,8
   288  0014'                    copy_data0:
   289  0014' 0009               	tblrd		*+
   290  0016' CFF5 FFEE          	movff	tablat,postinc0
   291  001A' 50E5               	movf	postdec1,w,c
   292  001C' 50E1               	movf	fsr1l,w,c
   293  001E' E1FA               	bnz	copy_data0
   294                           
   295                           ; Initialize objects allocated to COMRAM (12 bytes)
   296                           ; load TBLPTR registers with __pidataCOMRAM
   297  0020' 0E00'              	movlw	low __pidataCOMRAM
   298  0022' 6EF6               	movwf	tblptrl,c
   299  0024' 0E00'              	movlw	high __pidataCOMRAM
   300  0026' 6EF7               	movwf	tblptrh,c
   301  0028' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
   302  002A' 6EF8               	movwf	tblptru,c
   303  002C' EE00' F000'        	lfsr	0,__pdataCOMRAM
   304  0030' EE10 F00C          	lfsr	1,12
   305  0034'                    copy_data1:
   306  0034' 0009               	tblrd		*+
   307  0036' CFF5 FFEE          	movff	tablat,postinc0
   308  003A' 50E5               	movf	postdec1,w,c
   309  003C' 50E1               	movf	fsr1l,w,c
   310  003E' E1FA               	bnz	copy_data1
   311                           
   312                           ; Clear objects allocated to COMRAM (32 bytes)
   313  0040' EE00' F000'        	lfsr	0,__pbssCOMRAM
   314  0044' 0E20               	movlw	32
   315  0046'                    clear_0:
   316  0046' 6AEE               	clrf	postinc0,c
   317  0048' 06E8               	decf	wreg,f,c
   318  004A' E1FD               	bnz	clear_0
   319  004C'                    end_of_initialization:
   320                           	callstack 0
   321  004C'                    __end_of__initialization:
   322                           	callstack 0
   323  004C' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   324  004E' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   325  0050' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   326  0052' 6EF8               	movwf	tblptru,c
   327  0054' 0100               	movlb	0
   328  0056' EF00' F000'        	goto	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMRAM
   331  0000'                    __pbssCOMRAM:
   332                           	callstack 0
   333  0000'                    _Resultado:
   334                           	callstack 0
   335  0000'                    	ds	4
   336  0004'                    _Parte_Decimal:
   337                           	callstack 0
   338  0004'                    	ds	4
   339  0008'                    _b:
   340                           	callstack 0
   341  0008'                    	ds	2
   342  000A'                    _a:
   343                           	callstack 0
   344  000A'                    	ds	2
   345  000C'                    _Verificador:
   346                           	callstack 0
   347  000C'                    	ds	2
   348  000E'                    _Contador:
   349                           	callstack 0
   350  000E'                    	ds	2
   351  0010'                    _Color:
   352                           	callstack 0
   353  0010'                    	ds	2
   354  0012'                    _i:
   355                           	callstack 0
   356  0012'                    	ds	2
   357  0014'                    _Numero_2:
   358                           	callstack 0
   359  0014'                    	ds	2
   360  0016'                    _Numero_1:
   361                           	callstack 0
   362  0016'                    	ds	2
   363  0018'                    _Negativo:
   364                           	callstack 0
   365  0018'                    	ds	1
   366  0019'                    _Factorial:
   367                           	callstack 0
   368  0019'                    	ds	1
   369  001A'                    _Potencia:
   370                           	callstack 0
   371  001A'                    	ds	1
   372  001B'                    _Boton:
   373                           	callstack 0
   374  001B'                    	ds	1
   375  001C'                    _m:
   376                           	callstack 0
   377  001C'                    	ds	4
   378                           
   379                           	psect	dataCOMRAM
   380  0000'                    __pdataCOMRAM:
   381                           	callstack 0
   382  0000'                    _Numero_2_Char:
   383                           	callstack 0
   384  0000'                    	ds	1
   385  0001'                    _Numero_1_Char:
   386                           	callstack 0
   387  0001'                    	ds	1
   388  0002'                    _Operador:
   389                           	callstack 0
   390  0002'                    	ds	1
   391  0003'                    _interfaz:
   392                           	callstack 0
   393  0003'                    	ds	1
   394  0004'                    _heart:
   395                           	callstack 0
   396  0004'                    	ds	8
   397                           
   398                           	psect	dataBANK0
   399  0000'                    __pdataBANK0:
   400                           	callstack 0
   401  0000'                    _persona:
   402                           	callstack 0
   403  0000'                    	ds	8
   404                           
   405                           	psect	cstackBANK0
   406  0000'                    __pcstackBANK0:
   407                           	callstack 0
   408  0000'                    Imprimir_Resultado@flag:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x0
   412  0000'                    	ds	1
   413  0001'                    Imprimir_Resultado@k:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x1
   417  0001'                    	ds	2
   418  0003'                    Imprimir_Resultado@i:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x3
   422  0003'                    	ds	2
   423  0005'                    Imprimir_Resultado@j:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x5
   427  0005'                    	ds	2
   428  0007'                    Imprimir_Resultado@Potencia:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0x7
   432  0007'                    	ds	4
   433  000B'                    _main$162:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0xB
   437  000B'                    	ds	1
   438  000C'                    _main$163:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0xC
   442  000C'                    	ds	1
   443                           
   444                           	psect	cstackCOMRAM
   445  0000'                    __pcstackCOMRAM:
   446                           	callstack 0
   447  0000'                    ??i2_RetardoLCD:
   448  0000'                    ?_NuevoCaracter:
   449                           	callstack 0
   450  0000'                    ?i2_strlen:
   451                           	callstack 0
   452  0000'                    i2strlen@s:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x0
   456  0000'                    	ds	1
   457  0001'                    i2RetardoLCD@a:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x1
   461  0001'                    	ds	1
   462  0002'                    ??i2_EnviaDato:
   463  0002'                    i2strlen@cp:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x2
   467  0002'                    	ds	1
   468  0003'                    i2EnviaDato@a:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x3
   472  0003'                    	ds	1
   473  0004'                    i2EscribeLCD_c@a:
   474                           	callstack 0
   475  0004'                    i2DireccionaLCD@a:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x4
   479  0004'                    	ds	1
   480  0005'                    i2MensajeLCD_Var@a:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x5
   484  0005'                    	ds	1
   485  0006'                    ??i2_MensajeLCD_Var:
   486                           
   487                           ; 1 bytes @ 0x6
   488  0006'                    	ds	1
   489  0007'                    i2MensajeLCD_Var@i:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x7
   493  0007'                    	ds	2
   494  0009'                    ??_ISR:
   495                           
   496                           ; 1 bytes @ 0x9
   497  0009'                    	ds	4
   498  000D'                    ??_RetardoLCD:
   499  000D'                    ??_ColorRGB:
   500  000D'                    ?_strlen:
   501                           	callstack 0
   502  000D'                    ?___wmul:
   503                           	callstack 0
   504  000D'                    ?___lwmod:
   505                           	callstack 0
   506  000D'                    ?___lmul:
   507                           	callstack 0
   508  000D'                    ?___aldiv:
   509                           	callstack 0
   510  000D'                    ?___almod:
   511                           	callstack 0
   512  000D'                    ConfiguraLCD@a:
   513                           	callstack 0
   514  000D'                    strlen@s:
   515                           	callstack 0
   516  000D'                    ___wmul@multiplier:
   517                           	callstack 0
   518  000D'                    ___lwmod@dividend:
   519                           	callstack 0
   520  000D'                    ___lmul@multiplier:
   521                           	callstack 0
   522  000D'                    ___aldiv@dividend:
   523                           	callstack 0
   524  000D'                    ___almod@dividend:
   525                           	callstack 0
   526                           
   527                           ; 4 bytes @ 0xD
   528  000D'                    	ds	1
   529  000E'                    RetardoLCD@a:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0xE
   533  000E'                    	ds	1
   534  000F'                    ??_EnviaDato:
   535  000F'                    strlen@cp:
   536                           	callstack 0
   537  000F'                    ___wmul@multiplicand:
   538                           	callstack 0
   539  000F'                    ___lwmod@divisor:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0xF
   543  000F'                    	ds	1
   544  0010'                    EnviaDato@a:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x10
   548  0010'                    	ds	1
   549  0011'                    EscribeLCD_c@a:
   550                           	callstack 0
   551  0011'                    DireccionaLCD@a:
   552                           	callstack 0
   553  0011'                    ___lwmod@counter:
   554                           	callstack 0
   555  0011'                    ___wmul@product:
   556                           	callstack 0
   557  0011'                    ___lmul@multiplicand:
   558                           	callstack 0
   559  0011'                    ___aldiv@divisor:
   560                           	callstack 0
   561  0011'                    ___almod@divisor:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x11
   565  0011'                    	ds	1
   566  0012'                    MensajeLCD_Var@a:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x12
   570  0012'                    	ds	1
   571  0013'                    ??_MensajeLCD_Var:
   572  0013'                    ?___lwdiv:
   573                           	callstack 0
   574  0013'                    ___lwdiv@dividend:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x13
   578  0013'                    	ds	1
   579  0014'                    MensajeLCD_Var@i:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x14
   583  0014'                    	ds	1
   584  0015'                    ___aldiv@counter:
   585                           	callstack 0
   586  0015'                    ___almod@counter:
   587                           	callstack 0
   588  0015'                    ___lwdiv@divisor:
   589                           	callstack 0
   590  0015'                    ___lmul@product:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x15
   594  0015'                    	ds	1
   595  0016'                    ___aldiv@sign:
   596                           	callstack 0
   597  0016'                    ___almod@sign:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x16
   601  0016'                    	ds	1
   602  0017'                    ___lwdiv@counter:
   603                           	callstack 0
   604  0017'                    ___aldiv@quotient:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x17
   608  0017'                    	ds	1
   609  0018'                    ___lwdiv@quotient:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x18
   613  0018'                    	ds	1
   614  0019'                    ?_factorial_function:
   615                           	callstack 0
   616  0019'                    factorial_function@a:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x19
   620  0019'                    	ds	2
   621  001B'                    Imprimir_Resultado@Resultado:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0x1B
   625  001B'                    	ds	2
   626  001D'                    factorial_function@fact:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x1D
   630  001D'                    	ds	2
   631  001F'                    ??_Imprimir_Resultado:
   632                           
   633                           ; 1 bytes @ 0x1F
   634  001F'                    	ds	4
   635  0023'                    ??_main:
   636                           
   637                           ; 1 bytes @ 0x23
   638  0023'                    	ds	2
   639                           
   640 ;;
   641 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   642 ;;
   643 ;; *************** function _main *****************
   644 ;; Defined at:
   645 ;;		line 38 in file "Lab4.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   659 ;;      Params:         0       0       0       0       0       0       0       0       0
   660 ;;      Locals:         0       2       0       0       0       0       0       0       0
   661 ;;      Temps:          2       0       0       0       0       0       0       0       0
   662 ;;      Totals:         2       2       0       0       0       0       0       0       0
   663 ;;Total ram usage:        4 bytes
   664 ;; Hardware stack levels required when called: 10
   665 ;; This function calls:
   666 ;;		_BorraLCD
   667 ;;		_ColorRGB
   668 ;;		_ConfiguraLCD
   669 ;;		_DireccionaLCD
   670 ;;		_EscribeLCD_c
   671 ;;		_Imprimir_Resultado
   672 ;;		_InicializaLCD
   673 ;;		_LeerTeclado
   674 ;;		_MensajeLCD_Var
   675 ;;		_NuevoCaracter
   676 ;;		___lmul
   677 ;;		___lwdiv
   678 ;;		___wmul
   679 ;;		_factorial_function
   680 ;; This function is called by:
   681 ;;		Startup code after reset
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text0
   686  0000'                    __ptext0:
   687                           	callstack 0
   688  0000'                    _main:
   689                           	callstack 21
   690                           
   691                           ;Lab4.c: 39: ADCON1=15;
   692                           
   693                           ;incstack = 0
   694  0000' 0E0F               	movlw	15
   695  0002' 6EC1               	movwf	193,c	;volatile
   696                           
   697                           ;Lab4.c: 40: TRISD=0;
   698  0004' 0E00               	movlw	0
   699  0006' 6E95               	movwf	149,c	;volatile
   700                           
   701                           ;Lab4.c: 41: TRISB=0b11110000;
   702  0008' 0EF0               	movlw	240
   703  000A' 6E93               	movwf	147,c	;volatile
   704                           
   705                           ;Lab4.c: 42: TRISE=0;
   706  000C' 0E00               	movlw	0
   707  000E' 6E96               	movwf	150,c	;volatile
   708                           
   709                           ;Lab4.c: 43: TRISC=0;
   710  0010' 0E00               	movlw	0
   711  0012' 6E94               	movwf	148,c	;volatile
   712                           
   713                           ;Lab4.c: 44: RBPU=0;
   714  0014' 9EF1               	bcf	4081,7,c	;volatile
   715                           
   716                           ;Lab4.c: 45: ConfiguraLCD(4);
   717  0016' 0E04               	movlw	4
   718  0018' EC00' F000'        	call	_ConfiguraLCD
   719                           
   720                           ;Lab4.c: 46: InicializaLCD();
   721  001C' EC00' F000'        	call	_InicializaLCD	;wreg free
   722                           
   723                           ;Lab4.c: 48: T0CON=0b10000010;
   724  0020' 0E82               	movlw	130
   725  0022' 6ED5               	movwf	213,c	;volatile
   726                           
   727                           ;Lab4.c: 49: TMR0IF=0;
   728  0024' 94F2               	bcf	4082,2,c	;volatile
   729                           
   730                           ;Lab4.c: 50: TMR0=49911;
   731  0026' 0EC2               	movlw	194
   732  0028' 6ED7               	movwf	215,c	;volatile
   733  002A' 0EF7               	movlw	247
   734  002C' 6ED6               	movwf	214,c	;volatile
   735                           
   736                           ;Lab4.c: 51: TMR0IE=1;
   737  002E' 8AF2               	bsf	4082,5,c	;volatile
   738                           
   739                           ;Lab4.c: 52: GIE=1;
   740  0030' 8EF2               	bsf	4082,7,c	;volatile
   741                           
   742                           ;Lab4.c: 53: TMR0ON=1;
   743  0032' 8ED5               	bsf	4053,7,c	;volatile
   744                           
   745                           ;Lab4.c: 56: OSCCON = 0b11000100;
   746  0034' 0EC4               	movlw	196
   747  0036' 6ED3               	movwf	211,c	;volatile
   748                           
   749                           ;Lab4.c: 58: BorraLCD();
   750  0038' EC00' F000'        	call	_BorraLCD	;wreg free
   751                           
   752                           ;Lab4.c: 59: if(TO == 1 && PD == 1){
   753  003C' B6D0               	btfsc	4048,3,c	;volatile
   754  003E' A4D0               	btfss	4048,2,c	;volatile
   755  0040' D007               	goto	l183
   756                           
   757                           ;Lab4.c: 60: BorraLCD();
   758  0042' EC00' F000'        	call	_BorraLCD	;wreg free
   759                           
   760                           ;Lab4.c: 61: MensajeLCD_Var("Energia");
   761  0046' 0E00'              	movlw	low STR_1
   762  0048' 6E00'              	movwf	MensajeLCD_Var@a^0,c
   763  004A' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
   764                           
   765                           ;Lab4.c: 62: }else{
   766  004E' D008               	goto	l3721
   767  0050'                    l183:
   768                           
   769                           ;Lab4.c: 63: if(POR==0){
   770  0050' B2D0               	btfsc	4048,1,c	;volatile
   771  0052' D006               	goto	l3721
   772                           
   773                           ;Lab4.c: 64: BorraLCD();
   774  0054' EC00' F000'        	call	_BorraLCD	;wreg free
   775                           
   776                           ;Lab4.c: 65: MensajeLCD_Var("MCLR");
   777  0058' 0E00'              	movlw	low STR_2
   778  005A' 6E00'              	movwf	MensajeLCD_Var@a^0,c
   779  005C' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
   780  0060'                    l3721:
   781                           
   782                           ;Lab4.c: 66: };Lab4.c: 67: };Lab4.c: 68: _delay((unsigned long)((2000)*(1000000/4000.0))
      +                          );
   783  0060' 0E03               	movlw	3
   784  0062' 6E00'              	movwf	(??_main+1)^0,c
   785  0064' 0E8A               	movlw	138
   786  0066' 6E00'              	movwf	??_main^0,c
   787  0068' 0E56               	movlw	86
   788  006A'                    u5107:
   789  006A' 2EE8               	decfsz	wreg,f,c
   790  006C' D7FE               	bra	u5107
   791  006E' 2E00'              	decfsz	??_main^0,f,c
   792  0070' D7FC               	bra	u5107
   793  0072' 2E00'              	decfsz	(??_main+1)^0,f,c
   794  0074' D7FA               	bra	u5107
   795                           
   796                           ;Lab4.c: 69: BorraLCD();
   797  0076' EC00' F000'        	call	_BorraLCD	;wreg free
   798                           
   799                           ;Lab4.c: 70: NuevoCaracter(0,heart);
   800  007A' 0E00               	movlw	0
   801  007C' 6E00'              	movwf	(?_NuevoCaracter+1)^0,c
   802  007E' 0E00               	movlw	0
   803  0080' 6E00'              	movwf	?_NuevoCaracter^0,c
   804  0082' 0E00'              	movlw	low _heart
   805  0084' 6E00'              	movwf	(?_NuevoCaracter+2)^0,c
   806  0086' EC00' F000'        	call	_NuevoCaracter	;wreg free
   807                           
   808                           ;Lab4.c: 71: NuevoCaracter(1,persona);
   809  008A' 0E00               	movlw	0
   810  008C' 6E00'              	movwf	(?_NuevoCaracter+1)^0,c
   811  008E' 0E01               	movlw	1
   812  0090' 6E00'              	movwf	?_NuevoCaracter^0,c
   813  0092' 0E00'              	movlw	low _persona
   814  0094' 6E00'              	movwf	(?_NuevoCaracter+2)^0,c
   815  0096' EC00' F000'        	call	_NuevoCaracter	;wreg free
   816                           
   817                           ;Lab4.c: 72: EscribeLCD_c(0);
   818  009A' 0E00               	movlw	0
   819  009C' EC00' F000'        	call	_EscribeLCD_c
   820                           
   821                           ;Lab4.c: 73: _delay((unsigned long)((500)*(1000000/4000.0)));
   822  00A0' 0EA3               	movlw	163
   823  00A2' 6E00'              	movwf	??_main^0,c
   824  00A4' 0E55               	movlw	85
   825  00A6'                    u5117:
   826  00A6' 2EE8               	decfsz	wreg,f,c
   827  00A8' D7FE               	bra	u5117
   828  00AA' 2E00'              	decfsz	??_main^0,f,c
   829  00AC' D7FC               	bra	u5117
   830  00AE' F000               	nop	
   831                           
   832                           ;Lab4.c: 74: EscribeLCD_c(1);
   833  00B0' 0E01               	movlw	1
   834  00B2' EC00' F000'        	call	_EscribeLCD_c
   835  00B6'                    l3735:
   836                           
   837                           ;Lab4.c: 76: Negativo=0;
   838  00B6' 0E00               	movlw	0
   839  00B8' 6E00'              	movwf	_Negativo^0,c
   840                           
   841                           ;Lab4.c: 77: LATB=0b00000000;
   842  00BA' 0E00               	movlw	0
   843  00BC' 6E8A               	movwf	138,c	;volatile
   844                           
   845                           ;Lab4.c: 78: Verificador = 0;
   846  00BE' 0E00               	movlw	0
   847  00C0' 6E00'              	movwf	(_Verificador+1)^0,c
   848  00C2' 0E00               	movlw	0
   849  00C4' 6E00'              	movwf	_Verificador^0,c
   850                           
   851                           ;Lab4.c: 79: Boton = LeerTeclado();
   852  00C6' EC00' F000'        	call	_LeerTeclado	;wreg free
   853  00CA' 6E00'              	movwf	_Boton^0,c
   854                           
   855                           ;Lab4.c: 80: ColorRGB();
   856  00CC' EC00' F000'        	call	_ColorRGB	;wreg free
   857                           
   858                           ;Lab4.c: 81: if(Boton=='C'){
   859  00D0' 0E43               	movlw	67
   860  00D2' 1800'              	xorwf	_Boton^0,w,c
   861  00D4' A4D8               	btfss	status,2,c
   862  00D6' D01D               	goto	l3751
   863                           
   864                           ;Lab4.c: 83: Operador = ' ';
   865  00D8' 0E20               	movlw	32
   866  00DA' 6E00'              	movwf	_Operador^0,c
   867                           
   868                           ;Lab4.c: 84: Numero_1_Char = ' ';
   869  00DC' 0E20               	movlw	32
   870  00DE' 6E00'              	movwf	_Numero_1_Char^0,c
   871                           
   872                           ;Lab4.c: 85: Numero_2_Char = ' ';
   873  00E0' 0E20               	movlw	32
   874  00E2' 6E00'              	movwf	_Numero_2_Char^0,c
   875                           
   876                           ;Lab4.c: 86: Numero_1 = 0;
   877  00E4' 0E00               	movlw	0
   878  00E6' 6E00'              	movwf	(_Numero_1+1)^0,c
   879  00E8' 0E00               	movlw	0
   880  00EA' 6E00'              	movwf	_Numero_1^0,c
   881                           
   882                           ;Lab4.c: 87: Numero_2 = 0;
   883  00EC' 0E00               	movlw	0
   884  00EE' 6E00'              	movwf	(_Numero_2+1)^0,c
   885  00F0' 0E00               	movlw	0
   886  00F2' 6E00'              	movwf	_Numero_2^0,c
   887                           
   888                           ;Lab4.c: 88: i = 0;
   889  00F4' 0E00               	movlw	0
   890  00F6' 6E00'              	movwf	(_i+1)^0,c
   891  00F8' 0E00               	movlw	0
   892  00FA' 6E00'              	movwf	_i^0,c
   893                           
   894                           ;Lab4.c: 89: Parte_Decimal = 0;
   895  00FC' 0E00               	movlw	0
   896  00FE' 6E00'              	movwf	_Parte_Decimal^0,c
   897  0100' 0E00               	movlw	0
   898  0102' 6E00'              	movwf	(_Parte_Decimal+1)^0,c
   899  0104' 0E00               	movlw	0
   900  0106' 6E00'              	movwf	(_Parte_Decimal+2)^0,c
   901  0108' 0E00               	movlw	0
   902  010A' 6E00'              	movwf	(_Parte_Decimal+3)^0,c
   903  010C'                    l3749:
   904                           
   905                           ;Lab4.c: 90: BorraLCD();
   906  010C' EC00' F000'        	call	_BorraLCD	;wreg free
   907                           
   908                           ;Lab4.c: 91: }else if(Operador==' ' & (Boton=='+'|Boton=='^') & Numero_1_Char == ' ' & N
      +                          umero_2_Char ==' '){
   909  0110' D7D2               	goto	l3735
   910  0112'                    l3751:
   911  0112' 0E20               	movlw	32
   912  0114' 1800'              	xorwf	_Operador^0,w,c
   913  0116' A4D8               	btfss	status,2,c
   914  0118' D03D               	goto	l3787
   915  011A' 0E2B               	movlw	43
   916  011C' 1800'              	xorwf	_Boton^0,w,c
   917  011E' B4D8               	btfsc	status,2,c
   918  0120' D004               	goto	u4320
   919  0122' 0E5E               	movlw	94
   920  0124' 1800'              	xorwf	_Boton^0,w,c
   921  0126' A4D8               	btfss	status,2,c
   922  0128' D035               	goto	l3787
   923  012A'                    u4320:
   924  012A' 0E20               	movlw	32
   925  012C' 1800'              	xorwf	_Numero_1_Char^0,w,c
   926  012E' A4D8               	btfss	status,2,c
   927  0130' D031               	goto	l3787
   928  0132' 0E20               	movlw	32
   929  0134' 1800'              	xorwf	_Numero_2_Char^0,w,c
   930  0136' A4D8               	btfss	status,2,c
   931  0138' D02D               	goto	l3787
   932                           
   933                           ;Lab4.c: 92: Potencia=~Potencia;
   934  013A' 1E00'              	comf	_Potencia^0,f,c
   935                           
   936                           ;Lab4.c: 93: if(Potencia){
   937  013C' 5000'              	movf	_Potencia^0,w,c
   938  013E' B4D8               	btfsc	status,2,c
   939  0140' D01A               	goto	l3777
   940                           
   941                           ;Lab4.c: 94: DireccionaLCD(0x80);
   942  0142' 0E80               	movlw	128
   943  0144' EC00' F000'        	call	_DireccionaLCD
   944                           
   945                           ;Lab4.c: 95: MensajeLCD_Var("Modo Potencia");
   946  0148' 0E00'              	movlw	low STR_3
   947  014A' 6E00'              	movwf	MensajeLCD_Var@a^0,c
   948  014C' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
   949                           
   950                           ;Lab4.c: 96: DireccionaLCD(0xC0);
   951  0150' 0EC0               	movlw	192
   952  0152' EC00' F000'        	call	_DireccionaLCD
   953                           
   954                           ;Lab4.c: 97: MensajeLCD_Var("Activado");
   955  0156' 0E00'              	movlw	low (STR_11+4)
   956  0158' 6E00'              	movwf	MensajeLCD_Var@a^0,c
   957  015A' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
   958  015E'                    l3771:
   959                           
   960                           ;Lab4.c: 98: _delay((unsigned long)((1000)*(1000000/4000.0)));
   961  015E' 0E02               	movlw	2
   962  0160' 6E00'              	movwf	(??_main+1)^0,c
   963  0162' 0E45               	movlw	69
   964  0164' 6E00'              	movwf	??_main^0,c
   965  0166' 0EAA               	movlw	170
   966  0168'                    u5127:
   967  0168' 2EE8               	decfsz	wreg,f,c
   968  016A' D7FE               	bra	u5127
   969  016C' 2E00'              	decfsz	??_main^0,f,c
   970  016E' D7FC               	bra	u5127
   971  0170' 2E00'              	decfsz	(??_main+1)^0,f,c
   972  0172' D7FA               	bra	u5127
   973  0174' D7CB               	goto	l3749
   974  0176'                    l3777:
   975                           
   976                           ;Lab4.c: 102: DireccionaLCD(0x80);
   977  0176' 0E80               	movlw	128
   978  0178' EC00' F000'        	call	_DireccionaLCD
   979                           
   980                           ;Lab4.c: 103: MensajeLCD_Var("Modo Suma");
   981  017C' 0E00'              	movlw	low STR_5
   982  017E' 6E00'              	movwf	MensajeLCD_Var@a^0,c
   983  0180' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
   984                           
   985                           ;Lab4.c: 104: DireccionaLCD(0xC0);
   986  0184' 0EC0               	movlw	192
   987  0186' EC00' F000'        	call	_DireccionaLCD
   988                           
   989                           ;Lab4.c: 105: MensajeLCD_Var("Activado");
   990  018A' 0E00'              	movlw	low (STR_11+4)
   991  018C' 6E00'              	movwf	MensajeLCD_Var@a^0,c
   992  018E' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
   993  0192' D7E5               	goto	l3771
   994  0194'                    l3787:
   995  0194' 0E20               	movlw	32
   996  0196' 1800'              	xorwf	_Operador^0,w,c
   997  0198' A4D8               	btfss	status,2,c
   998  019A' D032               	goto	l3823
   999  019C' 0E2D               	movlw	45
  1000  019E' 1800'              	xorwf	_Boton^0,w,c
  1001  01A0' B4D8               	btfsc	status,2,c
  1002  01A2' D004               	goto	u4380
  1003  01A4' 0E21               	movlw	33
  1004  01A6' 1800'              	xorwf	_Boton^0,w,c
  1005  01A8' A4D8               	btfss	status,2,c
  1006  01AA' D02A               	goto	l3823
  1007  01AC'                    u4380:
  1008  01AC' 0E20               	movlw	32
  1009  01AE' 1800'              	xorwf	_Numero_1_Char^0,w,c
  1010  01B0' A4D8               	btfss	status,2,c
  1011  01B2' D026               	goto	l3823
  1012  01B4' 0E20               	movlw	32
  1013  01B6' 1800'              	xorwf	_Numero_2_Char^0,w,c
  1014  01B8' A4D8               	btfss	status,2,c
  1015  01BA' D022               	goto	l3823
  1016                           
  1017                           ;Lab4.c: 111: Factorial=~Factorial;
  1018  01BC' 1E00'              	comf	_Factorial^0,f,c
  1019                           
  1020                           ;Lab4.c: 112: if(Factorial){
  1021  01BE' 5000'              	movf	_Factorial^0,w,c
  1022  01C0' B4D8               	btfsc	status,2,c
  1023  01C2' D00F               	goto	l3813
  1024                           
  1025                           ;Lab4.c: 113: DireccionaLCD(0x80);
  1026  01C4' 0E80               	movlw	128
  1027  01C6' EC00' F000'        	call	_DireccionaLCD
  1028                           
  1029                           ;Lab4.c: 114: MensajeLCD_Var("Modo Factorial");
  1030  01CA' 0E00'              	movlw	low STR_7
  1031  01CC' 6E00'              	movwf	MensajeLCD_Var@a^0,c
  1032  01CE' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
  1033                           
  1034                           ;Lab4.c: 115: DireccionaLCD(0xC0);
  1035  01D2' 0EC0               	movlw	192
  1036  01D4' EC00' F000'        	call	_DireccionaLCD
  1037                           
  1038                           ;Lab4.c: 116: MensajeLCD_Var("Activado");
  1039  01D8' 0E00'              	movlw	low (STR_11+4)
  1040  01DA' 6E00'              	movwf	MensajeLCD_Var@a^0,c
  1041  01DC' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
  1042  01E0' D7BE               	goto	l3771
  1043  01E2'                    l3813:
  1044                           
  1045                           ;Lab4.c: 121: DireccionaLCD(0x80);
  1046  01E2' 0E80               	movlw	128
  1047  01E4' EC00' F000'        	call	_DireccionaLCD
  1048                           
  1049                           ;Lab4.c: 122: MensajeLCD_Var("Modo Resta");
  1050  01E8' 0E00'              	movlw	low STR_9
  1051  01EA' 6E00'              	movwf	MensajeLCD_Var@a^0,c
  1052  01EC' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
  1053                           
  1054                           ;Lab4.c: 123: DireccionaLCD(0xC0);
  1055  01F0' 0EC0               	movlw	192
  1056  01F2' EC00' F000'        	call	_DireccionaLCD
  1057                           
  1058                           ;Lab4.c: 124: MensajeLCD_Var("Activado");
  1059  01F6' 0E00'              	movlw	low (STR_11+4)
  1060  01F8' 6E00'              	movwf	MensajeLCD_Var@a^0,c
  1061  01FA' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
  1062  01FE' D7AF               	goto	l3771
  1063  0200'                    l3823:
  1064                           
  1065                           ;Lab4.c: 130: if((Numero_1_Char==' '|Numero_2_Char==' '|Operador==' ') & !Factorial){
  1066  0200' 0E20               	movlw	32
  1067  0202' 1800'              	xorwf	_Numero_1_Char^0,w,c
  1068  0204' B4D8               	btfsc	status,2,c
  1069  0206' D008               	goto	u4440
  1070  0208' 0E20               	movlw	32
  1071  020A' 1800'              	xorwf	_Numero_2_Char^0,w,c
  1072  020C' B4D8               	btfsc	status,2,c
  1073  020E' D004               	goto	u4440
  1074  0210' 0E20               	movlw	32
  1075  0212' 1800'              	xorwf	_Operador^0,w,c
  1076  0214' A4D8               	btfss	status,2,c
  1077  0216' D092               	goto	l3899
  1078  0218'                    u4440:
  1079  0218' 5000'              	movf	_Factorial^0,w,c
  1080  021A' A4D8               	btfss	status,2,c
  1081  021C' D08F               	goto	l3899
  1082                           
  1083                           ;Lab4.c: 131: if(Operador==' ' & (Boton=='+'|Boton=='-'|Boton=='/'|Boton=='x'|Boton=='^'
      +                          ) & Numero_1_Char != ' ' & Numero_2_Char ==' '){
  1084  021E' 0E20               	movlw	32
  1085  0220' 1800'              	xorwf	_Operador^0,w,c
  1086  0222' A4D8               	btfss	status,2,c
  1087  0224' D025               	goto	l3851
  1088  0226' 0E2B               	movlw	43
  1089  0228' 1800'              	xorwf	_Boton^0,w,c
  1090  022A' B4D8               	btfsc	status,2,c
  1091  022C' D010               	goto	u4510
  1092  022E' 0E2D               	movlw	45
  1093  0230' 1800'              	xorwf	_Boton^0,w,c
  1094  0232' B4D8               	btfsc	status,2,c
  1095  0234' D00C               	goto	u4510
  1096  0236' 0E2F               	movlw	47
  1097  0238' 1800'              	xorwf	_Boton^0,w,c
  1098  023A' B4D8               	btfsc	status,2,c
  1099  023C' D008               	goto	u4510
  1100  023E' 0E78               	movlw	120
  1101  0240' 1800'              	xorwf	_Boton^0,w,c
  1102  0242' B4D8               	btfsc	status,2,c
  1103  0244' D004               	goto	u4510
  1104  0246' 0E5E               	movlw	94
  1105  0248' 1800'              	xorwf	_Boton^0,w,c
  1106  024A' A4D8               	btfss	status,2,c
  1107  024C' D011               	goto	l3851
  1108  024E'                    u4510:
  1109  024E' 0E20               	movlw	32
  1110  0250' 1800'              	xorwf	_Numero_1_Char^0,w,c
  1111  0252' B4D8               	btfsc	status,2,c
  1112  0254' D00D               	goto	l3851
  1113  0256' 0E20               	movlw	32
  1114  0258' 1800'              	xorwf	_Numero_2_Char^0,w,c
  1115  025A' A4D8               	btfss	status,2,c
  1116  025C' D009               	goto	l3851
  1117                           
  1118                           ;Lab4.c: 132: DireccionaLCD(0x81);
  1119  025E' 0E81               	movlw	129
  1120  0260' EC00' F000'        	call	_DireccionaLCD
  1121                           
  1122                           ;Lab4.c: 133: EscribeLCD_c(Boton);
  1123  0264' 5000'              	movf	_Boton^0,w,c
  1124  0266' EC00' F000'        	call	_EscribeLCD_c
  1125  026A'                    l3849:
  1126                           
  1127                           ;Lab4.c: 134: Operador = Boton;
  1128  026A' C01B' F002'        	movff	_Boton,_Operador
  1129                           
  1130                           ;Lab4.c: 135: }else if(Numero_1_Char == ' ' & (Boton!='+'|Boton!='-'|Boton!='/'|Boton!='
      +                          x'|Boton!='='|Boton!='C'|Boton!='^')){
  1131  026E' D21C               	goto	l4043
  1132  0270'                    l3851:
  1133  0270' 0E20               	movlw	32
  1134  0272' 1800'              	xorwf	_Numero_1_Char^0,w,c
  1135  0274' A4D8               	btfss	status,2,c
  1136  0276' D02B               	goto	l3873
  1137  0278' 0E2B               	movlw	43
  1138  027A' 1800'              	xorwf	_Boton^0,w,c
  1139  027C' A4D8               	btfss	status,2,c
  1140  027E' D018               	goto	u4610
  1141  0280' 0E2D               	movlw	45
  1142  0282' 1800'              	xorwf	_Boton^0,w,c
  1143  0284' A4D8               	btfss	status,2,c
  1144  0286' D014               	goto	u4610
  1145  0288' 0E2F               	movlw	47
  1146  028A' 1800'              	xorwf	_Boton^0,w,c
  1147  028C' A4D8               	btfss	status,2,c
  1148  028E' D010               	goto	u4610
  1149  0290' 0E78               	movlw	120
  1150  0292' 1800'              	xorwf	_Boton^0,w,c
  1151  0294' A4D8               	btfss	status,2,c
  1152  0296' D00C               	goto	u4610
  1153  0298' 0E3D               	movlw	61
  1154  029A' 1800'              	xorwf	_Boton^0,w,c
  1155  029C' A4D8               	btfss	status,2,c
  1156  029E' D008               	goto	u4610
  1157  02A0' 0E43               	movlw	67
  1158  02A2' 1800'              	xorwf	_Boton^0,w,c
  1159  02A4' A4D8               	btfss	status,2,c
  1160  02A6' D004               	goto	u4610
  1161  02A8' 0E5E               	movlw	94
  1162  02AA' 1800'              	xorwf	_Boton^0,w,c
  1163  02AC' B4D8               	btfsc	status,2,c
  1164  02AE' D00F               	goto	l3873
  1165  02B0'                    u4610:
  1166                           
  1167                           ;Lab4.c: 136: DireccionaLCD(0x80);
  1168  02B0' 0E80               	movlw	128
  1169  02B2' EC00' F000'        	call	_DireccionaLCD
  1170                           
  1171                           ;Lab4.c: 137: EscribeLCD_c(Boton);
  1172  02B6' 5000'              	movf	_Boton^0,w,c
  1173  02B8' EC00' F000'        	call	_EscribeLCD_c
  1174  02BC'                    l3869:
  1175                           
  1176                           ;Lab4.c: 138: Numero_1_Char=Boton;
  1177  02BC' C01B' F001'        	movff	_Boton,_Numero_1_Char
  1178                           
  1179                           ;Lab4.c: 139: Numero_1 = Boton-'0';
  1180  02C0' 0ED0               	movlw	208
  1181  02C2' 2400'              	addwf	_Boton^0,w,c
  1182  02C4' 6E00'              	movwf	_Numero_1^0,c
  1183  02C6' 6A00'              	clrf	(_Numero_1+1)^0,c
  1184  02C8' 0EFF               	movlw	255
  1185  02CA' 2200'              	addwfc	(_Numero_1+1)^0,f,c
  1186                           
  1187                           ;Lab4.c: 140: }else if(Numero_2_Char==' ' & Operador!=' ' & Numero_1_Char != ' ' & (Boto
      +                          n!='+'|Boton!='-'|Boton!='/'|Boton!='x'|Boton!='='|Boton!='C'|Boton!='^')){
  1188  02CC' D1ED               	goto	l4043
  1189  02CE'                    l3873:
  1190  02CE' 0E20               	movlw	32
  1191  02D0' 1800'              	xorwf	_Numero_2_Char^0,w,c
  1192  02D2' A4D8               	btfss	status,2,c
  1193  02D4' D1E9               	goto	l4043
  1194  02D6' 0E20               	movlw	32
  1195  02D8' 1800'              	xorwf	_Operador^0,w,c
  1196  02DA' B4D8               	btfsc	status,2,c
  1197  02DC' D1E5               	goto	l4043
  1198  02DE' 0E20               	movlw	32
  1199  02E0' 1800'              	xorwf	_Numero_1_Char^0,w,c
  1200  02E2' B4D8               	btfsc	status,2,c
  1201  02E4' D1E1               	goto	l4043
  1202  02E6' 0E2B               	movlw	43
  1203  02E8' 1800'              	xorwf	_Boton^0,w,c
  1204  02EA' A4D8               	btfss	status,2,c
  1205  02EC' D018               	goto	u4710
  1206  02EE' 0E2D               	movlw	45
  1207  02F0' 1800'              	xorwf	_Boton^0,w,c
  1208  02F2' A4D8               	btfss	status,2,c
  1209  02F4' D014               	goto	u4710
  1210  02F6' 0E2F               	movlw	47
  1211  02F8' 1800'              	xorwf	_Boton^0,w,c
  1212  02FA' A4D8               	btfss	status,2,c
  1213  02FC' D010               	goto	u4710
  1214  02FE' 0E78               	movlw	120
  1215  0300' 1800'              	xorwf	_Boton^0,w,c
  1216  0302' A4D8               	btfss	status,2,c
  1217  0304' D00C               	goto	u4710
  1218  0306' 0E3D               	movlw	61
  1219  0308' 1800'              	xorwf	_Boton^0,w,c
  1220  030A' A4D8               	btfss	status,2,c
  1221  030C' D008               	goto	u4710
  1222  030E' 0E43               	movlw	67
  1223  0310' 1800'              	xorwf	_Boton^0,w,c
  1224  0312' A4D8               	btfss	status,2,c
  1225  0314' D004               	goto	u4710
  1226  0316' 0E5E               	movlw	94
  1227  0318' 1800'              	xorwf	_Boton^0,w,c
  1228  031A' B4D8               	btfsc	status,2,c
  1229  031C' D1C5               	goto	l4043
  1230  031E'                    u4710:
  1231                           
  1232                           ;Lab4.c: 141: DireccionaLCD(0x82);
  1233  031E' 0E82               	movlw	130
  1234  0320' EC00' F000'        	call	_DireccionaLCD
  1235                           
  1236                           ;Lab4.c: 142: EscribeLCD_c(Boton);
  1237  0324' 5000'              	movf	_Boton^0,w,c
  1238  0326' EC00' F000'        	call	_EscribeLCD_c
  1239                           
  1240                           ;Lab4.c: 143: Numero_2_Char=Boton;
  1241  032A' C01B' F000'        	movff	_Boton,_Numero_2_Char
  1242                           
  1243                           ;Lab4.c: 144: Numero_2 = Boton-'0';
  1244  032E' 0ED0               	movlw	208
  1245  0330' 2400'              	addwf	_Boton^0,w,c
  1246  0332' 6E00'              	movwf	_Numero_2^0,c
  1247  0334' 6A00'              	clrf	(_Numero_2+1)^0,c
  1248  0336' 0EFF               	movlw	255
  1249  0338' 2200'              	addwfc	(_Numero_2+1)^0,f,c
  1250                           
  1251                           ;Lab4.c: 145: };Lab4.c: 146: }else if ((Numero_1_Char==' '|Operador==' ') & Factorial){
  1252  033A' D1B6               	goto	l4043
  1253  033C'                    l3899:
  1254  033C' 0E01               	movlw	1
  1255  033E' 0100               	movlb	0	; () banked
  1256  0340' 6F00'              	movwf	_main$162& (0+255),b
  1257                           
  1258                           ; BSR set to: 0
  1259  0342' 0E20               	movlw	32
  1260  0344' 1800'              	xorwf	_Numero_1_Char^0,w,c
  1261  0346' B4D8               	btfsc	status,2,c
  1262  0348' D006               	goto	l3907
  1263                           
  1264                           ; BSR set to: 0
  1265  034A' 0E20               	movlw	32
  1266  034C' 1800'              	xorwf	_Operador^0,w,c
  1267  034E' B4D8               	btfsc	status,2,c
  1268  0350' D002               	goto	l3907
  1269                           
  1270                           ; BSR set to: 0
  1271  0352' 0E00               	movlw	0
  1272  0354' 6F00'              	movwf	_main$162& (0+255),b
  1273  0356'                    l3907:
  1274                           
  1275                           ; BSR set to: 0
  1276  0356' 5100'              	movf	_main$162& (0+255),w,b
  1277  0358' 1400'              	andwf	_Factorial^0,w,c
  1278  035A' 0900               	iorlw	0
  1279  035C' B4D8               	btfsc	status,2,c
  1280  035E' D056               	goto	l3955
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;Lab4.c: 147: if(Operador==' ' & (Boton=='+'|Boton=='-'|Boton=='/'|Boton=='x'|Boton=='^'
      +                          |Boton=='!') & Numero_1_Char != ' ' & Numero_2_Char ==' '){
  1284  0360' 0E20               	movlw	32
  1285  0362' 1800'              	xorwf	_Operador^0,w,c
  1286  0364' A4D8               	btfss	status,2,c
  1287  0366' D027               	goto	l3931
  1288                           
  1289                           ; BSR set to: 0
  1290  0368' 0E2B               	movlw	43
  1291  036A' 1800'              	xorwf	_Boton^0,w,c
  1292  036C' B4D8               	btfsc	status,2,c
  1293  036E' D014               	goto	u4810
  1294                           
  1295                           ; BSR set to: 0
  1296  0370' 0E2D               	movlw	45
  1297  0372' 1800'              	xorwf	_Boton^0,w,c
  1298  0374' B4D8               	btfsc	status,2,c
  1299  0376' D010               	goto	u4810
  1300                           
  1301                           ; BSR set to: 0
  1302  0378' 0E2F               	movlw	47
  1303  037A' 1800'              	xorwf	_Boton^0,w,c
  1304  037C' B4D8               	btfsc	status,2,c
  1305  037E' D00C               	goto	u4810
  1306                           
  1307                           ; BSR set to: 0
  1308  0380' 0E78               	movlw	120
  1309  0382' 1800'              	xorwf	_Boton^0,w,c
  1310  0384' B4D8               	btfsc	status,2,c
  1311  0386' D008               	goto	u4810
  1312                           
  1313                           ; BSR set to: 0
  1314  0388' 0E5E               	movlw	94
  1315  038A' 1800'              	xorwf	_Boton^0,w,c
  1316  038C' B4D8               	btfsc	status,2,c
  1317  038E' D004               	goto	u4810
  1318                           
  1319                           ; BSR set to: 0
  1320  0390' 0E21               	movlw	33
  1321  0392' 1800'              	xorwf	_Boton^0,w,c
  1322  0394' A4D8               	btfss	status,2,c
  1323  0396' D00F               	goto	l3931
  1324  0398'                    u4810:
  1325                           
  1326                           ; BSR set to: 0
  1327  0398' 0E20               	movlw	32
  1328  039A' 1800'              	xorwf	_Numero_1_Char^0,w,c
  1329  039C' B4D8               	btfsc	status,2,c
  1330  039E' D00B               	goto	l3931
  1331                           
  1332                           ; BSR set to: 0
  1333  03A0' 0E20               	movlw	32
  1334  03A2' 1800'              	xorwf	_Numero_2_Char^0,w,c
  1335  03A4' A4D8               	btfss	status,2,c
  1336  03A6' D007               	goto	l3931
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;Lab4.c: 148: DireccionaLCD(0x81);
  1340  03A8' 0E81               	movlw	129
  1341  03AA' EC00' F000'        	call	_DireccionaLCD
  1342                           
  1343                           ;Lab4.c: 149: EscribeLCD_c(Boton);
  1344  03AE' 5000'              	movf	_Boton^0,w,c
  1345  03B0' EC00' F000'        	call	_EscribeLCD_c
  1346  03B4' D75A               	goto	l3849
  1347  03B6'                    l3931:
  1348                           
  1349                           ; BSR set to: 0
  1350  03B6' 0E20               	movlw	32
  1351  03B8' 1800'              	xorwf	_Numero_1_Char^0,w,c
  1352  03BA' A4D8               	btfss	status,2,c
  1353  03BC' D175               	goto	l4043
  1354                           
  1355                           ; BSR set to: 0
  1356  03BE' 0E2B               	movlw	43
  1357  03C0' 1800'              	xorwf	_Boton^0,w,c
  1358  03C2' A4D8               	btfss	status,2,c
  1359  03C4' D01C               	goto	u4920
  1360                           
  1361                           ; BSR set to: 0
  1362  03C6' 0E2D               	movlw	45
  1363  03C8' 1800'              	xorwf	_Boton^0,w,c
  1364  03CA' A4D8               	btfss	status,2,c
  1365  03CC' D018               	goto	u4920
  1366                           
  1367                           ; BSR set to: 0
  1368  03CE' 0E2F               	movlw	47
  1369  03D0' 1800'              	xorwf	_Boton^0,w,c
  1370  03D2' A4D8               	btfss	status,2,c
  1371  03D4' D014               	goto	u4920
  1372                           
  1373                           ; BSR set to: 0
  1374  03D6' 0E78               	movlw	120
  1375  03D8' 1800'              	xorwf	_Boton^0,w,c
  1376  03DA' A4D8               	btfss	status,2,c
  1377  03DC' D010               	goto	u4920
  1378                           
  1379                           ; BSR set to: 0
  1380  03DE' 0E3D               	movlw	61
  1381  03E0' 1800'              	xorwf	_Boton^0,w,c
  1382  03E2' A4D8               	btfss	status,2,c
  1383  03E4' D00C               	goto	u4920
  1384                           
  1385                           ; BSR set to: 0
  1386  03E6' 0E43               	movlw	67
  1387  03E8' 1800'              	xorwf	_Boton^0,w,c
  1388  03EA' A4D8               	btfss	status,2,c
  1389  03EC' D008               	goto	u4920
  1390                           
  1391                           ; BSR set to: 0
  1392  03EE' 0E5E               	movlw	94
  1393  03F0' 1800'              	xorwf	_Boton^0,w,c
  1394  03F2' A4D8               	btfss	status,2,c
  1395  03F4' D004               	goto	u4920
  1396                           
  1397                           ; BSR set to: 0
  1398  03F6' 0E21               	movlw	33
  1399  03F8' 1800'              	xorwf	_Boton^0,w,c
  1400  03FA' B4D8               	btfsc	status,2,c
  1401  03FC' D155               	goto	l4043
  1402  03FE'                    u4920:
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;Lab4.c: 152: DireccionaLCD(0x80);
  1406  03FE' 0E80               	movlw	128
  1407  0400' EC00' F000'        	call	_DireccionaLCD
  1408                           
  1409                           ;Lab4.c: 153: EscribeLCD_c(Boton);
  1410  0404' 5000'              	movf	_Boton^0,w,c
  1411  0406' EC00' F000'        	call	_EscribeLCD_c
  1412  040A' D758               	goto	l3869
  1413  040C'                    l3955:
  1414                           
  1415                           ; BSR set to: 0
  1416  040C' 0E3D               	movlw	61
  1417  040E' 1800'              	xorwf	_Boton^0,w,c
  1418  0410' A4D8               	btfss	status,2,c
  1419  0412' D103               	goto	l4025
  1420                           
  1421                           ; BSR set to: 0
  1422  0414' 0E20               	movlw	32
  1423  0416' 1800'              	xorwf	_Numero_2_Char^0,w,c
  1424  0418' B4D8               	btfsc	status,2,c
  1425  041A' D0FF               	goto	l4025
  1426                           
  1427                           ; BSR set to: 0
  1428  041C' 0E20               	movlw	32
  1429  041E' 1800'              	xorwf	_Operador^0,w,c
  1430  0420' B4D8               	btfsc	status,2,c
  1431  0422' D0FB               	goto	l4025
  1432                           
  1433                           ; BSR set to: 0
  1434  0424' 0E20               	movlw	32
  1435  0426' 1800'              	xorwf	_Numero_1_Char^0,w,c
  1436  0428' B4D8               	btfsc	status,2,c
  1437  042A' D0F7               	goto	l4025
  1438                           
  1439                           ; BSR set to: 0
  1440  042C' 5000'              	movf	_Factorial^0,w,c
  1441  042E' A4D8               	btfss	status,2,c
  1442  0430' D0F4               	goto	l4025
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;Lab4.c: 158: DireccionaLCD(0x83);
  1446  0432' 0E83               	movlw	131
  1447  0434' EC00' F000'        	call	_DireccionaLCD
  1448                           
  1449                           ;Lab4.c: 159: EscribeLCD_c('=');
  1450  0438' 0E3D               	movlw	61
  1451  043A' EC00' F000'        	call	_EscribeLCD_c
  1452                           
  1453                           ;Lab4.c: 160: switch(Operador){
  1454  043E' D0CE               	goto	l4019
  1455  0440'                    l3967:
  1456                           
  1457                           ;Lab4.c: 162: Resultado = Numero_1 + Numero_2;
  1458  0440' 5000'              	movf	_Numero_2^0,w,c
  1459  0442' 2400'              	addwf	_Numero_1^0,w,c
  1460  0444' 6E00'              	movwf	??_main^0,c
  1461  0446' 5000'              	movf	(_Numero_2+1)^0,w,c
  1462  0448' 2000'              	addwfc	(_Numero_1+1)^0,w,c
  1463  044A' 6E00'              	movwf	(??_main+1)^0,c
  1464  044C' C023' F000'        	movff	??_main,_Resultado
  1465  0450' C024' F001'        	movff	??_main+1,_Resultado+1
  1466  0454' 6A00'              	clrf	(_Resultado+2)^0,c
  1467  0456' 6A00'              	clrf	(_Resultado+3)^0,c
  1468  0458'                    l3969:
  1469                           
  1470                           ;Lab4.c: 163: Parte_Decimal = Resultado*100;
  1471  0458' C000' F00D'        	movff	_Resultado,___lmul@multiplier
  1472  045C' C001' F00E'        	movff	_Resultado+1,___lmul@multiplier+1
  1473  0460' C002' F00F'        	movff	_Resultado+2,___lmul@multiplier+2
  1474  0464' C003' F010'        	movff	_Resultado+3,___lmul@multiplier+3
  1475  0468' 0E64               	movlw	100
  1476  046A' 6E00'              	movwf	___lmul@multiplicand^0,c
  1477  046C' 0E00               	movlw	0
  1478  046E' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  1479  0470' 0E00               	movlw	0
  1480  0472' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  1481  0474' 0E00               	movlw	0
  1482  0476' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  1483  0478' EC00' F000'        	call	___lmul	;wreg free
  1484  047C' C00D' F004'        	movff	?___lmul,_Parte_Decimal
  1485  0480' C00E' F005'        	movff	?___lmul+1,_Parte_Decimal+1
  1486  0484' C00F' F006'        	movff	?___lmul+2,_Parte_Decimal+2
  1487  0488' C010' F007'        	movff	?___lmul+3,_Parte_Decimal+3
  1488                           
  1489                           ;Lab4.c: 164: break;
  1490  048C' D0B8               	goto	l4021
  1491  048E'                    l3971:
  1492                           
  1493                           ;Lab4.c: 166: Resultado = Numero_1 - Numero_2;
  1494  048E' 5000'              	movf	_Numero_2^0,w,c
  1495  0490' 5C00'              	subwf	_Numero_1^0,w,c
  1496  0492' 6E00'              	movwf	??_main^0,c
  1497  0494' 5000'              	movf	(_Numero_2+1)^0,w,c
  1498  0496' 5800'              	subwfb	(_Numero_1+1)^0,w,c
  1499  0498' 6E00'              	movwf	(??_main+1)^0,c
  1500  049A' C023' F000'        	movff	??_main,_Resultado
  1501  049E' C024' F001'        	movff	??_main+1,_Resultado+1
  1502  04A2' 6A00'              	clrf	(_Resultado+2)^0,c
  1503  04A4' 6A00'              	clrf	(_Resultado+3)^0,c
  1504                           
  1505                           ;Lab4.c: 167: if(Numero_1<Numero_2){
  1506  04A6' 5000'              	movf	_Numero_2^0,w,c
  1507  04A8' 5C00'              	subwf	_Numero_1^0,w,c
  1508  04AA' 5000'              	movf	(_Numero_2+1)^0,w,c
  1509  04AC' 5800'              	subwfb	(_Numero_1+1)^0,w,c
  1510  04AE' B0D8               	btfsc	status,0,c
  1511  04B0' D7D3               	goto	l3969
  1512                           
  1513                           ;Lab4.c: 168: Negativo=1;
  1514  04B2' 0E01               	movlw	1
  1515  04B4' 6E00'              	movwf	_Negativo^0,c
  1516  04B6' D7D0               	goto	l3969
  1517  04B8'                    l3977:
  1518                           
  1519                           ;Lab4.c: 173: Resultado = Numero_1*Numero_2;
  1520  04B8' C016' F00D'        	movff	_Numero_1,___wmul@multiplier
  1521  04BC' C017' F00E'        	movff	_Numero_1+1,___wmul@multiplier+1
  1522  04C0' C014' F00F'        	movff	_Numero_2,___wmul@multiplicand
  1523  04C4' C015' F010'        	movff	_Numero_2+1,___wmul@multiplicand+1
  1524  04C8' EC00' F000'        	call	___wmul	;wreg free
  1525  04CC' C00D' F000'        	movff	?___wmul,_Resultado
  1526  04D0' C00E' F001'        	movff	?___wmul+1,_Resultado+1
  1527  04D4' D7BF               	goto	L1
  1528  04D6'                    l3981:
  1529                           
  1530                           ;Lab4.c: 177: if(Numero_2!=0){
  1531  04D6' 5000'              	movf	_Numero_2^0,w,c
  1532  04D8' 1000'              	iorwf	(_Numero_2+1)^0,w,c
  1533  04DA' B4D8               	btfsc	status,2,c
  1534  04DC' D02F               	goto	l3989
  1535                           
  1536                           ;Lab4.c: 178: if(Numero_1!=0){
  1537  04DE' 5000'              	movf	_Numero_1^0,w,c
  1538  04E0' 1000'              	iorwf	(_Numero_1+1)^0,w,c
  1539  04E2' B4D8               	btfsc	status,2,c
  1540  04E4' D08C               	goto	l4021
  1541                           
  1542                           ;Lab4.c: 179: Resultado = Numero_1/Numero_2;
  1543  04E6' C016' F013'        	movff	_Numero_1,___lwdiv@dividend
  1544  04EA' C017' F014'        	movff	_Numero_1+1,___lwdiv@dividend+1
  1545  04EE' C014' F015'        	movff	_Numero_2,___lwdiv@divisor
  1546  04F2' C015' F016'        	movff	_Numero_2+1,___lwdiv@divisor+1
  1547  04F6' EC00' F000'        	call	___lwdiv	;wreg free
  1548  04FA' C013' F000'        	movff	?___lwdiv,_Resultado
  1549  04FE' C014' F001'        	movff	?___lwdiv+1,_Resultado+1
  1550  0502' 6A00'              	clrf	(_Resultado+2)^0,c
  1551  0504' 6A00'              	clrf	(_Resultado+3)^0,c
  1552                           
  1553                           ;Lab4.c: 180: Parte_Decimal = (Numero_1*100)/Numero_2;
  1554  0506' C016' F00D'        	movff	_Numero_1,___wmul@multiplier
  1555  050A' C017' F00E'        	movff	_Numero_1+1,___wmul@multiplier+1
  1556  050E' 0E00               	movlw	0
  1557  0510' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  1558  0512' 0E64               	movlw	100
  1559  0514' 6E00'              	movwf	___wmul@multiplicand^0,c
  1560  0516' EC00' F000'        	call	___wmul	;wreg free
  1561  051A' C00D' F013'        	movff	?___wmul,___lwdiv@dividend
  1562  051E' C00E' F014'        	movff	?___wmul+1,___lwdiv@dividend+1
  1563  0522' C014' F015'        	movff	_Numero_2,___lwdiv@divisor
  1564  0526' C015' F016'        	movff	_Numero_2+1,___lwdiv@divisor+1
  1565  052A' EC00' F000'        	call	___lwdiv	;wreg free
  1566  052E' C013' F004'        	movff	?___lwdiv,_Parte_Decimal
  1567  0532' C014' F005'        	movff	?___lwdiv+1,_Parte_Decimal+1
  1568  0536' 6A00'              	clrf	(_Parte_Decimal+2)^0,c
  1569  0538' 6A00'              	clrf	(_Parte_Decimal+3)^0,c
  1570  053A' D061               	goto	l4021
  1571  053C'                    l3989:
  1572                           
  1573                           ;Lab4.c: 183: if(Numero_1 != 0 & Numero_2 == 0) Resultado = 1000;
  1574  053C' 5000'              	movf	_Numero_1^0,w,c
  1575  053E' 1000'              	iorwf	(_Numero_1+1)^0,w,c
  1576  0540' B4D8               	btfsc	status,2,c
  1577  0542' D006               	goto	l3995
  1578  0544' 5000'              	movf	_Numero_2^0,w,c
  1579  0546' 1000'              	iorwf	(_Numero_2+1)^0,w,c
  1580  0548' A4D8               	btfss	status,2,c
  1581  054A' D002               	goto	l3995
  1582  054C' 0EE8               	movlw	232
  1583  054E' D009               	goto	L2
  1584  0550'                    l3995:
  1585                           
  1586                           ;Lab4.c: 184: else if(Numero_1 == 0 & Numero_2 == 0) Resultado = 1001;
  1587  0550' 5000'              	movf	_Numero_1^0,w,c
  1588  0552' 1000'              	iorwf	(_Numero_1+1)^0,w,c
  1589  0554' A4D8               	btfss	status,2,c
  1590  0556' D780               	goto	l3969
  1591  0558' 5000'              	movf	_Numero_2^0,w,c
  1592  055A' 1000'              	iorwf	(_Numero_2+1)^0,w,c
  1593  055C' A4D8               	btfss	status,2,c
  1594  055E' D77C               	goto	l3969
  1595  0560' 0EE9               	movlw	233
  1596  0562'                    L2:
  1597  0562' 6E00'              	movwf	_Resultado^0,c
  1598  0564' 0E03               	movlw	3
  1599  0566' 6E00'              	movwf	(_Resultado+1)^0,c
  1600  0568' 0E00               	movlw	0
  1601  056A' 6E00'              	movwf	(_Resultado+2)^0,c
  1602  056C' 0E00               	movlw	0
  1603  056E' 6E00'              	movwf	(_Resultado+3)^0,c
  1604  0570' D773               	goto	l3969
  1605  0572'                    l4003:
  1606                           
  1607                           ;Lab4.c: 189: Resultado=Numero_1;
  1608  0572' C016' F000'        	movff	_Numero_1,_Resultado
  1609  0576' C017' F001'        	movff	_Numero_1+1,_Resultado+1
  1610  057A' 6A00'              	clrf	(_Resultado+2)^0,c
  1611  057C' 6A00'              	clrf	(_Resultado+3)^0,c
  1612                           
  1613                           ;Lab4.c: 190: for(i=1;i<Numero_2;i++){
  1614  057E' 0E00               	movlw	0
  1615  0580' 6E00'              	movwf	(_i+1)^0,c
  1616  0582' 0E01               	movlw	1
  1617  0584' 6E00'              	movwf	_i^0,c
  1618  0586' D01A               	goto	l4011
  1619  0588'                    l4007:
  1620                           
  1621                           ;Lab4.c: 191: Resultado=Resultado*Numero_1;
  1622  0588' C016' F00D'        	movff	_Numero_1,___lmul@multiplier
  1623  058C' C017' F00E'        	movff	_Numero_1+1,___lmul@multiplier+1
  1624  0590' 6A00'              	clrf	(___lmul@multiplier+2)^0,c
  1625  0592' 6A00'              	clrf	(___lmul@multiplier+3)^0,c
  1626  0594' C000' F011'        	movff	_Resultado,___lmul@multiplicand
  1627  0598' C001' F012'        	movff	_Resultado+1,___lmul@multiplicand+1
  1628  059C' C002' F013'        	movff	_Resultado+2,___lmul@multiplicand+2
  1629  05A0' C003' F014'        	movff	_Resultado+3,___lmul@multiplicand+3
  1630  05A4' EC00' F000'        	call	___lmul	;wreg free
  1631  05A8' C00D' F000'        	movff	?___lmul,_Resultado
  1632  05AC' C00E' F001'        	movff	?___lmul+1,_Resultado+1
  1633  05B0' C00F' F002'        	movff	?___lmul+2,_Resultado+2
  1634  05B4' C010' F003'        	movff	?___lmul+3,_Resultado+3
  1635  05B8' 4A00'              	infsnz	_i^0,f,c
  1636  05BA' 2A00'              	incf	(_i+1)^0,f,c
  1637  05BC'                    l4011:
  1638  05BC' 5000'              	movf	_Numero_2^0,w,c
  1639  05BE' 5C00'              	subwf	_i^0,w,c
  1640  05C0' 5000'              	movf	(_Numero_2+1)^0,w,c
  1641  05C2' 5800'              	subwfb	(_i+1)^0,w,c
  1642  05C4' B0D8               	btfsc	status,0,c
  1643  05C6' D748               	goto	l3969
  1644  05C8' D7DF               	goto	l4007
  1645  05CA'                    l4015:
  1646                           
  1647                           ;Lab4.c: 196: Resultado = 0;
  1648  05CA' 0E00               	movlw	0
  1649  05CC' 6E00'              	movwf	_Resultado^0,c
  1650  05CE' 0E00               	movlw	0
  1651  05D0' 6E00'              	movwf	(_Resultado+1)^0,c
  1652  05D2' 0E00               	movlw	0
  1653  05D4' 6E00'              	movwf	(_Resultado+2)^0,c
  1654  05D6' 0E00               	movlw	0
  1655  05D8' 6E00'              	movwf	(_Resultado+3)^0,c
  1656                           
  1657                           ;Lab4.c: 197: break;
  1658  05DA' D011               	goto	l4021
  1659  05DC'                    l4019:
  1660  05DC' 5000'              	movf	_Operador^0,w,c
  1661                           
  1662                           ; Switch size 1, requested type "simple"
  1663                           ; Number of cases is 5, Range of values is 43 to 120
  1664                           ; switch strategies available:
  1665                           ; Name         Instructions Cycles
  1666                           ; simple_byte           16     9 (average)
  1667                           ;	Chosen strategy is simple_byte
  1668  05DE' 0A2B               	xorlw	43	; case 43
  1669  05E0' B4D8               	btfsc	status,2,c
  1670  05E2' D72E               	goto	l3967
  1671  05E4' 0A06               	xorlw	6	; case 45
  1672  05E6' B4D8               	btfsc	status,2,c
  1673  05E8' D752               	goto	l3971
  1674  05EA' 0A02               	xorlw	2	; case 47
  1675  05EC' B4D8               	btfsc	status,2,c
  1676  05EE' D773               	goto	l3981
  1677  05F0' 0A71               	xorlw	113	; case 94
  1678  05F2' B4D8               	btfsc	status,2,c
  1679  05F4' D7BE               	goto	l4003
  1680  05F6' 0A26               	xorlw	38	; case 120
  1681  05F8' B4D8               	btfsc	status,2,c
  1682  05FA' D75E               	goto	l3977
  1683  05FC' D7E6               	goto	l4015
  1684  05FE'                    l4021:
  1685                           
  1686                           ;Lab4.c: 199: DireccionaLCD(0x84);
  1687  05FE' 0E84               	movlw	132
  1688  0600' EC00' F000'        	call	_DireccionaLCD
  1689  0604'                    l4023:
  1690                           
  1691                           ;Lab4.c: 200: Imprimir_Resultado(Resultado);
  1692  0604' C000' F01B'        	movff	_Resultado,Imprimir_Resultado@Resultado
  1693  0608' C001' F01C'        	movff	_Resultado+1,Imprimir_Resultado@Resultado+1
  1694  060C' C002' F01D'        	movff	_Resultado+2,Imprimir_Resultado@Resultado+2
  1695  0610' C003' F01E'        	movff	_Resultado+3,Imprimir_Resultado@Resultado+3
  1696  0614' EC00' F000'        	call	_Imprimir_Resultado	;wreg free
  1697                           
  1698                           ;Lab4.c: 201: }else if((Boton=='=' & Operador=='!' & Numero_1_Char != ' ') & Factorial) 
      +                          {
  1699  0618' D047               	goto	l4043
  1700  061A'                    l4025:
  1701                           
  1702                           ; BSR set to: 0
  1703  061A' 0E00               	movlw	0
  1704  061C' 6F00'              	movwf	_main$163& (0+255),b
  1705                           
  1706                           ; BSR set to: 0
  1707  061E' 0E3D               	movlw	61
  1708  0620' 1800'              	xorwf	_Boton^0,w,c
  1709  0622' A4D8               	btfss	status,2,c
  1710  0624' D00A               	goto	l4035
  1711                           
  1712                           ; BSR set to: 0
  1713  0626' 0E21               	movlw	33
  1714  0628' 1800'              	xorwf	_Operador^0,w,c
  1715  062A' A4D8               	btfss	status,2,c
  1716  062C' D006               	goto	l4035
  1717                           
  1718                           ; BSR set to: 0
  1719  062E' 0E20               	movlw	32
  1720  0630' 1800'              	xorwf	_Numero_1_Char^0,w,c
  1721  0632' B4D8               	btfsc	status,2,c
  1722  0634' D002               	goto	l4035
  1723                           
  1724                           ; BSR set to: 0
  1725  0636' 0E01               	movlw	1
  1726  0638' 6F00'              	movwf	_main$163& (0+255),b
  1727  063A'                    l4035:
  1728                           
  1729                           ; BSR set to: 0
  1730  063A' 5100'              	movf	_main$163& (0+255),w,b
  1731  063C' 1400'              	andwf	_Factorial^0,w,c
  1732  063E' 0900               	iorlw	0
  1733  0640' B4D8               	btfsc	status,2,c
  1734  0642' D02F               	goto	l4041
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;Lab4.c: 202: DireccionaLCD(0x82);
  1738  0644' 0E82               	movlw	130
  1739  0646' EC00' F000'        	call	_DireccionaLCD
  1740                           
  1741                           ;Lab4.c: 203: EscribeLCD_c('=');
  1742  064A' 0E3D               	movlw	61
  1743  064C' EC00' F000'        	call	_EscribeLCD_c
  1744                           
  1745                           ;Lab4.c: 204: Resultado=factorial_function(Numero_1);
  1746  0650' C016' F019'        	movff	_Numero_1,factorial_function@a
  1747  0654' C017' F01A'        	movff	_Numero_1+1,factorial_function@a+1
  1748  0658' EC00' F000'        	call	_factorial_function	;wreg free
  1749  065C' C019' F000'        	movff	?_factorial_function,_Resultado
  1750  0660' C01A' F001'        	movff	?_factorial_function+1,_Resultado+1
  1751  0664' C01B' F002'        	movff	?_factorial_function+2,_Resultado+2
  1752  0668' C01C' F003'        	movff	?_factorial_function+3,_Resultado+3
  1753                           
  1754                           ;Lab4.c: 205: Parte_Decimal = Resultado*100;
  1755  066C' C000' F00D'        	movff	_Resultado,___lmul@multiplier
  1756  0670' C001' F00E'        	movff	_Resultado+1,___lmul@multiplier+1
  1757  0674' C002' F00F'        	movff	_Resultado+2,___lmul@multiplier+2
  1758  0678' C003' F010'        	movff	_Resultado+3,___lmul@multiplier+3
  1759  067C' 0E64               	movlw	100
  1760  067E' 6E00'              	movwf	___lmul@multiplicand^0,c
  1761  0680' 0E00               	movlw	0
  1762  0682' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  1763  0684' 0E00               	movlw	0
  1764  0686' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  1765  0688' 0E00               	movlw	0
  1766  068A' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  1767  068C' EC00' F000'        	call	___lmul	;wreg free
  1768  0690' C00D' F004'        	movff	?___lmul,_Parte_Decimal
  1769  0694' C00E' F005'        	movff	?___lmul+1,_Parte_Decimal+1
  1770  0698' C00F' F006'        	movff	?___lmul+2,_Parte_Decimal+2
  1771  069C' C010' F007'        	movff	?___lmul+3,_Parte_Decimal+3
  1772  06A0' D7B1               	goto	l4023
  1773  06A2'                    l4041:
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;Lab4.c: 208: EscribeLCD_c('W');
  1777  06A2' 0E57               	movlw	87
  1778  06A4' EC00' F000'        	call	_EscribeLCD_c
  1779  06A8'                    l4043:
  1780                           
  1781                           ;Lab4.c: 209: };Lab4.c: 210: _delay((unsigned long)((700)*(1000000/4000.0)));
  1782  06A8' 0EE4               	movlw	228
  1783  06AA' 6E00'              	movwf	??_main^0,c
  1784  06AC' 0E44               	movlw	68
  1785  06AE'                    u5137:
  1786  06AE' 2EE8               	decfsz	wreg,f,c
  1787  06B0' D7FE               	bra	u5137
  1788  06B2' 2E00'              	decfsz	??_main^0,f,c
  1789  06B4' D7FC               	bra	u5137
  1790  06B6' D000               	nop2	
  1791  06B8' D4FE               	goto	l3735
  1792  06BA'                    __end_of_main:
  1793                           	callstack 0
  1794                           
  1795 ;; *************** function _factorial_function *****************
  1796 ;; Defined at:
  1797 ;;		line 287 in file "Lab4.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  a               2   25[COMRAM] int 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  fact            4   29[COMRAM] long 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  4   25[COMRAM] unsigned long 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1811 ;;      Params:         4       0       0       0       0       0       0       0       0
  1812 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1814 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1815 ;;Total ram usage:        8 bytes
  1816 ;; Hardware stack levels used: 1
  1817 ;; Hardware stack levels required when called: 6
  1818 ;; This function calls:
  1819 ;;		___lmul
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text1
  1826  0000'                    __ptext1:
  1827                           	callstack 0
  1828  0000'                    _factorial_function:
  1829                           	callstack 24
  1830                           
  1831                           ;Lab4.c: 288: long fact = 1;
  1832                           
  1833                           ;incstack = 0
  1834  0000' 0E01               	movlw	1
  1835  0002' 6E00'              	movwf	factorial_function@fact^0,c
  1836  0004' 0E00               	movlw	0
  1837  0006' 6E00'              	movwf	(factorial_function@fact+1)^0,c
  1838  0008' 0E00               	movlw	0
  1839  000A' 6E00'              	movwf	(factorial_function@fact+2)^0,c
  1840  000C' 0E00               	movlw	0
  1841  000E' 6E00'              	movwf	(factorial_function@fact+3)^0,c
  1842                           
  1843                           ;Lab4.c: 289: for (b = a; b > 1; b--){
  1844  0010' C019' F008'        	movff	factorial_function@a,_b
  1845  0014' C01A' F009'        	movff	factorial_function@a+1,_b+1
  1846  0018' D01E               	goto	l3689
  1847  001A'                    l3685:
  1848                           
  1849                           ;Lab4.c: 290: fact = fact * b;
  1850  001A' C008' F00D'        	movff	_b,___lmul@multiplier
  1851  001E' C009' F00E'        	movff	_b+1,___lmul@multiplier+1
  1852  0022' 0E00               	movlw	0
  1853  0024' BE00'              	btfsc	(___lmul@multiplier+1)^0,7,c
  1854  0026' 0EFF               	movlw	-1
  1855  0028' 6E00'              	movwf	(___lmul@multiplier+2)^0,c
  1856  002A' 6E00'              	movwf	(___lmul@multiplier+3)^0,c
  1857  002C' C01D' F011'        	movff	factorial_function@fact,___lmul@multiplicand
  1858  0030' C01E' F012'        	movff	factorial_function@fact+1,___lmul@multiplicand+1
  1859  0034' C01F' F013'        	movff	factorial_function@fact+2,___lmul@multiplicand+2
  1860  0038' C020' F014'        	movff	factorial_function@fact+3,___lmul@multiplicand+3
  1861  003C' EC00' F000'        	call	___lmul	;wreg free
  1862  0040' C00D' F01D'        	movff	?___lmul,factorial_function@fact
  1863  0044' C00E' F01E'        	movff	?___lmul+1,factorial_function@fact+1
  1864  0048' C00F' F01F'        	movff	?___lmul+2,factorial_function@fact+2
  1865  004C' C010' F020'        	movff	?___lmul+3,factorial_function@fact+3
  1866  0050' 0600'              	decf	_b^0,f,c
  1867  0052' A0D8               	btfss	status,0,c
  1868  0054' 0600'              	decf	(_b+1)^0,f,c
  1869  0056'                    l3689:
  1870  0056' BE00'              	btfsc	(_b+1)^0,7,c
  1871  0058' D006               	goto	u4250
  1872  005A' 5000'              	movf	(_b+1)^0,w,c
  1873  005C' E1DE               	bnz	l3685
  1874  005E' 0E02               	movlw	2
  1875  0060' 5C00'              	subwf	_b^0,w,c
  1876  0062' B0D8               	btfsc	status,0,c
  1877  0064' D7DA               	goto	l3685
  1878  0066'                    u4250:
  1879                           
  1880                           ;Lab4.c: 291: };Lab4.c: 293: return fact;
  1881  0066' C01D' F019'        	movff	factorial_function@fact,?_factorial_function
  1882  006A' C01E' F01A'        	movff	factorial_function@fact+1,?_factorial_function+1
  1883  006E' C01F' F01B'        	movff	factorial_function@fact+2,?_factorial_function+2
  1884  0072' C020' F01C'        	movff	factorial_function@fact+3,?_factorial_function+3
  1885  0076' 0012               	return		;funcret
  1886  0078'                    __end_of_factorial_function:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _LeerTeclado *****************
  1890 ;; Defined at:
  1891 ;;		line 216 in file "Lab4.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      unsigned char 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 5
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text2
  1920  0000'                    __ptext2:
  1921                           	callstack 0
  1922  0000'                    _LeerTeclado:
  1923                           	callstack 25
  1924                           
  1925                           ;Lab4.c: 217: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1926                           
  1927                           ;incstack = 0
  1928  0000' B881               	btfsc	3969,4,c	;volatile
  1929  0002' AA81               	btfss	3969,5,c	;volatile
  1930  0004' D004               	goto	u3830
  1931  0006' AC81               	btfss	3969,6,c	;volatile
  1932  0008' D002               	goto	u3830
  1933  000A' BE81               	btfsc	3969,7,c	;volatile
  1934  000C' D7F9               	goto	__ptext2
  1935  000E'                    u3830:
  1936                           
  1937                           ;Lab4.c: 218: Verificador = 1;
  1938  000E' 0E00               	movlw	0
  1939  0010' 6E00'              	movwf	(_Verificador+1)^0,c
  1940  0012' 0E01               	movlw	1
  1941  0014' 6E00'              	movwf	_Verificador^0,c
  1942                           
  1943                           ;Lab4.c: 219: LATB=0b11111110;
  1944  0016' 0EFE               	movlw	254
  1945  0018' 6E8A               	movwf	138,c	;volatile
  1946                           
  1947                           ;Lab4.c: 220: if(RB4==0){
  1948  001A' B881               	btfsc	3969,4,c	;volatile
  1949  001C' D00A               	goto	l261
  1950                           
  1951                           ;Lab4.c: 221: if(!Potencia) return '+';
  1952  001E' 5000'              	movf	_Potencia^0,w,c
  1953  0020' A4D8               	btfss	status,2,c
  1954  0022' D002               	goto	l3431
  1955  0024' 0E2B               	movlw	43
  1956  0026' 0012               	return	
  1957  0028'                    l3431:
  1958                           
  1959                           ;Lab4.c: 222: else if(Potencia) return '^';
  1960  0028' 5000'              	movf	_Potencia^0,w,c
  1961  002A' B4D8               	btfsc	status,2,c
  1962  002C' D04C               	goto	l293
  1963  002E' 0E5E               	movlw	94
  1964  0030' 0012               	return	
  1965  0032'                    l261:
  1966                           
  1967                           ;Lab4.c: 224: else if(RB5==0) return '=';
  1968  0032' BA81               	btfsc	3969,5,c	;volatile
  1969  0034' D002               	goto	l267
  1970  0036' 0E3D               	movlw	61
  1971  0038' 0012               	return	
  1972  003A'                    l267:
  1973                           
  1974                           ;Lab4.c: 225: else if(RB6==0) return '0';
  1975  003A' BC81               	btfsc	3969,6,c	;volatile
  1976  003C' D002               	goto	l269
  1977  003E' 0E30               	movlw	48
  1978  0040' 0012               	return	
  1979  0042'                    l269:
  1980                           
  1981                           ;Lab4.c: 226: else if(RB7==0) return 'C';
  1982  0042' BE81               	btfsc	3969,7,c	;volatile
  1983  0044' D002               	goto	l3455
  1984  0046' 0E43               	movlw	67
  1985  0048' 0012               	return	
  1986  004A'                    l3455:
  1987                           
  1988                           ;Lab4.c: 227: else{;Lab4.c: 228: LATB=0b11111101;
  1989  004A' 0EFD               	movlw	253
  1990  004C' 6E8A               	movwf	138,c	;volatile
  1991                           
  1992                           ;Lab4.c: 229: if(RB4==0){
  1993  004E' B881               	btfsc	3969,4,c	;volatile
  1994  0050' D00A               	goto	l273
  1995                           
  1996                           ;Lab4.c: 230: if(!Factorial) return '-';
  1997  0052' 5000'              	movf	_Factorial^0,w,c
  1998  0054' A4D8               	btfss	status,2,c
  1999  0056' D002               	goto	l3467
  2000  0058' 0E2D               	movlw	45
  2001  005A' 0012               	return	
  2002  005C'                    l3467:
  2003                           
  2004                           ;Lab4.c: 231: else if(Factorial) return '!';
  2005  005C' 5000'              	movf	_Factorial^0,w,c
  2006  005E' B4D8               	btfsc	status,2,c
  2007  0060' D032               	goto	l293
  2008  0062' 0E21               	movlw	33
  2009  0064' 0012               	return	
  2010  0066'                    l273:
  2011                           
  2012                           ;Lab4.c: 233: else if(RB5==0) return '9';
  2013  0066' BA81               	btfsc	3969,5,c	;volatile
  2014  0068' D002               	goto	l278
  2015  006A' 0E39               	movlw	57
  2016  006C' 0012               	return	
  2017  006E'                    l278:
  2018                           
  2019                           ;Lab4.c: 234: else if(RB6==0) return '8';
  2020  006E' BC81               	btfsc	3969,6,c	;volatile
  2021  0070' D002               	goto	l280
  2022  0072' 0E38               	movlw	56
  2023  0074' 0012               	return	
  2024  0076'                    l280:
  2025                           
  2026                           ;Lab4.c: 235: else if(RB7==0) return '7';
  2027  0076' BE81               	btfsc	3969,7,c	;volatile
  2028  0078' D002               	goto	l3491
  2029  007A' 0E37               	movlw	55
  2030  007C' 0012               	return	
  2031  007E'                    l3491:
  2032                           
  2033                           ;Lab4.c: 236: else{;Lab4.c: 237: LATB=0b11111011;
  2034  007E' 0EFB               	movlw	251
  2035  0080' 6E8A               	movwf	138,c	;volatile
  2036                           
  2037                           ;Lab4.c: 238: if(RB4==0) return 'x';
  2038  0082' B881               	btfsc	3969,4,c	;volatile
  2039  0084' D002               	goto	l284
  2040  0086' 0E78               	movlw	120
  2041  0088' 0012               	return	
  2042  008A'                    l284:
  2043                           
  2044                           ;Lab4.c: 239: else if(RB5==0) return '6';
  2045  008A' BA81               	btfsc	3969,5,c	;volatile
  2046  008C' D002               	goto	l286
  2047  008E' 0E36               	movlw	54
  2048  0090' 0012               	return	
  2049  0092'                    l286:
  2050                           
  2051                           ;Lab4.c: 240: else if(RB6==0) return '5';
  2052  0092' BC81               	btfsc	3969,6,c	;volatile
  2053  0094' D002               	goto	l288
  2054  0096' 0E35               	movlw	53
  2055  0098' 0012               	return	
  2056  009A'                    l288:
  2057                           
  2058                           ;Lab4.c: 241: else if(RB7==0) return '4';
  2059  009A' BE81               	btfsc	3969,7,c	;volatile
  2060  009C' D002               	goto	l3519
  2061  009E' 0E34               	movlw	52
  2062  00A0' 0012               	return	
  2063  00A2'                    l3519:
  2064                           
  2065                           ;Lab4.c: 242: else{;Lab4.c: 243: LATB=0b11110111;
  2066  00A2' 0EF7               	movlw	247
  2067  00A4' 6E8A               	movwf	138,c	;volatile
  2068                           
  2069                           ;Lab4.c: 244: if(RB4==0) return '/';
  2070  00A6' B881               	btfsc	3969,4,c	;volatile
  2071  00A8' D002               	goto	l292
  2072  00AA' 0E2F               	movlw	47
  2073  00AC' 0012               	return	
  2074  00AE'                    l292:
  2075                           
  2076                           ;Lab4.c: 245: else if(RB5==0) return '3';
  2077  00AE' BA81               	btfsc	3969,5,c	;volatile
  2078  00B0' D002               	goto	l294
  2079  00B2' 0E33               	movlw	51
  2080  00B4' 0012               	return	
  2081  00B6'                    l294:
  2082                           
  2083                           ;Lab4.c: 246: else if(RB6==0) return '2';
  2084  00B6' BC81               	btfsc	3969,6,c	;volatile
  2085  00B8' D002               	goto	l296
  2086  00BA' 0E32               	movlw	50
  2087  00BC' 0012               	return	
  2088  00BE'                    l296:
  2089                           
  2090                           ;Lab4.c: 247: else if(RB7==0) return '1';
  2091  00BE' BE81               	btfsc	3969,7,c	;volatile
  2092  00C0' D002               	goto	l293
  2093  00C2' 0E31               	movlw	49
  2094  00C4' 0012               	return	
  2095  00C6'                    l293:
  2096                           
  2097                           ;Lab4.c: 248: };Lab4.c: 249: };Lab4.c: 250: };Lab4.c: 251: return '?';
  2098  00C6' 0E3F               	movlw	63
  2099  00C8' 0012               	return		;funcret
  2100  00CA'                    __end_of_LeerTeclado:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _InicializaLCD *****************
  2104 ;; Defined at:
  2105 ;;		line 62 in file "LibLCDXC8.h"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2119 ;;      Params:         0       0       0       0       0       0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2122 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2123 ;;Total ram usage:        0 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 8
  2126 ;; This function calls:
  2127 ;;		_BorraLCD
  2128 ;;		_EnviaDato
  2129 ;;		_HabilitaLCD
  2130 ;;		_RetardoLCD
  2131 ;; This function is called by:
  2132 ;;		_main
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text3
  2137  0000'                    __ptext3:
  2138                           	callstack 0
  2139  0000'                    _InicializaLCD:
  2140                           	callstack 22
  2141                           
  2142                           ;LibLCDXC8.h: 64: LATE0=0;
  2143                           
  2144                           ;incstack = 0
  2145  0000' 908D               	bcf	3981,0,c	;volatile
  2146                           
  2147                           ;LibLCDXC8.h: 65: if(interfaz==4)
  2148  0002' 0E04               	movlw	4
  2149  0004' 1800'              	xorwf	_interfaz^0,w,c
  2150  0006' A4D8               	btfss	status,2,c
  2151  0008' D004               	goto	l3363
  2152                           
  2153                           ;LibLCDXC8.h: 66: LATD=(LATD & 0b00001111) | 0x30;
  2154  000A' 508C               	movf	140,w,c	;volatile
  2155  000C' 0B0F               	andlw	15
  2156  000E' 0930               	iorlw	48
  2157  0010' D001               	goto	L3
  2158  0012'                    l3363:
  2159                           
  2160                           ;LibLCDXC8.h: 67: else;LibLCDXC8.h: 68: LATD=0x3F;
  2161  0012' 0E3F               	movlw	63
  2162  0014'                    L3:
  2163  0014' 6E8C               	movwf	140,c	;volatile
  2164                           
  2165                           ;LibLCDXC8.h: 69: HabilitaLCD();
  2166  0016' EC00' F000'        	call	_HabilitaLCD	;wreg free
  2167                           
  2168                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  2169  001A' 0E01               	movlw	1
  2170  001C' EC00' F000'        	call	_RetardoLCD
  2171                           
  2172                           ;LibLCDXC8.h: 71: if(interfaz==4)
  2173  0020' 0E04               	movlw	4
  2174  0022' 1800'              	xorwf	_interfaz^0,w,c
  2175  0024' A4D8               	btfss	status,2,c
  2176  0026' D004               	goto	l3373
  2177                           
  2178                           ;LibLCDXC8.h: 72: LATD=(LATD & 0b00001111) | 0x30;
  2179  0028' 508C               	movf	140,w,c	;volatile
  2180  002A' 0B0F               	andlw	15
  2181  002C' 0930               	iorlw	48
  2182  002E' D001               	goto	L4
  2183  0030'                    l3373:
  2184                           
  2185                           ;LibLCDXC8.h: 73: else;LibLCDXC8.h: 74: LATD=0x3F;
  2186  0030' 0E3F               	movlw	63
  2187  0032'                    L4:
  2188  0032' 6E8C               	movwf	140,c	;volatile
  2189                           
  2190                           ;LibLCDXC8.h: 75: HabilitaLCD();
  2191  0034' EC00' F000'        	call	_HabilitaLCD	;wreg free
  2192                           
  2193                           ;LibLCDXC8.h: 76: RetardoLCD(3);
  2194  0038' 0E03               	movlw	3
  2195  003A' EC00' F000'        	call	_RetardoLCD
  2196                           
  2197                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2198  003E' 0E04               	movlw	4
  2199  0040' 1800'              	xorwf	_interfaz^0,w,c
  2200  0042' A4D8               	btfss	status,2,c
  2201  0044' D004               	goto	l3383
  2202                           
  2203                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2204  0046' 508C               	movf	140,w,c	;volatile
  2205  0048' 0B0F               	andlw	15
  2206  004A' 0930               	iorlw	48
  2207  004C' D001               	goto	L5
  2208  004E'                    l3383:
  2209                           
  2210                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2211  004E' 0E3F               	movlw	63
  2212  0050'                    L5:
  2213  0050' 6E8C               	movwf	140,c	;volatile
  2214                           
  2215                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2216  0052' EC00' F000'        	call	_HabilitaLCD	;wreg free
  2217                           
  2218                           ;LibLCDXC8.h: 82: RetardoLCD(4);
  2219  0056' 0E04               	movlw	4
  2220  0058' EC00' F000'        	call	_RetardoLCD
  2221                           
  2222                           ;LibLCDXC8.h: 83: if(interfaz==4){
  2223  005C' 0E04               	movlw	4
  2224  005E' 1800'              	xorwf	_interfaz^0,w,c
  2225  0060' A4D8               	btfss	status,2,c
  2226  0062' D011               	goto	l3403
  2227                           
  2228                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x20;
  2229  0064' 508C               	movf	140,w,c	;volatile
  2230  0066' 0B0F               	andlw	15
  2231  0068' 0920               	iorlw	32
  2232  006A' 6E8C               	movwf	140,c	;volatile
  2233                           
  2234                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2235  006C' EC00' F000'        	call	_HabilitaLCD	;wreg free
  2236                           
  2237                           ;LibLCDXC8.h: 86: RetardoLCD(4);
  2238  0070' 0E04               	movlw	4
  2239  0072' EC00' F000'        	call	_RetardoLCD
  2240                           
  2241                           ;LibLCDXC8.h: 87: EnviaDato(0x2F);
  2242  0076' 0E2F               	movlw	47
  2243  0078' EC00' F000'        	call	_EnviaDato
  2244                           
  2245                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2246  007C' EC00' F000'        	call	_HabilitaLCD	;wreg free
  2247                           
  2248                           ;LibLCDXC8.h: 89: RetardoLCD(4);
  2249  0080' 0E04               	movlw	4
  2250  0082' EC00' F000'        	call	_RetardoLCD
  2251  0086'                    l3403:
  2252                           
  2253                           ;LibLCDXC8.h: 90: };LibLCDXC8.h: 91: BorraLCD();
  2254  0086' EC00' F000'        	call	_BorraLCD	;wreg free
  2255                           
  2256                           ;LibLCDXC8.h: 92: EnviaDato(0xF);
  2257  008A' 0E0F               	movlw	15
  2258  008C' EC00' F000'        	call	_EnviaDato
  2259                           
  2260                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2261  0090' EC00' F000'        	call	_HabilitaLCD	;wreg free
  2262                           
  2263                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2264  0094' 0E04               	movlw	4
  2265  0096' EC00' F000'        	call	_RetardoLCD
  2266  009A' 0012               	return		;funcret
  2267  009C'                    __end_of_InicializaLCD:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _BorraLCD *****************
  2271 ;; Defined at:
  2272 ;;		line 103 in file "LibLCDXC8.h"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 7
  2293 ;; This function calls:
  2294 ;;		_EnviaDato
  2295 ;;		_HabilitaLCD
  2296 ;;		_RetardoLCD
  2297 ;; This function is called by:
  2298 ;;		_InicializaLCD
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text4
  2304  0000'                    __ptext4:
  2305                           	callstack 0
  2306  0000'                    _BorraLCD:
  2307                           	callstack 22
  2308                           
  2309                           ;LibLCDXC8.h: 105: LATE0=0;
  2310                           
  2311                           ;incstack = 0
  2312  0000' 908D               	bcf	3981,0,c	;volatile
  2313                           
  2314                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  2315  0002' 0E01               	movlw	1
  2316  0004' EC00' F000'        	call	_EnviaDato
  2317                           
  2318                           ;LibLCDXC8.h: 107: HabilitaLCD();
  2319  0008' EC00' F000'        	call	_HabilitaLCD	;wreg free
  2320                           
  2321                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  2322  000C' 0E02               	movlw	2
  2323  000E' EC00' F000'        	call	_RetardoLCD
  2324  0012' 0012               	return		;funcret
  2325  0014'                    __end_of_BorraLCD:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _Imprimir_Resultado *****************
  2329 ;; Defined at:
  2330 ;;		line 318 in file "Lab4.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  Resultado       4   27[COMRAM] long 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  k               2    1[BANK0 ] int 
  2335 ;;  j               2    5[BANK0 ] int 
  2336 ;;  i               2    3[BANK0 ] int 
  2337 ;;  Potencia        4    7[BANK0 ] long 
  2338 ;;  flag            1    0[BANK0 ] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2348 ;;      Params:         4       0       0       0       0       0       0       0       0
  2349 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2350 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2351 ;;      Totals:         8      11       0       0       0       0       0       0       0
  2352 ;;Total ram usage:       19 bytes
  2353 ;; Hardware stack levels used: 1
  2354 ;; Hardware stack levels required when called: 9
  2355 ;; This function calls:
  2356 ;;		_DireccionaLCD
  2357 ;;		_EscribeLCD_c
  2358 ;;		_MensajeLCD_Var
  2359 ;;		___aldiv
  2360 ;;		___almod
  2361 ;;		___lmul
  2362 ;;		___lwdiv
  2363 ;;		___lwmod
  2364 ;;		___wmul
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text5
  2371  0000'                    __ptext5:
  2372                           	callstack 0
  2373  0000'                    _Imprimir_Resultado:
  2374                           	callstack 21
  2375                           
  2376                           ;Lab4.c: 320: bool flag=0;
  2377                           
  2378                           ;incstack = 0
  2379  0000' 0E00               	movlw	0
  2380  0002' 0100               	movlb	0	; () banked
  2381  0004' 6F00'              	movwf	Imprimir_Resultado@flag& (0+255),b
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;Lab4.c: 321: if ((Parte_Decimal-(Resultado*100))>0 | (Parte_Decimal-(Resultado*100))<0)
      +                          {
  2385  0006' C01B' F00D'        	movff	Imprimir_Resultado@Resultado,___lmul@multiplier
  2386  000A' C01C' F00E'        	movff	Imprimir_Resultado@Resultado+1,___lmul@multiplier+1
  2387  000E' C01D' F00F'        	movff	Imprimir_Resultado@Resultado+2,___lmul@multiplier+2
  2388  0012' C01E' F010'        	movff	Imprimir_Resultado@Resultado+3,___lmul@multiplier+3
  2389  0016' 0E9C               	movlw	156
  2390  0018' 6E00'              	movwf	___lmul@multiplicand^0,c
  2391  001A' 0EFF               	movlw	255
  2392  001C' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  2393  001E' 0EFF               	movlw	255
  2394  0020' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  2395  0022' 0EFF               	movlw	255
  2396  0024' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  2397  0026' EC00' F000'        	call	___lmul	;wreg free
  2398  002A' 5000'              	movf	_Parte_Decimal^0,w,c
  2399  002C' 2400'              	addwf	?___lmul^0,w,c
  2400  002E' 6E00'              	movwf	??_Imprimir_Resultado^0,c
  2401  0030' 5000'              	movf	(_Parte_Decimal+1)^0,w,c
  2402  0032' 2000'              	addwfc	(?___lmul+1)^0,w,c
  2403  0034' 6E00'              	movwf	(??_Imprimir_Resultado+1)^0,c
  2404  0036' 5000'              	movf	(_Parte_Decimal+2)^0,w,c
  2405  0038' 2000'              	addwfc	(?___lmul+2)^0,w,c
  2406  003A' 6E00'              	movwf	(??_Imprimir_Resultado+2)^0,c
  2407  003C' 5000'              	movf	(_Parte_Decimal+3)^0,w,c
  2408  003E' 2000'              	addwfc	(?___lmul+3)^0,w,c
  2409  0040' 6E00'              	movwf	(??_Imprimir_Resultado+3)^0,c
  2410  0042' 5000'              	movf	??_Imprimir_Resultado^0,w,c
  2411  0044' 1000'              	iorwf	(??_Imprimir_Resultado+1)^0,w,c
  2412  0046' 1000'              	iorwf	(??_Imprimir_Resultado+2)^0,w,c
  2413  0048' 1000'              	iorwf	(??_Imprimir_Resultado+3)^0,w,c
  2414  004A' B4D8               	btfsc	status,2,c
  2415  004C' D058               	goto	l3607
  2416                           
  2417                           ;Lab4.c: 322: for (int i = 0; i < 3; i++) {
  2418  004E' 0E00               	movlw	0
  2419  0050' 0100               	movlb	0	; () banked
  2420  0052' 6F00'              	movwf	(Imprimir_Resultado@i+1)& (0+255),b
  2421  0054' 0E00               	movlw	0
  2422  0056' 6F00'              	movwf	Imprimir_Resultado@i& (0+255),b
  2423  0058'                    l3591:
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;Lab4.c: 323: Resultado = Numero_1 / Numero_2;
  2427  0058' C016' F013'        	movff	_Numero_1,___lwdiv@dividend
  2428  005C' C017' F014'        	movff	_Numero_1+1,___lwdiv@dividend+1
  2429  0060' C014' F015'        	movff	_Numero_2,___lwdiv@divisor
  2430  0064' C015' F016'        	movff	_Numero_2+1,___lwdiv@divisor+1
  2431  0068' EC00' F000'        	call	___lwdiv	;wreg free
  2432  006C' C013' F01B'        	movff	?___lwdiv,Imprimir_Resultado@Resultado
  2433  0070' C014' F01C'        	movff	?___lwdiv+1,Imprimir_Resultado@Resultado+1
  2434  0074' 6A00'              	clrf	(Imprimir_Resultado@Resultado+2)^0,c
  2435  0076' 6A00'              	clrf	(Imprimir_Resultado@Resultado+3)^0,c
  2436                           
  2437                           ;Lab4.c: 324: m = Numero_1 % Numero_2;
  2438  0078' C016' F00D'        	movff	_Numero_1,___lwmod@dividend
  2439  007C' C017' F00E'        	movff	_Numero_1+1,___lwmod@dividend+1
  2440  0080' C014' F00F'        	movff	_Numero_2,___lwmod@divisor
  2441  0084' C015' F010'        	movff	_Numero_2+1,___lwmod@divisor+1
  2442  0088' EC00' F000'        	call	___lwmod	;wreg free
  2443  008C' C00D' F01C'        	movff	?___lwmod,_m
  2444  0090' C00E' F01D'        	movff	?___lwmod+1,_m+1
  2445  0094' 6A00'              	clrf	(_m+2)^0,c
  2446  0096' 6A00'              	clrf	(_m+3)^0,c
  2447                           
  2448                           ;Lab4.c: 325: EscribeLCD_c(Resultado+'0');
  2449  0098' 5000'              	movf	Imprimir_Resultado@Resultado^0,w,c
  2450  009A' 0F30               	addlw	48
  2451  009C' EC00' F000'        	call	_EscribeLCD_c
  2452                           
  2453                           ;Lab4.c: 326: if(i == 0 && m != 0) {
  2454  00A0' 0100               	movlb	0	; () banked
  2455  00A2' 5100'              	movf	Imprimir_Resultado@i& (0+255),w,b
  2456  00A4' 1100'              	iorwf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2457  00A6' A4D8               	btfss	status,2,c
  2458  00A8' D009               	goto	l3599
  2459                           
  2460                           ; BSR set to: 0
  2461  00AA' 5000'              	movf	_m^0,w,c
  2462  00AC' 1000'              	iorwf	(_m+1)^0,w,c
  2463  00AE' 1000'              	iorwf	(_m+2)^0,w,c
  2464  00B0' 1000'              	iorwf	(_m+3)^0,w,c
  2465  00B2' B4D8               	btfsc	status,2,c
  2466  00B4' D003               	goto	l3599
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;Lab4.c: 327: EscribeLCD_c(',');
  2470  00B6' 0E2C               	movlw	44
  2471  00B8' EC00' F000'        	call	_EscribeLCD_c
  2472  00BC'                    l3599:
  2473                           
  2474                           ;Lab4.c: 328: };Lab4.c: 330: if (m != 0) {
  2475  00BC' 5000'              	movf	_m^0,w,c
  2476  00BE' 1000'              	iorwf	(_m+1)^0,w,c
  2477  00C0' 1000'              	iorwf	(_m+2)^0,w,c
  2478  00C2' 1000'              	iorwf	(_m+3)^0,w,c
  2479  00C4' B4D8               	btfsc	status,2,c
  2480  00C6' 0012               	return	
  2481                           
  2482                           ;Lab4.c: 331: Numero_1 = m * 10;
  2483  00C8' C01C' F00D'        	movff	_m,___wmul@multiplier
  2484  00CC' C01D' F00E'        	movff	_m+1,___wmul@multiplier+1
  2485  00D0' 0E00               	movlw	0
  2486  00D2' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  2487  00D4' 0E0A               	movlw	10
  2488  00D6' 6E00'              	movwf	___wmul@multiplicand^0,c
  2489  00D8' EC00' F000'        	call	___wmul	;wreg free
  2490  00DC' C00D' F016'        	movff	?___wmul,_Numero_1
  2491  00E0' C00E' F017'        	movff	?___wmul+1,_Numero_1+1
  2492                           
  2493                           ;Lab4.c: 332: } else {
  2494  00E4' 0100               	movlb	0	; () banked
  2495  00E6' 4B00'              	infsnz	Imprimir_Resultado@i& (0+255),f,b
  2496  00E8' 2B00'              	incf	(Imprimir_Resultado@i+1)& (0+255),f,b
  2497                           
  2498                           ; BSR set to: 0
  2499  00EA' BF00'              	btfsc	(Imprimir_Resultado@i+1)& (0+255),7,b
  2500  00EC' D7B5               	goto	l3591
  2501  00EE' 5100'              	movf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2502  00F0' E105               	bnz	u4090
  2503  00F2' 0E03               	movlw	3
  2504  00F4' 5D00'              	subwf	Imprimir_Resultado@i& (0+255),w,b
  2505  00F6' B0D8               	btfsc	status,0,c
  2506  00F8' 0012               	return	
  2507  00FA' D7AE               	goto	l3591
  2508  00FC'                    u4090:
  2509  00FC' 0012               	return	
  2510  00FE'                    l3607:
  2511                           
  2512                           ;Lab4.c: 338: if(Resultado>0x8000 & Resultado!=1000 & Resultado !=1001 & Negativo==1){
  2513  00FE' BE00'              	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2514  0100' D030               	goto	l3621
  2515  0102' 5000'              	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2516  0104' 1000'              	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2517  0106' E105               	bnz	u4100
  2518  0108' 0400'              	decf	Imprimir_Resultado@Resultado^0,w,c
  2519  010A' 0E80               	movlw	128
  2520  010C' 5800'              	subwfb	(Imprimir_Resultado@Resultado+1)^0,w,c
  2521  010E' A0D8               	btfss	status,0,c
  2522  0110' D028               	goto	l3621
  2523  0112'                    u4100:
  2524  0112' 0EE8               	movlw	232
  2525  0114' 1800'              	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2526  0116' E106               	bnz	u4110
  2527  0118' 0E03               	movlw	3
  2528  011A' 1800'              	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2529  011C' 1000'              	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2530  011E' 1000'              	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2531  0120' B4D8               	btfsc	status,2,c
  2532  0122' D01F               	goto	l3621
  2533  0124'                    u4110:
  2534  0124' 0EE9               	movlw	233
  2535  0126' 1800'              	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2536  0128' E106               	bnz	u4120
  2537  012A' 0E03               	movlw	3
  2538  012C' 1800'              	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2539  012E' 1000'              	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2540  0130' 1000'              	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2541  0132' B4D8               	btfsc	status,2,c
  2542  0134' D016               	goto	l3621
  2543  0136'                    u4120:
  2544  0136' 0400'              	decf	_Negativo^0,w,c
  2545  0138' A4D8               	btfss	status,2,c
  2546  013A' D013               	goto	l3621
  2547                           
  2548                           ;Lab4.c: 339: EscribeLCD_c('-');
  2549  013C' 0E2D               	movlw	45
  2550  013E' EC00' F000'        	call	_EscribeLCD_c
  2551                           
  2552                           ;Lab4.c: 340: DireccionaLCD(0x85);
  2553  0142' 0E85               	movlw	133
  2554  0144' EC00' F000'        	call	_DireccionaLCD
  2555                           
  2556                           ;Lab4.c: 341: Resultado = ~Resultado+1;
  2557  0148' 1E00'              	comf	(Imprimir_Resultado@Resultado+3)^0,f,c
  2558  014A' 1E00'              	comf	(Imprimir_Resultado@Resultado+2)^0,f,c
  2559  014C' 1E00'              	comf	(Imprimir_Resultado@Resultado+1)^0,f,c
  2560  014E' 6C00'              	negf	Imprimir_Resultado@Resultado^0,c
  2561  0150' 0E00               	movlw	0
  2562  0152' 2200'              	addwfc	(Imprimir_Resultado@Resultado+1)^0,f,c
  2563  0154' 2200'              	addwfc	(Imprimir_Resultado@Resultado+2)^0,f,c
  2564  0156' 2200'              	addwfc	(Imprimir_Resultado@Resultado+3)^0,f,c
  2565                           
  2566                           ;Lab4.c: 342: EscribeLCD_c(Resultado+'0');
  2567  0158' 5000'              	movf	Imprimir_Resultado@Resultado^0,w,c
  2568  015A' 0F30               	addlw	48
  2569  015C' EC00' F000'        	call	_EscribeLCD_c
  2570                           
  2571                           ;Lab4.c: 343: }else{
  2572  0160' 0012               	return	
  2573  0162'                    l3621:
  2574                           
  2575                           ;Lab4.c: 344: if(Resultado>=0xA & Resultado!=1000 & Resultado !=1001){
  2576  0162' BE00'              	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2577  0164' D0D7               	goto	l3669
  2578  0166' 5000'              	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2579  0168' 1000'              	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2580  016A' 1000'              	iorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2581  016C' E104               	bnz	u4140
  2582  016E' 0E0A               	movlw	10
  2583  0170' 5C00'              	subwf	Imprimir_Resultado@Resultado^0,w,c
  2584  0172' A0D8               	btfss	status,0,c
  2585  0174' D0CF               	goto	l3669
  2586  0176'                    u4140:
  2587  0176' 0EE8               	movlw	232
  2588  0178' 1800'              	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2589  017A' E106               	bnz	u4150
  2590  017C' 0E03               	movlw	3
  2591  017E' 1800'              	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2592  0180' 1000'              	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2593  0182' 1000'              	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2594  0184' B4D8               	btfsc	status,2,c
  2595  0186' D0C6               	goto	l3669
  2596  0188'                    u4150:
  2597  0188' 0EE9               	movlw	233
  2598  018A' 1800'              	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2599  018C' E106               	bnz	u4160
  2600  018E' 0E03               	movlw	3
  2601  0190' 1800'              	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2602  0192' 1000'              	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2603  0194' 1000'              	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2604  0196' B4D8               	btfsc	status,2,c
  2605  0198' D0BD               	goto	l3669
  2606  019A'                    u4160:
  2607                           
  2608                           ;Lab4.c: 345: for(int j=9;j>=0;j--){
  2609  019A' 0E00               	movlw	0
  2610  019C' 0100               	movlb	0	; () banked
  2611  019E' 6F00'              	movwf	(Imprimir_Resultado@j+1)& (0+255),b
  2612  01A0' 0E09               	movlw	9
  2613  01A2' 6F00'              	movwf	Imprimir_Resultado@j& (0+255),b
  2614  01A4'                    l3633:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;Lab4.c: 346: Potencia = 10;
  2618  01A4' 0E0A               	movlw	10
  2619  01A6' 6F00'              	movwf	Imprimir_Resultado@Potencia& (0+255),b
  2620  01A8' 0E00               	movlw	0
  2621  01AA' 6F00'              	movwf	(Imprimir_Resultado@Potencia+1)& (0+255),b
  2622  01AC' 0E00               	movlw	0
  2623  01AE' 6F00'              	movwf	(Imprimir_Resultado@Potencia+2)& (0+255),b
  2624  01B0' 0E00               	movlw	0
  2625  01B2' 6F00'              	movwf	(Imprimir_Resultado@Potencia+3)& (0+255),b
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;Lab4.c: 347: for(int k=j-1;k>0;k--){
  2629  01B4' 0EFF               	movlw	255
  2630  01B6' 2500'              	addwf	Imprimir_Resultado@j& (0+255),w,b
  2631  01B8' 6F00'              	movwf	Imprimir_Resultado@k& (0+255),b
  2632  01BA' 0EFF               	movlw	255
  2633  01BC' 2100'              	addwfc	(Imprimir_Resultado@j+1)& (0+255),w,b
  2634  01BE' 6F00'              	movwf	(Imprimir_Resultado@k+1)& (0+255),b
  2635  01C0'                    l3637:
  2636                           
  2637                           ; BSR set to: 0
  2638  01C0' BF00'              	btfsc	(Imprimir_Resultado@k+1)& (0+255),7,b
  2639  01C2' D024               	goto	l3647
  2640  01C4' 5100'              	movf	(Imprimir_Resultado@k+1)& (0+255),w,b
  2641  01C6' E103               	bnz	l3641
  2642  01C8' 0500'              	decf	Imprimir_Resultado@k& (0+255),w,b
  2643  01CA' A0D8               	btfss	status,0,c
  2644  01CC' D01F               	goto	l3647
  2645  01CE'                    l3641:
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;Lab4.c: 348: Potencia = Potencia*10;
  2649  01CE' C007' F00D'        	movff	Imprimir_Resultado@Potencia,___lmul@multiplier
  2650  01D2' C008' F00E'        	movff	Imprimir_Resultado@Potencia+1,___lmul@multiplier+1
  2651  01D6' C009' F00F'        	movff	Imprimir_Resultado@Potencia+2,___lmul@multiplier+2
  2652  01DA' C00A' F010'        	movff	Imprimir_Resultado@Potencia+3,___lmul@multiplier+3
  2653  01DE' 0E0A               	movlw	10
  2654  01E0' 6E00'              	movwf	___lmul@multiplicand^0,c
  2655  01E2' 0E00               	movlw	0
  2656  01E4' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  2657  01E6' 0E00               	movlw	0
  2658  01E8' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  2659  01EA' 0E00               	movlw	0
  2660  01EC' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  2661  01EE' EC00' F000'        	call	___lmul	;wreg free
  2662  01F2' C00D' F007'        	movff	?___lmul,Imprimir_Resultado@Potencia
  2663  01F6' C00E' F008'        	movff	?___lmul+1,Imprimir_Resultado@Potencia+1
  2664  01FA' C00F' F009'        	movff	?___lmul+2,Imprimir_Resultado@Potencia+2
  2665  01FE' C010' F00A'        	movff	?___lmul+3,Imprimir_Resultado@Potencia+3
  2666  0202' 0100               	movlb	0	; () banked
  2667  0204' 0700'              	decf	Imprimir_Resultado@k& (0+255),f,b
  2668  0206' A0D8               	btfss	status,0,c
  2669  0208' 0700'              	decf	(Imprimir_Resultado@k+1)& (0+255),f,b
  2670  020A' D7DA               	goto	l3637
  2671  020C'                    l3647:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;Lab4.c: 349: };Lab4.c: 350: if(Resultado/Potencia>0){
  2675  020C' C01B' F00D'        	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2676  0210' C01C' F00E'        	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2677  0214' C01D' F00F'        	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2678  0218' C01E' F010'        	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2679  021C' C007' F011'        	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2680  0220' C008' F012'        	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2681  0224' C009' F013'        	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2682  0228' C00A' F014'        	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2683  022C' EC00' F000'        	call	___aldiv	;wreg free
  2684  0230' BE00'              	btfsc	(?___aldiv+3)^0,7,c
  2685  0232' D03B               	goto	l3655
  2686  0234' 5000'              	movf	(?___aldiv+3)^0,w,c
  2687  0236' 1000'              	iorwf	(?___aldiv+2)^0,w,c
  2688  0238' 1000'              	iorwf	(?___aldiv+1)^0,w,c
  2689  023A' E103               	bnz	u4180
  2690  023C' 0400'              	decf	?___aldiv^0,w,c
  2691  023E' A0D8               	btfss	status,0,c
  2692  0240' D034               	goto	l3655
  2693  0242'                    u4180:
  2694                           
  2695                           ;Lab4.c: 351: flag = 1;
  2696  0242' 0E01               	movlw	1
  2697  0244' 0100               	movlb	0	; () banked
  2698  0246' 6F00'              	movwf	Imprimir_Resultado@flag& (0+255),b
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;Lab4.c: 352: EscribeLCD_c(Resultado/Potencia+48);
  2702  0248' C01B' F00D'        	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2703  024C' C01C' F00E'        	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2704  0250' C01D' F00F'        	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2705  0254' C01E' F010'        	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2706  0258' C007' F011'        	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2707  025C' C008' F012'        	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2708  0260' C009' F013'        	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2709  0264' C00A' F014'        	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2710  0268' EC00' F000'        	call	___aldiv	;wreg free
  2711  026C' 5000'              	movf	?___aldiv^0,w,c
  2712  026E' 0F30               	addlw	48
  2713  0270' EC00' F000'        	call	_EscribeLCD_c
  2714                           
  2715                           ;Lab4.c: 353: Resultado=Resultado%Potencia;
  2716  0274' C01B' F00D'        	movff	Imprimir_Resultado@Resultado,___almod@dividend
  2717  0278' C01C' F00E'        	movff	Imprimir_Resultado@Resultado+1,___almod@dividend+1
  2718  027C' C01D' F00F'        	movff	Imprimir_Resultado@Resultado+2,___almod@dividend+2
  2719  0280' C01E' F010'        	movff	Imprimir_Resultado@Resultado+3,___almod@dividend+3
  2720  0284' C007' F011'        	movff	Imprimir_Resultado@Potencia,___almod@divisor
  2721  0288' C008' F012'        	movff	Imprimir_Resultado@Potencia+1,___almod@divisor+1
  2722  028C' C009' F013'        	movff	Imprimir_Resultado@Potencia+2,___almod@divisor+2
  2723  0290' C00A' F014'        	movff	Imprimir_Resultado@Potencia+3,___almod@divisor+3
  2724  0294' EC00' F000'        	call	___almod	;wreg free
  2725  0298' C00D' F01B'        	movff	?___almod,Imprimir_Resultado@Resultado
  2726  029C' C00E' F01C'        	movff	?___almod+1,Imprimir_Resultado@Resultado+1
  2727  02A0' C00F' F01D'        	movff	?___almod+2,Imprimir_Resultado@Resultado+2
  2728  02A4' C010' F01E'        	movff	?___almod+3,Imprimir_Resultado@Resultado+3
  2729                           
  2730                           ;Lab4.c: 354: }else if( (Resultado/Potencia)==0 && flag){
  2731  02A8' D02E               	goto	l3665
  2732  02AA'                    l3655:
  2733  02AA' C01B' F00D'        	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2734  02AE' C01C' F00E'        	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2735  02B2' C01D' F00F'        	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2736  02B6' C01E' F010'        	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2737  02BA' C007' F011'        	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2738  02BE' C008' F012'        	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2739  02C2' C009' F013'        	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2740  02C6' C00A' F014'        	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2741  02CA' EC00' F000'        	call	___aldiv	;wreg free
  2742  02CE' 5000'              	movf	?___aldiv^0,w,c
  2743  02D0' 1000'              	iorwf	(?___aldiv+1)^0,w,c
  2744  02D2' 1000'              	iorwf	(?___aldiv+2)^0,w,c
  2745  02D4' 1000'              	iorwf	(?___aldiv+3)^0,w,c
  2746  02D6' A4D8               	btfss	status,2,c
  2747  02D8' D016               	goto	l3665
  2748  02DA' 0100               	movlb	0	; () banked
  2749  02DC' 5100'              	movf	Imprimir_Resultado@flag& (0+255),w,b
  2750  02DE' B4D8               	btfsc	status,2,c
  2751  02E0' D012               	goto	l3665
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;Lab4.c: 355: if(Resultado<10) EscribeLCD_c(Resultado+48);
  2755  02E2' BE00'              	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2756  02E4' D008               	goto	u4210
  2757  02E6' 5000'              	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2758  02E8' 1000'              	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2759  02EA' 1000'              	iorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2760  02EC' E109               	bnz	l3663
  2761  02EE' 0E0A               	movlw	10
  2762  02F0' 5C00'              	subwf	Imprimir_Resultado@Resultado^0,w,c
  2763  02F2' B0D8               	btfsc	status,0,c
  2764  02F4' D005               	goto	l3663
  2765  02F6'                    u4210:
  2766                           
  2767                           ; BSR set to: 0
  2768  02F6' 5000'              	movf	Imprimir_Resultado@Resultado^0,w,c
  2769  02F8' 0F30               	addlw	48
  2770  02FA' EC00' F000'        	call	_EscribeLCD_c
  2771  02FE' D003               	goto	l3665
  2772  0300'                    l3663:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;Lab4.c: 356: else EscribeLCD_c(48);
  2776  0300' 0E30               	movlw	48
  2777  0302' EC00' F000'        	call	_EscribeLCD_c
  2778  0306'                    l3665:
  2779  0306' 0100               	movlb	0	; () banked
  2780  0308' 0700'              	decf	Imprimir_Resultado@j& (0+255),f,b
  2781  030A' A0D8               	btfss	status,0,c
  2782  030C' 0700'              	decf	(Imprimir_Resultado@j+1)& (0+255),f,b
  2783                           
  2784                           ; BSR set to: 0
  2785  030E' BF00'              	btfsc	(Imprimir_Resultado@j+1)& (0+255),7,b
  2786  0310' 0012               	return	
  2787  0312' D748               	goto	l3633
  2788  0314'                    l3669:
  2789                           
  2790                           ;Lab4.c: 360: if(Resultado==1000){
  2791  0314' 0EE8               	movlw	232
  2792  0316' 1800'              	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2793  0318' E10B               	bnz	l3673
  2794  031A' 0E03               	movlw	3
  2795  031C' 1800'              	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2796  031E' 1000'              	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2797  0320' 1000'              	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2798  0322' A4D8               	btfss	status,2,c
  2799  0324' D005               	goto	l3673
  2800                           
  2801                           ;Lab4.c: 361: MensajeLCD_Var("Infinito");
  2802  0326' 0E00'              	movlw	low STR_12
  2803  0328' 6E00'              	movwf	MensajeLCD_Var@a^0,c
  2804  032A' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
  2805                           
  2806                           ;Lab4.c: 362: }else{
  2807  032E' 0012               	return	
  2808  0330'                    l3673:
  2809                           
  2810                           ;Lab4.c: 363: if(Resultado==1001){
  2811  0330' 0EE9               	movlw	233
  2812  0332' 1800'              	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2813  0334' E10E               	bnz	l3679
  2814  0336' 0E03               	movlw	3
  2815  0338' 1800'              	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2816  033A' 1000'              	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2817  033C' 1000'              	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2818  033E' A4D8               	btfss	status,2,c
  2819  0340' D008               	goto	l3679
  2820                           
  2821                           ;Lab4.c: 364: DireccionaLCD(0xC1);
  2822  0342' 0EC1               	movlw	193
  2823  0344' EC00' F000'        	call	_DireccionaLCD
  2824                           
  2825                           ;Lab4.c: 365: MensajeLCD_Var("Indeterminado");
  2826  0348' 0E00'              	movlw	low STR_13
  2827  034A' 6E00'              	movwf	MensajeLCD_Var@a^0,c
  2828  034C' EC00' F000'        	call	_MensajeLCD_Var	;wreg free
  2829                           
  2830                           ;Lab4.c: 366: }else{
  2831  0350' 0012               	return	
  2832  0352'                    l3679:
  2833                           
  2834                           ;Lab4.c: 367: EscribeLCD_c(Resultado+'0');
  2835  0352' 5000'              	movf	Imprimir_Resultado@Resultado^0,w,c
  2836  0354' 0F30               	addlw	48
  2837  0356' EC00' F000'        	call	_EscribeLCD_c
  2838  035A' 0012               	return		;funcret
  2839  035C'                    __end_of_Imprimir_Resultado:
  2840                           	callstack 0
  2841                           
  2842 ;; *************** function ___wmul *****************
  2843 ;; Defined at:
  2844 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  multiplier      2   13[COMRAM] unsigned int 
  2847 ;;  multiplicand    2   15[COMRAM] unsigned int 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  product         2   17[COMRAM] unsigned int 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2   13[COMRAM] unsigned int 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, prodl, prodh
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2859 ;;      Params:         4       0       0       0       0       0       0       0       0
  2860 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2862 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2863 ;;Total ram usage:        6 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 5
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;;		_Imprimir_Resultado
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text6
  2875  0000'                    __ptext6:
  2876                           	callstack 0
  2877  0000'                    ___wmul:
  2878                           	callstack 25
  2879                           
  2880                           ;incstack = 0
  2881  0000' 5000'              	movf	___wmul@multiplier^0,w,c
  2882  0002' 0200'              	mulwf	___wmul@multiplicand^0,c
  2883  0004' CFF3 F011'         	movff	prodl,___wmul@product
  2884  0008' CFF4 F012'         	movff	prodh,___wmul@product+1
  2885  000C' 5000'              	movf	___wmul@multiplier^0,w,c
  2886  000E' 0200'              	mulwf	(___wmul@multiplicand+1)^0,c
  2887  0010' 50F3               	movf	243,w,c
  2888  0012' 2600'              	addwf	(___wmul@product+1)^0,f,c
  2889  0014' 5000'              	movf	(___wmul@multiplier+1)^0,w,c
  2890  0016' 0200'              	mulwf	___wmul@multiplicand^0,c
  2891  0018' 50F3               	movf	243,w,c
  2892  001A' 2600'              	addwf	(___wmul@product+1)^0,f,c
  2893  001C' C011' F00D'        	movff	___wmul@product,?___wmul
  2894  0020' C012' F00E'        	movff	___wmul@product+1,?___wmul+1
  2895  0024' 0012               	return		;funcret
  2896  0026'                    __end_of___wmul:
  2897                           	callstack 0
  2898                           
  2899 ;; *************** function ___lwmod *****************
  2900 ;; Defined at:
  2901 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  dividend        2   13[COMRAM] unsigned int 
  2904 ;;  divisor         2   15[COMRAM] unsigned int 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  counter         1   17[COMRAM] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  2   13[COMRAM] unsigned int 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2916 ;;      Params:         4       0       0       0       0       0       0       0       0
  2917 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2919 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2920 ;;Total ram usage:        5 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; Hardware stack levels required when called: 5
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_Imprimir_Resultado
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text7
  2931  0000'                    __ptext7:
  2932                           	callstack 0
  2933  0000'                    ___lwmod:
  2934                           	callstack 24
  2935                           
  2936                           ;incstack = 0
  2937  0000' 5000'              	movf	___lwmod@divisor^0,w,c
  2938  0002' 1000'              	iorwf	(___lwmod@divisor+1)^0,w,c
  2939  0004' B4D8               	btfsc	status,2,c
  2940  0006' D018               	goto	l853
  2941  0008' 0E01               	movlw	1
  2942  000A' 6E00'              	movwf	___lwmod@counter^0,c
  2943  000C' D004               	goto	l3343
  2944  000E'                    l3341:
  2945  000E' 90D8               	bcf	status,0,c
  2946  0010' 3600'              	rlcf	___lwmod@divisor^0,f,c
  2947  0012' 3600'              	rlcf	(___lwmod@divisor+1)^0,f,c
  2948  0014' 2A00'              	incf	___lwmod@counter^0,f,c
  2949  0016'                    l3343:
  2950  0016' AE00'              	btfss	(___lwmod@divisor+1)^0,7,c
  2951  0018' D7FA               	goto	l3341
  2952  001A'                    u3720:
  2953  001A' 5000'              	movf	___lwmod@divisor^0,w,c
  2954  001C' 5C00'              	subwf	___lwmod@dividend^0,w,c
  2955  001E' 5000'              	movf	(___lwmod@divisor+1)^0,w,c
  2956  0020' 5800'              	subwfb	(___lwmod@dividend+1)^0,w,c
  2957  0022' A0D8               	btfss	status,0,c
  2958  0024' D004               	goto	l3349
  2959  0026' 5000'              	movf	___lwmod@divisor^0,w,c
  2960  0028' 5E00'              	subwf	___lwmod@dividend^0,f,c
  2961  002A' 5000'              	movf	(___lwmod@divisor+1)^0,w,c
  2962  002C' 5A00'              	subwfb	(___lwmod@dividend+1)^0,f,c
  2963  002E'                    l3349:
  2964  002E' 90D8               	bcf	status,0,c
  2965  0030' 3200'              	rrcf	(___lwmod@divisor+1)^0,f,c
  2966  0032' 3200'              	rrcf	___lwmod@divisor^0,f,c
  2967  0034' 2E00'              	decfsz	___lwmod@counter^0,f,c
  2968  0036' D7F1               	goto	u3720
  2969  0038'                    l853:
  2970  0038' C00D' F00D'        	movff	___lwmod@dividend,?___lwmod
  2971  003C' C00E' F00E'        	movff	___lwmod@dividend+1,?___lwmod+1
  2972  0040' 0012               	return		;funcret
  2973  0042'                    __end_of___lwmod:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function ___lwdiv *****************
  2977 ;; Defined at:
  2978 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  dividend        2   19[COMRAM] unsigned int 
  2981 ;;  divisor         2   21[COMRAM] unsigned int 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  quotient        2   24[COMRAM] unsigned int 
  2984 ;;  counter         1   23[COMRAM] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  2   19[COMRAM] unsigned int 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2994 ;;      Params:         4       0       0       0       0       0       0       0       0
  2995 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2997 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2998 ;;Total ram usage:        7 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; Hardware stack levels required when called: 5
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_main
  3005 ;;		_Imprimir_Resultado
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text8
  3010  0000'                    __ptext8:
  3011                           	callstack 0
  3012  0000'                    ___lwdiv:
  3013                           	callstack 25
  3014                           
  3015                           ;incstack = 0
  3016  0000' 0E00               	movlw	0
  3017  0002' 6E00'              	movwf	(___lwdiv@quotient+1)^0,c
  3018  0004' 0E00               	movlw	0
  3019  0006' 6E00'              	movwf	___lwdiv@quotient^0,c
  3020  0008' 5000'              	movf	___lwdiv@divisor^0,w,c
  3021  000A' 1000'              	iorwf	(___lwdiv@divisor+1)^0,w,c
  3022  000C' B4D8               	btfsc	status,2,c
  3023  000E' D01C               	goto	l843
  3024  0010' 0E01               	movlw	1
  3025  0012' 6E00'              	movwf	___lwdiv@counter^0,c
  3026  0014' D004               	goto	l3323
  3027  0016'                    l3321:
  3028  0016' 90D8               	bcf	status,0,c
  3029  0018' 3600'              	rlcf	___lwdiv@divisor^0,f,c
  3030  001A' 3600'              	rlcf	(___lwdiv@divisor+1)^0,f,c
  3031  001C' 2A00'              	incf	___lwdiv@counter^0,f,c
  3032  001E'                    l3323:
  3033  001E' AE00'              	btfss	(___lwdiv@divisor+1)^0,7,c
  3034  0020' D7FA               	goto	l3321
  3035  0022'                    u3690:
  3036  0022' 90D8               	bcf	status,0,c
  3037  0024' 3600'              	rlcf	___lwdiv@quotient^0,f,c
  3038  0026' 3600'              	rlcf	(___lwdiv@quotient+1)^0,f,c
  3039  0028' 5000'              	movf	___lwdiv@divisor^0,w,c
  3040  002A' 5C00'              	subwf	___lwdiv@dividend^0,w,c
  3041  002C' 5000'              	movf	(___lwdiv@divisor+1)^0,w,c
  3042  002E' 5800'              	subwfb	(___lwdiv@dividend+1)^0,w,c
  3043  0030' A0D8               	btfss	status,0,c
  3044  0032' D005               	goto	l3333
  3045  0034' 5000'              	movf	___lwdiv@divisor^0,w,c
  3046  0036' 5E00'              	subwf	___lwdiv@dividend^0,f,c
  3047  0038' 5000'              	movf	(___lwdiv@divisor+1)^0,w,c
  3048  003A' 5A00'              	subwfb	(___lwdiv@dividend+1)^0,f,c
  3049  003C' 8000'              	bsf	___lwdiv@quotient^0,0,c
  3050  003E'                    l3333:
  3051  003E' 90D8               	bcf	status,0,c
  3052  0040' 3200'              	rrcf	(___lwdiv@divisor+1)^0,f,c
  3053  0042' 3200'              	rrcf	___lwdiv@divisor^0,f,c
  3054  0044' 2E00'              	decfsz	___lwdiv@counter^0,f,c
  3055  0046' D7ED               	goto	u3690
  3056  0048'                    l843:
  3057  0048' C018' F013'        	movff	___lwdiv@quotient,?___lwdiv
  3058  004C' C019' F014'        	movff	___lwdiv@quotient+1,?___lwdiv+1
  3059  0050' 0012               	return		;funcret
  3060  0052'                    __end_of___lwdiv:
  3061                           	callstack 0
  3062                           
  3063 ;; *************** function ___lmul *****************
  3064 ;; Defined at:
  3065 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  multiplier      4   13[COMRAM] unsigned long 
  3068 ;;  multiplicand    4   17[COMRAM] unsigned long 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  product         4   21[COMRAM] unsigned long 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  4   13[COMRAM] unsigned long 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3080 ;;      Params:         8       0       0       0       0       0       0       0       0
  3081 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3083 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3084 ;;Total ram usage:       12 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; Hardware stack levels required when called: 5
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_main
  3091 ;;		_factorial_function
  3092 ;;		_Imprimir_Resultado
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text9
  3097  0000'                    __ptext9:
  3098                           	callstack 0
  3099  0000'                    ___lmul:
  3100                           	callstack 24
  3101                           
  3102                           ;incstack = 0
  3103  0000' 0E00               	movlw	0
  3104  0002' 6E00'              	movwf	___lmul@product^0,c
  3105  0004' 0E00               	movlw	0
  3106  0006' 6E00'              	movwf	(___lmul@product+1)^0,c
  3107  0008' 0E00               	movlw	0
  3108  000A' 6E00'              	movwf	(___lmul@product+2)^0,c
  3109  000C' 0E00               	movlw	0
  3110  000E' 6E00'              	movwf	(___lmul@product+3)^0,c
  3111  0010'                    l3227:
  3112  0010' A000'              	btfss	___lmul@multiplier^0,0,c
  3113  0012' D008               	goto	l3231
  3114  0014' 5000'              	movf	___lmul@multiplicand^0,w,c
  3115  0016' 2600'              	addwf	___lmul@product^0,f,c
  3116  0018' 5000'              	movf	(___lmul@multiplicand+1)^0,w,c
  3117  001A' 2200'              	addwfc	(___lmul@product+1)^0,f,c
  3118  001C' 5000'              	movf	(___lmul@multiplicand+2)^0,w,c
  3119  001E' 2200'              	addwfc	(___lmul@product+2)^0,f,c
  3120  0020' 5000'              	movf	(___lmul@multiplicand+3)^0,w,c
  3121  0022' 2200'              	addwfc	(___lmul@product+3)^0,f,c
  3122  0024'                    l3231:
  3123  0024' 90D8               	bcf	status,0,c
  3124  0026' 3600'              	rlcf	___lmul@multiplicand^0,f,c
  3125  0028' 3600'              	rlcf	(___lmul@multiplicand+1)^0,f,c
  3126  002A' 3600'              	rlcf	(___lmul@multiplicand+2)^0,f,c
  3127  002C' 3600'              	rlcf	(___lmul@multiplicand+3)^0,f,c
  3128  002E' 90D8               	bcf	status,0,c
  3129  0030' 3200'              	rrcf	(___lmul@multiplier+3)^0,f,c
  3130  0032' 3200'              	rrcf	(___lmul@multiplier+2)^0,f,c
  3131  0034' 3200'              	rrcf	(___lmul@multiplier+1)^0,f,c
  3132  0036' 3200'              	rrcf	___lmul@multiplier^0,f,c
  3133  0038' 5000'              	movf	___lmul@multiplier^0,w,c
  3134  003A' 1000'              	iorwf	(___lmul@multiplier+1)^0,w,c
  3135  003C' 1000'              	iorwf	(___lmul@multiplier+2)^0,w,c
  3136  003E' 1000'              	iorwf	(___lmul@multiplier+3)^0,w,c
  3137  0040' A4D8               	btfss	status,2,c
  3138  0042' D7E6               	goto	l3227
  3139  0044' C015' F00D'        	movff	___lmul@product,?___lmul
  3140  0048' C016' F00E'        	movff	___lmul@product+1,?___lmul+1
  3141  004C' C017' F00F'        	movff	___lmul@product+2,?___lmul+2
  3142  0050' C018' F010'        	movff	___lmul@product+3,?___lmul+3
  3143  0054' 0012               	return		;funcret
  3144  0056'                    __end_of___lmul:
  3145                           	callstack 0
  3146                           
  3147 ;; *************** function ___almod *****************
  3148 ;; Defined at:
  3149 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  dividend        4   13[COMRAM] long 
  3152 ;;  divisor         4   17[COMRAM] long 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  sign            1   22[COMRAM] unsigned char 
  3155 ;;  counter         1   21[COMRAM] unsigned char 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  4   13[COMRAM] long 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3165 ;;      Params:         8       0       0       0       0       0       0       0       0
  3166 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3168 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3169 ;;Total ram usage:       10 bytes
  3170 ;; Hardware stack levels used: 1
  3171 ;; Hardware stack levels required when called: 5
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_Imprimir_Resultado
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text10
  3180  0000'                    __ptext10:
  3181                           	callstack 0
  3182  0000'                    ___almod:
  3183                           	callstack 24
  3184                           
  3185                           ;incstack = 0
  3186  0000' 0E00               	movlw	0
  3187  0002' 6E00'              	movwf	___almod@sign^0,c
  3188  0004' AE00'              	btfss	(___almod@dividend+3)^0,7,c
  3189  0006' D00A               	goto	l3287
  3190  0008' 1E00'              	comf	(___almod@dividend+3)^0,f,c
  3191  000A' 1E00'              	comf	(___almod@dividend+2)^0,f,c
  3192  000C' 1E00'              	comf	(___almod@dividend+1)^0,f,c
  3193  000E' 6C00'              	negf	___almod@dividend^0,c
  3194  0010' 0E00               	movlw	0
  3195  0012' 2200'              	addwfc	(___almod@dividend+1)^0,f,c
  3196  0014' 2200'              	addwfc	(___almod@dividend+2)^0,f,c
  3197  0016' 2200'              	addwfc	(___almod@dividend+3)^0,f,c
  3198  0018' 0E01               	movlw	1
  3199  001A' 6E00'              	movwf	___almod@sign^0,c
  3200  001C'                    l3287:
  3201  001C' AE00'              	btfss	(___almod@divisor+3)^0,7,c
  3202  001E' D008               	goto	l3291
  3203  0020' 1E00'              	comf	(___almod@divisor+3)^0,f,c
  3204  0022' 1E00'              	comf	(___almod@divisor+2)^0,f,c
  3205  0024' 1E00'              	comf	(___almod@divisor+1)^0,f,c
  3206  0026' 6C00'              	negf	___almod@divisor^0,c
  3207  0028' 0E00               	movlw	0
  3208  002A' 2200'              	addwfc	(___almod@divisor+1)^0,f,c
  3209  002C' 2200'              	addwfc	(___almod@divisor+2)^0,f,c
  3210  002E' 2200'              	addwfc	(___almod@divisor+3)^0,f,c
  3211  0030'                    l3291:
  3212  0030' 5000'              	movf	___almod@divisor^0,w,c
  3213  0032' 1000'              	iorwf	(___almod@divisor+1)^0,w,c
  3214  0034' 1000'              	iorwf	(___almod@divisor+2)^0,w,c
  3215  0036' 1000'              	iorwf	(___almod@divisor+3)^0,w,c
  3216  0038' B4D8               	btfsc	status,2,c
  3217  003A' D024               	goto	l3307
  3218  003C' 0E01               	movlw	1
  3219  003E' 6E00'              	movwf	___almod@counter^0,c
  3220  0040' D006               	goto	l3297
  3221  0042'                    l3295:
  3222  0042' 90D8               	bcf	status,0,c
  3223  0044' 3600'              	rlcf	___almod@divisor^0,f,c
  3224  0046' 3600'              	rlcf	(___almod@divisor+1)^0,f,c
  3225  0048' 3600'              	rlcf	(___almod@divisor+2)^0,f,c
  3226  004A' 3600'              	rlcf	(___almod@divisor+3)^0,f,c
  3227  004C' 2A00'              	incf	___almod@counter^0,f,c
  3228  004E'                    l3297:
  3229  004E' AE00'              	btfss	(___almod@divisor+3)^0,7,c
  3230  0050' D7F8               	goto	l3295
  3231  0052'                    u3650:
  3232  0052' 5000'              	movf	___almod@divisor^0,w,c
  3233  0054' 5C00'              	subwf	___almod@dividend^0,w,c
  3234  0056' 5000'              	movf	(___almod@divisor+1)^0,w,c
  3235  0058' 5800'              	subwfb	(___almod@dividend+1)^0,w,c
  3236  005A' 5000'              	movf	(___almod@divisor+2)^0,w,c
  3237  005C' 5800'              	subwfb	(___almod@dividend+2)^0,w,c
  3238  005E' 5000'              	movf	(___almod@divisor+3)^0,w,c
  3239  0060' 5800'              	subwfb	(___almod@dividend+3)^0,w,c
  3240  0062' A0D8               	btfss	status,0,c
  3241  0064' D008               	goto	l3303
  3242  0066' 5000'              	movf	___almod@divisor^0,w,c
  3243  0068' 5E00'              	subwf	___almod@dividend^0,f,c
  3244  006A' 5000'              	movf	(___almod@divisor+1)^0,w,c
  3245  006C' 5A00'              	subwfb	(___almod@dividend+1)^0,f,c
  3246  006E' 5000'              	movf	(___almod@divisor+2)^0,w,c
  3247  0070' 5A00'              	subwfb	(___almod@dividend+2)^0,f,c
  3248  0072' 5000'              	movf	(___almod@divisor+3)^0,w,c
  3249  0074' 5A00'              	subwfb	(___almod@dividend+3)^0,f,c
  3250  0076'                    l3303:
  3251  0076' 90D8               	bcf	status,0,c
  3252  0078' 3200'              	rrcf	(___almod@divisor+3)^0,f,c
  3253  007A' 3200'              	rrcf	(___almod@divisor+2)^0,f,c
  3254  007C' 3200'              	rrcf	(___almod@divisor+1)^0,f,c
  3255  007E' 3200'              	rrcf	___almod@divisor^0,f,c
  3256  0080' 2E00'              	decfsz	___almod@counter^0,f,c
  3257  0082' D7E7               	goto	u3650
  3258  0084'                    l3307:
  3259  0084' 5000'              	movf	___almod@sign^0,w,c
  3260  0086' B4D8               	btfsc	status,2,c
  3261  0088' D008               	goto	l3311
  3262  008A' 1E00'              	comf	(___almod@dividend+3)^0,f,c
  3263  008C' 1E00'              	comf	(___almod@dividend+2)^0,f,c
  3264  008E' 1E00'              	comf	(___almod@dividend+1)^0,f,c
  3265  0090' 6C00'              	negf	___almod@dividend^0,c
  3266  0092' 0E00               	movlw	0
  3267  0094' 2200'              	addwfc	(___almod@dividend+1)^0,f,c
  3268  0096' 2200'              	addwfc	(___almod@dividend+2)^0,f,c
  3269  0098' 2200'              	addwfc	(___almod@dividend+3)^0,f,c
  3270  009A'                    l3311:
  3271  009A' C00D' F00D'        	movff	___almod@dividend,?___almod
  3272  009E' C00E' F00E'        	movff	___almod@dividend+1,?___almod+1
  3273  00A2' C00F' F00F'        	movff	___almod@dividend+2,?___almod+2
  3274  00A6' C010' F010'        	movff	___almod@dividend+3,?___almod+3
  3275  00AA' 0012               	return		;funcret
  3276  00AC'                    __end_of___almod:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function ___aldiv *****************
  3280 ;; Defined at:
  3281 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  dividend        4   13[COMRAM] long 
  3284 ;;  divisor         4   17[COMRAM] long 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  quotient        4   23[COMRAM] long 
  3287 ;;  sign            1   22[COMRAM] unsigned char 
  3288 ;;  counter         1   21[COMRAM] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  4   13[COMRAM] long 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3298 ;;      Params:         8       0       0       0       0       0       0       0       0
  3299 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3301 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3302 ;;Total ram usage:       14 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; Hardware stack levels required when called: 5
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_Imprimir_Resultado
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text11
  3313  0000'                    __ptext11:
  3314                           	callstack 0
  3315  0000'                    ___aldiv:
  3316                           	callstack 24
  3317                           
  3318                           ;incstack = 0
  3319  0000' 0E00               	movlw	0
  3320  0002' 6E00'              	movwf	___aldiv@sign^0,c
  3321  0004' AE00'              	btfss	(___aldiv@divisor+3)^0,7,c
  3322  0006' D00A               	goto	l3243
  3323  0008' 1E00'              	comf	(___aldiv@divisor+3)^0,f,c
  3324  000A' 1E00'              	comf	(___aldiv@divisor+2)^0,f,c
  3325  000C' 1E00'              	comf	(___aldiv@divisor+1)^0,f,c
  3326  000E' 6C00'              	negf	___aldiv@divisor^0,c
  3327  0010' 0E00               	movlw	0
  3328  0012' 2200'              	addwfc	(___aldiv@divisor+1)^0,f,c
  3329  0014' 2200'              	addwfc	(___aldiv@divisor+2)^0,f,c
  3330  0016' 2200'              	addwfc	(___aldiv@divisor+3)^0,f,c
  3331  0018' 0E01               	movlw	1
  3332  001A' 6E00'              	movwf	___aldiv@sign^0,c
  3333  001C'                    l3243:
  3334  001C' AE00'              	btfss	(___aldiv@dividend+3)^0,7,c
  3335  001E' D00A               	goto	l3249
  3336  0020' 1E00'              	comf	(___aldiv@dividend+3)^0,f,c
  3337  0022' 1E00'              	comf	(___aldiv@dividend+2)^0,f,c
  3338  0024' 1E00'              	comf	(___aldiv@dividend+1)^0,f,c
  3339  0026' 6C00'              	negf	___aldiv@dividend^0,c
  3340  0028' 0E00               	movlw	0
  3341  002A' 2200'              	addwfc	(___aldiv@dividend+1)^0,f,c
  3342  002C' 2200'              	addwfc	(___aldiv@dividend+2)^0,f,c
  3343  002E' 2200'              	addwfc	(___aldiv@dividend+3)^0,f,c
  3344  0030' 0E01               	movlw	1
  3345  0032' 1A00'              	xorwf	___aldiv@sign^0,f,c
  3346  0034'                    l3249:
  3347  0034' 0E00               	movlw	0
  3348  0036' 6E00'              	movwf	___aldiv@quotient^0,c
  3349  0038' 0E00               	movlw	0
  3350  003A' 6E00'              	movwf	(___aldiv@quotient+1)^0,c
  3351  003C' 0E00               	movlw	0
  3352  003E' 6E00'              	movwf	(___aldiv@quotient+2)^0,c
  3353  0040' 0E00               	movlw	0
  3354  0042' 6E00'              	movwf	(___aldiv@quotient+3)^0,c
  3355  0044' 5000'              	movf	___aldiv@divisor^0,w,c
  3356  0046' 1000'              	iorwf	(___aldiv@divisor+1)^0,w,c
  3357  0048' 1000'              	iorwf	(___aldiv@divisor+2)^0,w,c
  3358  004A' 1000'              	iorwf	(___aldiv@divisor+3)^0,w,c
  3359  004C' B4D8               	btfsc	status,2,c
  3360  004E' D02A               	goto	l3271
  3361  0050' 0E01               	movlw	1
  3362  0052' 6E00'              	movwf	___aldiv@counter^0,c
  3363  0054' D006               	goto	l3257
  3364  0056'                    l3255:
  3365  0056' 90D8               	bcf	status,0,c
  3366  0058' 3600'              	rlcf	___aldiv@divisor^0,f,c
  3367  005A' 3600'              	rlcf	(___aldiv@divisor+1)^0,f,c
  3368  005C' 3600'              	rlcf	(___aldiv@divisor+2)^0,f,c
  3369  005E' 3600'              	rlcf	(___aldiv@divisor+3)^0,f,c
  3370  0060' 2A00'              	incf	___aldiv@counter^0,f,c
  3371  0062'                    l3257:
  3372  0062' AE00'              	btfss	(___aldiv@divisor+3)^0,7,c
  3373  0064' D7F8               	goto	l3255
  3374  0066'                    u3590:
  3375  0066' 90D8               	bcf	status,0,c
  3376  0068' 3600'              	rlcf	___aldiv@quotient^0,f,c
  3377  006A' 3600'              	rlcf	(___aldiv@quotient+1)^0,f,c
  3378  006C' 3600'              	rlcf	(___aldiv@quotient+2)^0,f,c
  3379  006E' 3600'              	rlcf	(___aldiv@quotient+3)^0,f,c
  3380  0070' 5000'              	movf	___aldiv@divisor^0,w,c
  3381  0072' 5C00'              	subwf	___aldiv@dividend^0,w,c
  3382  0074' 5000'              	movf	(___aldiv@divisor+1)^0,w,c
  3383  0076' 5800'              	subwfb	(___aldiv@dividend+1)^0,w,c
  3384  0078' 5000'              	movf	(___aldiv@divisor+2)^0,w,c
  3385  007A' 5800'              	subwfb	(___aldiv@dividend+2)^0,w,c
  3386  007C' 5000'              	movf	(___aldiv@divisor+3)^0,w,c
  3387  007E' 5800'              	subwfb	(___aldiv@dividend+3)^0,w,c
  3388  0080' A0D8               	btfss	status,0,c
  3389  0082' D009               	goto	l3267
  3390  0084' 5000'              	movf	___aldiv@divisor^0,w,c
  3391  0086' 5E00'              	subwf	___aldiv@dividend^0,f,c
  3392  0088' 5000'              	movf	(___aldiv@divisor+1)^0,w,c
  3393  008A' 5A00'              	subwfb	(___aldiv@dividend+1)^0,f,c
  3394  008C' 5000'              	movf	(___aldiv@divisor+2)^0,w,c
  3395  008E' 5A00'              	subwfb	(___aldiv@dividend+2)^0,f,c
  3396  0090' 5000'              	movf	(___aldiv@divisor+3)^0,w,c
  3397  0092' 5A00'              	subwfb	(___aldiv@dividend+3)^0,f,c
  3398  0094' 8000'              	bsf	___aldiv@quotient^0,0,c
  3399  0096'                    l3267:
  3400  0096' 90D8               	bcf	status,0,c
  3401  0098' 3200'              	rrcf	(___aldiv@divisor+3)^0,f,c
  3402  009A' 3200'              	rrcf	(___aldiv@divisor+2)^0,f,c
  3403  009C' 3200'              	rrcf	(___aldiv@divisor+1)^0,f,c
  3404  009E' 3200'              	rrcf	___aldiv@divisor^0,f,c
  3405  00A0' 2E00'              	decfsz	___aldiv@counter^0,f,c
  3406  00A2' D7E1               	goto	u3590
  3407  00A4'                    l3271:
  3408  00A4' 5000'              	movf	___aldiv@sign^0,w,c
  3409  00A6' B4D8               	btfsc	status,2,c
  3410  00A8' D008               	goto	l3275
  3411  00AA' 1E00'              	comf	(___aldiv@quotient+3)^0,f,c
  3412  00AC' 1E00'              	comf	(___aldiv@quotient+2)^0,f,c
  3413  00AE' 1E00'              	comf	(___aldiv@quotient+1)^0,f,c
  3414  00B0' 6C00'              	negf	___aldiv@quotient^0,c
  3415  00B2' 0E00               	movlw	0
  3416  00B4' 2200'              	addwfc	(___aldiv@quotient+1)^0,f,c
  3417  00B6' 2200'              	addwfc	(___aldiv@quotient+2)^0,f,c
  3418  00B8' 2200'              	addwfc	(___aldiv@quotient+3)^0,f,c
  3419  00BA'                    l3275:
  3420  00BA' C017' F00D'        	movff	___aldiv@quotient,?___aldiv
  3421  00BE' C018' F00E'        	movff	___aldiv@quotient+1,?___aldiv+1
  3422  00C2' C019' F00F'        	movff	___aldiv@quotient+2,?___aldiv+2
  3423  00C6' C01A' F010'        	movff	___aldiv@quotient+3,?___aldiv+3
  3424  00CA' 0012               	return		;funcret
  3425  00CC'                    __end_of___aldiv:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function _MensajeLCD_Var *****************
  3429 ;; Defined at:
  3430 ;;		line 261 in file "LibLCDXC8.h"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  a               1   18[COMRAM] PTR unsigned char 
  3433 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3434 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3435 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3436 ;;		 -> STR_1(8), 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  i               2   20[COMRAM] int 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3448 ;;      Params:         1       0       0       0       0       0       0       0       0
  3449 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3450 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3451 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3452 ;;Total ram usage:        4 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 8
  3455 ;; This function calls:
  3456 ;;		_EscribeLCD_c
  3457 ;;		_strlen
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;;		_Imprimir_Resultado
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text12
  3465  0000'                    __ptext12:
  3466                           	callstack 0
  3467  0000'                    _MensajeLCD_Var:
  3468                           	callstack 22
  3469                           
  3470                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  3471                           
  3472                           ;incstack = 0
  3473  0000' 0E00               	movlw	0
  3474  0002' 6E00'              	movwf	(MensajeLCD_Var@i+1)^0,c
  3475  0004' 0E00               	movlw	0
  3476  0006' 6E00'              	movwf	MensajeLCD_Var@i^0,c
  3477  0008' D019               	goto	l3209
  3478  000A'                    l3201:
  3479                           
  3480                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  3481  000A' 5000'              	movf	MensajeLCD_Var@a^0,w,c
  3482  000C' 2400'              	addwf	MensajeLCD_Var@i^0,w,c
  3483  000E' 6E00'              	movwf	??_MensajeLCD_Var^0,c
  3484  0010' C013' FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3485  0014'                    	if	1	;There is more than 1 active tblptr byte
  3486  0014' 0E00'              	movlw	high __smallconst
  3487  0016' 6EF7               	movwf	tblptrh,c
  3488  0018'                    	endif
  3489  0018'                    	if	0	;tblptru may be non-zero
  3490  0018'                    	endif
  3491  0018'                    	if	0	;tblptru may be non-zero
  3492  0018'                    	endif
  3493  0018' 0008               	tblrd		*
  3494  001A' 50F5               	movf	tablat,w,c
  3495  001C' 0900               	iorlw	0
  3496  001E' B4D8               	btfsc	status,2,c
  3497  0020' 0012               	return	
  3498                           
  3499                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  3500  0022' 5000'              	movf	MensajeLCD_Var@a^0,w,c
  3501  0024' 2400'              	addwf	MensajeLCD_Var@i^0,w,c
  3502  0026' 6E00'              	movwf	??_MensajeLCD_Var^0,c
  3503  0028' C013' FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3504  002C'                    	if	1	;There is more than 1 active tblptr byte
  3505  002C' 0E00'              	movlw	high __smallconst
  3506  002E' 6EF7               	movwf	tblptrh,c
  3507  0030'                    	endif
  3508  0030'                    	if	0	;tblptru may be non-zero
  3509  0030'                    	endif
  3510  0030'                    	if	0	;tblptru may be non-zero
  3511  0030'                    	endif
  3512  0030' 0008               	tblrd		*
  3513  0032' 50F5               	movf	tablat,w,c
  3514  0034' EC00' F000'        	call	_EscribeLCD_c
  3515  0038' 4A00'              	infsnz	MensajeLCD_Var@i^0,f,c
  3516  003A' 2A00'              	incf	(MensajeLCD_Var@i+1)^0,f,c
  3517  003C'                    l3209:
  3518  003C' C012' F00D'        	movff	MensajeLCD_Var@a,strlen@s
  3519  0040' EC00' F000'        	call	_strlen	;wreg free
  3520  0044' 5000'              	movf	?_strlen^0,w,c
  3521  0046' 5C00'              	subwf	MensajeLCD_Var@i^0,w,c
  3522  0048' 5000'              	movf	(?_strlen+1)^0,w,c
  3523  004A' 5800'              	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  3524  004C' B0D8               	btfsc	status,0,c
  3525  004E' 0012               	return	
  3526  0050' D7DC               	goto	l3201
  3527  0052'                    __end_of_MensajeLCD_Var:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _strlen *****************
  3531 ;; Defined at:
  3532 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  s               1   13[COMRAM] PTR const unsigned char 
  3535 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3536 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3537 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3538 ;;		 -> STR_1(8), 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  cp              1   15[COMRAM] PTR const unsigned char 
  3541 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3542 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3543 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3544 ;;		 -> STR_1(8), 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2   13[COMRAM] unsigned int 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3554 ;;      Params:         2       0       0       0       0       0       0       0       0
  3555 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3557 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3558 ;;Total ram usage:        3 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 5
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_MensajeLCD_Var
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text13
  3569  0000'                    __ptext13:
  3570                           	callstack 0
  3571  0000'                    _strlen:
  3572                           	callstack 24
  3573                           
  3574                           ;incstack = 0
  3575  0000' C00D' F00F'        	movff	strlen@s,strlen@cp
  3576  0004' D001               	goto	l3185
  3577  0006'                    l3183:
  3578  0006' 2A00'              	incf	strlen@cp^0,f,c
  3579  0008'                    l3185:
  3580  0008' C00F' FFF6         	movff	strlen@cp,tblptrl
  3581  000C'                    	if	1	;There is more than 1 active tblptr byte
  3582  000C' 0E00'              	movlw	high __smallconst
  3583  000E' 6EF7               	movwf	tblptrh,c
  3584  0010'                    	endif
  3585  0010'                    	if	0	;tblptru may be non-zero
  3586  0010'                    	endif
  3587  0010'                    	if	0	;tblptru may be non-zero
  3588  0010'                    	endif
  3589  0010' 0008               	tblrd		*
  3590  0012' 50F5               	movf	tablat,w,c
  3591  0014' 0900               	iorlw	0
  3592  0016' A4D8               	btfss	status,2,c
  3593  0018' D7F6               	goto	l3183
  3594  001A' 5000'              	movf	strlen@s^0,w,c
  3595  001C' 5C00'              	subwf	strlen@cp^0,w,c
  3596  001E' 6E00'              	movwf	?_strlen^0,c
  3597  0020' 6A00'              	clrf	(?_strlen+1)^0,c
  3598  0022' BE00'              	btfsc	?_strlen^0,7,c
  3599  0024' 0600'              	decf	(?_strlen+1)^0,f,c
  3600  0026' 0012               	return		;funcret
  3601  0028'                    __end_of_strlen:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _EscribeLCD_c *****************
  3605 ;; Defined at:
  3606 ;;		line 117 in file "LibLCDXC8.h"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  a               1    wreg     unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  a               1   17[COMRAM] unsigned char 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0
  3621 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3623 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3624 ;;Total ram usage:        1 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 7
  3627 ;; This function calls:
  3628 ;;		_EnviaDato
  3629 ;;		_HabilitaLCD
  3630 ;;		_RetardoLCD
  3631 ;; This function is called by:
  3632 ;;		_MensajeLCD_Var
  3633 ;;		_main
  3634 ;;		_Imprimir_Resultado
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text14
  3639  0000'                    __ptext14:
  3640                           	callstack 0
  3641  0000'                    _EscribeLCD_c:
  3642                           	callstack 22
  3643                           
  3644                           ;incstack = 0
  3645                           ;EscribeLCD_c@a stored from wreg
  3646  0000' 6E00'              	movwf	EscribeLCD_c@a^0,c
  3647                           
  3648                           ;LibLCDXC8.h: 121: LATE0=1;
  3649  0002' 808D               	bsf	3981,0,c	;volatile
  3650                           
  3651                           ;LibLCDXC8.h: 122: EnviaDato(a);
  3652  0004' 5000'              	movf	EscribeLCD_c@a^0,w,c
  3653  0006' EC00' F000'        	call	_EnviaDato
  3654                           
  3655                           ;LibLCDXC8.h: 123: HabilitaLCD();
  3656  000A' EC00' F000'        	call	_HabilitaLCD	;wreg free
  3657                           
  3658                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  3659  000E' 0E04               	movlw	4
  3660  0010' EC00' F000'        	call	_RetardoLCD
  3661  0014' 0012               	return		;funcret
  3662  0016'                    __end_of_EscribeLCD_c:
  3663                           	callstack 0
  3664                           
  3665 ;; *************** function _DireccionaLCD *****************
  3666 ;; Defined at:
  3667 ;;		line 273 in file "LibLCDXC8.h"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  a               1    wreg     unsigned char 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  a               1   17[COMRAM] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0
  3682 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3684 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3685 ;;Total ram usage:        1 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; Hardware stack levels required when called: 7
  3688 ;; This function calls:
  3689 ;;		_EnviaDato
  3690 ;;		_HabilitaLCD
  3691 ;;		_RetardoLCD
  3692 ;; This function is called by:
  3693 ;;		_main
  3694 ;;		_Imprimir_Resultado
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text15
  3699  0000'                    __ptext15:
  3700                           	callstack 0
  3701  0000'                    _DireccionaLCD:
  3702                           	callstack 22
  3703                           
  3704                           ;incstack = 0
  3705                           ;DireccionaLCD@a stored from wreg
  3706  0000' 6E00'              	movwf	DireccionaLCD@a^0,c
  3707                           
  3708                           ;LibLCDXC8.h: 276: LATE0=0;
  3709  0002' 908D               	bcf	3981,0,c	;volatile
  3710                           
  3711                           ;LibLCDXC8.h: 277: EnviaDato(a);
  3712  0004' 5000'              	movf	DireccionaLCD@a^0,w,c
  3713  0006' EC00' F000'        	call	_EnviaDato
  3714                           
  3715                           ;LibLCDXC8.h: 278: HabilitaLCD();
  3716  000A' EC00' F000'        	call	_HabilitaLCD	;wreg free
  3717                           
  3718                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  3719  000E' 0E04               	movlw	4
  3720  0010' EC00' F000'        	call	_RetardoLCD
  3721  0014' 0012               	return		;funcret
  3722  0016'                    __end_of_DireccionaLCD:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _EnviaDato *****************
  3726 ;; Defined at:
  3727 ;;		line 52 in file "LibLCDXC8.h"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  a               1    wreg     unsigned char 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  a               1   16[COMRAM] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3741 ;;      Params:         0       0       0       0       0       0       0       0       0
  3742 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3743 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3744 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3745 ;;Total ram usage:        2 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 6
  3748 ;; This function calls:
  3749 ;;		_HabilitaLCD
  3750 ;;		_RetardoLCD
  3751 ;; This function is called by:
  3752 ;;		_InicializaLCD
  3753 ;;		_BorraLCD
  3754 ;;		_EscribeLCD_c
  3755 ;;		_DireccionaLCD
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text16
  3760  0000'                    __ptext16:
  3761                           	callstack 0
  3762  0000'                    _EnviaDato:
  3763                           	callstack 22
  3764                           
  3765                           ;incstack = 0
  3766                           ;EnviaDato@a stored from wreg
  3767  0000' 6E00'              	movwf	EnviaDato@a^0,c
  3768                           
  3769                           ;LibLCDXC8.h: 53: if(interfaz==4){
  3770  0002' 0E04               	movlw	4
  3771  0004' 1800'              	xorwf	_interfaz^0,w,c
  3772  0006' A4D8               	btfss	status,2,c
  3773  0008' D017               	goto	l3169
  3774                           
  3775                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3776  000A' C010' F00F'        	movff	EnviaDato@a,??_EnviaDato
  3777  000E' 0EF0               	movlw	240
  3778  0010' 1600'              	andwf	??_EnviaDato^0,f,c
  3779  0012' 508C               	movf	140,w,c	;volatile
  3780  0014' 0B0F               	andlw	15
  3781  0016' 1000'              	iorwf	??_EnviaDato^0,w,c
  3782  0018' 6E8C               	movwf	140,c	;volatile
  3783                           
  3784                           ;LibLCDXC8.h: 55: HabilitaLCD();
  3785  001A' EC00' F000'        	call	_HabilitaLCD	;wreg free
  3786                           
  3787                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  3788  001E' 0E01               	movlw	1
  3789  0020' EC00' F000'        	call	_RetardoLCD
  3790                           
  3791                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  3792  0024' C010' F00F'        	movff	EnviaDato@a,??_EnviaDato
  3793  0028' 3A00'              	swapf	??_EnviaDato^0,f,c
  3794  002A' 0EF0               	movlw	240
  3795  002C' 1600'              	andwf	??_EnviaDato^0,f,c
  3796  002E' 508C               	movf	140,w,c	;volatile
  3797  0030' 0B0F               	andlw	15
  3798  0032' 1000'              	iorwf	??_EnviaDato^0,w,c
  3799  0034' 6E8C               	movwf	140,c	;volatile
  3800                           
  3801                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  3802  0036' 0012               	return	
  3803  0038'                    l3169:
  3804  0038' 0E08               	movlw	8
  3805  003A' 1800'              	xorwf	_interfaz^0,w,c
  3806  003C' A4D8               	btfss	status,2,c
  3807  003E' 0012               	return	
  3808                           
  3809                           ;LibLCDXC8.h: 59: LATD=a;
  3810  0040' C010' FF8C         	movff	EnviaDato@a,3980	;volatile
  3811  0044' 0012               	return		;funcret
  3812  0046'                    __end_of_EnviaDato:
  3813                           	callstack 0
  3814                           
  3815 ;; *************** function _RetardoLCD *****************
  3816 ;; Defined at:
  3817 ;;		line 309 in file "LibLCDXC8.h"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  a               1    wreg     unsigned char 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  a               1   14[COMRAM] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3831 ;;      Params:         0       0       0       0       0       0       0       0       0
  3832 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3833 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3834 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3835 ;;Total ram usage:        2 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; Hardware stack levels required when called: 5
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_EnviaDato
  3842 ;;		_InicializaLCD
  3843 ;;		_BorraLCD
  3844 ;;		_EscribeLCD_c
  3845 ;;		_DireccionaLCD
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text17
  3850  0000'                    __ptext17:
  3851                           	callstack 0
  3852  0000'                    _RetardoLCD:
  3853                           	callstack 23
  3854                           
  3855                           ;incstack = 0
  3856                           ;RetardoLCD@a stored from wreg
  3857  0000' 6E00'              	movwf	RetardoLCD@a^0,c
  3858                           
  3859                           ;LibLCDXC8.h: 310: switch(a){
  3860  0002' D01B               	goto	l3157
  3861  0004'                    l3147:
  3862  0004' 0E05               	movlw	5
  3863  0006' 6E00'              	movwf	??_RetardoLCD^0,c
  3864  0008' 0EDE               	movlw	222
  3865  000A'                    u5147:
  3866  000A' 2EE8               	decfsz	wreg,f,c
  3867  000C' D7FE               	bra	u5147
  3868  000E' 2E00'              	decfsz	??_RetardoLCD^0,f,c
  3869  0010' D7FC               	bra	u5147
  3870                           
  3871                           ;LibLCDXC8.h: 313: break;
  3872  0012' 0012               	return	
  3873  0014'                    l3149:
  3874  0014' 0E53               	movlw	83
  3875  0016'                    u5157:
  3876  0016' 2EE8               	decfsz	wreg,f,c
  3877  0018' D7FE               	bra	u5157
  3878  001A' F000               	nop	
  3879                           
  3880                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3881  001C' 0E35               	movlw	53
  3882  001E'                    u5167:
  3883  001E' 2EE8               	decfsz	wreg,f,c
  3884  0020' D7FE               	bra	u5167
  3885  0022' F000               	nop	
  3886                           
  3887                           ;LibLCDXC8.h: 317: break;
  3888  0024' 0012               	return	
  3889  0026'                    l3151:
  3890  0026' 0E08               	movlw	8
  3891  0028'                    u5177:
  3892  0028' 2EE8               	decfsz	wreg,f,c
  3893  002A' D7FE               	bra	u5177
  3894  002C' F000               	nop	
  3895                           
  3896                           ;LibLCDXC8.h: 320: break;
  3897  002E' 0012               	return	
  3898  0030'                    l3153:
  3899  0030' 0E03               	movlw	3
  3900  0032'                    u5187:
  3901  0032' 2EE8               	decfsz	wreg,f,c
  3902  0034' D7FE               	bra	u5187
  3903  0036' F000               	nop	
  3904                           
  3905                           ;LibLCDXC8.h: 323: break;
  3906  0038' 0012               	return	
  3907  003A'                    l3157:
  3908  003A' 5000'              	movf	RetardoLCD@a^0,w,c
  3909                           
  3910                           ; Switch size 1, requested type "simple"
  3911                           ; Number of cases is 4, Range of values is 1 to 4
  3912                           ; switch strategies available:
  3913                           ; Name         Instructions Cycles
  3914                           ; simple_byte           13     7 (average)
  3915                           ;	Chosen strategy is simple_byte
  3916  003C' 0A01               	xorlw	1	; case 1
  3917  003E' B4D8               	btfsc	status,2,c
  3918  0040' D7E1               	goto	l3147
  3919  0042' 0A03               	xorlw	3	; case 2
  3920  0044' B4D8               	btfsc	status,2,c
  3921  0046' D7E6               	goto	l3149
  3922  0048' 0A01               	xorlw	1	; case 3
  3923  004A' B4D8               	btfsc	status,2,c
  3924  004C' D7EC               	goto	l3151
  3925  004E' 0A07               	xorlw	7	; case 4
  3926  0050' A4D8               	btfss	status,2,c
  3927  0052' 0012               	return	
  3928  0054' D7ED               	goto	l3153
  3929  0056'                    __end_of_RetardoLCD:
  3930                           	callstack 0
  3931                           
  3932 ;; *************** function _HabilitaLCD *****************
  3933 ;; Defined at:
  3934 ;;		line 96 in file "LibLCDXC8.h"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 5
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_EnviaDato
  3959 ;;		_InicializaLCD
  3960 ;;		_BorraLCD
  3961 ;;		_EscribeLCD_c
  3962 ;;		_DireccionaLCD
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text18
  3967  0000'                    __ptext18:
  3968                           	callstack 0
  3969  0000'                    _HabilitaLCD:
  3970                           	callstack 23
  3971                           
  3972                           ;LibLCDXC8.h: 98: LATE1=1;
  3973                           
  3974                           ;incstack = 0
  3975  0000' 828D               	bsf	3981,1,c	;volatile
  3976                           
  3977                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3978  0002' 0E03               	movlw	3
  3979  0004'                    u5197:
  3980  0004' 2EE8               	decfsz	wreg,f,c
  3981  0006' D7FE               	bra	u5197
  3982  0008' F000               	nop	
  3983                           
  3984                           ;LibLCDXC8.h: 101: LATE1=0;
  3985  000A' 928D               	bcf	3981,1,c	;volatile
  3986  000C' 0012               	return		;funcret
  3987  000E'                    __end_of_HabilitaLCD:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _ConfiguraLCD *****************
  3991 ;; Defined at:
  3992 ;;		line 48 in file "LibLCDXC8.h"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  a               1    wreg     unsigned char 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  a               1   13[COMRAM] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4006 ;;      Params:         0       0       0       0       0       0       0       0       0
  4007 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4009 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4010 ;;Total ram usage:        1 bytes
  4011 ;; Hardware stack levels used: 1
  4012 ;; Hardware stack levels required when called: 5
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_main
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text19
  4021  0000'                    __ptext19:
  4022                           	callstack 0
  4023  0000'                    _ConfiguraLCD:
  4024                           	callstack 25
  4025                           
  4026                           ;incstack = 0
  4027                           ;ConfiguraLCD@a stored from wreg
  4028  0000' 6E00'              	movwf	ConfiguraLCD@a^0,c
  4029                           
  4030                           ;LibLCDXC8.h: 49: if(a==4 | a ==8)
  4031  0002' 0E04               	movlw	4
  4032  0004' 1800'              	xorwf	ConfiguraLCD@a^0,w,c
  4033  0006' B4D8               	btfsc	status,2,c
  4034  0008' D004               	goto	u3750
  4035  000A' 0E08               	movlw	8
  4036  000C' 1800'              	xorwf	ConfiguraLCD@a^0,w,c
  4037  000E' A4D8               	btfss	status,2,c
  4038  0010' 0012               	return	
  4039  0012'                    u3750:
  4040                           
  4041                           ;LibLCDXC8.h: 50: interfaz=a;
  4042  0012' C00D' F003'        	movff	ConfiguraLCD@a,_interfaz
  4043  0016' 0012               	return		;funcret
  4044  0018'                    __end_of_ConfiguraLCD:
  4045                           	callstack 0
  4046                           
  4047 ;; *************** function _ColorRGB *****************
  4048 ;; Defined at:
  4049 ;;		line 254 in file "Lab4.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4065 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4066 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; Hardware stack levels required when called: 5
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_main
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text20
  4078  0000'                    __ptext20:
  4079                           	callstack 0
  4080  0000'                    _ColorRGB:
  4081                           	callstack 25
  4082                           
  4083                           ;Lab4.c: 255: if(Color==8) Color = 0;
  4084                           
  4085                           ;incstack = 0
  4086  0000' 0E08               	movlw	8
  4087  0002' 1800'              	xorwf	_Color^0,w,c
  4088  0004' 1000'              	iorwf	(_Color+1)^0,w,c
  4089  0006' A4D8               	btfss	status,2,c
  4090  0008' D014               	goto	l3571
  4091  000A' 0E00               	movlw	0
  4092  000C' 6E00'              	movwf	(_Color+1)^0,c
  4093  000E' 0E00               	movlw	0
  4094  0010' 6E00'              	movwf	_Color^0,c
  4095  0012' D00F               	goto	l3571
  4096  0014'                    l3553:
  4097                           
  4098                           ;Lab4.c: 258: LATC = 0b00000000;
  4099  0014' 0E00               	movlw	0
  4100  0016' D00B               	goto	L11
  4101  0018'                    l3555:
  4102                           
  4103                           ;Lab4.c: 261: LATC = 0b00000101;
  4104  0018' 0E05               	movlw	5
  4105  001A' D009               	goto	L11
  4106  001C'                    l3557:
  4107                           
  4108                           ;Lab4.c: 264: LATC = 0b00000110;
  4109  001C' 0E06               	movlw	6
  4110  001E' D007               	goto	L11
  4111  0020'                    l3559:
  4112                           
  4113                           ;Lab4.c: 267: LATC = 0b00000011;
  4114  0020' 0E03               	movlw	3
  4115  0022' D005               	goto	L11
  4116  0024'                    l3561:
  4117                           
  4118                           ;Lab4.c: 270: LATC = 0b00000010;
  4119  0024' 0E02               	movlw	2
  4120  0026' D003               	goto	L11
  4121  0028'                    l3565:
  4122                           
  4123                           ;Lab4.c: 276: LATC = 0b00000100;
  4124  0028' 0E04               	movlw	4
  4125  002A' D001               	goto	L11
  4126  002C'                    l3567:
  4127                           
  4128                           ;Lab4.c: 279: LATC = 0b00000111;
  4129  002C' 0E07               	movlw	7
  4130  002E'                    L11:
  4131  002E' 6E8B               	movwf	139,c	;volatile
  4132                           
  4133                           ;Lab4.c: 280: break;
  4134  0030' D021               	goto	l3573
  4135  0032'                    l3571:
  4136  0032' C010' F00D'        	movff	_Color,??_ColorRGB
  4137  0036' C011' F00E'        	movff	_Color+1,??_ColorRGB+1
  4138                           
  4139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4140                           ; Switch size 1, requested type "simple"
  4141                           ; Number of cases is 1, Range of values is 0 to 0
  4142                           ; switch strategies available:
  4143                           ; Name         Instructions Cycles
  4144                           ; simple_byte            4     3 (average)
  4145                           ;	Chosen strategy is simple_byte
  4146  003A' 5000'              	movf	(??_ColorRGB+1)^0,w,c
  4147  003C' 0A00               	xorlw	0	; case 0
  4148  003E' A4D8               	btfss	status,2,c
  4149  0040' D019               	goto	l3573
  4150                           
  4151                           ; Switch size 1, requested type "simple"
  4152                           ; Number of cases is 8, Range of values is 0 to 7
  4153                           ; switch strategies available:
  4154                           ; Name         Instructions Cycles
  4155                           ; simple_byte           25    13 (average)
  4156                           ;	Chosen strategy is simple_byte
  4157  0042' 5000'              	movf	??_ColorRGB^0,w,c
  4158  0044' 0A00               	xorlw	0	; case 0
  4159  0046' B4D8               	btfsc	status,2,c
  4160  0048' D7E5               	goto	l3553
  4161  004A' 0A01               	xorlw	1	; case 1
  4162  004C' B4D8               	btfsc	status,2,c
  4163  004E' D7E4               	goto	l3555
  4164  0050' 0A03               	xorlw	3	; case 2
  4165  0052' B4D8               	btfsc	status,2,c
  4166  0054' D7E3               	goto	l3557
  4167  0056' 0A01               	xorlw	1	; case 3
  4168  0058' B4D8               	btfsc	status,2,c
  4169  005A' D7E2               	goto	l3559
  4170  005C' 0A07               	xorlw	7	; case 4
  4171  005E' B4D8               	btfsc	status,2,c
  4172  0060' D7E1               	goto	l3561
  4173  0062' 0A01               	xorlw	1	; case 5
  4174  0064' B4D8               	btfsc	status,2,c
  4175  0066' D7DA               	goto	l3557
  4176  0068' 0A03               	xorlw	3	; case 6
  4177  006A' B4D8               	btfsc	status,2,c
  4178  006C' D7DD               	goto	l3565
  4179  006E' 0A01               	xorlw	1	; case 7
  4180  0070' B4D8               	btfsc	status,2,c
  4181  0072' D7DC               	goto	l3567
  4182  0074'                    l3573:
  4183                           
  4184                           ;Lab4.c: 284: Color += 1;
  4185  0074' 4A00'              	infsnz	_Color^0,f,c
  4186  0076' 2A00'              	incf	(_Color+1)^0,f,c
  4187  0078' 0012               	return		;funcret
  4188  007A'                    __end_of_ColorRGB:
  4189                           	callstack 0
  4190                           
  4191 ;; *************** function _ISR *****************
  4192 ;; Defined at:
  4193 ;;		line 296 in file "Lab4.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4209 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4210 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4211 ;;Total ram usage:        4 bytes
  4212 ;; Hardware stack levels used: 1
  4213 ;; Hardware stack levels required when called: 4
  4214 ;; This function calls:
  4215 ;;		i2_BorraLCD
  4216 ;;		i2_DireccionaLCD
  4217 ;;		i2_MensajeLCD_Var
  4218 ;; This function is called by:
  4219 ;;		Interrupt level 2
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	intcode
  4224  0000'                    __pintcode:
  4225                           	callstack 0
  4226  0000'                    _ISR:
  4227                           	callstack 21
  4228                           
  4229                           ;incstack = 0
  4230  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4231  0002' ED00' F000'        	call	int_func,f	;refresh shadow registers
  4232                           
  4233                           	psect	intcode_body
  4234  0000'                    __pintcode_body:
  4235                           	callstack 21
  4236  0000'                    int_func:
  4237                           	callstack 21
  4238  0000' 0006               	pop		; remove dummy address from shadow register refresh
  4239  0002' CFF6 F009'         	movff	tblptrl,??_ISR
  4240  0006' CFF7 F00A'         	movff	tblptrh,??_ISR+1
  4241  000A' CFF8 F00B'         	movff	tblptru,??_ISR+2
  4242  000E' CFF5 F00C'         	movff	tablat,??_ISR+3
  4243                           
  4244                           ;Lab4.c: 297: if(TMR0IF==1){
  4245  0012' A4F2               	btfss	4082,2,c	;volatile
  4246  0014' D019               	goto	i2l3125
  4247                           
  4248                           ;Lab4.c: 298: if(!Verificador) Contador = Contador +1;
  4249  0016' 5000'              	movf	_Verificador^0,w,c
  4250  0018' 1000'              	iorwf	(_Verificador+1)^0,w,c
  4251  001A' A4D8               	btfss	status,2,c
  4252  001C' D007               	goto	i2l3119
  4253  001E' 0E01               	movlw	1
  4254  0020' 2400'              	addwf	_Contador^0,w,c
  4255  0022' 6E00'              	movwf	_Contador^0,c
  4256  0024' 0E00               	movlw	0
  4257  0026' 2000'              	addwfc	(_Contador+1)^0,w,c
  4258  0028' 6E00'              	movwf	(_Contador+1)^0,c
  4259  002A' D004               	goto	i2l3121
  4260  002C'                    i2l3119:
  4261                           
  4262                           ;Lab4.c: 299: else Contador = 0;
  4263  002C' 0E00               	movlw	0
  4264  002E' 6E00'              	movwf	(_Contador+1)^0,c
  4265  0030' 0E00               	movlw	0
  4266  0032' 6E00'              	movwf	_Contador^0,c
  4267  0034'                    i2l3121:
  4268                           
  4269                           ;Lab4.c: 300: TMR0IF=0;
  4270  0034' 94F2               	bcf	4082,2,c	;volatile
  4271                           
  4272                           ;Lab4.c: 301: LATE2 = !LATE2;
  4273  0036' B48D               	btfsc	3981,2,c	;volatile
  4274  0038' D002               	goto	i2u343_40
  4275  003A' 848D               	bsf	3981,2,c	;volatile
  4276  003C' D001               	goto	i2u344_45
  4277  003E'                    i2u343_40:
  4278  003E' 948D               	bcf	3981,2,c	;volatile
  4279  0040'                    i2u344_45:
  4280                           
  4281                           ;Lab4.c: 302: TMR0 = 49911;
  4282  0040' 0EC2               	movlw	194
  4283  0042' 6ED7               	movwf	215,c	;volatile
  4284  0044' 0EF7               	movlw	247
  4285  0046' 6ED6               	movwf	214,c	;volatile
  4286  0048'                    i2l3125:
  4287                           
  4288                           ;Lab4.c: 303: };Lab4.c: 305: if(Contador == 20){
  4289  0048' 0E14               	movlw	20
  4290  004A' 1800'              	xorwf	_Contador^0,w,c
  4291  004C' 1000'              	iorwf	(_Contador+1)^0,w,c
  4292  004E' A4D8               	btfss	status,2,c
  4293  0050' D014               	goto	i2l332
  4294                           
  4295                           ;Lab4.c: 306: if(!Verificador){
  4296  0052' 5000'              	movf	_Verificador^0,w,c
  4297  0054' 1000'              	iorwf	(_Verificador+1)^0,w,c
  4298  0056' A4D8               	btfss	status,2,c
  4299  0058' D010               	goto	i2l332
  4300                           
  4301                           ;Lab4.c: 307: LATC7 = !LATC7;
  4302  005A' BE8B               	btfsc	3979,7,c	;volatile
  4303  005C' D002               	goto	i2u347_40
  4304  005E' 8E8B               	bsf	3979,7,c	;volatile
  4305  0060' D001               	goto	i2u348_45
  4306  0062'                    i2u347_40:
  4307  0062' 9E8B               	bcf	3979,7,c	;volatile
  4308  0064'                    i2u348_45:
  4309                           
  4310                           ;Lab4.c: 308: BorraLCD();
  4311  0064' EC00' F000'        	call	i2_BorraLCD	;wreg free
  4312                           
  4313                           ;Lab4.c: 309: DireccionaLCD(0x82);
  4314  0068' 0E82               	movlw	130
  4315  006A' EC00' F000'        	call	i2_DireccionaLCD
  4316                           
  4317                           ;Lab4.c: 310: MensajeLCD_Var("LVP Activado");
  4318  006E' 0E00'              	movlw	low STR_11
  4319  0070' 6E00'              	movwf	i2MensajeLCD_Var@a^0,c
  4320  0072' EC00' F000'        	call	i2_MensajeLCD_Var	;wreg free
  4321  0076' 0003               	sleep		;# 
  4322  0078'                    i2l329:
  4323  0078' D7FF               	goto	i2l329
  4324  007A'                    i2l332:
  4325  007A' C00C' FFF5         	movff	??_ISR+3,tablat
  4326  007E' C00B' FFF8         	movff	??_ISR+2,tblptru
  4327  0082' C00A' FFF7         	movff	??_ISR+1,tblptrh
  4328  0086' C009' FFF6         	movff	??_ISR,tblptrl
  4329  008A' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4330  008C' 0011               	retfie		f
  4331  008E'                    __end_of_ISR:
  4332                           	callstack 0
  4333                           
  4334 ;; *************** function i2_MensajeLCD_Var *****************
  4335 ;; Defined at:
  4336 ;;		line 261 in file "LibLCDXC8.h"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  a               1    5[COMRAM] PTR unsigned char 
  4339 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4340 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4341 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4342 ;;		 -> STR_1(8), 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  i               2    7[COMRAM] int 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4354 ;;      Params:         1       0       0       0       0       0       0       0       0
  4355 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4356 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4357 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4358 ;;Total ram usage:        4 bytes
  4359 ;; Hardware stack levels used: 1
  4360 ;; Hardware stack levels required when called: 3
  4361 ;; This function calls:
  4362 ;;		i2_EscribeLCD_c
  4363 ;;		i2_strlen
  4364 ;; This function is called by:
  4365 ;;		_ISR
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text22
  4370  0000'                    __ptext22:
  4371                           	callstack 0
  4372  0000'                    i2_MensajeLCD_Var:
  4373                           	callstack 21
  4374                           
  4375                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  4376                           
  4377                           ;incstack = 0
  4378  0000' 0E00               	movlw	0
  4379  0002' 6E00'              	movwf	(i2MensajeLCD_Var@i+1)^0,c
  4380  0004' 0E00               	movlw	0
  4381  0006' 6E00'              	movwf	i2MensajeLCD_Var@i^0,c
  4382  0008' D019               	goto	i2l2749
  4383  000A'                    i2l2741:
  4384                           
  4385                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  4386  000A' 5000'              	movf	i2MensajeLCD_Var@a^0,w,c
  4387  000C' 2400'              	addwf	i2MensajeLCD_Var@i^0,w,c
  4388  000E' 6E00'              	movwf	??i2_MensajeLCD_Var^0,c
  4389  0010' C006' FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4390  0014'                    	if	1	;There is more than 1 active tblptr byte
  4391  0014' 0E00'              	movlw	high __smallconst
  4392  0016' 6EF7               	movwf	tblptrh,c
  4393  0018'                    	endif
  4394  0018'                    	if	0	;tblptru may be non-zero
  4395  0018'                    	endif
  4396  0018'                    	if	0	;tblptru may be non-zero
  4397  0018'                    	endif
  4398  0018' 0008               	tblrd		*
  4399  001A' 50F5               	movf	tablat,w,c
  4400  001C' 0900               	iorlw	0
  4401  001E' B4D8               	btfsc	status,2,c
  4402  0020' 0012               	return	
  4403                           
  4404                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  4405  0022' 5000'              	movf	i2MensajeLCD_Var@a^0,w,c
  4406  0024' 2400'              	addwf	i2MensajeLCD_Var@i^0,w,c
  4407  0026' 6E00'              	movwf	??i2_MensajeLCD_Var^0,c
  4408  0028' C006' FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4409  002C'                    	if	1	;There is more than 1 active tblptr byte
  4410  002C' 0E00'              	movlw	high __smallconst
  4411  002E' 6EF7               	movwf	tblptrh,c
  4412  0030'                    	endif
  4413  0030'                    	if	0	;tblptru may be non-zero
  4414  0030'                    	endif
  4415  0030'                    	if	0	;tblptru may be non-zero
  4416  0030'                    	endif
  4417  0030' 0008               	tblrd		*
  4418  0032' 50F5               	movf	tablat,w,c
  4419  0034' EC00' F000'        	call	i2_EscribeLCD_c
  4420  0038' 4A00'              	infsnz	i2MensajeLCD_Var@i^0,f,c
  4421  003A' 2A00'              	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  4422  003C'                    i2l2749:
  4423  003C' C005' F000'        	movff	i2MensajeLCD_Var@a,i2strlen@s
  4424  0040' EC00' F000'        	call	i2_strlen	;wreg free
  4425  0044' 5000'              	movf	?i2_strlen^0,w,c
  4426  0046' 5C00'              	subwf	i2MensajeLCD_Var@i^0,w,c
  4427  0048' 5000'              	movf	(?i2_strlen+1)^0,w,c
  4428  004A' 5800'              	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  4429  004C' B0D8               	btfsc	status,0,c
  4430  004E' 0012               	return	
  4431  0050' D7DC               	goto	i2l2741
  4432  0052'                    __end_ofi2_MensajeLCD_Var:
  4433                           	callstack 0
  4434                           
  4435 ;; *************** function i2_strlen *****************
  4436 ;; Defined at:
  4437 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  s               1    0[COMRAM] PTR const unsigned char 
  4440 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4441 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4442 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4443 ;;		 -> STR_1(8), 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  4446 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4447 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4448 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4449 ;;		 -> STR_1(8), 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  2    0[COMRAM] unsigned int 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4459 ;;      Params:         2       0       0       0       0       0       0       0       0
  4460 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4462 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4463 ;;Total ram usage:        3 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		i2_MensajeLCD_Var
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text23
  4473  0000'                    __ptext23:
  4474                           	callstack 0
  4475  0000'                    i2_strlen:
  4476                           	callstack 23
  4477                           
  4478                           ;incstack = 0
  4479  0000' C000' F002'        	movff	i2strlen@s,i2strlen@cp
  4480  0004' D001               	goto	i2l2387
  4481  0006'                    i2l2385:
  4482  0006' 2A00'              	incf	i2strlen@cp^0,f,c
  4483  0008'                    i2l2387:
  4484  0008' C002' FFF6         	movff	i2strlen@cp,tblptrl
  4485  000C'                    	if	1	;There is more than 1 active tblptr byte
  4486  000C' 0E00'              	movlw	high __smallconst
  4487  000E' 6EF7               	movwf	tblptrh,c
  4488  0010'                    	endif
  4489  0010'                    	if	0	;tblptru may be non-zero
  4490  0010'                    	endif
  4491  0010'                    	if	0	;tblptru may be non-zero
  4492  0010'                    	endif
  4493  0010' 0008               	tblrd		*
  4494  0012' 50F5               	movf	tablat,w,c
  4495  0014' 0900               	iorlw	0
  4496  0016' A4D8               	btfss	status,2,c
  4497  0018' D7F6               	goto	i2l2385
  4498  001A' 5000'              	movf	i2strlen@s^0,w,c
  4499  001C' 5C00'              	subwf	i2strlen@cp^0,w,c
  4500  001E' 6E00'              	movwf	?i2_strlen^0,c
  4501  0020' 6A00'              	clrf	(?i2_strlen+1)^0,c
  4502  0022' BE00'              	btfsc	?i2_strlen^0,7,c
  4503  0024' 0600'              	decf	(?i2_strlen+1)^0,f,c
  4504  0026' 0012               	return		;funcret
  4505  0028'                    __end_ofi2_strlen:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function i2_EscribeLCD_c *****************
  4509 ;; Defined at:
  4510 ;;		line 117 in file "LibLCDXC8.h"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  a               1    wreg     unsigned char 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  a               1    4[COMRAM] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0
  4525 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4527 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4528 ;;Total ram usage:        1 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 2
  4531 ;; This function calls:
  4532 ;;		i2_EnviaDato
  4533 ;;		i2_HabilitaLCD
  4534 ;;		i2_RetardoLCD
  4535 ;; This function is called by:
  4536 ;;		i2_MensajeLCD_Var
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text24
  4541  0000'                    __ptext24:
  4542                           	callstack 0
  4543  0000'                    i2_EscribeLCD_c:
  4544                           	callstack 21
  4545                           
  4546                           ;incstack = 0
  4547                           ;i2EscribeLCD_c@a stored from wreg
  4548  0000' 6E00'              	movwf	i2EscribeLCD_c@a^0,c
  4549                           
  4550                           ;LibLCDXC8.h: 121: LATE0=1;
  4551  0002' 808D               	bsf	3981,0,c	;volatile
  4552                           
  4553                           ;LibLCDXC8.h: 122: EnviaDato(a);
  4554  0004' 5000'              	movf	i2EscribeLCD_c@a^0,w,c
  4555  0006' EC00' F000'        	call	i2_EnviaDato
  4556                           
  4557                           ;LibLCDXC8.h: 123: HabilitaLCD();
  4558  000A' EC00' F000'        	call	i2_HabilitaLCD	;wreg free
  4559                           
  4560                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  4561  000E' 0E04               	movlw	4
  4562  0010' EC00' F000'        	call	i2_RetardoLCD
  4563  0014' 0012               	return		;funcret
  4564  0016'                    __end_ofi2_EscribeLCD_c:
  4565                           	callstack 0
  4566                           
  4567 ;; *************** function i2_DireccionaLCD *****************
  4568 ;; Defined at:
  4569 ;;		line 273 in file "LibLCDXC8.h"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  a               1    wreg     unsigned char 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  a               1    4[COMRAM] unsigned char 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0
  4584 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4586 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4587 ;;Total ram usage:        1 bytes
  4588 ;; Hardware stack levels used: 1
  4589 ;; Hardware stack levels required when called: 2
  4590 ;; This function calls:
  4591 ;;		i2_EnviaDato
  4592 ;;		i2_HabilitaLCD
  4593 ;;		i2_RetardoLCD
  4594 ;; This function is called by:
  4595 ;;		_ISR
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text25
  4600  0000'                    __ptext25:
  4601                           	callstack 0
  4602  0000'                    i2_DireccionaLCD:
  4603                           	callstack 22
  4604                           
  4605                           ;incstack = 0
  4606                           ;i2DireccionaLCD@a stored from wreg
  4607  0000' 6E00'              	movwf	i2DireccionaLCD@a^0,c
  4608                           
  4609                           ;LibLCDXC8.h: 276: LATE0=0;
  4610  0002' 908D               	bcf	3981,0,c	;volatile
  4611                           
  4612                           ;LibLCDXC8.h: 277: EnviaDato(a);
  4613  0004' 5000'              	movf	i2DireccionaLCD@a^0,w,c
  4614  0006' EC00' F000'        	call	i2_EnviaDato
  4615                           
  4616                           ;LibLCDXC8.h: 278: HabilitaLCD();
  4617  000A' EC00' F000'        	call	i2_HabilitaLCD	;wreg free
  4618                           
  4619                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  4620  000E' 0E04               	movlw	4
  4621  0010' EC00' F000'        	call	i2_RetardoLCD
  4622  0014' 0012               	return		;funcret
  4623  0016'                    __end_ofi2_DireccionaLCD:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function i2_BorraLCD *****************
  4627 ;; Defined at:
  4628 ;;		line 103 in file "LibLCDXC8.h"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4642 ;;      Params:         0       0       0       0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 2
  4649 ;; This function calls:
  4650 ;;		i2_EnviaDato
  4651 ;;		i2_HabilitaLCD
  4652 ;;		i2_RetardoLCD
  4653 ;; This function is called by:
  4654 ;;		_ISR
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text26
  4659  0000'                    __ptext26:
  4660                           	callstack 0
  4661  0000'                    i2_BorraLCD:
  4662                           	callstack 22
  4663                           
  4664                           ;LibLCDXC8.h: 105: LATE0=0;
  4665                           
  4666                           ;incstack = 0
  4667  0000' 908D               	bcf	3981,0,c	;volatile
  4668                           
  4669                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  4670  0002' 0E01               	movlw	1
  4671  0004' EC00' F000'        	call	i2_EnviaDato
  4672                           
  4673                           ;LibLCDXC8.h: 107: HabilitaLCD();
  4674  0008' EC00' F000'        	call	i2_HabilitaLCD	;wreg free
  4675                           
  4676                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  4677  000C' 0E02               	movlw	2
  4678  000E' EC00' F000'        	call	i2_RetardoLCD
  4679  0012' 0012               	return		;funcret
  4680  0014'                    __end_ofi2_BorraLCD:
  4681                           	callstack 0
  4682                           
  4683 ;; *************** function i2_EnviaDato *****************
  4684 ;; Defined at:
  4685 ;;		line 52 in file "LibLCDXC8.h"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  a               1    wreg     unsigned char 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;  a               1    3[COMRAM] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      void 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4699 ;;      Params:         0       0       0       0       0       0       0       0       0
  4700 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4701 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4702 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4703 ;;Total ram usage:        2 bytes
  4704 ;; Hardware stack levels used: 1
  4705 ;; Hardware stack levels required when called: 1
  4706 ;; This function calls:
  4707 ;;		i2_HabilitaLCD
  4708 ;;		i2_RetardoLCD
  4709 ;; This function is called by:
  4710 ;;		i2_BorraLCD
  4711 ;;		i2_EscribeLCD_c
  4712 ;;		i2_DireccionaLCD
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text27
  4717  0000'                    __ptext27:
  4718                           	callstack 0
  4719  0000'                    i2_EnviaDato:
  4720                           	callstack 21
  4721                           
  4722                           ;incstack = 0
  4723                           ;i2EnviaDato@a stored from wreg
  4724  0000' 6E00'              	movwf	i2EnviaDato@a^0,c
  4725                           
  4726                           ;LibLCDXC8.h: 53: if(interfaz==4){
  4727  0002' 0E04               	movlw	4
  4728  0004' 1800'              	xorwf	_interfaz^0,w,c
  4729  0006' A4D8               	btfss	status,2,c
  4730  0008' D017               	goto	i2l2209
  4731                           
  4732                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4733  000A' C003' F002'        	movff	i2EnviaDato@a,??i2_EnviaDato
  4734  000E' 0EF0               	movlw	240
  4735  0010' 1600'              	andwf	??i2_EnviaDato^0,f,c
  4736  0012' 508C               	movf	140,w,c	;volatile
  4737  0014' 0B0F               	andlw	15
  4738  0016' 1000'              	iorwf	??i2_EnviaDato^0,w,c
  4739  0018' 6E8C               	movwf	140,c	;volatile
  4740                           
  4741                           ;LibLCDXC8.h: 55: HabilitaLCD();
  4742  001A' EC00' F000'        	call	i2_HabilitaLCD	;wreg free
  4743                           
  4744                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  4745  001E' 0E01               	movlw	1
  4746  0020' EC00' F000'        	call	i2_RetardoLCD
  4747                           
  4748                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  4749  0024' C003' F002'        	movff	i2EnviaDato@a,??i2_EnviaDato
  4750  0028' 3A00'              	swapf	??i2_EnviaDato^0,f,c
  4751  002A' 0EF0               	movlw	240
  4752  002C' 1600'              	andwf	??i2_EnviaDato^0,f,c
  4753  002E' 508C               	movf	140,w,c	;volatile
  4754  0030' 0B0F               	andlw	15
  4755  0032' 1000'              	iorwf	??i2_EnviaDato^0,w,c
  4756  0034' 6E8C               	movwf	140,c	;volatile
  4757                           
  4758                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  4759  0036' 0012               	return	
  4760  0038'                    i2l2209:
  4761  0038' 0E08               	movlw	8
  4762  003A' 1800'              	xorwf	_interfaz^0,w,c
  4763  003C' A4D8               	btfss	status,2,c
  4764  003E' 0012               	return	
  4765                           
  4766                           ;LibLCDXC8.h: 59: LATD=a;
  4767  0040' C003' FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4768  0044' 0012               	return		;funcret
  4769  0046'                    __end_ofi2_EnviaDato:
  4770                           	callstack 0
  4771                           
  4772 ;; *************** function i2_RetardoLCD *****************
  4773 ;; Defined at:
  4774 ;;		line 309 in file "LibLCDXC8.h"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  a               1    wreg     unsigned char 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  a               1    1[COMRAM] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4788 ;;      Params:         0       0       0       0       0       0       0       0       0
  4789 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4790 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4791 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4792 ;;Total ram usage:        2 bytes
  4793 ;; Hardware stack levels used: 1
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		i2_EnviaDato
  4798 ;;		i2_BorraLCD
  4799 ;;		i2_EscribeLCD_c
  4800 ;;		i2_DireccionaLCD
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text28
  4805  0000'                    __ptext28:
  4806                           	callstack 0
  4807  0000'                    i2_RetardoLCD:
  4808                           	callstack 22
  4809                           
  4810                           ;incstack = 0
  4811                           ;i2RetardoLCD@a stored from wreg
  4812  0000' 6E00'              	movwf	i2RetardoLCD@a^0,c
  4813                           
  4814                           ;LibLCDXC8.h: 310: switch(a){
  4815  0002' D01B               	goto	i2l2179
  4816  0004'                    i2l2169:
  4817  0004' 0E05               	movlw	5
  4818  0006' 6E00'              	movwf	??i2_RetardoLCD^0,c
  4819  0008' 0EDE               	movlw	222
  4820  000A'                    i2u520_47:
  4821  000A' 2EE8               	decfsz	wreg,f,c
  4822  000C' D7FE               	bra	i2u520_47
  4823  000E' 2E00'              	decfsz	??i2_RetardoLCD^0,f,c
  4824  0010' D7FC               	bra	i2u520_47
  4825                           
  4826                           ;LibLCDXC8.h: 313: break;
  4827  0012' 0012               	return	
  4828  0014'                    i2l2171:
  4829  0014' 0E53               	movlw	83
  4830  0016'                    i2u521_47:
  4831  0016' 2EE8               	decfsz	wreg,f,c
  4832  0018' D7FE               	bra	i2u521_47
  4833  001A' F000               	nop	
  4834                           
  4835                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4836  001C' 0E35               	movlw	53
  4837  001E'                    i2u522_47:
  4838  001E' 2EE8               	decfsz	wreg,f,c
  4839  0020' D7FE               	bra	i2u522_47
  4840  0022' F000               	nop	
  4841                           
  4842                           ;LibLCDXC8.h: 317: break;
  4843  0024' 0012               	return	
  4844  0026'                    i2l2173:
  4845  0026' 0E08               	movlw	8
  4846  0028'                    i2u523_47:
  4847  0028' 2EE8               	decfsz	wreg,f,c
  4848  002A' D7FE               	bra	i2u523_47
  4849  002C' F000               	nop	
  4850                           
  4851                           ;LibLCDXC8.h: 320: break;
  4852  002E' 0012               	return	
  4853  0030'                    i2l2175:
  4854  0030' 0E03               	movlw	3
  4855  0032'                    i2u524_47:
  4856  0032' 2EE8               	decfsz	wreg,f,c
  4857  0034' D7FE               	bra	i2u524_47
  4858  0036' F000               	nop	
  4859                           
  4860                           ;LibLCDXC8.h: 323: break;
  4861  0038' 0012               	return	
  4862  003A'                    i2l2179:
  4863  003A' 5000'              	movf	i2RetardoLCD@a^0,w,c
  4864                           
  4865                           ; Switch size 1, requested type "simple"
  4866                           ; Number of cases is 4, Range of values is 1 to 4
  4867                           ; switch strategies available:
  4868                           ; Name         Instructions Cycles
  4869                           ; simple_byte           13     7 (average)
  4870                           ;	Chosen strategy is simple_byte
  4871  003C' 0A01               	xorlw	1	; case 1
  4872  003E' B4D8               	btfsc	status,2,c
  4873  0040' D7E1               	goto	i2l2169
  4874  0042' 0A03               	xorlw	3	; case 2
  4875  0044' B4D8               	btfsc	status,2,c
  4876  0046' D7E6               	goto	i2l2171
  4877  0048' 0A01               	xorlw	1	; case 3
  4878  004A' B4D8               	btfsc	status,2,c
  4879  004C' D7EC               	goto	i2l2173
  4880  004E' 0A07               	xorlw	7	; case 4
  4881  0050' A4D8               	btfss	status,2,c
  4882  0052' 0012               	return	
  4883  0054' D7ED               	goto	i2l2175
  4884  0056'                    __end_ofi2_RetardoLCD:
  4885                           	callstack 0
  4886                           
  4887 ;; *************** function i2_HabilitaLCD *****************
  4888 ;; Defined at:
  4889 ;;		line 96 in file "LibLCDXC8.h"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;		None
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;		None
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      void 
  4896 ;; Registers used:
  4897 ;;		wreg
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4903 ;;      Params:         0       0       0       0       0       0       0       0       0
  4904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4906 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4907 ;;Total ram usage:        0 bytes
  4908 ;; Hardware stack levels used: 1
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		i2_EnviaDato
  4913 ;;		i2_BorraLCD
  4914 ;;		i2_EscribeLCD_c
  4915 ;;		i2_DireccionaLCD
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text29
  4920  0000'                    __ptext29:
  4921                           	callstack 0
  4922  0000'                    i2_HabilitaLCD:
  4923                           	callstack 22
  4924                           
  4925                           ;LibLCDXC8.h: 98: LATE1=1;
  4926                           
  4927                           ;incstack = 0
  4928  0000' 828D               	bsf	3981,1,c	;volatile
  4929                           
  4930                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4931  0002' 0E03               	movlw	3
  4932  0004'                    i2u525_47:
  4933  0004' 2EE8               	decfsz	wreg,f,c
  4934  0006' D7FE               	bra	i2u525_47
  4935  0008' F000               	nop	
  4936                           
  4937                           ;LibLCDXC8.h: 101: LATE1=0;
  4938  000A' 928D               	bcf	3981,1,c	;volatile
  4939  000C' 0012               	return		;funcret
  4940  000E'                    __end_ofi2_HabilitaLCD:
  4941                           	callstack 0
  4942                           
  4943                           	psect	rparam
  4944  0000                     
  4945                           	psect	temp
  4946  0000'                    btemp:
  4947                           	callstack 0
  4948  0000'                    	ds	1
  4949  0000                     int$flags	set	btemp
  4950  0000                     wtemp8	set	btemp+1
  4951  0000                     ttemp5	set	btemp+1
  4952  0000                     ttemp6	set	btemp+4
  4953  0000                     ttemp7	set	btemp+8
  4954                           
  4955                           	psect	idloc
  4956                           
  4957                           ;Config register IDLOC0 @ 0x200000
  4958                           ;	unspecified, using default values
  4959  200000                     	org	2097152
  4960  200000  FF                 	db	255
  4961                           
  4962                           ;Config register IDLOC1 @ 0x200001
  4963                           ;	unspecified, using default values
  4964  200001                     	org	2097153
  4965  200001  FF                 	db	255
  4966                           
  4967                           ;Config register IDLOC2 @ 0x200002
  4968                           ;	unspecified, using default values
  4969  200002                     	org	2097154
  4970  200002  FF                 	db	255
  4971                           
  4972                           ;Config register IDLOC3 @ 0x200003
  4973                           ;	unspecified, using default values
  4974  200003                     	org	2097155
  4975  200003  FF                 	db	255
  4976                           
  4977                           ;Config register IDLOC4 @ 0x200004
  4978                           ;	unspecified, using default values
  4979  200004                     	org	2097156
  4980  200004  FF                 	db	255
  4981                           
  4982                           ;Config register IDLOC5 @ 0x200005
  4983                           ;	unspecified, using default values
  4984  200005                     	org	2097157
  4985  200005  FF                 	db	255
  4986                           
  4987                           ;Config register IDLOC6 @ 0x200006
  4988                           ;	unspecified, using default values
  4989  200006                     	org	2097158
  4990  200006  FF                 	db	255
  4991                           
  4992                           ;Config register IDLOC7 @ 0x200007
  4993                           ;	unspecified, using default values
  4994  200007                     	org	2097159
  4995  200007  FF                 	db	255
  4996                           
  4997                           	psect	config
  4998                           
  4999                           ;Config register CONFIG1L @ 0x300000
  5000                           ;	unspecified, using default values
  5001                           ;	PLL Prescaler Selection bits
  5002                           ;	PLLDIV = 0x0, unprogrammed default
  5003                           ;	System Clock Postscaler Selection bits
  5004                           ;	CPUDIV = 0x0, unprogrammed default
  5005                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5006                           ;	USBDIV = 0x0, unprogrammed default
  5007  300000                     	org	3145728
  5008  300000  00                 	db	0
  5009                           
  5010                           ;Config register CONFIG1H @ 0x300001
  5011                           ;	Oscillator Selection bits
  5012                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5013                           ;	Fail-Safe Clock Monitor Enable bit
  5014                           ;	FCMEN = 0x0, unprogrammed default
  5015                           ;	Internal/External Oscillator Switchover bit
  5016                           ;	IESO = 0x0, unprogrammed default
  5017  300001                     	org	3145729
  5018  300001  09                 	db	9
  5019                           
  5020                           ;Config register CONFIG2L @ 0x300002
  5021                           ;	unspecified, using default values
  5022                           ;	Power-up Timer Enable bit
  5023                           ;	PWRT = 0x1, unprogrammed default
  5024                           ;	Brown-out Reset Enable bits
  5025                           ;	BOR = 0x3, unprogrammed default
  5026                           ;	Brown-out Reset Voltage bits
  5027                           ;	BORV = 0x3, unprogrammed default
  5028                           ;	USB Voltage Regulator Enable bit
  5029                           ;	VREGEN = 0x0, unprogrammed default
  5030  300002                     	org	3145730
  5031  300002  1F                 	db	31
  5032                           
  5033                           ;Config register CONFIG2H @ 0x300003
  5034                           ;	Watchdog Timer Enable bit
  5035                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5036                           ;	Watchdog Timer Postscale Select bits
  5037                           ;	WDTPS = 0xF, unprogrammed default
  5038  300003                     	org	3145731
  5039  300003  1E                 	db	30
  5040                           
  5041                           ; Padding undefined space
  5042  300004                     	org	3145732
  5043  300004  FF                 	db	255
  5044                           
  5045                           ;Config register CONFIG3H @ 0x300005
  5046                           ;	CCP2 MUX bit
  5047                           ;	CCP2MX = 0x1, unprogrammed default
  5048                           ;	PORTB A/D Enable bit
  5049                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5050                           ;	Low-Power Timer 1 Oscillator Enable bit
  5051                           ;	LPT1OSC = 0x0, unprogrammed default
  5052                           ;	MCLR Pin Enable bit
  5053                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5054  300005                     	org	3145733
  5055  300005  81                 	db	129
  5056                           
  5057                           ;Config register CONFIG4L @ 0x300006
  5058                           ;	Stack Full/Underflow Reset Enable bit
  5059                           ;	STVREN = 0x1, unprogrammed default
  5060                           ;	Single-Supply ICSP Enable bit
  5061                           ;	LVP = OFF, Single-Supply ICSP disabled
  5062                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5063                           ;	ICPRT = 0x0, unprogrammed default
  5064                           ;	Extended Instruction Set Enable bit
  5065                           ;	XINST = 0x0, unprogrammed default
  5066                           ;	Background Debugger Enable bit
  5067                           ;	DEBUG = 0x1, unprogrammed default
  5068  300006                     	org	3145734
  5069  300006  81                 	db	129
  5070                           
  5071                           ; Padding undefined space
  5072  300007                     	org	3145735
  5073  300007  FF                 	db	255
  5074                           
  5075                           ;Config register CONFIG5L @ 0x300008
  5076                           ;	unspecified, using default values
  5077                           ;	Code Protection bit
  5078                           ;	CP0 = 0x1, unprogrammed default
  5079                           ;	Code Protection bit
  5080                           ;	CP1 = 0x1, unprogrammed default
  5081                           ;	Code Protection bit
  5082                           ;	CP2 = 0x1, unprogrammed default
  5083                           ;	Code Protection bit
  5084                           ;	CP3 = 0x1, unprogrammed default
  5085  300008                     	org	3145736
  5086  300008  0F                 	db	15
  5087                           
  5088                           ;Config register CONFIG5H @ 0x300009
  5089                           ;	unspecified, using default values
  5090                           ;	Boot Block Code Protection bit
  5091                           ;	CPB = 0x1, unprogrammed default
  5092                           ;	Data EEPROM Code Protection bit
  5093                           ;	CPD = 0x1, unprogrammed default
  5094  300009                     	org	3145737
  5095  300009  C0                 	db	192
  5096                           
  5097                           ;Config register CONFIG6L @ 0x30000A
  5098                           ;	unspecified, using default values
  5099                           ;	Write Protection bit
  5100                           ;	WRT0 = 0x1, unprogrammed default
  5101                           ;	Write Protection bit
  5102                           ;	WRT1 = 0x1, unprogrammed default
  5103                           ;	Write Protection bit
  5104                           ;	WRT2 = 0x1, unprogrammed default
  5105                           ;	Write Protection bit
  5106                           ;	WRT3 = 0x1, unprogrammed default
  5107  30000A                     	org	3145738
  5108  30000A  0F                 	db	15
  5109                           
  5110                           ;Config register CONFIG6H @ 0x30000B
  5111                           ;	unspecified, using default values
  5112                           ;	Configuration Register Write Protection bit
  5113                           ;	WRTC = 0x1, unprogrammed default
  5114                           ;	Boot Block Write Protection bit
  5115                           ;	WRTB = 0x1, unprogrammed default
  5116                           ;	Data EEPROM Write Protection bit
  5117                           ;	WRTD = 0x1, unprogrammed default
  5118  30000B                     	org	3145739
  5119  30000B  E0                 	db	224
  5120                           
  5121                           ;Config register CONFIG7L @ 0x30000C
  5122                           ;	unspecified, using default values
  5123                           ;	Table Read Protection bit
  5124                           ;	EBTR0 = 0x1, unprogrammed default
  5125                           ;	Table Read Protection bit
  5126                           ;	EBTR1 = 0x1, unprogrammed default
  5127                           ;	Table Read Protection bit
  5128                           ;	EBTR2 = 0x1, unprogrammed default
  5129                           ;	Table Read Protection bit
  5130                           ;	EBTR3 = 0x1, unprogrammed default
  5131  30000C                     	org	3145740
  5132  30000C  0F                 	db	15
  5133                           
  5134                           ;Config register CONFIG7H @ 0x30000D
  5135                           ;	unspecified, using default values
  5136                           ;	Boot Block Table Read Protection bit
  5137                           ;	EBTRB = 0x1, unprogrammed default
  5138  30000D                     	org	3145741
  5139  30000D  40                 	db	64
  5140                           tosu	equ	0xFFF
  5141                           tosh	equ	0xFFE
  5142                           tosl	equ	0xFFD
  5143                           stkptr	equ	0xFFC
  5144                           pclatu	equ	0xFFB
  5145                           pclath	equ	0xFFA
  5146                           pcl	equ	0xFF9
  5147                           tblptru	equ	0xFF8
  5148                           tblptrh	equ	0xFF7
  5149                           tblptrl	equ	0xFF6
  5150                           tablat	equ	0xFF5
  5151                           prodh	equ	0xFF4
  5152                           prodl	equ	0xFF3
  5153                           indf0	equ	0xFEF
  5154                           postinc0	equ	0xFEE
  5155                           postdec0	equ	0xFED
  5156                           preinc0	equ	0xFEC
  5157                           plusw0	equ	0xFEB
  5158                           fsr0h	equ	0xFEA
  5159                           fsr0l	equ	0xFE9
  5160                           wreg	equ	0xFE8
  5161                           indf1	equ	0xFE7
  5162                           postinc1	equ	0xFE6
  5163                           postdec1	equ	0xFE5
  5164                           preinc1	equ	0xFE4
  5165                           plusw1	equ	0xFE3
  5166                           fsr1h	equ	0xFE2
  5167                           fsr1l	equ	0xFE1
  5168                           bsr	equ	0xFE0
  5169                           indf2	equ	0xFDF
  5170                           postinc2	equ	0xFDE
  5171                           postdec2	equ	0xFDD
  5172                           preinc2	equ	0xFDC
  5173                           plusw2	equ	0xFDB
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    0
    Data        20
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      81
    BANK0           160     13      21
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Imprimir_Resultado
    _factorial_function->___lmul
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _Imprimir_Resultado->___aldiv
    ___lwdiv->___wmul
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_Imprimir_Resultado

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   17620
                                             35 COMRAM     2     2      0
                                             11 BANK0      2     2      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                 _Imprimir_Resultado
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
                      _NuevoCaracter
                             ___lmul
                            ___lwdiv
                             ___wmul
                 _factorial_function
 ---------------------------------------------------------------------------------
 (1) _factorial_function                                   8     4      4    2265
                                             25 COMRAM     8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        3     0      3       0
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     310
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     155
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Resultado                                  19    15      4    8989
                                             27 COMRAM     8     4      4
                                              0 BANK0     11    11      0
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     772
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     781
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2076
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     613
                                             13 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             13 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1    1733
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     220
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0     124
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      31
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      93
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0     650
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Var                                     4     3      1     408
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Imprimir_Resultado
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
       _EscribeLCD_c
       _strlen
     ___aldiv
     ___almod
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
   _NuevoCaracter
   ___lmul
   ___lwdiv
   ___wmul
   _factorial_function
     ___lmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_DireccionaLCD
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D      15       5       13.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      51       1       86.2%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      66      29        0.0%
DATA                 0      0      66       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 18 22:58:45 2023

                          _a 00000A                            _b 000008                            _i 000012  
                          _m 00001C             i2DireccionaLCD@a 000004                           _PD 007E82  
                         _TO 007E83                   EnviaDato@a 000010          ___wmul@multiplicand 00000F  
              ??_LeerTeclado 00000D                _InicializaLCD 000000                          l261 000032  
                        l183 000050                          l280 000076                          l273 000066  
                        l267 00003A                          l292 0000AE                          l284 00008A  
                        l293 0000C6                          l269 000042                          l294 0000B6  
                        l286 000092                          l278 00006E                          l296 0000BE  
                        l288 00009A                          l843 000048                          l853 000038  
                        _GIE 007F97                          _RB4 007C0C                          _RB5 007C0D  
                        _RB6 007C0E                          _RB7 007C0F                          _ISR 000000  
                        _POR 007E81                          wreg 000FE8                         ?_ISR 000000  
           ??i2_EscribeLCD_c 000004                         l3201 00000A                         l4011 0005BC  
                       l4003 000572                         l4021 0005FE                         l3151 000026  
                       l3311 00009A                         l3303 000076                         l3231 000024  
                       l4023 000604                         l4015 0005CA                         l4007 000588  
                       l3153 000030                         l3209 00003C                         l3321 000016  
                       l4041 0006A2                         l4025 00061A                         l3147 000004  
                       l3243 00001C                         l3307 000084                         l3227 000010  
                       l3323 00001E                         l3403 000086                         l4035 00063A  
                       l4019 0005DC                         l4043 0006A8                         l3149 000014  
                       l3157 00003A                         l3333 00003E                         l3341 00000E  
                       l3183 000006                         l3255 000056                         l3271 0000A4  
                       l3343 000016                         l3431 000028                         l3169 000038  
                       l3185 000008                         l3257 000062                         l3249 000034  
                       l3275 0000BA                         l3267 000096                         l3291 000030  
                       l3363 000012                         l3349 00002E                         l3621 000162  
                       l3373 000030                         l3295 000042                         l3287 00001C  
                       l3607 0000FE                         l3383 00004E                         l3519 0000A2  
                       l3455 00004A                         l3561 000024                         l3553 000014  
                       l3297 00004E                         l3641 0001CE                         l3633 0001A4  
                       l3721 000060                         l3555 000018                         l3571 000032  
                       l3491 00007E                         l3467 00005C                         l3565 000028  
                       l3557 00001C                         l3573 000074                         l3637 0001C0  
                       l3813 0001E2                         l3567 00002C                         l3559 000020  
                       l3663 000300                         l3655 0002AA                         l3647 00020C  
                       l3591 000058                         l3823 000200                         l3751 000112  
                       l3735 0000B6                         l3673 000330                         l3665 000306  
                       l3931 0003B6                         l3907 000356                         l3851 000270  
                       l3771 00015E                         l3669 000314                         l3685 00001A  
                       l3749 00010C                         l3679 000352                         l3599 0000BC  
                       l3689 000056                         l3873 0002CE                         l3849 00026A  
                       l3777 000176                         l3971 00048E                         l3955 00040C  
                       l3787 000194                         l3981 0004D6                         l3869 0002BC  
                       l3967 000440                         l3977 0004B8                         l3969 000458  
                       l3995 000550                         l3899 00033C                         l3989 00053C  
                       STR_1 000057                         STR_2 00005F                         STR_3 000010  
                       STR_4 000004                         STR_5 000044                         STR_6 000004  
                       STR_7 000001                         STR_8 000004                         STR_9 000039  
                       _LATB 000F8A                         _LATC 000F8B                         _LATD 000F8C  
                       u4100 000112                         u4110 000124                         u4120 000136  
                       u4210 0002F6                         u4140 000176                         u4150 000188  
                       u4160 00019A                         u4320 00012A                         u4090 0000FC  
                       u4250 000066                         u5107 00006A                         u4180 000242  
                       u5117 0000A6                         u4510 00024E                         u5127 000168  
                       u3720 00001A                         u4440 000218                         u5137 0006AE  
                       u3650 000052                         u4610 0002B0                         u5147 00000A  
                       u4380 0001AC                         u5157 000016                         u3750 000012  
                       u3590 000066                         u3830 00000E                         u4710 00031E  
                       u5167 00001E                         u5177 000028                         u3690 000022  
                       u4810 000398                         u5187 000032                         u5197 000004  
                       u4920 0003FE                         _RBPU 007F8F                         _TMR0 000FD6  
             ??_EscribeLCD_c 000011                         _main 000000                         fsr1l 000FE1  
                       btemp 000000                         prodh 000FF4                         prodl 000FF3  
                       start 000000*                ___param_bank 000000                        ??_ISR 000009  
            i2_DireccionaLCD 000000               ?_InicializaLCD 000000              __end_of___aldiv 0000CC  
            __end_of___almod 0000AC                        ?_main 000000                        STR_10 000004  
                      STR_11 00002C                        STR_12 00004E                        STR_13 00001E  
              EscribeLCD_c@a 000011                        _T0CON 000FD5                        _LATE0 007C68  
                      _LATE1 007C69                        _LATE2 007C6A                        _LATC7 007C5F  
            __end_of___lwdiv 000052              __end_of___lwmod 000042                        i2l332 00007A  
                      i2l329 000078                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        _Color 000010  
                      _Boton 00001B          ___lmul@multiplicand 000011          __end_of_LeerTeclado 0000CA  
                      _heart 000004                  ?i2_BorraLCD 000000                        tablat 000FF5  
                _HabilitaLCD 000000                        ttemp5 000001                        ttemp6 000004  
                      ttemp7 000008                        status 000FD8                        wtemp8 000001  
           __end_ofi2_strlen 000028             __end_of_BorraLCD 000014             __end_of_ColorRGB 00007A  
            __initialization 000000                 __end_of_main 0006BA             i2_MensajeLCD_Var 000000  
                     ??_main 000023         __end_of_ConfiguraLCD 000018                __activetblptr 000002  
                 i2strlen@cp 000002           _Imprimir_Resultado 000000                       _ADCON1 000FC1  
             DireccionaLCD@a 000011                       i2l2209 000038                       i2l3121 000034  
                     i2l2171 000014                       i2l2173 000026                       i2l3125 000048  
                     i2l2175 000030                       i2l3119 00002C                       i2l2169 000004  
                     i2l2179 00003A                       i2l2385 000006                       i2l2387 000008  
                     i2l2741 00000A                       i2l2749 00003C                       _OSCCON 000FD3  
                     _TMR0IE 007F95                       _TMR0IF 007F92                       _TMR0ON 007EAF  
        ?_Imprimir_Resultado 00001B        __end_of_DireccionaLCD 000016                   _RetardoLCD 000000  
    __end_ofi2_DireccionaLCD 000016                       ___lmul 000000                    ??___aldiv 000015  
                  ??___almod 000015                       ___wmul 000000                    ??___lwdiv 000017  
                  ??___lwmod 000011              ??_InicializaLCD 000011                       clear_0 000046  
                     isa$std 000001         ??_Imprimir_Resultado 00001F         __end_of_EscribeLCD_c 000016  
                     _strlen 000000                  _LeerTeclado 000000                 ?i2_EnviaDato 000000  
               __pdataCOMRAM 000000                 __mediumconst 000000*                      tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8   __end_of_factorial_function 000078  
      __end_ofi2_HabilitaLCD 00000E                   __accesstop 000000*     __end_of__initialization 00004C  
              ___rparam_used 000001               __pcstackCOMRAM 000000                 __pidataBANK0 000000  
          __end_of_EnviaDato 000046                _Parte_Decimal 000004                    ?i2_strlen 000000  
                  ?_BorraLCD 000000                    ?_ColorRGB 000000               _MensajeLCD_Var 000000  
            MensajeLCD_Var@a 000012              MensajeLCD_Var@i 000014       factorial_function@fact 00001D  
                ?_RetardoLCD 000000                  RetardoLCD@a 00000E             ?i2_DireccionaLCD 000000  
                    ?___lmul 00000D                      ?___wmul 00000D               ___lmul@product 000015  
                    ?_strlen 00000D       __end_of_MensajeLCD_Var 000052                   ??i2_strlen 000002  
               ??i2_BorraLCD 000004                   ??_BorraLCD 000011                   ??_ColorRGB 00000D  
   __end_ofi2_MensajeLCD_Var 000052                 ?_HabilitaLCD 000000                 _ConfiguraLCD 000000  
                    __Hparam 000000                      __Lparam 000000                      ___aldiv 000000  
                    ___almod 000000                      ___lwdiv 000000                      ___lwmod 000000  
               __psmallconst 000000           __end_ofi2_BorraLCD 000014          factorial_function@a 000019  
                    __pcinit 000000                      __ramtop 000000* Imprimir_Resultado@Resultado 00001B  
                    __ptext0 000000                      __ptext1 000000                      __ptext2 000000  
                    __ptext3 000000                      __ptext4 000000                      __ptext5 000000  
                    __ptext6 000000                      __ptext7 000000                      __ptext8 000000  
                    __ptext9 000000             ___aldiv@dividend 00000D                      _persona 000000  
            ?_MensajeLCD_Var 000012               __pintcode_body 000000         end_of_initialization 00004C  
                _Verificador 00000C                __Lmediumconst 000000*                     int_func 000000  
               _EscribeLCD_c 000000             ___aldiv@quotient 000017                      postdec1 000FE5  
                    postinc0 000FEE                      strlen@s 00000D                 ?_LeerTeclado 000000  
            i2EscribeLCD_c@a 000004                ?i2_RetardoLCD 000000                    _Factorial 000019  
         _factorial_function 000000               __end_of___lmul 000056               __end_of___wmul 000026  
              __pidataCOMRAM 000000          ?_factorial_function 000019        __end_of_InicializaLCD 00009C  
                  _EnviaDato 000000               __end_of_strlen 000028          start_initialization 000000  
                __end_of_ISR 00008E         ??_factorial_function 00001D                    i2strlen@s 000000  
             ??i2_RetardoLCD 000000                 ??_RetardoLCD 00000D                     ??___lmul 000015  
                  _Resultado 000000                     ??___wmul 000011                  __pdataBANK0 000000  
                   ??_strlen 00000F                   ?_EnviaDato 000000                  __pbssCOMRAM 000000  
         __end_of_RetardoLCD 000056                __pcstackBANK0 000000                _NuevoCaracter 000000* 
          ?i2_MensajeLCD_Var 000005           ??i2_MensajeLCD_Var 000006                _DireccionaLCD 000000  
             i2_EscribeLCD_c 000000             ___lwdiv@dividend 000013                    __pintcode 000000  
                   ?___aldiv 00000D                     ?___almod 00000D                     ?___lwdiv 000013  
                   ?___lwmod 00000D             ___almod@dividend 00000D             ??_MensajeLCD_Var 000013  
                __smallconst 000000*               _Numero_1_Char 000001                _Numero_2_Char 000000  
           ___lwdiv@quotient 000018               ?_NuevoCaracter 000000              ___aldiv@divisor 000011  
            ___aldiv@counter 000015               ___wmul@product 000011                i2_HabilitaLCD 000000  
             ?_DireccionaLCD 000000       __end_ofi2_EscribeLCD_c 000016                     i2u343_40 00003E  
                   i2u344_45 000040                     i2u520_47 00000A                     i2u521_47 000016  
                   i2u522_47 00001E                     i2u347_40 000062                     i2u523_47 000028  
                   i2u348_45 000064                     i2u524_47 000032                     i2u525_47 000004  
     Imprimir_Resultado@flag 000000            ___wmul@multiplier 00000D                ??i2_EnviaDato 000002  
       __end_ofi2_RetardoLCD 000056                  ??_EnviaDato 00000F                     i2_strlen 000000  
                   _BorraLCD 000000                     _ColorRGB 000000            ___lmul@multiplier 00000D  
                  copy_data0 000014                    copy_data1 000034                     _Contador 00000E  
                   _Negativo 000018               ?i2_HabilitaLCD 000000              ?i2_EscribeLCD_c 000000  
                   __Hrparam 000000*                    _Operador 000002                     __Lrparam 000000* 
                   _Numero_1 000016                     _Numero_2 000014                     _Potencia 00001A  
               i2EnviaDato@a 000003                ConfiguraLCD@a 00000D                     _main$162 00000B  
                   _main$163 00000C              ??_NuevoCaracter 000000            ??i2_DireccionaLCD 000004  
            ___lwdiv@divisor 000015              ___lwdiv@counter 000017                     __ptext10 000000  
                   __ptext11 000000                     __ptext20 000000                     __ptext12 000000  
                   __ptext13 000000                     __ptext22 000000                     __ptext14 000000  
                   __ptext23 000000                     __ptext15 000000                     __ptext24 000000  
                   __ptext16 000000                     __ptext25 000000                     __ptext17 000000  
                   __ptext26 000000                     __ptext18 000000                     __ptext27 000000  
                   __ptext19 000000                     __ptext28 000000                     __ptext29 000000  
        __end_ofi2_EnviaDato 000046              ___almod@divisor 000011              ___almod@counter 000015  
            ??_DireccionaLCD 000011                     _interfaz 000003                     isa$xinst 000000  
                   int$flags 000000   __end_of_Imprimir_Resultado 00035C              ??i2_HabilitaLCD 000000  
                   intlevel2 000000*               ??_HabilitaLCD 00000D   Imprimir_Resultado@Potencia 000007  
           ___lwmod@dividend 00000D                ?_ConfiguraLCD 000000                i2RetardoLCD@a 000001  
                i2_EnviaDato 000000              ___lwmod@divisor 00000F                     strlen@cp 00000F  
            ___lwmod@counter 000011                 ___aldiv@sign 000016          Imprimir_Resultado@i 000003  
        Imprimir_Resultado@j 000005          Imprimir_Resultado@k 000001                   i2_BorraLCD 000000  
               ___almod@sign 000016               ??_ConfiguraLCD 00000D                ?_EscribeLCD_c 000000  
          i2MensajeLCD_Var@a 000005            i2MensajeLCD_Var@i 000007                 i2_RetardoLCD 000000  
        __end_of_HabilitaLCD 00000E  
