

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 19 11:21:58 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Version 2.40
    52                           ; Generated 04/07/2022 GMT
    53                           ; 
    54                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     
    87                           	psect	idataCOMRAM
    88   001B22                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _Numero_2_Char
    92   001B22  20                 	db	32
    93                           
    94                           ;initializer for _Numero_1_Char
    95   001B23  20                 	db	32
    96                           
    97                           ;initializer for _Operador
    98   001B24  20                 	db	32
    99                           
   100                           ;initializer for _interfaz
   101   001B25  08                 	db	8
   102                           
   103                           	psect	idataBANK0
   104   001AF6                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _persona
   108   001AF6  0E                 	db	14
   109   001AF7  0E                 	db	14
   110   001AF8  04                 	db	4
   111   001AF9  1F                 	db	31
   112   001AFA  04                 	db	4
   113   001AFB  04                 	db	4
   114   001AFC  0A                 	db	10
   115   001AFD  11                 	db	17
   116                           
   117                           ;initializer for _heart
   118   001AFE  00                 	db	0
   119   001AFF  1B                 	db	27
   120   001B00  1F                 	db	31
   121   001B01  1F                 	db	31
   122   001B02  0E                 	db	14
   123   001B03  04                 	db	4
   124   001B04  00                 	db	0
   125   001B05  00                 	db	0
   126   000000                     _LATC	set	3979
   127   000000                     _TRISC	set	3988
   128   000000                     _LATC7	set	31839
   129   000000                     _LATE2	set	31850
   130   000000                     _RB7	set	31759
   131   000000                     _RB6	set	31758
   132   000000                     _RB5	set	31757
   133   000000                     _POR	set	32385
   134   000000                     _PD	set	32386
   135   000000                     _TMR0ON	set	32431
   136   000000                     _GIE	set	32663
   137   000000                     _TMR0IE	set	32661
   138   000000                     _LATE1	set	31849
   139   000000                     _LATB	set	3978
   140   000000                     _LATD	set	3980
   141   000000                     _RB4	set	31756
   142   000000                     _TRISB	set	3987
   143   000000                     _TRISD	set	3989
   144   000000                     _ADCON1	set	4033
   145   000000                     _LATE0	set	31848
   146   000000                     _OSCCON	set	4051
   147   000000                     _T0CON	set	4053
   148   000000                     _TO	set	32387
   149   000000                     _RBPU	set	32655
   150   000000                     _TRISE	set	3990
   151   000000                     _TMR0IF	set	32658
   152   000000                     _TMR0	set	4054
   153                           
   154                           	psect	smallconst
   155   000800                     __psmallconst:
   156                           	callstack 0
   157   000800  00                 	db	0
   158   000801                     STR_7:
   159   000801  4D                 	db	77	;'M'
   160   000802  6F                 	db	111	;'o'
   161   000803  64                 	db	100	;'d'
   162   000804  6F                 	db	111	;'o'
   163   000805  20                 	db	32
   164   000806  46                 	db	70	;'F'
   165   000807  61                 	db	97	;'a'
   166   000808  63                 	db	99	;'c'
   167   000809  74                 	db	116	;'t'
   168   00080A  6F                 	db	111	;'o'
   169   00080B  72                 	db	114	;'r'
   170   00080C  69                 	db	105	;'i'
   171   00080D  61                 	db	97	;'a'
   172   00080E  6C                 	db	108	;'l'
   173   00080F  00                 	db	0
   174   000810                     STR_3:
   175   000810  4D                 	db	77	;'M'
   176   000811  6F                 	db	111	;'o'
   177   000812  64                 	db	100	;'d'
   178   000813  6F                 	db	111	;'o'
   179   000814  20                 	db	32
   180   000815  50                 	db	80	;'P'
   181   000816  6F                 	db	111	;'o'
   182   000817  74                 	db	116	;'t'
   183   000818  65                 	db	101	;'e'
   184   000819  6E                 	db	110	;'n'
   185   00081A  63                 	db	99	;'c'
   186   00081B  69                 	db	105	;'i'
   187   00081C  61                 	db	97	;'a'
   188   00081D  00                 	db	0
   189   00081E                     STR_13:
   190   00081E  49                 	db	73	;'I'
   191   00081F  6E                 	db	110	;'n'
   192   000820  64                 	db	100	;'d'
   193   000821  65                 	db	101	;'e'
   194   000822  74                 	db	116	;'t'
   195   000823  65                 	db	101	;'e'
   196   000824  72                 	db	114	;'r'
   197   000825  6D                 	db	109	;'m'
   198   000826  69                 	db	105	;'i'
   199   000827  6E                 	db	110	;'n'
   200   000828  61                 	db	97	;'a'
   201   000829  64                 	db	100	;'d'
   202   00082A  6F                 	db	111	;'o'
   203   00082B  00                 	db	0
   204   00082C                     STR_11:
   205   00082C  4C                 	db	76	;'L'
   206   00082D  56                 	db	86	;'V'
   207   00082E  50                 	db	80	;'P'
   208   00082F  20                 	db	32
   209   000830  41                 	db	65	;'A'
   210   000831  63                 	db	99	;'c'
   211   000832  74                 	db	116	;'t'
   212   000833  69                 	db	105	;'i'
   213   000834  76                 	db	118	;'v'
   214   000835  61                 	db	97	;'a'
   215   000836  64                 	db	100	;'d'
   216   000837  6F                 	db	111	;'o'
   217   000838  00                 	db	0
   218   000839                     STR_9:
   219   000839  4D                 	db	77	;'M'
   220   00083A  6F                 	db	111	;'o'
   221   00083B  64                 	db	100	;'d'
   222   00083C  6F                 	db	111	;'o'
   223   00083D  20                 	db	32
   224   00083E  52                 	db	82	;'R'
   225   00083F  65                 	db	101	;'e'
   226   000840  73                 	db	115	;'s'
   227   000841  74                 	db	116	;'t'
   228   000842  61                 	db	97	;'a'
   229   000843  00                 	db	0
   230   000844                     STR_5:
   231   000844  4D                 	db	77	;'M'
   232   000845  6F                 	db	111	;'o'
   233   000846  64                 	db	100	;'d'
   234   000847  6F                 	db	111	;'o'
   235   000848  20                 	db	32
   236   000849  53                 	db	83	;'S'
   237   00084A  75                 	db	117	;'u'
   238   00084B  6D                 	db	109	;'m'
   239   00084C  61                 	db	97	;'a'
   240   00084D  00                 	db	0
   241   00084E                     STR_12:
   242   00084E  49                 	db	73	;'I'
   243   00084F  6E                 	db	110	;'n'
   244   000850  66                 	db	102	;'f'
   245   000851  69                 	db	105	;'i'
   246   000852  6E                 	db	110	;'n'
   247   000853  69                 	db	105	;'i'
   248   000854  74                 	db	116	;'t'
   249   000855  6F                 	db	111	;'o'
   250   000856  00                 	db	0
   251   000857                     STR_1:
   252   000857  45                 	db	69	;'E'
   253   000858  6E                 	db	110	;'n'
   254   000859  65                 	db	101	;'e'
   255   00085A  72                 	db	114	;'r'
   256   00085B  67                 	db	103	;'g'
   257   00085C  69                 	db	105	;'i'
   258   00085D  61                 	db	97	;'a'
   259   00085E  00                 	db	0
   260   00085F                     STR_2:
   261   00085F  4D                 	db	77	;'M'
   262   000860  43                 	db	67	;'C'
   263   000861  4C                 	db	76	;'L'
   264   000862  52                 	db	82	;'R'
   265   000863  00                 	db	0
   266   000864  00                 	db	0	; dummy byte at the end
   267   000000                     
   268                           ; #config settings
   269                           
   270                           	psect	cinit
   271   0016C8                     __pcinit:
   272                           	callstack 0
   273   0016C8                     start_initialization:
   274                           	callstack 0
   275   0016C8                     __initialization:
   276                           	callstack 0
   277                           
   278                           ; Initialize objects allocated to BANK0 (16 bytes)
   279                           ; load TBLPTR registers with __pidataBANK0
   280   0016C8  0EF6               	movlw	low __pidataBANK0
   281   0016CA  6EF6               	movwf	tblptrl,c
   282   0016CC  0E1A               	movlw	high __pidataBANK0
   283   0016CE  6EF7               	movwf	tblptrh,c
   284   0016D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   285   0016D2  6EF8               	movwf	tblptru,c
   286   0016D4  EE00  F060         	lfsr	0,__pdataBANK0
   287   0016D8  EE10 F010          	lfsr	1,16
   288   0016DC                     copy_data0:
   289   0016DC  0009               	tblrd		*+
   290   0016DE  CFF5 FFEE          	movff	tablat,postinc0
   291   0016E2  50E5               	movf	postdec1,w,c
   292   0016E4  50E1               	movf	fsr1l,w,c
   293   0016E6  E1FA               	bnz	copy_data0
   294                           
   295                           ; Initialize objects allocated to COMRAM (4 bytes)
   296                           ; load TBLPTR registers with __pidataCOMRAM
   297   0016E8  0E22               	movlw	low __pidataCOMRAM
   298   0016EA  6EF6               	movwf	tblptrl,c
   299   0016EC  0E1B               	movlw	high __pidataCOMRAM
   300   0016EE  6EF7               	movwf	tblptrh,c
   301   0016F0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   302   0016F2  6EF8               	movwf	tblptru,c
   303   0016F4  EE00  F049         	lfsr	0,__pdataCOMRAM
   304   0016F8  EE10 F004          	lfsr	1,4
   305   0016FC                     copy_data1:
   306   0016FC  0009               	tblrd		*+
   307   0016FE  CFF5 FFEE          	movff	tablat,postinc0
   308   001702  50E5               	movf	postdec1,w,c
   309   001704  50E1               	movf	fsr1l,w,c
   310   001706  E1FA               	bnz	copy_data1
   311                           
   312                           ; Clear objects allocated to COMRAM (33 bytes)
   313   001708  EE00  F028         	lfsr	0,__pbssCOMRAM
   314   00170C  0E21               	movlw	33
   315   00170E                     clear_0:
   316   00170E  6AEE               	clrf	postinc0,c
   317   001710  06E8               	decf	wreg,f,c
   318   001712  E1FD               	bnz	clear_0
   319   001714                     end_of_initialization:
   320                           	callstack 0
   321   001714                     __end_of__initialization:
   322                           	callstack 0
   323   001714  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   324   001716  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   325   001718  0E00               	movlw	low (__Lmediumconst shr (0+16))
   326   00171A  6EF8               	movwf	tblptru,c
   327   00171C  0100               	movlb	0
   328   00171E  EF33  F004         	goto	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMRAM
   331   000028                     __pbssCOMRAM:
   332                           	callstack 0
   333   000028                     _Resultado:
   334                           	callstack 0
   335   000028                     	ds	4
   336   00002C                     _Parte_Decimal:
   337                           	callstack 0
   338   00002C                     	ds	4
   339   000030                     _b:
   340                           	callstack 0
   341   000030                     	ds	2
   342   000032                     _a:
   343                           	callstack 0
   344   000032                     	ds	2
   345   000034                     _Verificador:
   346                           	callstack 0
   347   000034                     	ds	2
   348   000036                     _Contador:
   349                           	callstack 0
   350   000036                     	ds	2
   351   000038                     _Color:
   352                           	callstack 0
   353   000038                     	ds	2
   354   00003A                     _i:
   355                           	callstack 0
   356   00003A                     	ds	2
   357   00003C                     _Numero_2:
   358                           	callstack 0
   359   00003C                     	ds	2
   360   00003E                     _Numero_1:
   361                           	callstack 0
   362   00003E                     	ds	2
   363   000040                     _ubicacion:
   364                           	callstack 0
   365   000040                     	ds	1
   366   000041                     _Negativo:
   367                           	callstack 0
   368   000041                     	ds	1
   369   000042                     _Factorial:
   370                           	callstack 0
   371   000042                     	ds	1
   372   000043                     _Potencia:
   373                           	callstack 0
   374   000043                     	ds	1
   375   000044                     _Boton:
   376                           	callstack 0
   377   000044                     	ds	1
   378   000045                     _m:
   379                           	callstack 0
   380   000045                     	ds	4
   381                           
   382                           	psect	dataCOMRAM
   383   000049                     __pdataCOMRAM:
   384                           	callstack 0
   385   000049                     _Numero_2_Char:
   386                           	callstack 0
   387   000049                     	ds	1
   388   00004A                     _Numero_1_Char:
   389                           	callstack 0
   390   00004A                     	ds	1
   391   00004B                     _Operador:
   392                           	callstack 0
   393   00004B                     	ds	1
   394   00004C                     _interfaz:
   395                           	callstack 0
   396   00004C                     	ds	1
   397                           
   398                           	psect	dataBANK0
   399   000060                     __pdataBANK0:
   400                           	callstack 0
   401   000060                     _persona:
   402                           	callstack 0
   403   000060                     	ds	8
   404   000068                     _heart:
   405                           	callstack 0
   406   000068                     	ds	8
   407                           
   408                           	psect	cstackBANK0
   409   000070                     __pcstackBANK0:
   410                           	callstack 0
   411   000070                     Imprimir_Resultado@flag:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x0
   415   000070                     	ds	1
   416   000071                     Imprimir_Resultado@k:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x1
   420   000071                     	ds	2
   421   000073                     Imprimir_Resultado@i:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x3
   425   000073                     	ds	2
   426   000075                     Imprimir_Resultado@j:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x5
   430   000075                     	ds	2
   431   000077                     Imprimir_Resultado@Potencia:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x7
   435   000077                     	ds	4
   436                           
   437                           	psect	cstackCOMRAM
   438   000001                     __pcstackCOMRAM:
   439                           	callstack 0
   440   000001                     ??i2_RetardoLCD:
   441   000001                     ?i2_strlen:
   442                           	callstack 0
   443   000001                     i2strlen@s:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x0
   447   000001                     	ds	1
   448   000002                     i2RetardoLCD@a:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x1
   452   000002                     	ds	1
   453   000003                     ??i2_EnviaDato:
   454   000003                     i2strlen@cp:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x2
   458   000003                     	ds	1
   459   000004                     i2EnviaDato@a:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x3
   463   000004                     	ds	1
   464   000005                     i2EscribeLCD_c@a:
   465                           	callstack 0
   466   000005                     i2DireccionaLCD@a:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x4
   470   000005                     	ds	1
   471   000006                     i2MensajeLCD_Var@a:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x5
   475   000006                     	ds	1
   476   000007                     ??i2_MensajeLCD_Var:
   477                           
   478                           ; 1 bytes @ 0x6
   479   000007                     	ds	1
   480   000008                     i2MensajeLCD_Var@i:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x7
   484   000008                     	ds	2
   485   00000A                     ??_ISR:
   486                           
   487                           ; 1 bytes @ 0x9
   488   00000A                     	ds	4
   489   00000E                     ??_RetardoLCD:
   490   00000E                     ??_ColorRGB:
   491   00000E                     ?_strlen:
   492                           	callstack 0
   493   00000E                     ?___wmul:
   494                           	callstack 0
   495   00000E                     ?___lwmod:
   496                           	callstack 0
   497   00000E                     ?___lmul:
   498                           	callstack 0
   499   00000E                     ?___aldiv:
   500                           	callstack 0
   501   00000E                     ?___almod:
   502                           	callstack 0
   503   00000E                     ConfiguraLCD@a:
   504                           	callstack 0
   505   00000E                     strlen@s:
   506                           	callstack 0
   507   00000E                     ___wmul@multiplier:
   508                           	callstack 0
   509   00000E                     ___lwmod@dividend:
   510                           	callstack 0
   511   00000E                     ___lmul@multiplier:
   512                           	callstack 0
   513   00000E                     ___aldiv@dividend:
   514                           	callstack 0
   515   00000E                     ___almod@dividend:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0xD
   519   00000E                     	ds	1
   520   00000F                     RetardoLCD@a:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0xE
   524   00000F                     	ds	1
   525   000010                     ??_EnviaDato:
   526   000010                     strlen@cp:
   527                           	callstack 0
   528   000010                     ___wmul@multiplicand:
   529                           	callstack 0
   530   000010                     ___lwmod@divisor:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0xF
   534   000010                     	ds	1
   535   000011                     EnviaDato@a:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x10
   539   000011                     	ds	1
   540   000012                     EscribeLCD_c@a:
   541                           	callstack 0
   542   000012                     DireccionaLCD@a:
   543                           	callstack 0
   544   000012                     ___lwmod@counter:
   545                           	callstack 0
   546   000012                     ___wmul@product:
   547                           	callstack 0
   548   000012                     ___lmul@multiplicand:
   549                           	callstack 0
   550   000012                     ___aldiv@divisor:
   551                           	callstack 0
   552   000012                     ___almod@divisor:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x11
   556   000012                     	ds	1
   557   000013                     MensajeLCD_Var@a:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x12
   561   000013                     	ds	1
   562   000014                     ??_MensajeLCD_Var:
   563   000014                     ?___lwdiv:
   564                           	callstack 0
   565   000014                     ___lwdiv@dividend:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x13
   569   000014                     	ds	1
   570   000015                     MensajeLCD_Var@i:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x14
   574   000015                     	ds	1
   575   000016                     ___aldiv@counter:
   576                           	callstack 0
   577   000016                     ___almod@counter:
   578                           	callstack 0
   579   000016                     ___lwdiv@divisor:
   580                           	callstack 0
   581   000016                     ___lmul@product:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x15
   585   000016                     	ds	1
   586   000017                     ___aldiv@sign:
   587                           	callstack 0
   588   000017                     ___almod@sign:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x16
   592   000017                     	ds	1
   593   000018                     ___lwdiv@counter:
   594                           	callstack 0
   595   000018                     ___aldiv@quotient:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x17
   599   000018                     	ds	1
   600   000019                     ___lwdiv@quotient:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x18
   604   000019                     	ds	1
   605   00001A                     ?_factorial_function:
   606                           	callstack 0
   607   00001A                     factorial_function@a:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x19
   611   00001A                     	ds	2
   612   00001C                     Imprimir_Resultado@Resultado:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x1B
   616   00001C                     	ds	2
   617   00001E                     factorial_function@fact:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x1D
   621   00001E                     	ds	2
   622   000020                     ??_Imprimir_Resultado:
   623                           
   624                           ; 1 bytes @ 0x1F
   625   000020                     	ds	4
   626   000024                     ??_main:
   627                           
   628                           ; 1 bytes @ 0x23
   629   000024                     	ds	2
   630   000026                     _main$166:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x25
   634   000026                     	ds	1
   635   000027                     _main$167:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x26
   639   000027                     	ds	1
   640                           
   641 ;;
   642 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   643 ;;
   644 ;; *************** function _main *****************
   645 ;; Defined at:
   646 ;;		line 42 in file "Lab4.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   660 ;;      Params:         0       0       0       0       0       0       0       0       0
   661 ;;      Locals:         2       0       0       0       0       0       0       0       0
   662 ;;      Temps:          2       0       0       0       0       0       0       0       0
   663 ;;      Totals:         4       0       0       0       0       0       0       0       0
   664 ;;Total ram usage:        4 bytes
   665 ;; Hardware stack levels required when called: 10
   666 ;; This function calls:
   667 ;;		_BorraLCD
   668 ;;		_ColorRGB
   669 ;;		_ConfiguraLCD
   670 ;;		_DireccionaLCD
   671 ;;		_EscribeLCD_c
   672 ;;		_Imprimir_Resultado
   673 ;;		_InicializaLCD
   674 ;;		_LeerTeclado
   675 ;;		_MensajeLCD_Var
   676 ;;		___lmul
   677 ;;		___lwdiv
   678 ;;		___wmul
   679 ;;		_factorial_function
   680 ;; This function is called by:
   681 ;;		Startup code after reset
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text0
   686   000866                     __ptext0:
   687                           	callstack 0
   688   000866                     _main:
   689                           	callstack 21
   690                           
   691                           ;Lab4.c: 43: ADCON1=15;
   692                           
   693                           ;incstack = 0
   694   000866  0E0F               	movlw	15
   695   000868  6EC1               	movwf	193,c	;volatile
   696                           
   697                           ;Lab4.c: 44: TRISD=0;
   698   00086A  0E00               	movlw	0
   699   00086C  6E95               	movwf	149,c	;volatile
   700                           
   701                           ;Lab4.c: 45: TRISB=0b11110000;
   702   00086E  0EF0               	movlw	240
   703   000870  6E93               	movwf	147,c	;volatile
   704                           
   705                           ;Lab4.c: 46: TRISE=0;
   706   000872  0E00               	movlw	0
   707   000874  6E96               	movwf	150,c	;volatile
   708                           
   709                           ;Lab4.c: 47: TRISC=0;
   710   000876  0E00               	movlw	0
   711   000878  6E94               	movwf	148,c	;volatile
   712                           
   713                           ;Lab4.c: 48: RBPU=0;
   714   00087A  9EF1               	bcf	4081,7,c	;volatile
   715                           
   716                           ;Lab4.c: 49: ConfiguraLCD(4);
   717   00087C  0E04               	movlw	4
   718   00087E  EC2F  F00D         	call	_ConfiguraLCD
   719                           
   720                           ;Lab4.c: 50: InicializaLCD();
   721   000882  EC56  F00A         	call	_InicializaLCD	;wreg free
   722                           
   723                           ;Lab4.c: 52: T0CON=0b10000010;
   724   000886  0E82               	movlw	130
   725   000888  6ED5               	movwf	213,c	;volatile
   726                           
   727                           ;Lab4.c: 53: TMR0IF=0;
   728   00088A  94F2               	bcf	4082,2,c	;volatile
   729                           
   730                           ;Lab4.c: 54: TMR0=49911;
   731   00088C  0EC2               	movlw	194
   732   00088E  6ED7               	movwf	215,c	;volatile
   733   000890  0EF7               	movlw	247
   734   000892  6ED6               	movwf	214,c	;volatile
   735                           
   736                           ;Lab4.c: 55: TMR0IE=1;
   737   000894  8AF2               	bsf	4082,5,c	;volatile
   738                           
   739                           ;Lab4.c: 56: GIE=1;
   740   000896  8EF2               	bsf	4082,7,c	;volatile
   741                           
   742                           ;Lab4.c: 57: TMR0ON=1;
   743   000898  8ED5               	bsf	4053,7,c	;volatile
   744                           
   745                           ;Lab4.c: 60: OSCCON = 0b11000100;
   746   00089A  0EC4               	movlw	196
   747   00089C  6ED3               	movwf	211,c	;volatile
   748                           
   749                           ;Lab4.c: 62: BorraLCD();
   750   00089E  EC67  F00D         	call	_BorraLCD	;wreg free
   751                           
   752                           ;Lab4.c: 63: if(TO == 1 && PD == 1){
   753   0008A2  B6D0               	btfsc	4048,3,c	;volatile
   754   0008A4  A4D0               	btfss	4048,2,c	;volatile
   755   0008A6  D007               	goto	l194
   756                           
   757                           ;Lab4.c: 64: BorraLCD();
   758   0008A8  EC67  F00D         	call	_BorraLCD	;wreg free
   759                           
   760                           ;Lab4.c: 65: MensajeLCD_Var("Energia");
   761   0008AC  0E57               	movlw	low STR_1
   762   0008AE  6E13               	movwf	MensajeLCD_Var@a^0,c
   763   0008B0  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
   764                           
   765                           ;Lab4.c: 66: }else{
   766   0008B4  D008               	goto	l3562
   767   0008B6                     l194:
   768                           
   769                           ;Lab4.c: 67: if(POR==0){
   770   0008B6  B2D0               	btfsc	4048,1,c	;volatile
   771   0008B8  D006               	goto	l3562
   772                           
   773                           ;Lab4.c: 68: BorraLCD();
   774   0008BA  EC67  F00D         	call	_BorraLCD	;wreg free
   775                           
   776                           ;Lab4.c: 69: MensajeLCD_Var("MCLR");
   777   0008BE  0E5F               	movlw	low STR_2
   778   0008C0  6E13               	movwf	MensajeLCD_Var@a^0,c
   779   0008C2  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
   780   0008C6                     l3562:
   781                           
   782                           ;Lab4.c: 70: };Lab4.c: 71: };Lab4.c: 72: _delay((unsigned long)((2000)*(1000000/4000.0))
      +                          );
   783   0008C6  0E03               	movlw	3
   784   0008C8  6E25               	movwf	(??_main+1)^0,c
   785   0008CA  0E8A               	movlw	138
   786   0008CC  6E24               	movwf	??_main^0,c
   787   0008CE  0E56               	movlw	86
   788   0008D0                     u4867:
   789   0008D0  2EE8               	decfsz	wreg,f,c
   790   0008D2  D7FE               	bra	u4867
   791   0008D4  2E24               	decfsz	??_main^0,f,c
   792   0008D6  D7FC               	bra	u4867
   793   0008D8  2E25               	decfsz	(??_main+1)^0,f,c
   794   0008DA  D7FA               	bra	u4867
   795                           
   796                           ;Lab4.c: 73: BorraLCD();
   797   0008DC  EC67  F00D         	call	_BorraLCD	;wreg free
   798                           
   799                           ;Lab4.c: 76: EscribeLCD_c(0);
   800   0008E0  0E00               	movlw	0
   801   0008E2  EC3B  F00D         	call	_EscribeLCD_c
   802                           
   803                           ;Lab4.c: 77: _delay((unsigned long)((500)*(1000000/4000.0)));
   804   0008E6  0EA3               	movlw	163
   805   0008E8  6E24               	movwf	??_main^0,c
   806   0008EA  0E55               	movlw	85
   807   0008EC                     u4877:
   808   0008EC  2EE8               	decfsz	wreg,f,c
   809   0008EE  D7FE               	bra	u4877
   810   0008F0  2E24               	decfsz	??_main^0,f,c
   811   0008F2  D7FC               	bra	u4877
   812   0008F4  F000               	nop	
   813                           
   814                           ;Lab4.c: 78: EscribeLCD_c(1);
   815   0008F6  0E01               	movlw	1
   816   0008F8  EC3B  F00D         	call	_EscribeLCD_c
   817   0008FC                     l3572:
   818                           
   819                           ;Lab4.c: 80: Negativo=0;
   820   0008FC  0E00               	movlw	0
   821   0008FE  6E41               	movwf	_Negativo^0,c
   822                           
   823                           ;Lab4.c: 81: LATB=0b00000000;
   824   000900  0E00               	movlw	0
   825   000902  6E8A               	movwf	138,c	;volatile
   826                           
   827                           ;Lab4.c: 82: Verificador = 0;
   828   000904  0E00               	movlw	0
   829   000906  6E35               	movwf	(_Verificador+1)^0,c
   830   000908  0E00               	movlw	0
   831   00090A  6E34               	movwf	_Verificador^0,c
   832                           
   833                           ;Lab4.c: 83: Boton = LeerTeclado();
   834   00090C  EC9B  F009         	call	_LeerTeclado	;wreg free
   835   000910  6E44               	movwf	_Boton^0,c
   836                           
   837                           ;Lab4.c: 84: ColorRGB();
   838   000912  ECEB  F00A         	call	_ColorRGB	;wreg free
   839                           
   840                           ;Lab4.c: 85: if(Boton=='C'){
   841   000916  0E43               	movlw	67
   842   000918  1844               	xorwf	_Boton^0,w,c
   843   00091A  A4D8               	btfss	status,2,c
   844   00091C  D01D               	goto	l3588
   845                           
   846                           ;Lab4.c: 87: Operador = ' ';
   847   00091E  0E20               	movlw	32
   848   000920  6E4B               	movwf	_Operador^0,c
   849                           
   850                           ;Lab4.c: 88: Numero_1_Char = ' ';
   851   000922  0E20               	movlw	32
   852   000924  6E4A               	movwf	_Numero_1_Char^0,c
   853                           
   854                           ;Lab4.c: 89: Numero_2_Char = ' ';
   855   000926  0E20               	movlw	32
   856   000928  6E49               	movwf	_Numero_2_Char^0,c
   857                           
   858                           ;Lab4.c: 90: Numero_1 = 0;
   859   00092A  0E00               	movlw	0
   860   00092C  6E3F               	movwf	(_Numero_1+1)^0,c
   861   00092E  0E00               	movlw	0
   862   000930  6E3E               	movwf	_Numero_1^0,c
   863                           
   864                           ;Lab4.c: 91: Numero_2 = 0;
   865   000932  0E00               	movlw	0
   866   000934  6E3D               	movwf	(_Numero_2+1)^0,c
   867   000936  0E00               	movlw	0
   868   000938  6E3C               	movwf	_Numero_2^0,c
   869                           
   870                           ;Lab4.c: 92: i = 0;
   871   00093A  0E00               	movlw	0
   872   00093C  6E3B               	movwf	(_i+1)^0,c
   873   00093E  0E00               	movlw	0
   874   000940  6E3A               	movwf	_i^0,c
   875                           
   876                           ;Lab4.c: 93: Parte_Decimal = 0;
   877   000942  0E00               	movlw	0
   878   000944  6E2C               	movwf	_Parte_Decimal^0,c
   879   000946  0E00               	movlw	0
   880   000948  6E2D               	movwf	(_Parte_Decimal+1)^0,c
   881   00094A  0E00               	movlw	0
   882   00094C  6E2E               	movwf	(_Parte_Decimal+2)^0,c
   883   00094E  0E00               	movlw	0
   884   000950  6E2F               	movwf	(_Parte_Decimal+3)^0,c
   885   000952                     l3586:
   886                           
   887                           ;Lab4.c: 94: BorraLCD();
   888   000952  EC67  F00D         	call	_BorraLCD	;wreg free
   889                           
   890                           ;Lab4.c: 95: }else if(Operador==' ' & (Boton=='+'|Boton=='^') & Numero_1_Char == ' ' & N
      +                          umero_2_Char ==' '){
   891   000956  D7D2               	goto	l3572
   892   000958                     l3588:
   893   000958  0E20               	movlw	32
   894   00095A  184B               	xorwf	_Operador^0,w,c
   895   00095C  A4D8               	btfss	status,2,c
   896   00095E  D03D               	goto	l3624
   897   000960  0E2B               	movlw	43
   898   000962  1844               	xorwf	_Boton^0,w,c
   899   000964  B4D8               	btfsc	status,2,c
   900   000966  D004               	goto	u4070
   901   000968  0E5E               	movlw	94
   902   00096A  1844               	xorwf	_Boton^0,w,c
   903   00096C  A4D8               	btfss	status,2,c
   904   00096E  D035               	goto	l3624
   905   000970                     u4070:
   906   000970  0E20               	movlw	32
   907   000972  184A               	xorwf	_Numero_1_Char^0,w,c
   908   000974  A4D8               	btfss	status,2,c
   909   000976  D031               	goto	l3624
   910   000978  0E20               	movlw	32
   911   00097A  1849               	xorwf	_Numero_2_Char^0,w,c
   912   00097C  A4D8               	btfss	status,2,c
   913   00097E  D02D               	goto	l3624
   914                           
   915                           ;Lab4.c: 96: Potencia=~Potencia;
   916   000980  1E43               	comf	_Potencia^0,f,c
   917                           
   918                           ;Lab4.c: 97: if(Potencia){
   919   000982  5043               	movf	_Potencia^0,w,c
   920   000984  B4D8               	btfsc	status,2,c
   921   000986  D01A               	goto	l3614
   922                           
   923                           ;Lab4.c: 98: DireccionaLCD(0x80);
   924   000988  0E80               	movlw	128
   925   00098A  EC46  F00D         	call	_DireccionaLCD
   926                           
   927                           ;Lab4.c: 99: MensajeLCD_Var("Modo Potencia");
   928   00098E  0E10               	movlw	low STR_3
   929   000990  6E13               	movwf	MensajeLCD_Var@a^0,c
   930   000992  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
   931                           
   932                           ;Lab4.c: 100: DireccionaLCD(0xC0);
   933   000996  0EC0               	movlw	192
   934   000998  EC46  F00D         	call	_DireccionaLCD
   935                           
   936                           ;Lab4.c: 101: MensajeLCD_Var("Activado");
   937   00099C  0E30               	movlw	low (STR_11+4)
   938   00099E  6E13               	movwf	MensajeLCD_Var@a^0,c
   939   0009A0  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
   940   0009A4                     l3608:
   941                           
   942                           ;Lab4.c: 102: _delay((unsigned long)((1000)*(1000000/4000.0)));
   943   0009A4  0E02               	movlw	2
   944   0009A6  6E25               	movwf	(??_main+1)^0,c
   945   0009A8  0E45               	movlw	69
   946   0009AA  6E24               	movwf	??_main^0,c
   947   0009AC  0EAA               	movlw	170
   948   0009AE                     u4887:
   949   0009AE  2EE8               	decfsz	wreg,f,c
   950   0009B0  D7FE               	bra	u4887
   951   0009B2  2E24               	decfsz	??_main^0,f,c
   952   0009B4  D7FC               	bra	u4887
   953   0009B6  2E25               	decfsz	(??_main+1)^0,f,c
   954   0009B8  D7FA               	bra	u4887
   955   0009BA  D7CB               	goto	l3586
   956   0009BC                     l3614:
   957                           
   958                           ;Lab4.c: 106: DireccionaLCD(0x80);
   959   0009BC  0E80               	movlw	128
   960   0009BE  EC46  F00D         	call	_DireccionaLCD
   961                           
   962                           ;Lab4.c: 107: MensajeLCD_Var("Modo Suma");
   963   0009C2  0E44               	movlw	low STR_5
   964   0009C4  6E13               	movwf	MensajeLCD_Var@a^0,c
   965   0009C6  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
   966                           
   967                           ;Lab4.c: 108: DireccionaLCD(0xC0);
   968   0009CA  0EC0               	movlw	192
   969   0009CC  EC46  F00D         	call	_DireccionaLCD
   970                           
   971                           ;Lab4.c: 109: MensajeLCD_Var("Activado");
   972   0009D0  0E30               	movlw	low (STR_11+4)
   973   0009D2  6E13               	movwf	MensajeLCD_Var@a^0,c
   974   0009D4  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
   975   0009D8  D7E5               	goto	l3608
   976   0009DA                     l3624:
   977   0009DA  0E20               	movlw	32
   978   0009DC  184B               	xorwf	_Operador^0,w,c
   979   0009DE  A4D8               	btfss	status,2,c
   980   0009E0  D032               	goto	l3660
   981   0009E2  0E2D               	movlw	45
   982   0009E4  1844               	xorwf	_Boton^0,w,c
   983   0009E6  B4D8               	btfsc	status,2,c
   984   0009E8  D004               	goto	u4130
   985   0009EA  0E21               	movlw	33
   986   0009EC  1844               	xorwf	_Boton^0,w,c
   987   0009EE  A4D8               	btfss	status,2,c
   988   0009F0  D02A               	goto	l3660
   989   0009F2                     u4130:
   990   0009F2  0E20               	movlw	32
   991   0009F4  184A               	xorwf	_Numero_1_Char^0,w,c
   992   0009F6  A4D8               	btfss	status,2,c
   993   0009F8  D026               	goto	l3660
   994   0009FA  0E20               	movlw	32
   995   0009FC  1849               	xorwf	_Numero_2_Char^0,w,c
   996   0009FE  A4D8               	btfss	status,2,c
   997   000A00  D022               	goto	l3660
   998                           
   999                           ;Lab4.c: 115: Factorial=~Factorial;
  1000   000A02  1E42               	comf	_Factorial^0,f,c
  1001                           
  1002                           ;Lab4.c: 116: if(Factorial){
  1003   000A04  5042               	movf	_Factorial^0,w,c
  1004   000A06  B4D8               	btfsc	status,2,c
  1005   000A08  D00F               	goto	l3650
  1006                           
  1007                           ;Lab4.c: 117: DireccionaLCD(0x80);
  1008   000A0A  0E80               	movlw	128
  1009   000A0C  EC46  F00D         	call	_DireccionaLCD
  1010                           
  1011                           ;Lab4.c: 118: MensajeLCD_Var("Modo Factorial");
  1012   000A10  0E01               	movlw	low STR_7
  1013   000A12  6E13               	movwf	MensajeLCD_Var@a^0,c
  1014   000A14  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
  1015                           
  1016                           ;Lab4.c: 119: DireccionaLCD(0xC0);
  1017   000A18  0EC0               	movlw	192
  1018   000A1A  EC46  F00D         	call	_DireccionaLCD
  1019                           
  1020                           ;Lab4.c: 120: MensajeLCD_Var("Activado");
  1021   000A1E  0E30               	movlw	low (STR_11+4)
  1022   000A20  6E13               	movwf	MensajeLCD_Var@a^0,c
  1023   000A22  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
  1024   000A26  D7BE               	goto	l3608
  1025   000A28                     l3650:
  1026                           
  1027                           ;Lab4.c: 125: DireccionaLCD(0x80);
  1028   000A28  0E80               	movlw	128
  1029   000A2A  EC46  F00D         	call	_DireccionaLCD
  1030                           
  1031                           ;Lab4.c: 126: MensajeLCD_Var("Modo Resta");
  1032   000A2E  0E39               	movlw	low STR_9
  1033   000A30  6E13               	movwf	MensajeLCD_Var@a^0,c
  1034   000A32  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
  1035                           
  1036                           ;Lab4.c: 127: DireccionaLCD(0xC0);
  1037   000A36  0EC0               	movlw	192
  1038   000A38  EC46  F00D         	call	_DireccionaLCD
  1039                           
  1040                           ;Lab4.c: 128: MensajeLCD_Var("Activado");
  1041   000A3C  0E30               	movlw	low (STR_11+4)
  1042   000A3E  6E13               	movwf	MensajeLCD_Var@a^0,c
  1043   000A40  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
  1044   000A44  D7AF               	goto	l3608
  1045   000A46                     l3660:
  1046                           
  1047                           ;Lab4.c: 134: if((Numero_1_Char==' '|Numero_2_Char==' '|Operador==' ') & !Factorial){
  1048   000A46  0E20               	movlw	32
  1049   000A48  184A               	xorwf	_Numero_1_Char^0,w,c
  1050   000A4A  B4D8               	btfsc	status,2,c
  1051   000A4C  D008               	goto	u4190
  1052   000A4E  0E20               	movlw	32
  1053   000A50  1849               	xorwf	_Numero_2_Char^0,w,c
  1054   000A52  B4D8               	btfsc	status,2,c
  1055   000A54  D004               	goto	u4190
  1056   000A56  0E20               	movlw	32
  1057   000A58  184B               	xorwf	_Operador^0,w,c
  1058   000A5A  A4D8               	btfss	status,2,c
  1059   000A5C  D092               	goto	l3736
  1060   000A5E                     u4190:
  1061   000A5E  5042               	movf	_Factorial^0,w,c
  1062   000A60  A4D8               	btfss	status,2,c
  1063   000A62  D08F               	goto	l3736
  1064                           
  1065                           ;Lab4.c: 135: if(Operador==' ' & (Boton=='+'|Boton=='-'|Boton=='/'|Boton=='x'|Boton=='^'
      +                          ) & Numero_1_Char != ' ' & Numero_2_Char ==' '){
  1066   000A64  0E20               	movlw	32
  1067   000A66  184B               	xorwf	_Operador^0,w,c
  1068   000A68  A4D8               	btfss	status,2,c
  1069   000A6A  D025               	goto	l3688
  1070   000A6C  0E2B               	movlw	43
  1071   000A6E  1844               	xorwf	_Boton^0,w,c
  1072   000A70  B4D8               	btfsc	status,2,c
  1073   000A72  D010               	goto	u4260
  1074   000A74  0E2D               	movlw	45
  1075   000A76  1844               	xorwf	_Boton^0,w,c
  1076   000A78  B4D8               	btfsc	status,2,c
  1077   000A7A  D00C               	goto	u4260
  1078   000A7C  0E2F               	movlw	47
  1079   000A7E  1844               	xorwf	_Boton^0,w,c
  1080   000A80  B4D8               	btfsc	status,2,c
  1081   000A82  D008               	goto	u4260
  1082   000A84  0E78               	movlw	120
  1083   000A86  1844               	xorwf	_Boton^0,w,c
  1084   000A88  B4D8               	btfsc	status,2,c
  1085   000A8A  D004               	goto	u4260
  1086   000A8C  0E5E               	movlw	94
  1087   000A8E  1844               	xorwf	_Boton^0,w,c
  1088   000A90  A4D8               	btfss	status,2,c
  1089   000A92  D011               	goto	l3688
  1090   000A94                     u4260:
  1091   000A94  0E20               	movlw	32
  1092   000A96  184A               	xorwf	_Numero_1_Char^0,w,c
  1093   000A98  B4D8               	btfsc	status,2,c
  1094   000A9A  D00D               	goto	l3688
  1095   000A9C  0E20               	movlw	32
  1096   000A9E  1849               	xorwf	_Numero_2_Char^0,w,c
  1097   000AA0  A4D8               	btfss	status,2,c
  1098   000AA2  D009               	goto	l3688
  1099                           
  1100                           ;Lab4.c: 136: DireccionaLCD(0x81);
  1101   000AA4  0E81               	movlw	129
  1102   000AA6  EC46  F00D         	call	_DireccionaLCD
  1103                           
  1104                           ;Lab4.c: 137: EscribeLCD_c(Boton);
  1105   000AAA  5044               	movf	_Boton^0,w,c
  1106   000AAC  EC3B  F00D         	call	_EscribeLCD_c
  1107   000AB0                     l3686:
  1108                           
  1109                           ;Lab4.c: 138: Operador = Boton;
  1110   000AB0  C044  F04B         	movff	_Boton,_Operador
  1111                           
  1112                           ;Lab4.c: 139: }else if(Numero_1_Char == ' ' & (Boton!='+'|Boton!='-'|Boton!='/'|Boton!='
      +                          x'|Boton!='='|Boton!='C'|Boton!='^')){
  1113   000AB4  D223               	goto	l3884
  1114   000AB6                     l3688:
  1115   000AB6  0E20               	movlw	32
  1116   000AB8  184A               	xorwf	_Numero_1_Char^0,w,c
  1117   000ABA  A4D8               	btfss	status,2,c
  1118   000ABC  D02B               	goto	l3710
  1119   000ABE  0E2B               	movlw	43
  1120   000AC0  1844               	xorwf	_Boton^0,w,c
  1121   000AC2  A4D8               	btfss	status,2,c
  1122   000AC4  D018               	goto	u4360
  1123   000AC6  0E2D               	movlw	45
  1124   000AC8  1844               	xorwf	_Boton^0,w,c
  1125   000ACA  A4D8               	btfss	status,2,c
  1126   000ACC  D014               	goto	u4360
  1127   000ACE  0E2F               	movlw	47
  1128   000AD0  1844               	xorwf	_Boton^0,w,c
  1129   000AD2  A4D8               	btfss	status,2,c
  1130   000AD4  D010               	goto	u4360
  1131   000AD6  0E78               	movlw	120
  1132   000AD8  1844               	xorwf	_Boton^0,w,c
  1133   000ADA  A4D8               	btfss	status,2,c
  1134   000ADC  D00C               	goto	u4360
  1135   000ADE  0E3D               	movlw	61
  1136   000AE0  1844               	xorwf	_Boton^0,w,c
  1137   000AE2  A4D8               	btfss	status,2,c
  1138   000AE4  D008               	goto	u4360
  1139   000AE6  0E43               	movlw	67
  1140   000AE8  1844               	xorwf	_Boton^0,w,c
  1141   000AEA  A4D8               	btfss	status,2,c
  1142   000AEC  D004               	goto	u4360
  1143   000AEE  0E5E               	movlw	94
  1144   000AF0  1844               	xorwf	_Boton^0,w,c
  1145   000AF2  B4D8               	btfsc	status,2,c
  1146   000AF4  D00F               	goto	l3710
  1147   000AF6                     u4360:
  1148                           
  1149                           ;Lab4.c: 140: DireccionaLCD(0x80);
  1150   000AF6  0E80               	movlw	128
  1151   000AF8  EC46  F00D         	call	_DireccionaLCD
  1152                           
  1153                           ;Lab4.c: 141: EscribeLCD_c(Boton);
  1154   000AFC  5044               	movf	_Boton^0,w,c
  1155   000AFE  EC3B  F00D         	call	_EscribeLCD_c
  1156   000B02                     l3706:
  1157                           
  1158                           ;Lab4.c: 142: Numero_1_Char=Boton;
  1159   000B02  C044  F04A         	movff	_Boton,_Numero_1_Char
  1160                           
  1161                           ;Lab4.c: 143: Numero_1 = Boton-'0';
  1162   000B06  0ED0               	movlw	208
  1163   000B08  2444               	addwf	_Boton^0,w,c
  1164   000B0A  6E3E               	movwf	_Numero_1^0,c
  1165   000B0C  6A3F               	clrf	(_Numero_1+1)^0,c
  1166   000B0E  0EFF               	movlw	255
  1167   000B10  223F               	addwfc	(_Numero_1+1)^0,f,c
  1168                           
  1169                           ;Lab4.c: 144: }else if(Numero_2_Char==' ' & Operador!=' ' & Numero_1_Char != ' ' & (Boto
      +                          n!='+'|Boton!='-'|Boton!='/'|Boton!='x'|Boton!='='|Boton!='C'|Boton!='^')){
  1170   000B12  D1F4               	goto	l3884
  1171   000B14                     l3710:
  1172   000B14  0E20               	movlw	32
  1173   000B16  1849               	xorwf	_Numero_2_Char^0,w,c
  1174   000B18  A4D8               	btfss	status,2,c
  1175   000B1A  D1F0               	goto	l3884
  1176   000B1C  0E20               	movlw	32
  1177   000B1E  184B               	xorwf	_Operador^0,w,c
  1178   000B20  B4D8               	btfsc	status,2,c
  1179   000B22  D1EC               	goto	l3884
  1180   000B24  0E20               	movlw	32
  1181   000B26  184A               	xorwf	_Numero_1_Char^0,w,c
  1182   000B28  B4D8               	btfsc	status,2,c
  1183   000B2A  D1E8               	goto	l3884
  1184   000B2C  0E2B               	movlw	43
  1185   000B2E  1844               	xorwf	_Boton^0,w,c
  1186   000B30  A4D8               	btfss	status,2,c
  1187   000B32  D018               	goto	u4460
  1188   000B34  0E2D               	movlw	45
  1189   000B36  1844               	xorwf	_Boton^0,w,c
  1190   000B38  A4D8               	btfss	status,2,c
  1191   000B3A  D014               	goto	u4460
  1192   000B3C  0E2F               	movlw	47
  1193   000B3E  1844               	xorwf	_Boton^0,w,c
  1194   000B40  A4D8               	btfss	status,2,c
  1195   000B42  D010               	goto	u4460
  1196   000B44  0E78               	movlw	120
  1197   000B46  1844               	xorwf	_Boton^0,w,c
  1198   000B48  A4D8               	btfss	status,2,c
  1199   000B4A  D00C               	goto	u4460
  1200   000B4C  0E3D               	movlw	61
  1201   000B4E  1844               	xorwf	_Boton^0,w,c
  1202   000B50  A4D8               	btfss	status,2,c
  1203   000B52  D008               	goto	u4460
  1204   000B54  0E43               	movlw	67
  1205   000B56  1844               	xorwf	_Boton^0,w,c
  1206   000B58  A4D8               	btfss	status,2,c
  1207   000B5A  D004               	goto	u4460
  1208   000B5C  0E5E               	movlw	94
  1209   000B5E  1844               	xorwf	_Boton^0,w,c
  1210   000B60  B4D8               	btfsc	status,2,c
  1211   000B62  D1CC               	goto	l3884
  1212   000B64                     u4460:
  1213                           
  1214                           ;Lab4.c: 145: DireccionaLCD(0x82);
  1215   000B64  0E82               	movlw	130
  1216   000B66  EC46  F00D         	call	_DireccionaLCD
  1217                           
  1218                           ;Lab4.c: 146: EscribeLCD_c(Boton);
  1219   000B6A  5044               	movf	_Boton^0,w,c
  1220   000B6C  EC3B  F00D         	call	_EscribeLCD_c
  1221                           
  1222                           ;Lab4.c: 147: Numero_2_Char=Boton;
  1223   000B70  C044  F049         	movff	_Boton,_Numero_2_Char
  1224                           
  1225                           ;Lab4.c: 148: Numero_2 = Boton-'0';
  1226   000B74  0ED0               	movlw	208
  1227   000B76  2444               	addwf	_Boton^0,w,c
  1228   000B78  6E3C               	movwf	_Numero_2^0,c
  1229   000B7A  6A3D               	clrf	(_Numero_2+1)^0,c
  1230   000B7C  0EFF               	movlw	255
  1231   000B7E  223D               	addwfc	(_Numero_2+1)^0,f,c
  1232                           
  1233                           ;Lab4.c: 149: };Lab4.c: 150: }else if ((Numero_1_Char==' '|Operador==' ') & Factorial){
  1234   000B80  D1BD               	goto	l3884
  1235   000B82                     l3736:
  1236   000B82  0E01               	movlw	1
  1237   000B84  6E26               	movwf	_main$166^0,c
  1238   000B86  0E20               	movlw	32
  1239   000B88  184A               	xorwf	_Numero_1_Char^0,w,c
  1240   000B8A  B4D8               	btfsc	status,2,c
  1241   000B8C  D006               	goto	l3744
  1242   000B8E  0E20               	movlw	32
  1243   000B90  184B               	xorwf	_Operador^0,w,c
  1244   000B92  B4D8               	btfsc	status,2,c
  1245   000B94  D002               	goto	l3744
  1246   000B96  0E00               	movlw	0
  1247   000B98  6E26               	movwf	_main$166^0,c
  1248   000B9A                     l3744:
  1249   000B9A  5026               	movf	_main$166^0,w,c
  1250   000B9C  1442               	andwf	_Factorial^0,w,c
  1251   000B9E  0900               	iorlw	0
  1252   000BA0  B4D8               	btfsc	status,2,c
  1253   000BA2  D056               	goto	l3792
  1254                           
  1255                           ;Lab4.c: 151: if(Operador==' ' & (Boton=='+'|Boton=='-'|Boton=='/'|Boton=='x'|Boton=='^'
      +                          |Boton=='!') & Numero_1_Char != ' ' & Numero_2_Char ==' '){
  1256   000BA4  0E20               	movlw	32
  1257   000BA6  184B               	xorwf	_Operador^0,w,c
  1258   000BA8  A4D8               	btfss	status,2,c
  1259   000BAA  D027               	goto	l3768
  1260   000BAC  0E2B               	movlw	43
  1261   000BAE  1844               	xorwf	_Boton^0,w,c
  1262   000BB0  B4D8               	btfsc	status,2,c
  1263   000BB2  D014               	goto	u4560
  1264   000BB4  0E2D               	movlw	45
  1265   000BB6  1844               	xorwf	_Boton^0,w,c
  1266   000BB8  B4D8               	btfsc	status,2,c
  1267   000BBA  D010               	goto	u4560
  1268   000BBC  0E2F               	movlw	47
  1269   000BBE  1844               	xorwf	_Boton^0,w,c
  1270   000BC0  B4D8               	btfsc	status,2,c
  1271   000BC2  D00C               	goto	u4560
  1272   000BC4  0E78               	movlw	120
  1273   000BC6  1844               	xorwf	_Boton^0,w,c
  1274   000BC8  B4D8               	btfsc	status,2,c
  1275   000BCA  D008               	goto	u4560
  1276   000BCC  0E5E               	movlw	94
  1277   000BCE  1844               	xorwf	_Boton^0,w,c
  1278   000BD0  B4D8               	btfsc	status,2,c
  1279   000BD2  D004               	goto	u4560
  1280   000BD4  0E21               	movlw	33
  1281   000BD6  1844               	xorwf	_Boton^0,w,c
  1282   000BD8  A4D8               	btfss	status,2,c
  1283   000BDA  D00F               	goto	l3768
  1284   000BDC                     u4560:
  1285   000BDC  0E20               	movlw	32
  1286   000BDE  184A               	xorwf	_Numero_1_Char^0,w,c
  1287   000BE0  B4D8               	btfsc	status,2,c
  1288   000BE2  D00B               	goto	l3768
  1289   000BE4  0E20               	movlw	32
  1290   000BE6  1849               	xorwf	_Numero_2_Char^0,w,c
  1291   000BE8  A4D8               	btfss	status,2,c
  1292   000BEA  D007               	goto	l3768
  1293                           
  1294                           ;Lab4.c: 152: DireccionaLCD(0x81);
  1295   000BEC  0E81               	movlw	129
  1296   000BEE  EC46  F00D         	call	_DireccionaLCD
  1297                           
  1298                           ;Lab4.c: 153: EscribeLCD_c(Boton);
  1299   000BF2  5044               	movf	_Boton^0,w,c
  1300   000BF4  EC3B  F00D         	call	_EscribeLCD_c
  1301   000BF8  D75B               	goto	l3686
  1302   000BFA                     l3768:
  1303   000BFA  0E20               	movlw	32
  1304   000BFC  184A               	xorwf	_Numero_1_Char^0,w,c
  1305   000BFE  A4D8               	btfss	status,2,c
  1306   000C00  D17D               	goto	l3884
  1307   000C02  0E2B               	movlw	43
  1308   000C04  1844               	xorwf	_Boton^0,w,c
  1309   000C06  A4D8               	btfss	status,2,c
  1310   000C08  D01C               	goto	u4670
  1311   000C0A  0E2D               	movlw	45
  1312   000C0C  1844               	xorwf	_Boton^0,w,c
  1313   000C0E  A4D8               	btfss	status,2,c
  1314   000C10  D018               	goto	u4670
  1315   000C12  0E2F               	movlw	47
  1316   000C14  1844               	xorwf	_Boton^0,w,c
  1317   000C16  A4D8               	btfss	status,2,c
  1318   000C18  D014               	goto	u4670
  1319   000C1A  0E78               	movlw	120
  1320   000C1C  1844               	xorwf	_Boton^0,w,c
  1321   000C1E  A4D8               	btfss	status,2,c
  1322   000C20  D010               	goto	u4670
  1323   000C22  0E3D               	movlw	61
  1324   000C24  1844               	xorwf	_Boton^0,w,c
  1325   000C26  A4D8               	btfss	status,2,c
  1326   000C28  D00C               	goto	u4670
  1327   000C2A  0E43               	movlw	67
  1328   000C2C  1844               	xorwf	_Boton^0,w,c
  1329   000C2E  A4D8               	btfss	status,2,c
  1330   000C30  D008               	goto	u4670
  1331   000C32  0E5E               	movlw	94
  1332   000C34  1844               	xorwf	_Boton^0,w,c
  1333   000C36  A4D8               	btfss	status,2,c
  1334   000C38  D004               	goto	u4670
  1335   000C3A  0E21               	movlw	33
  1336   000C3C  1844               	xorwf	_Boton^0,w,c
  1337   000C3E  B4D8               	btfsc	status,2,c
  1338   000C40  D15D               	goto	l3884
  1339   000C42                     u4670:
  1340                           
  1341                           ;Lab4.c: 156: DireccionaLCD(0x80);
  1342   000C42  0E80               	movlw	128
  1343   000C44  EC46  F00D         	call	_DireccionaLCD
  1344                           
  1345                           ;Lab4.c: 157: EscribeLCD_c(Boton);
  1346   000C48  5044               	movf	_Boton^0,w,c
  1347   000C4A  EC3B  F00D         	call	_EscribeLCD_c
  1348   000C4E  D759               	goto	l3706
  1349   000C50                     l3792:
  1350   000C50  0E3D               	movlw	61
  1351   000C52  1844               	xorwf	_Boton^0,w,c
  1352   000C54  A4D8               	btfss	status,2,c
  1353   000C56  D10B               	goto	l3866
  1354   000C58  0E20               	movlw	32
  1355   000C5A  1849               	xorwf	_Numero_2_Char^0,w,c
  1356   000C5C  B4D8               	btfsc	status,2,c
  1357   000C5E  D107               	goto	l3866
  1358   000C60  0E20               	movlw	32
  1359   000C62  184B               	xorwf	_Operador^0,w,c
  1360   000C64  B4D8               	btfsc	status,2,c
  1361   000C66  D103               	goto	l3866
  1362   000C68  0E20               	movlw	32
  1363   000C6A  184A               	xorwf	_Numero_1_Char^0,w,c
  1364   000C6C  B4D8               	btfsc	status,2,c
  1365   000C6E  D0FF               	goto	l3866
  1366   000C70  5042               	movf	_Factorial^0,w,c
  1367   000C72  A4D8               	btfss	status,2,c
  1368   000C74  D0FC               	goto	l3866
  1369                           
  1370                           ;Lab4.c: 162: DireccionaLCD(0x83);
  1371   000C76  0E83               	movlw	131
  1372   000C78  EC46  F00D         	call	_DireccionaLCD
  1373                           
  1374                           ;Lab4.c: 163: EscribeLCD_c('=');
  1375   000C7C  0E3D               	movlw	61
  1376   000C7E  EC3B  F00D         	call	_EscribeLCD_c
  1377                           
  1378                           ;Lab4.c: 164: switch(Operador){
  1379   000C82  D0D6               	goto	l3860
  1380   000C84                     l3804:
  1381                           
  1382                           ;Lab4.c: 166: Resultado = Numero_1 + Numero_2;
  1383   000C84  503C               	movf	_Numero_2^0,w,c
  1384   000C86  243E               	addwf	_Numero_1^0,w,c
  1385   000C88  6E24               	movwf	??_main^0,c
  1386   000C8A  503D               	movf	(_Numero_2+1)^0,w,c
  1387   000C8C  203F               	addwfc	(_Numero_1+1)^0,w,c
  1388   000C8E  6E25               	movwf	(??_main+1)^0,c
  1389   000C90  C024  F028         	movff	??_main,_Resultado
  1390   000C94  C025  F029         	movff	??_main+1,_Resultado+1
  1391   000C98  6A2A               	clrf	(_Resultado+2)^0,c
  1392   000C9A  6A2B               	clrf	(_Resultado+3)^0,c
  1393   000C9C                     l3806:
  1394                           
  1395                           ;Lab4.c: 167: Parte_Decimal = Resultado*100;
  1396   000C9C  C028  F00E         	movff	_Resultado,___lmul@multiplier
  1397   000CA0  C029  F00F         	movff	_Resultado+1,___lmul@multiplier+1
  1398   000CA4  C02A  F010         	movff	_Resultado+2,___lmul@multiplier+2
  1399   000CA8  C02B  F011         	movff	_Resultado+3,___lmul@multiplier+3
  1400   000CAC  0E64               	movlw	100
  1401   000CAE  6E12               	movwf	___lmul@multiplicand^0,c
  1402   000CB0  0E00               	movlw	0
  1403   000CB2  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1404   000CB4  0E00               	movlw	0
  1405   000CB6  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1406   000CB8  0E00               	movlw	0
  1407   000CBA  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1408   000CBC  EC91  F00B         	call	___lmul	;wreg free
  1409   000CC0  C00E  F02C         	movff	?___lmul,_Parte_Decimal
  1410   000CC4  C00F  F02D         	movff	?___lmul+1,_Parte_Decimal+1
  1411   000CC8  C010  F02E         	movff	?___lmul+2,_Parte_Decimal+2
  1412   000CCC  C011  F02F         	movff	?___lmul+3,_Parte_Decimal+3
  1413                           
  1414                           ;Lab4.c: 168: break;
  1415   000CD0  D0C0               	goto	l3862
  1416   000CD2                     l3808:
  1417                           
  1418                           ;Lab4.c: 170: Resultado = Numero_1 - Numero_2;
  1419   000CD2  503C               	movf	_Numero_2^0,w,c
  1420   000CD4  5C3E               	subwf	_Numero_1^0,w,c
  1421   000CD6  6E24               	movwf	??_main^0,c
  1422   000CD8  503D               	movf	(_Numero_2+1)^0,w,c
  1423   000CDA  583F               	subwfb	(_Numero_1+1)^0,w,c
  1424   000CDC  6E25               	movwf	(??_main+1)^0,c
  1425   000CDE  C024  F028         	movff	??_main,_Resultado
  1426   000CE2  C025  F029         	movff	??_main+1,_Resultado+1
  1427   000CE6  6A2A               	clrf	(_Resultado+2)^0,c
  1428   000CE8  6A2B               	clrf	(_Resultado+3)^0,c
  1429                           
  1430                           ;Lab4.c: 171: if(Numero_1<Numero_2){
  1431   000CEA  503C               	movf	_Numero_2^0,w,c
  1432   000CEC  5C3E               	subwf	_Numero_1^0,w,c
  1433   000CEE  503D               	movf	(_Numero_2+1)^0,w,c
  1434   000CF0  583F               	subwfb	(_Numero_1+1)^0,w,c
  1435   000CF2  B0D8               	btfsc	status,0,c
  1436   000CF4  D7D3               	goto	l3806
  1437                           
  1438                           ;Lab4.c: 172: Negativo=1;
  1439   000CF6  0E01               	movlw	1
  1440   000CF8  6E41               	movwf	_Negativo^0,c
  1441   000CFA  D7D0               	goto	l3806
  1442   000CFC                     l3814:
  1443                           
  1444                           ;Lab4.c: 177: Resultado = Numero_1*Numero_2;
  1445   000CFC  C03E  F00E         	movff	_Numero_1,___wmul@multiplier
  1446   000D00  C03F  F00F         	movff	_Numero_1+1,___wmul@multiplier+1
  1447   000D04  C03C  F010         	movff	_Numero_2,___wmul@multiplicand
  1448   000D08  C03D  F011         	movff	_Numero_2+1,___wmul@multiplicand+1
  1449   000D0C  EC1C  F00D         	call	___wmul	;wreg free
  1450   000D10  C00E  F028         	movff	?___wmul,_Resultado
  1451   000D14  C00F  F029         	movff	?___wmul+1,_Resultado+1
  1452   000D18  D7BF               	goto	L1
  1453   000D1A                     l3818:
  1454                           
  1455                           ;Lab4.c: 181: if(Numero_2!=0){
  1456   000D1A  503C               	movf	_Numero_2^0,w,c
  1457   000D1C  103D               	iorwf	(_Numero_2+1)^0,w,c
  1458   000D1E  B4D8               	btfsc	status,2,c
  1459   000D20  D02F               	goto	l3826
  1460                           
  1461                           ;Lab4.c: 182: if(Numero_1!=0){
  1462   000D22  503E               	movf	_Numero_1^0,w,c
  1463   000D24  103F               	iorwf	(_Numero_1+1)^0,w,c
  1464   000D26  B4D8               	btfsc	status,2,c
  1465   000D28  D094               	goto	l3862
  1466                           
  1467                           ;Lab4.c: 183: Resultado = Numero_1/Numero_2;
  1468   000D2A  C03E  F014         	movff	_Numero_1,___lwdiv@dividend
  1469   000D2E  C03F  F015         	movff	_Numero_1+1,___lwdiv@dividend+1
  1470   000D32  C03C  F016         	movff	_Numero_2,___lwdiv@divisor
  1471   000D36  C03D  F017         	movff	_Numero_2+1,___lwdiv@divisor+1
  1472   000D3A  EC12  F00C         	call	___lwdiv	;wreg free
  1473   000D3E  C014  F028         	movff	?___lwdiv,_Resultado
  1474   000D42  C015  F029         	movff	?___lwdiv+1,_Resultado+1
  1475   000D46  6A2A               	clrf	(_Resultado+2)^0,c
  1476   000D48  6A2B               	clrf	(_Resultado+3)^0,c
  1477                           
  1478                           ;Lab4.c: 184: Parte_Decimal = (Numero_1*100)/Numero_2;
  1479   000D4A  C03E  F00E         	movff	_Numero_1,___wmul@multiplier
  1480   000D4E  C03F  F00F         	movff	_Numero_1+1,___wmul@multiplier+1
  1481   000D52  0E00               	movlw	0
  1482   000D54  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1483   000D56  0E64               	movlw	100
  1484   000D58  6E10               	movwf	___wmul@multiplicand^0,c
  1485   000D5A  EC1C  F00D         	call	___wmul	;wreg free
  1486   000D5E  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1487   000D62  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1488   000D66  C03C  F016         	movff	_Numero_2,___lwdiv@divisor
  1489   000D6A  C03D  F017         	movff	_Numero_2+1,___lwdiv@divisor+1
  1490   000D6E  EC12  F00C         	call	___lwdiv	;wreg free
  1491   000D72  C014  F02C         	movff	?___lwdiv,_Parte_Decimal
  1492   000D76  C015  F02D         	movff	?___lwdiv+1,_Parte_Decimal+1
  1493   000D7A  6A2E               	clrf	(_Parte_Decimal+2)^0,c
  1494   000D7C  6A2F               	clrf	(_Parte_Decimal+3)^0,c
  1495   000D7E  D069               	goto	l3862
  1496   000D80                     l3826:
  1497                           
  1498                           ;Lab4.c: 187: if(Numero_1 != 0 & Numero_2 == 0) Resultado = 1000;
  1499   000D80  503E               	movf	_Numero_1^0,w,c
  1500   000D82  103F               	iorwf	(_Numero_1+1)^0,w,c
  1501   000D84  B4D8               	btfsc	status,2,c
  1502   000D86  D006               	goto	l3832
  1503   000D88  503C               	movf	_Numero_2^0,w,c
  1504   000D8A  103D               	iorwf	(_Numero_2+1)^0,w,c
  1505   000D8C  A4D8               	btfss	status,2,c
  1506   000D8E  D002               	goto	l3832
  1507   000D90  0EE8               	movlw	232
  1508   000D92  D009               	goto	L2
  1509   000D94                     l3832:
  1510                           
  1511                           ;Lab4.c: 188: else if(Numero_1 == 0 & Numero_2 == 0) Resultado = 1001;
  1512   000D94  503E               	movf	_Numero_1^0,w,c
  1513   000D96  103F               	iorwf	(_Numero_1+1)^0,w,c
  1514   000D98  A4D8               	btfss	status,2,c
  1515   000D9A  D780               	goto	l3806
  1516   000D9C  503C               	movf	_Numero_2^0,w,c
  1517   000D9E  103D               	iorwf	(_Numero_2+1)^0,w,c
  1518   000DA0  A4D8               	btfss	status,2,c
  1519   000DA2  D77C               	goto	l3806
  1520   000DA4  0EE9               	movlw	233
  1521   000DA6                     L2:
  1522   000DA6  6E28               	movwf	_Resultado^0,c
  1523   000DA8  0E03               	movlw	3
  1524   000DAA  D007               	goto	L3
  1525   000DAC                     l3840:
  1526                           
  1527                           ;Lab4.c: 193: if(Numero_2==0){
  1528   000DAC  503C               	movf	_Numero_2^0,w,c
  1529   000DAE  103D               	iorwf	(_Numero_2+1)^0,w,c
  1530   000DB0  A4D8               	btfss	status,2,c
  1531   000DB2  D009               	goto	l3844
  1532                           
  1533                           ;Lab4.c: 194: Resultado=1;
  1534   000DB4  0E01               	movlw	1
  1535   000DB6  6E28               	movwf	_Resultado^0,c
  1536   000DB8  0E00               	movlw	0
  1537   000DBA                     L3:
  1538   000DBA  6E29               	movwf	(_Resultado+1)^0,c
  1539   000DBC  0E00               	movlw	0
  1540   000DBE  6E2A               	movwf	(_Resultado+2)^0,c
  1541   000DC0  0E00               	movlw	0
  1542   000DC2  6E2B               	movwf	(_Resultado+3)^0,c
  1543                           
  1544                           ;Lab4.c: 195: }else{
  1545   000DC4  D76B               	goto	l3806
  1546   000DC6                     l3844:
  1547                           
  1548                           ;Lab4.c: 196: Resultado=Numero_1;
  1549   000DC6  C03E  F028         	movff	_Numero_1,_Resultado
  1550   000DCA  C03F  F029         	movff	_Numero_1+1,_Resultado+1
  1551   000DCE  6A2A               	clrf	(_Resultado+2)^0,c
  1552   000DD0  6A2B               	clrf	(_Resultado+3)^0,c
  1553                           
  1554                           ;Lab4.c: 197: for(i=1;i<Numero_2;i++){
  1555   000DD2  0E00               	movlw	0
  1556   000DD4  6E3B               	movwf	(_i+1)^0,c
  1557   000DD6  0E01               	movlw	1
  1558   000DD8  6E3A               	movwf	_i^0,c
  1559   000DDA  D01A               	goto	l3852
  1560   000DDC                     l3848:
  1561                           
  1562                           ;Lab4.c: 198: Resultado=Resultado*Numero_1;
  1563   000DDC  C03E  F00E         	movff	_Numero_1,___lmul@multiplier
  1564   000DE0  C03F  F00F         	movff	_Numero_1+1,___lmul@multiplier+1
  1565   000DE4  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1566   000DE6  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1567   000DE8  C028  F012         	movff	_Resultado,___lmul@multiplicand
  1568   000DEC  C029  F013         	movff	_Resultado+1,___lmul@multiplicand+1
  1569   000DF0  C02A  F014         	movff	_Resultado+2,___lmul@multiplicand+2
  1570   000DF4  C02B  F015         	movff	_Resultado+3,___lmul@multiplicand+3
  1571   000DF8  EC91  F00B         	call	___lmul	;wreg free
  1572   000DFC  C00E  F028         	movff	?___lmul,_Resultado
  1573   000E00  C00F  F029         	movff	?___lmul+1,_Resultado+1
  1574   000E04  C010  F02A         	movff	?___lmul+2,_Resultado+2
  1575   000E08  C011  F02B         	movff	?___lmul+3,_Resultado+3
  1576   000E0C  4A3A               	infsnz	_i^0,f,c
  1577   000E0E  2A3B               	incf	(_i+1)^0,f,c
  1578   000E10                     l3852:
  1579   000E10  503C               	movf	_Numero_2^0,w,c
  1580   000E12  5C3A               	subwf	_i^0,w,c
  1581   000E14  503D               	movf	(_Numero_2+1)^0,w,c
  1582   000E16  583B               	subwfb	(_i+1)^0,w,c
  1583   000E18  B0D8               	btfsc	status,0,c
  1584   000E1A  D740               	goto	l3806
  1585   000E1C  D7DF               	goto	l3848
  1586   000E1E                     l3856:
  1587                           
  1588                           ;Lab4.c: 204: Resultado = 0;
  1589   000E1E  0E00               	movlw	0
  1590   000E20  6E28               	movwf	_Resultado^0,c
  1591   000E22  0E00               	movlw	0
  1592   000E24  6E29               	movwf	(_Resultado+1)^0,c
  1593   000E26  0E00               	movlw	0
  1594   000E28  6E2A               	movwf	(_Resultado+2)^0,c
  1595   000E2A  0E00               	movlw	0
  1596   000E2C  6E2B               	movwf	(_Resultado+3)^0,c
  1597                           
  1598                           ;Lab4.c: 205: break;
  1599   000E2E  D011               	goto	l3862
  1600   000E30                     l3860:
  1601   000E30  504B               	movf	_Operador^0,w,c
  1602                           
  1603                           ; Switch size 1, requested type "simple"
  1604                           ; Number of cases is 5, Range of values is 43 to 120
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; simple_byte           16     9 (average)
  1608                           ;	Chosen strategy is simple_byte
  1609   000E32  0A2B               	xorlw	43	; case 43
  1610   000E34  B4D8               	btfsc	status,2,c
  1611   000E36  D726               	goto	l3804
  1612   000E38  0A06               	xorlw	6	; case 45
  1613   000E3A  B4D8               	btfsc	status,2,c
  1614   000E3C  D74A               	goto	l3808
  1615   000E3E  0A02               	xorlw	2	; case 47
  1616   000E40  B4D8               	btfsc	status,2,c
  1617   000E42  D76B               	goto	l3818
  1618   000E44  0A71               	xorlw	113	; case 94
  1619   000E46  B4D8               	btfsc	status,2,c
  1620   000E48  D7B1               	goto	l3840
  1621   000E4A  0A26               	xorlw	38	; case 120
  1622   000E4C  B4D8               	btfsc	status,2,c
  1623   000E4E  D756               	goto	l3814
  1624   000E50  D7E6               	goto	l3856
  1625   000E52                     l3862:
  1626                           
  1627                           ;Lab4.c: 207: DireccionaLCD(0x84);
  1628   000E52  0E84               	movlw	132
  1629   000E54  EC46  F00D         	call	_DireccionaLCD
  1630   000E58                     l3864:
  1631                           
  1632                           ;Lab4.c: 208: Imprimir_Resultado(Resultado);
  1633   000E58  C028  F01C         	movff	_Resultado,Imprimir_Resultado@Resultado
  1634   000E5C  C029  F01D         	movff	_Resultado+1,Imprimir_Resultado@Resultado+1
  1635   000E60  C02A  F01E         	movff	_Resultado+2,Imprimir_Resultado@Resultado+2
  1636   000E64  C02B  F01F         	movff	_Resultado+3,Imprimir_Resultado@Resultado+3
  1637   000E68  EC87  F007         	call	_Imprimir_Resultado	;wreg free
  1638                           
  1639                           ;Lab4.c: 209: }else if((Boton=='=' & Operador=='!' & Numero_1_Char != ' ') & Factorial) 
      +                          {
  1640   000E6C  D047               	goto	l3884
  1641   000E6E                     l3866:
  1642   000E6E  0E00               	movlw	0
  1643   000E70  6E27               	movwf	_main$167^0,c
  1644   000E72  0E3D               	movlw	61
  1645   000E74  1844               	xorwf	_Boton^0,w,c
  1646   000E76  A4D8               	btfss	status,2,c
  1647   000E78  D00A               	goto	l3876
  1648   000E7A  0E21               	movlw	33
  1649   000E7C  184B               	xorwf	_Operador^0,w,c
  1650   000E7E  A4D8               	btfss	status,2,c
  1651   000E80  D006               	goto	l3876
  1652   000E82  0E20               	movlw	32
  1653   000E84  184A               	xorwf	_Numero_1_Char^0,w,c
  1654   000E86  B4D8               	btfsc	status,2,c
  1655   000E88  D002               	goto	l3876
  1656   000E8A  0E01               	movlw	1
  1657   000E8C  6E27               	movwf	_main$167^0,c
  1658   000E8E                     l3876:
  1659   000E8E  5027               	movf	_main$167^0,w,c
  1660   000E90  1442               	andwf	_Factorial^0,w,c
  1661   000E92  0900               	iorlw	0
  1662   000E94  B4D8               	btfsc	status,2,c
  1663   000E96  D02F               	goto	l3882
  1664                           
  1665                           ;Lab4.c: 210: DireccionaLCD(0x82);
  1666   000E98  0E82               	movlw	130
  1667   000E9A  EC46  F00D         	call	_DireccionaLCD
  1668                           
  1669                           ;Lab4.c: 211: EscribeLCD_c('=');
  1670   000E9E  0E3D               	movlw	61
  1671   000EA0  EC3B  F00D         	call	_EscribeLCD_c
  1672                           
  1673                           ;Lab4.c: 212: Resultado=factorial_function(Numero_1);
  1674   000EA4  C03E  F01A         	movff	_Numero_1,factorial_function@a
  1675   000EA8  C03F  F01B         	movff	_Numero_1+1,factorial_function@a+1
  1676   000EAC  EC28  F00B         	call	_factorial_function	;wreg free
  1677   000EB0  C01A  F028         	movff	?_factorial_function,_Resultado
  1678   000EB4  C01B  F029         	movff	?_factorial_function+1,_Resultado+1
  1679   000EB8  C01C  F02A         	movff	?_factorial_function+2,_Resultado+2
  1680   000EBC  C01D  F02B         	movff	?_factorial_function+3,_Resultado+3
  1681                           
  1682                           ;Lab4.c: 213: Parte_Decimal = Resultado*100;
  1683   000EC0  C028  F00E         	movff	_Resultado,___lmul@multiplier
  1684   000EC4  C029  F00F         	movff	_Resultado+1,___lmul@multiplier+1
  1685   000EC8  C02A  F010         	movff	_Resultado+2,___lmul@multiplier+2
  1686   000ECC  C02B  F011         	movff	_Resultado+3,___lmul@multiplier+3
  1687   000ED0  0E64               	movlw	100
  1688   000ED2  6E12               	movwf	___lmul@multiplicand^0,c
  1689   000ED4  0E00               	movlw	0
  1690   000ED6  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1691   000ED8  0E00               	movlw	0
  1692   000EDA  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1693   000EDC  0E00               	movlw	0
  1694   000EDE  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1695   000EE0  EC91  F00B         	call	___lmul	;wreg free
  1696   000EE4  C00E  F02C         	movff	?___lmul,_Parte_Decimal
  1697   000EE8  C00F  F02D         	movff	?___lmul+1,_Parte_Decimal+1
  1698   000EEC  C010  F02E         	movff	?___lmul+2,_Parte_Decimal+2
  1699   000EF0  C011  F02F         	movff	?___lmul+3,_Parte_Decimal+3
  1700   000EF4  D7B1               	goto	l3864
  1701   000EF6                     l3882:
  1702                           
  1703                           ;Lab4.c: 216: EscribeLCD_c('W');
  1704   000EF6  0E57               	movlw	87
  1705   000EF8  EC3B  F00D         	call	_EscribeLCD_c
  1706   000EFC                     l3884:
  1707                           
  1708                           ;Lab4.c: 217: };Lab4.c: 218: _delay((unsigned long)((700)*(1000000/4000.0)));
  1709   000EFC  0EE4               	movlw	228
  1710   000EFE  6E24               	movwf	??_main^0,c
  1711   000F00  0E44               	movlw	68
  1712   000F02                     u4897:
  1713   000F02  2EE8               	decfsz	wreg,f,c
  1714   000F04  D7FE               	bra	u4897
  1715   000F06  2E24               	decfsz	??_main^0,f,c
  1716   000F08  D7FC               	bra	u4897
  1717   000F0A  D000               	nop2	
  1718   000F0C  D4F7               	goto	l3572
  1719   000F0E                     __end_of_main:
  1720                           	callstack 0
  1721                           
  1722 ;; *************** function _factorial_function *****************
  1723 ;; Defined at:
  1724 ;;		line 295 in file "Lab4.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  a               2   25[COMRAM] int 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  fact            4   29[COMRAM] long 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  4   25[COMRAM] unsigned long 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1738 ;;      Params:         4       0       0       0       0       0       0       0       0
  1739 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1741 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1742 ;;Total ram usage:        8 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 6
  1745 ;; This function calls:
  1746 ;;		___lmul
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text1
  1753   001650                     __ptext1:
  1754                           	callstack 0
  1755   001650                     _factorial_function:
  1756                           	callstack 24
  1757                           
  1758                           ;Lab4.c: 296: long fact = 1;
  1759                           
  1760                           ;incstack = 0
  1761   001650  0E01               	movlw	1
  1762   001652  6E1E               	movwf	factorial_function@fact^0,c
  1763   001654  0E00               	movlw	0
  1764   001656  6E1F               	movwf	(factorial_function@fact+1)^0,c
  1765   001658  0E00               	movlw	0
  1766   00165A  6E20               	movwf	(factorial_function@fact+2)^0,c
  1767   00165C  0E00               	movlw	0
  1768   00165E  6E21               	movwf	(factorial_function@fact+3)^0,c
  1769                           
  1770                           ;Lab4.c: 297: for (b = a; b > 1; b--){
  1771   001660  C01A  F030         	movff	factorial_function@a,_b
  1772   001664  C01B  F031         	movff	factorial_function@a+1,_b+1
  1773   001668  D01E               	goto	l3530
  1774   00166A                     l3526:
  1775                           
  1776                           ;Lab4.c: 298: fact = fact * b;
  1777   00166A  C030  F00E         	movff	_b,___lmul@multiplier
  1778   00166E  C031  F00F         	movff	_b+1,___lmul@multiplier+1
  1779   001672  0E00               	movlw	0
  1780   001674  BE0F               	btfsc	(___lmul@multiplier+1)^0,7,c
  1781   001676  0EFF               	movlw	-1
  1782   001678  6E10               	movwf	(___lmul@multiplier+2)^0,c
  1783   00167A  6E11               	movwf	(___lmul@multiplier+3)^0,c
  1784   00167C  C01E  F012         	movff	factorial_function@fact,___lmul@multiplicand
  1785   001680  C01F  F013         	movff	factorial_function@fact+1,___lmul@multiplicand+1
  1786   001684  C020  F014         	movff	factorial_function@fact+2,___lmul@multiplicand+2
  1787   001688  C021  F015         	movff	factorial_function@fact+3,___lmul@multiplicand+3
  1788   00168C  EC91  F00B         	call	___lmul	;wreg free
  1789   001690  C00E  F01E         	movff	?___lmul,factorial_function@fact
  1790   001694  C00F  F01F         	movff	?___lmul+1,factorial_function@fact+1
  1791   001698  C010  F020         	movff	?___lmul+2,factorial_function@fact+2
  1792   00169C  C011  F021         	movff	?___lmul+3,factorial_function@fact+3
  1793   0016A0  0630               	decf	_b^0,f,c
  1794   0016A2  A0D8               	btfss	status,0,c
  1795   0016A4  0631               	decf	(_b+1)^0,f,c
  1796   0016A6                     l3530:
  1797   0016A6  BE31               	btfsc	(_b+1)^0,7,c
  1798   0016A8  D006               	goto	u4000
  1799   0016AA  5031               	movf	(_b+1)^0,w,c
  1800   0016AC  E1DE               	bnz	l3526
  1801   0016AE  0E02               	movlw	2
  1802   0016B0  5C30               	subwf	_b^0,w,c
  1803   0016B2  B0D8               	btfsc	status,0,c
  1804   0016B4  D7DA               	goto	l3526
  1805   0016B6                     u4000:
  1806                           
  1807                           ;Lab4.c: 299: };Lab4.c: 301: return fact;
  1808   0016B6  C01E  F01A         	movff	factorial_function@fact,?_factorial_function
  1809   0016BA  C01F  F01B         	movff	factorial_function@fact+1,?_factorial_function+1
  1810   0016BE  C020  F01C         	movff	factorial_function@fact+2,?_factorial_function+2
  1811   0016C2  C021  F01D         	movff	factorial_function@fact+3,?_factorial_function+3
  1812   0016C6  0012               	return		;funcret
  1813   0016C8                     __end_of_factorial_function:
  1814                           	callstack 0
  1815                           
  1816 ;; *************** function _LeerTeclado *****************
  1817 ;; Defined at:
  1818 ;;		line 224 in file "Lab4.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      unsigned char 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1832 ;;      Params:         0       0       0       0       0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1835 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1836 ;;Total ram usage:        0 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; Hardware stack levels required when called: 5
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_main
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text2
  1847   001336                     __ptext2:
  1848                           	callstack 0
  1849   001336                     _LeerTeclado:
  1850                           	callstack 25
  1851                           
  1852                           ;Lab4.c: 225: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1853                           
  1854                           ;incstack = 0
  1855   001336  B881               	btfsc	3969,4,c	;volatile
  1856   001338  AA81               	btfss	3969,5,c	;volatile
  1857   00133A  D004               	goto	u2130
  1858   00133C  AC81               	btfss	3969,6,c	;volatile
  1859   00133E  D002               	goto	u2130
  1860   001340  BE81               	btfsc	3969,7,c	;volatile
  1861   001342  D7F9               	goto	__ptext2
  1862   001344                     u2130:
  1863                           
  1864                           ;Lab4.c: 226: Verificador = 1;
  1865   001344  0E00               	movlw	0
  1866   001346  6E35               	movwf	(_Verificador+1)^0,c
  1867   001348  0E01               	movlw	1
  1868   00134A  6E34               	movwf	_Verificador^0,c
  1869                           
  1870                           ;Lab4.c: 227: LATB=0b11111110;
  1871   00134C  0EFE               	movlw	254
  1872   00134E  6E8A               	movwf	138,c	;volatile
  1873                           
  1874                           ;Lab4.c: 228: if(RB4==0){
  1875   001350  B881               	btfsc	3969,4,c	;volatile
  1876   001352  D00A               	goto	l274
  1877                           
  1878                           ;Lab4.c: 229: if(!Potencia) return '+';
  1879   001354  5043               	movf	_Potencia^0,w,c
  1880   001356  A4D8               	btfss	status,2,c
  1881   001358  D002               	goto	l2484
  1882   00135A  0E2B               	movlw	43
  1883   00135C  0012               	return	
  1884   00135E                     l2484:
  1885                           
  1886                           ;Lab4.c: 230: else if(Potencia) return '^';
  1887   00135E  5043               	movf	_Potencia^0,w,c
  1888   001360  B4D8               	btfsc	status,2,c
  1889   001362  D04C               	goto	l306
  1890   001364  0E5E               	movlw	94
  1891   001366  0012               	return	
  1892   001368                     l274:
  1893                           
  1894                           ;Lab4.c: 232: else if(RB5==0) return '=';
  1895   001368  BA81               	btfsc	3969,5,c	;volatile
  1896   00136A  D002               	goto	l280
  1897   00136C  0E3D               	movlw	61
  1898   00136E  0012               	return	
  1899   001370                     l280:
  1900                           
  1901                           ;Lab4.c: 233: else if(RB6==0) return '0';
  1902   001370  BC81               	btfsc	3969,6,c	;volatile
  1903   001372  D002               	goto	l282
  1904   001374  0E30               	movlw	48
  1905   001376  0012               	return	
  1906   001378                     l282:
  1907                           
  1908                           ;Lab4.c: 234: else if(RB7==0) return 'C';
  1909   001378  BE81               	btfsc	3969,7,c	;volatile
  1910   00137A  D002               	goto	l2508
  1911   00137C  0E43               	movlw	67
  1912   00137E  0012               	return	
  1913   001380                     l2508:
  1914                           
  1915                           ;Lab4.c: 235: else{;Lab4.c: 236: LATB=0b11111101;
  1916   001380  0EFD               	movlw	253
  1917   001382  6E8A               	movwf	138,c	;volatile
  1918                           
  1919                           ;Lab4.c: 237: if(RB4==0){
  1920   001384  B881               	btfsc	3969,4,c	;volatile
  1921   001386  D00A               	goto	l286
  1922                           
  1923                           ;Lab4.c: 238: if(!Factorial) return '-';
  1924   001388  5042               	movf	_Factorial^0,w,c
  1925   00138A  A4D8               	btfss	status,2,c
  1926   00138C  D002               	goto	l2520
  1927   00138E  0E2D               	movlw	45
  1928   001390  0012               	return	
  1929   001392                     l2520:
  1930                           
  1931                           ;Lab4.c: 239: else if(Factorial) return '!';
  1932   001392  5042               	movf	_Factorial^0,w,c
  1933   001394  B4D8               	btfsc	status,2,c
  1934   001396  D032               	goto	l306
  1935   001398  0E21               	movlw	33
  1936   00139A  0012               	return	
  1937   00139C                     l286:
  1938                           
  1939                           ;Lab4.c: 241: else if(RB5==0) return '9';
  1940   00139C  BA81               	btfsc	3969,5,c	;volatile
  1941   00139E  D002               	goto	l291
  1942   0013A0  0E39               	movlw	57
  1943   0013A2  0012               	return	
  1944   0013A4                     l291:
  1945                           
  1946                           ;Lab4.c: 242: else if(RB6==0) return '8';
  1947   0013A4  BC81               	btfsc	3969,6,c	;volatile
  1948   0013A6  D002               	goto	l293
  1949   0013A8  0E38               	movlw	56
  1950   0013AA  0012               	return	
  1951   0013AC                     l293:
  1952                           
  1953                           ;Lab4.c: 243: else if(RB7==0) return '7';
  1954   0013AC  BE81               	btfsc	3969,7,c	;volatile
  1955   0013AE  D002               	goto	l2544
  1956   0013B0  0E37               	movlw	55
  1957   0013B2  0012               	return	
  1958   0013B4                     l2544:
  1959                           
  1960                           ;Lab4.c: 244: else{;Lab4.c: 245: LATB=0b11111011;
  1961   0013B4  0EFB               	movlw	251
  1962   0013B6  6E8A               	movwf	138,c	;volatile
  1963                           
  1964                           ;Lab4.c: 246: if(RB4==0) return 'x';
  1965   0013B8  B881               	btfsc	3969,4,c	;volatile
  1966   0013BA  D002               	goto	l297
  1967   0013BC  0E78               	movlw	120
  1968   0013BE  0012               	return	
  1969   0013C0                     l297:
  1970                           
  1971                           ;Lab4.c: 247: else if(RB5==0) return '6';
  1972   0013C0  BA81               	btfsc	3969,5,c	;volatile
  1973   0013C2  D002               	goto	l299
  1974   0013C4  0E36               	movlw	54
  1975   0013C6  0012               	return	
  1976   0013C8                     l299:
  1977                           
  1978                           ;Lab4.c: 248: else if(RB6==0) return '5';
  1979   0013C8  BC81               	btfsc	3969,6,c	;volatile
  1980   0013CA  D002               	goto	l301
  1981   0013CC  0E35               	movlw	53
  1982   0013CE  0012               	return	
  1983   0013D0                     l301:
  1984                           
  1985                           ;Lab4.c: 249: else if(RB7==0) return '4';
  1986   0013D0  BE81               	btfsc	3969,7,c	;volatile
  1987   0013D2  D002               	goto	l2572
  1988   0013D4  0E34               	movlw	52
  1989   0013D6  0012               	return	
  1990   0013D8                     l2572:
  1991                           
  1992                           ;Lab4.c: 250: else{;Lab4.c: 251: LATB=0b11110111;
  1993   0013D8  0EF7               	movlw	247
  1994   0013DA  6E8A               	movwf	138,c	;volatile
  1995                           
  1996                           ;Lab4.c: 252: if(RB4==0) return '/';
  1997   0013DC  B881               	btfsc	3969,4,c	;volatile
  1998   0013DE  D002               	goto	l305
  1999   0013E0  0E2F               	movlw	47
  2000   0013E2  0012               	return	
  2001   0013E4                     l305:
  2002                           
  2003                           ;Lab4.c: 253: else if(RB5==0) return '3';
  2004   0013E4  BA81               	btfsc	3969,5,c	;volatile
  2005   0013E6  D002               	goto	l307
  2006   0013E8  0E33               	movlw	51
  2007   0013EA  0012               	return	
  2008   0013EC                     l307:
  2009                           
  2010                           ;Lab4.c: 254: else if(RB6==0) return '2';
  2011   0013EC  BC81               	btfsc	3969,6,c	;volatile
  2012   0013EE  D002               	goto	l309
  2013   0013F0  0E32               	movlw	50
  2014   0013F2  0012               	return	
  2015   0013F4                     l309:
  2016                           
  2017                           ;Lab4.c: 255: else if(RB7==0) return '1';
  2018   0013F4  BE81               	btfsc	3969,7,c	;volatile
  2019   0013F6  D002               	goto	l306
  2020   0013F8  0E31               	movlw	49
  2021   0013FA  0012               	return	
  2022   0013FC                     l306:
  2023                           
  2024                           ;Lab4.c: 256: };Lab4.c: 257: };Lab4.c: 258: };Lab4.c: 259: return '?';
  2025   0013FC  0E3F               	movlw	63
  2026   0013FE  0012               	return		;funcret
  2027   001400                     __end_of_LeerTeclado:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _InicializaLCD *****************
  2031 ;; Defined at:
  2032 ;;		line 63 in file "LibLCDXC8.h"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2049 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 8
  2053 ;; This function calls:
  2054 ;;		_BorraLCD
  2055 ;;		_EnviaDato
  2056 ;;		_HabilitaLCD
  2057 ;;		_RetardoLCD
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text3
  2064   0014AC                     __ptext3:
  2065                           	callstack 0
  2066   0014AC                     _InicializaLCD:
  2067                           	callstack 22
  2068                           
  2069                           ;LibLCDXC8.h: 65: LATE0=0;
  2070                           
  2071                           ;incstack = 0
  2072   0014AC  908D               	bcf	3981,0,c	;volatile
  2073                           
  2074                           ;LibLCDXC8.h: 66: if(interfaz==4)
  2075   0014AE  0E04               	movlw	4
  2076   0014B0  184C               	xorwf	_interfaz^0,w,c
  2077   0014B2  A4D8               	btfss	status,2,c
  2078   0014B4  D004               	goto	l3372
  2079                           
  2080                           ;LibLCDXC8.h: 67: LATD=(LATD & 0b00001111) | 0x30;
  2081   0014B6  508C               	movf	140,w,c	;volatile
  2082   0014B8  0B0F               	andlw	15
  2083   0014BA  0930               	iorlw	48
  2084   0014BC  D001               	goto	L4
  2085   0014BE                     l3372:
  2086                           
  2087                           ;LibLCDXC8.h: 68: else;LibLCDXC8.h: 69: LATD=0x3F;
  2088   0014BE  0E3F               	movlw	63
  2089   0014C0                     L4:
  2090   0014C0  6E8C               	movwf	140,c	;volatile
  2091                           
  2092                           ;LibLCDXC8.h: 70: HabilitaLCD();
  2093   0014C2  EC83  F00D         	call	_HabilitaLCD	;wreg free
  2094                           
  2095                           ;LibLCDXC8.h: 71: RetardoLCD(1);
  2096   0014C6  0E01               	movlw	1
  2097   0014C8  ECBC  F00B         	call	_RetardoLCD
  2098                           
  2099                           ;LibLCDXC8.h: 72: if(interfaz==4)
  2100   0014CC  0E04               	movlw	4
  2101   0014CE  184C               	xorwf	_interfaz^0,w,c
  2102   0014D0  A4D8               	btfss	status,2,c
  2103   0014D2  D004               	goto	l3382
  2104                           
  2105                           ;LibLCDXC8.h: 73: LATD=(LATD & 0b00001111) | 0x30;
  2106   0014D4  508C               	movf	140,w,c	;volatile
  2107   0014D6  0B0F               	andlw	15
  2108   0014D8  0930               	iorlw	48
  2109   0014DA  D001               	goto	L5
  2110   0014DC                     l3382:
  2111                           
  2112                           ;LibLCDXC8.h: 74: else;LibLCDXC8.h: 75: LATD=0x3F;
  2113   0014DC  0E3F               	movlw	63
  2114   0014DE                     L5:
  2115   0014DE  6E8C               	movwf	140,c	;volatile
  2116                           
  2117                           ;LibLCDXC8.h: 76: HabilitaLCD();
  2118   0014E0  EC83  F00D         	call	_HabilitaLCD	;wreg free
  2119                           
  2120                           ;LibLCDXC8.h: 77: RetardoLCD(3);
  2121   0014E4  0E03               	movlw	3
  2122   0014E6  ECBC  F00B         	call	_RetardoLCD
  2123                           
  2124                           ;LibLCDXC8.h: 78: if(interfaz==4)
  2125   0014EA  0E04               	movlw	4
  2126   0014EC  184C               	xorwf	_interfaz^0,w,c
  2127   0014EE  A4D8               	btfss	status,2,c
  2128   0014F0  D004               	goto	l3392
  2129                           
  2130                           ;LibLCDXC8.h: 79: LATD=(LATD & 0b00001111) | 0x30;
  2131   0014F2  508C               	movf	140,w,c	;volatile
  2132   0014F4  0B0F               	andlw	15
  2133   0014F6  0930               	iorlw	48
  2134   0014F8  D001               	goto	L6
  2135   0014FA                     l3392:
  2136                           
  2137                           ;LibLCDXC8.h: 80: else;LibLCDXC8.h: 81: LATD=0x3F;
  2138   0014FA  0E3F               	movlw	63
  2139   0014FC                     L6:
  2140   0014FC  6E8C               	movwf	140,c	;volatile
  2141                           
  2142                           ;LibLCDXC8.h: 82: HabilitaLCD();
  2143   0014FE  EC83  F00D         	call	_HabilitaLCD	;wreg free
  2144                           
  2145                           ;LibLCDXC8.h: 83: RetardoLCD(4);
  2146   001502  0E04               	movlw	4
  2147   001504  ECBC  F00B         	call	_RetardoLCD
  2148                           
  2149                           ;LibLCDXC8.h: 84: if(interfaz==4){
  2150   001508  0E04               	movlw	4
  2151   00150A  184C               	xorwf	_interfaz^0,w,c
  2152   00150C  A4D8               	btfss	status,2,c
  2153   00150E  D011               	goto	l3412
  2154                           
  2155                           ;LibLCDXC8.h: 85: LATD=(LATD & 0b00001111) | 0x20;
  2156   001510  508C               	movf	140,w,c	;volatile
  2157   001512  0B0F               	andlw	15
  2158   001514  0920               	iorlw	32
  2159   001516  6E8C               	movwf	140,c	;volatile
  2160                           
  2161                           ;LibLCDXC8.h: 86: HabilitaLCD();
  2162   001518  EC83  F00D         	call	_HabilitaLCD	;wreg free
  2163                           
  2164                           ;LibLCDXC8.h: 87: RetardoLCD(4);
  2165   00151C  0E04               	movlw	4
  2166   00151E  ECBC  F00B         	call	_RetardoLCD
  2167                           
  2168                           ;LibLCDXC8.h: 88: EnviaDato(0x2F);
  2169   001522  0E2F               	movlw	47
  2170   001524  EC8D  F00C         	call	_EnviaDato
  2171                           
  2172                           ;LibLCDXC8.h: 89: HabilitaLCD();
  2173   001528  EC83  F00D         	call	_HabilitaLCD	;wreg free
  2174                           
  2175                           ;LibLCDXC8.h: 90: RetardoLCD(4);
  2176   00152C  0E04               	movlw	4
  2177   00152E  ECBC  F00B         	call	_RetardoLCD
  2178   001532                     l3412:
  2179                           
  2180                           ;LibLCDXC8.h: 91: };LibLCDXC8.h: 92: BorraLCD();
  2181   001532  EC67  F00D         	call	_BorraLCD	;wreg free
  2182                           
  2183                           ;LibLCDXC8.h: 93: EnviaDato(0xF);
  2184   001536  0E0F               	movlw	15
  2185   001538  EC8D  F00C         	call	_EnviaDato
  2186                           
  2187                           ;LibLCDXC8.h: 94: HabilitaLCD();
  2188   00153C  EC83  F00D         	call	_HabilitaLCD	;wreg free
  2189                           
  2190                           ;LibLCDXC8.h: 95: RetardoLCD(4);
  2191   001540  0E04               	movlw	4
  2192   001542  ECBC  F00B         	call	_RetardoLCD
  2193   001546  0012               	return		;funcret
  2194   001548                     __end_of_InicializaLCD:
  2195                           	callstack 0
  2196                           
  2197 ;; *************** function _BorraLCD *****************
  2198 ;; Defined at:
  2199 ;;		line 104 in file "LibLCDXC8.h"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 7
  2220 ;; This function calls:
  2221 ;;		_EnviaDato
  2222 ;;		_HabilitaLCD
  2223 ;;		_RetardoLCD
  2224 ;; This function is called by:
  2225 ;;		_InicializaLCD
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text4
  2231   001ACE                     __ptext4:
  2232                           	callstack 0
  2233   001ACE                     _BorraLCD:
  2234                           	callstack 22
  2235                           
  2236                           ;LibLCDXC8.h: 106: LATE0=0;
  2237                           
  2238                           ;incstack = 0
  2239   001ACE  908D               	bcf	3981,0,c	;volatile
  2240                           
  2241                           ;LibLCDXC8.h: 107: EnviaDato(0x01);
  2242   001AD0  0E01               	movlw	1
  2243   001AD2  EC8D  F00C         	call	_EnviaDato
  2244                           
  2245                           ;LibLCDXC8.h: 108: HabilitaLCD();
  2246   001AD6  EC83  F00D         	call	_HabilitaLCD	;wreg free
  2247                           
  2248                           ;LibLCDXC8.h: 109: RetardoLCD(2);
  2249   001ADA  0E02               	movlw	2
  2250   001ADC  ECBC  F00B         	call	_RetardoLCD
  2251   001AE0  0012               	return		;funcret
  2252   001AE2                     __end_of_BorraLCD:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _Imprimir_Resultado *****************
  2256 ;; Defined at:
  2257 ;;		line 326 in file "Lab4.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  Resultado       4   27[COMRAM] long 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  k               2    1[BANK0 ] int 
  2262 ;;  j               2    5[BANK0 ] int 
  2263 ;;  i               2    3[BANK0 ] int 
  2264 ;;  Potencia        4    7[BANK0 ] long 
  2265 ;;  flag            1    0[BANK0 ] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2275 ;;      Params:         4       0       0       0       0       0       0       0       0
  2276 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2277 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2278 ;;      Totals:         8      11       0       0       0       0       0       0       0
  2279 ;;Total ram usage:       19 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 9
  2282 ;; This function calls:
  2283 ;;		_DireccionaLCD
  2284 ;;		_EscribeLCD_c
  2285 ;;		_MensajeLCD_Var
  2286 ;;		___aldiv
  2287 ;;		___almod
  2288 ;;		___lmul
  2289 ;;		___lwdiv
  2290 ;;		___lwmod
  2291 ;;		___wmul
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text5
  2298   000F0E                     __ptext5:
  2299                           	callstack 0
  2300   000F0E                     _Imprimir_Resultado:
  2301                           	callstack 21
  2302                           
  2303                           ;Lab4.c: 328: bool flag=0;
  2304                           
  2305                           ;incstack = 0
  2306   000F0E  0E00               	movlw	0
  2307   000F10  0100               	movlb	0	; () banked
  2308   000F12  6F70               	movwf	Imprimir_Resultado@flag& (0+255),b
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;Lab4.c: 329: if ((Parte_Decimal-(Resultado*100))>0 | (Parte_Decimal-(Resultado*100))<0)
      +                          {
  2312   000F14  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___lmul@multiplier
  2313   000F18  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___lmul@multiplier+1
  2314   000F1C  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___lmul@multiplier+2
  2315   000F20  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___lmul@multiplier+3
  2316   000F24  0E9C               	movlw	156
  2317   000F26  6E12               	movwf	___lmul@multiplicand^0,c
  2318   000F28  0EFF               	movlw	255
  2319   000F2A  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2320   000F2C  0EFF               	movlw	255
  2321   000F2E  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2322   000F30  0EFF               	movlw	255
  2323   000F32  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2324   000F34  EC91  F00B         	call	___lmul	;wreg free
  2325   000F38  502C               	movf	_Parte_Decimal^0,w,c
  2326   000F3A  240E               	addwf	?___lmul^0,w,c
  2327   000F3C  6E20               	movwf	??_Imprimir_Resultado^0,c
  2328   000F3E  502D               	movf	(_Parte_Decimal+1)^0,w,c
  2329   000F40  200F               	addwfc	(?___lmul+1)^0,w,c
  2330   000F42  6E21               	movwf	(??_Imprimir_Resultado+1)^0,c
  2331   000F44  502E               	movf	(_Parte_Decimal+2)^0,w,c
  2332   000F46  2010               	addwfc	(?___lmul+2)^0,w,c
  2333   000F48  6E22               	movwf	(??_Imprimir_Resultado+2)^0,c
  2334   000F4A  502F               	movf	(_Parte_Decimal+3)^0,w,c
  2335   000F4C  2011               	addwfc	(?___lmul+3)^0,w,c
  2336   000F4E  6E23               	movwf	(??_Imprimir_Resultado+3)^0,c
  2337   000F50  5020               	movf	??_Imprimir_Resultado^0,w,c
  2338   000F52  1021               	iorwf	(??_Imprimir_Resultado+1)^0,w,c
  2339   000F54  1022               	iorwf	(??_Imprimir_Resultado+2)^0,w,c
  2340   000F56  1023               	iorwf	(??_Imprimir_Resultado+3)^0,w,c
  2341   000F58  B4D8               	btfsc	status,2,c
  2342   000F5A  D058               	goto	l3448
  2343                           
  2344                           ;Lab4.c: 330: for (int i = 0; i < 3; i++) {
  2345   000F5C  0E00               	movlw	0
  2346   000F5E  0100               	movlb	0	; () banked
  2347   000F60  6F74               	movwf	(Imprimir_Resultado@i+1)& (0+255),b
  2348   000F62  0E00               	movlw	0
  2349   000F64  6F73               	movwf	Imprimir_Resultado@i& (0+255),b
  2350   000F66                     l3432:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;Lab4.c: 331: Resultado = Numero_1 / Numero_2;
  2354   000F66  C03E  F014         	movff	_Numero_1,___lwdiv@dividend
  2355   000F6A  C03F  F015         	movff	_Numero_1+1,___lwdiv@dividend+1
  2356   000F6E  C03C  F016         	movff	_Numero_2,___lwdiv@divisor
  2357   000F72  C03D  F017         	movff	_Numero_2+1,___lwdiv@divisor+1
  2358   000F76  EC12  F00C         	call	___lwdiv	;wreg free
  2359   000F7A  C014  F01C         	movff	?___lwdiv,Imprimir_Resultado@Resultado
  2360   000F7E  C015  F01D         	movff	?___lwdiv+1,Imprimir_Resultado@Resultado+1
  2361   000F82  6A1E               	clrf	(Imprimir_Resultado@Resultado+2)^0,c
  2362   000F84  6A1F               	clrf	(Imprimir_Resultado@Resultado+3)^0,c
  2363                           
  2364                           ;Lab4.c: 332: m = Numero_1 % Numero_2;
  2365   000F86  C03E  F00E         	movff	_Numero_1,___lwmod@dividend
  2366   000F8A  C03F  F00F         	movff	_Numero_1+1,___lwmod@dividend+1
  2367   000F8E  C03C  F010         	movff	_Numero_2,___lwmod@divisor
  2368   000F92  C03D  F011         	movff	_Numero_2+1,___lwmod@divisor+1
  2369   000F96  ECD3  F00C         	call	___lwmod	;wreg free
  2370   000F9A  C00E  F045         	movff	?___lwmod,_m
  2371   000F9E  C00F  F046         	movff	?___lwmod+1,_m+1
  2372   000FA2  6A47               	clrf	(_m+2)^0,c
  2373   000FA4  6A48               	clrf	(_m+3)^0,c
  2374                           
  2375                           ;Lab4.c: 333: EscribeLCD_c(Resultado+'0');
  2376   000FA6  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  2377   000FA8  0F30               	addlw	48
  2378   000FAA  EC3B  F00D         	call	_EscribeLCD_c
  2379                           
  2380                           ;Lab4.c: 334: if(i == 0 && m != 0) {
  2381   000FAE  0100               	movlb	0	; () banked
  2382   000FB0  5173               	movf	Imprimir_Resultado@i& (0+255),w,b
  2383   000FB2  1174               	iorwf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2384   000FB4  A4D8               	btfss	status,2,c
  2385   000FB6  D009               	goto	l3440
  2386                           
  2387                           ; BSR set to: 0
  2388   000FB8  5045               	movf	_m^0,w,c
  2389   000FBA  1046               	iorwf	(_m+1)^0,w,c
  2390   000FBC  1047               	iorwf	(_m+2)^0,w,c
  2391   000FBE  1048               	iorwf	(_m+3)^0,w,c
  2392   000FC0  B4D8               	btfsc	status,2,c
  2393   000FC2  D003               	goto	l3440
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;Lab4.c: 335: EscribeLCD_c(',');
  2397   000FC4  0E2C               	movlw	44
  2398   000FC6  EC3B  F00D         	call	_EscribeLCD_c
  2399   000FCA                     l3440:
  2400                           
  2401                           ;Lab4.c: 336: };Lab4.c: 338: if (m != 0) {
  2402   000FCA  5045               	movf	_m^0,w,c
  2403   000FCC  1046               	iorwf	(_m+1)^0,w,c
  2404   000FCE  1047               	iorwf	(_m+2)^0,w,c
  2405   000FD0  1048               	iorwf	(_m+3)^0,w,c
  2406   000FD2  B4D8               	btfsc	status,2,c
  2407   000FD4  0012               	return	
  2408                           
  2409                           ;Lab4.c: 339: Numero_1 = m * 10;
  2410   000FD6  C045  F00E         	movff	_m,___wmul@multiplier
  2411   000FDA  C046  F00F         	movff	_m+1,___wmul@multiplier+1
  2412   000FDE  0E00               	movlw	0
  2413   000FE0  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  2414   000FE2  0E0A               	movlw	10
  2415   000FE4  6E10               	movwf	___wmul@multiplicand^0,c
  2416   000FE6  EC1C  F00D         	call	___wmul	;wreg free
  2417   000FEA  C00E  F03E         	movff	?___wmul,_Numero_1
  2418   000FEE  C00F  F03F         	movff	?___wmul+1,_Numero_1+1
  2419                           
  2420                           ;Lab4.c: 340: } else {
  2421   000FF2  0100               	movlb	0	; () banked
  2422   000FF4  4B73               	infsnz	Imprimir_Resultado@i& (0+255),f,b
  2423   000FF6  2B74               	incf	(Imprimir_Resultado@i+1)& (0+255),f,b
  2424                           
  2425                           ; BSR set to: 0
  2426   000FF8  BF74               	btfsc	(Imprimir_Resultado@i+1)& (0+255),7,b
  2427   000FFA  D7B5               	goto	l3432
  2428   000FFC  5174               	movf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2429   000FFE  E105               	bnz	u3840
  2430   001000  0E03               	movlw	3
  2431   001002  5D73               	subwf	Imprimir_Resultado@i& (0+255),w,b
  2432   001004  B0D8               	btfsc	status,0,c
  2433   001006  0012               	return	
  2434   001008  D7AE               	goto	l3432
  2435   00100A                     u3840:
  2436   00100A  0012               	return	
  2437   00100C                     l3448:
  2438                           
  2439                           ;Lab4.c: 346: if(Resultado>0x8000 & Resultado!=1000 & Resultado !=1001 & Negativo==1){
  2440   00100C  BE1F               	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2441   00100E  D030               	goto	l3462
  2442   001010  501F               	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2443   001012  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2444   001014  E105               	bnz	u3850
  2445   001016  041C               	decf	Imprimir_Resultado@Resultado^0,w,c
  2446   001018  0E80               	movlw	128
  2447   00101A  581D               	subwfb	(Imprimir_Resultado@Resultado+1)^0,w,c
  2448   00101C  A0D8               	btfss	status,0,c
  2449   00101E  D028               	goto	l3462
  2450   001020                     u3850:
  2451   001020  0EE8               	movlw	232
  2452   001022  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2453   001024  E106               	bnz	u3860
  2454   001026  0E03               	movlw	3
  2455   001028  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2456   00102A  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2457   00102C  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2458   00102E  B4D8               	btfsc	status,2,c
  2459   001030  D01F               	goto	l3462
  2460   001032                     u3860:
  2461   001032  0EE9               	movlw	233
  2462   001034  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2463   001036  E106               	bnz	u3870
  2464   001038  0E03               	movlw	3
  2465   00103A  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2466   00103C  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2467   00103E  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2468   001040  B4D8               	btfsc	status,2,c
  2469   001042  D016               	goto	l3462
  2470   001044                     u3870:
  2471   001044  0441               	decf	_Negativo^0,w,c
  2472   001046  A4D8               	btfss	status,2,c
  2473   001048  D013               	goto	l3462
  2474                           
  2475                           ;Lab4.c: 347: EscribeLCD_c('-');
  2476   00104A  0E2D               	movlw	45
  2477   00104C  EC3B  F00D         	call	_EscribeLCD_c
  2478                           
  2479                           ;Lab4.c: 348: DireccionaLCD(0x85);
  2480   001050  0E85               	movlw	133
  2481   001052  EC46  F00D         	call	_DireccionaLCD
  2482                           
  2483                           ;Lab4.c: 349: Resultado = ~Resultado+1;
  2484   001056  1E1F               	comf	(Imprimir_Resultado@Resultado+3)^0,f,c
  2485   001058  1E1E               	comf	(Imprimir_Resultado@Resultado+2)^0,f,c
  2486   00105A  1E1D               	comf	(Imprimir_Resultado@Resultado+1)^0,f,c
  2487   00105C  6C1C               	negf	Imprimir_Resultado@Resultado^0,c
  2488   00105E  0E00               	movlw	0
  2489   001060  221D               	addwfc	(Imprimir_Resultado@Resultado+1)^0,f,c
  2490   001062  221E               	addwfc	(Imprimir_Resultado@Resultado+2)^0,f,c
  2491   001064  221F               	addwfc	(Imprimir_Resultado@Resultado+3)^0,f,c
  2492                           
  2493                           ;Lab4.c: 350: EscribeLCD_c(Resultado+'0');
  2494   001066  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  2495   001068  0F30               	addlw	48
  2496   00106A  EC3B  F00D         	call	_EscribeLCD_c
  2497                           
  2498                           ;Lab4.c: 351: }else{
  2499   00106E  0012               	return	
  2500   001070                     l3462:
  2501                           
  2502                           ;Lab4.c: 352: if(Resultado>=0xA & Resultado!=1000 & Resultado !=1001){
  2503   001070  BE1F               	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2504   001072  D0D7               	goto	l3510
  2505   001074  501F               	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2506   001076  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2507   001078  101D               	iorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2508   00107A  E104               	bnz	u3890
  2509   00107C  0E0A               	movlw	10
  2510   00107E  5C1C               	subwf	Imprimir_Resultado@Resultado^0,w,c
  2511   001080  A0D8               	btfss	status,0,c
  2512   001082  D0CF               	goto	l3510
  2513   001084                     u3890:
  2514   001084  0EE8               	movlw	232
  2515   001086  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2516   001088  E106               	bnz	u3900
  2517   00108A  0E03               	movlw	3
  2518   00108C  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2519   00108E  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2520   001090  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2521   001092  B4D8               	btfsc	status,2,c
  2522   001094  D0C6               	goto	l3510
  2523   001096                     u3900:
  2524   001096  0EE9               	movlw	233
  2525   001098  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2526   00109A  E106               	bnz	u3910
  2527   00109C  0E03               	movlw	3
  2528   00109E  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2529   0010A0  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2530   0010A2  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2531   0010A4  B4D8               	btfsc	status,2,c
  2532   0010A6  D0BD               	goto	l3510
  2533   0010A8                     u3910:
  2534                           
  2535                           ;Lab4.c: 353: for(int j=9;j>=0;j--){
  2536   0010A8  0E00               	movlw	0
  2537   0010AA  0100               	movlb	0	; () banked
  2538   0010AC  6F76               	movwf	(Imprimir_Resultado@j+1)& (0+255),b
  2539   0010AE  0E09               	movlw	9
  2540   0010B0  6F75               	movwf	Imprimir_Resultado@j& (0+255),b
  2541   0010B2                     l3474:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;Lab4.c: 354: Potencia = 10;
  2545   0010B2  0E0A               	movlw	10
  2546   0010B4  6F77               	movwf	Imprimir_Resultado@Potencia& (0+255),b
  2547   0010B6  0E00               	movlw	0
  2548   0010B8  6F78               	movwf	(Imprimir_Resultado@Potencia+1)& (0+255),b
  2549   0010BA  0E00               	movlw	0
  2550   0010BC  6F79               	movwf	(Imprimir_Resultado@Potencia+2)& (0+255),b
  2551   0010BE  0E00               	movlw	0
  2552   0010C0  6F7A               	movwf	(Imprimir_Resultado@Potencia+3)& (0+255),b
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;Lab4.c: 355: for(int k=j-1;k>0;k--){
  2556   0010C2  0EFF               	movlw	255
  2557   0010C4  2575               	addwf	Imprimir_Resultado@j& (0+255),w,b
  2558   0010C6  6F71               	movwf	Imprimir_Resultado@k& (0+255),b
  2559   0010C8  0EFF               	movlw	255
  2560   0010CA  2176               	addwfc	(Imprimir_Resultado@j+1)& (0+255),w,b
  2561   0010CC  6F72               	movwf	(Imprimir_Resultado@k+1)& (0+255),b
  2562   0010CE                     l3478:
  2563                           
  2564                           ; BSR set to: 0
  2565   0010CE  BF72               	btfsc	(Imprimir_Resultado@k+1)& (0+255),7,b
  2566   0010D0  D024               	goto	l3488
  2567   0010D2  5172               	movf	(Imprimir_Resultado@k+1)& (0+255),w,b
  2568   0010D4  E103               	bnz	l3482
  2569   0010D6  0571               	decf	Imprimir_Resultado@k& (0+255),w,b
  2570   0010D8  A0D8               	btfss	status,0,c
  2571   0010DA  D01F               	goto	l3488
  2572   0010DC                     l3482:
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;Lab4.c: 356: Potencia = Potencia*10;
  2576   0010DC  C077  F00E         	movff	Imprimir_Resultado@Potencia,___lmul@multiplier
  2577   0010E0  C078  F00F         	movff	Imprimir_Resultado@Potencia+1,___lmul@multiplier+1
  2578   0010E4  C079  F010         	movff	Imprimir_Resultado@Potencia+2,___lmul@multiplier+2
  2579   0010E8  C07A  F011         	movff	Imprimir_Resultado@Potencia+3,___lmul@multiplier+3
  2580   0010EC  0E0A               	movlw	10
  2581   0010EE  6E12               	movwf	___lmul@multiplicand^0,c
  2582   0010F0  0E00               	movlw	0
  2583   0010F2  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2584   0010F4  0E00               	movlw	0
  2585   0010F6  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2586   0010F8  0E00               	movlw	0
  2587   0010FA  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2588   0010FC  EC91  F00B         	call	___lmul	;wreg free
  2589   001100  C00E  F077         	movff	?___lmul,Imprimir_Resultado@Potencia
  2590   001104  C00F  F078         	movff	?___lmul+1,Imprimir_Resultado@Potencia+1
  2591   001108  C010  F079         	movff	?___lmul+2,Imprimir_Resultado@Potencia+2
  2592   00110C  C011  F07A         	movff	?___lmul+3,Imprimir_Resultado@Potencia+3
  2593   001110  0100               	movlb	0	; () banked
  2594   001112  0771               	decf	Imprimir_Resultado@k& (0+255),f,b
  2595   001114  A0D8               	btfss	status,0,c
  2596   001116  0772               	decf	(Imprimir_Resultado@k+1)& (0+255),f,b
  2597   001118  D7DA               	goto	l3478
  2598   00111A                     l3488:
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;Lab4.c: 357: };Lab4.c: 358: if(Resultado/Potencia>0){
  2602   00111A  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2603   00111E  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2604   001122  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2605   001126  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2606   00112A  C077  F012         	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2607   00112E  C078  F013         	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2608   001132  C079  F014         	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2609   001136  C07A  F015         	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2610   00113A  EC35  F009         	call	___aldiv	;wreg free
  2611   00113E  BE11               	btfsc	(?___aldiv+3)^0,7,c
  2612   001140  D03B               	goto	l3496
  2613   001142  5011               	movf	(?___aldiv+3)^0,w,c
  2614   001144  1010               	iorwf	(?___aldiv+2)^0,w,c
  2615   001146  100F               	iorwf	(?___aldiv+1)^0,w,c
  2616   001148  E103               	bnz	u3930
  2617   00114A  040E               	decf	?___aldiv^0,w,c
  2618   00114C  A0D8               	btfss	status,0,c
  2619   00114E  D034               	goto	l3496
  2620   001150                     u3930:
  2621                           
  2622                           ;Lab4.c: 359: flag = 1;
  2623   001150  0E01               	movlw	1
  2624   001152  0100               	movlb	0	; () banked
  2625   001154  6F70               	movwf	Imprimir_Resultado@flag& (0+255),b
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;Lab4.c: 360: EscribeLCD_c(Resultado/Potencia+48);
  2629   001156  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2630   00115A  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2631   00115E  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2632   001162  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2633   001166  C077  F012         	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2634   00116A  C078  F013         	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2635   00116E  C079  F014         	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2636   001172  C07A  F015         	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2637   001176  EC35  F009         	call	___aldiv	;wreg free
  2638   00117A  500E               	movf	?___aldiv^0,w,c
  2639   00117C  0F30               	addlw	48
  2640   00117E  EC3B  F00D         	call	_EscribeLCD_c
  2641                           
  2642                           ;Lab4.c: 361: Resultado=Resultado%Potencia;
  2643   001182  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___almod@dividend
  2644   001186  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___almod@dividend+1
  2645   00118A  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___almod@dividend+2
  2646   00118E  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___almod@dividend+3
  2647   001192  C077  F012         	movff	Imprimir_Resultado@Potencia,___almod@divisor
  2648   001196  C078  F013         	movff	Imprimir_Resultado@Potencia+1,___almod@divisor+1
  2649   00119A  C079  F014         	movff	Imprimir_Resultado@Potencia+2,___almod@divisor+2
  2650   00119E  C07A  F015         	movff	Imprimir_Resultado@Potencia+3,___almod@divisor+3
  2651   0011A2  EC00  F00A         	call	___almod	;wreg free
  2652   0011A6  C00E  F01C         	movff	?___almod,Imprimir_Resultado@Resultado
  2653   0011AA  C00F  F01D         	movff	?___almod+1,Imprimir_Resultado@Resultado+1
  2654   0011AE  C010  F01E         	movff	?___almod+2,Imprimir_Resultado@Resultado+2
  2655   0011B2  C011  F01F         	movff	?___almod+3,Imprimir_Resultado@Resultado+3
  2656                           
  2657                           ;Lab4.c: 362: }else if( (Resultado/Potencia)==0 && flag){
  2658   0011B6  D02E               	goto	l3506
  2659   0011B8                     l3496:
  2660   0011B8  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2661   0011BC  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2662   0011C0  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2663   0011C4  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2664   0011C8  C077  F012         	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2665   0011CC  C078  F013         	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2666   0011D0  C079  F014         	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2667   0011D4  C07A  F015         	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2668   0011D8  EC35  F009         	call	___aldiv	;wreg free
  2669   0011DC  500E               	movf	?___aldiv^0,w,c
  2670   0011DE  100F               	iorwf	(?___aldiv+1)^0,w,c
  2671   0011E0  1010               	iorwf	(?___aldiv+2)^0,w,c
  2672   0011E2  1011               	iorwf	(?___aldiv+3)^0,w,c
  2673   0011E4  A4D8               	btfss	status,2,c
  2674   0011E6  D016               	goto	l3506
  2675   0011E8  0100               	movlb	0	; () banked
  2676   0011EA  5170               	movf	Imprimir_Resultado@flag& (0+255),w,b
  2677   0011EC  B4D8               	btfsc	status,2,c
  2678   0011EE  D012               	goto	l3506
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;Lab4.c: 363: if(Resultado<10) EscribeLCD_c(Resultado+48);
  2682   0011F0  BE1F               	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2683   0011F2  D008               	goto	u3960
  2684   0011F4  501F               	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2685   0011F6  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2686   0011F8  101D               	iorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2687   0011FA  E109               	bnz	l3504
  2688   0011FC  0E0A               	movlw	10
  2689   0011FE  5C1C               	subwf	Imprimir_Resultado@Resultado^0,w,c
  2690   001200  B0D8               	btfsc	status,0,c
  2691   001202  D005               	goto	l3504
  2692   001204                     u3960:
  2693                           
  2694                           ; BSR set to: 0
  2695   001204  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  2696   001206  0F30               	addlw	48
  2697   001208  EC3B  F00D         	call	_EscribeLCD_c
  2698   00120C  D003               	goto	l3506
  2699   00120E                     l3504:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;Lab4.c: 364: else EscribeLCD_c(48);
  2703   00120E  0E30               	movlw	48
  2704   001210  EC3B  F00D         	call	_EscribeLCD_c
  2705   001214                     l3506:
  2706   001214  0100               	movlb	0	; () banked
  2707   001216  0775               	decf	Imprimir_Resultado@j& (0+255),f,b
  2708   001218  A0D8               	btfss	status,0,c
  2709   00121A  0776               	decf	(Imprimir_Resultado@j+1)& (0+255),f,b
  2710                           
  2711                           ; BSR set to: 0
  2712   00121C  BF76               	btfsc	(Imprimir_Resultado@j+1)& (0+255),7,b
  2713   00121E  0012               	return	
  2714   001220  D748               	goto	l3474
  2715   001222                     l3510:
  2716                           
  2717                           ;Lab4.c: 368: if(Resultado==1000){
  2718   001222  0EE8               	movlw	232
  2719   001224  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2720   001226  E10B               	bnz	l3514
  2721   001228  0E03               	movlw	3
  2722   00122A  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2723   00122C  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2724   00122E  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2725   001230  A4D8               	btfss	status,2,c
  2726   001232  D005               	goto	l3514
  2727                           
  2728                           ;Lab4.c: 369: MensajeLCD_Var("Infinito");
  2729   001234  0E4E               	movlw	low STR_12
  2730   001236  6E13               	movwf	MensajeLCD_Var@a^0,c
  2731   001238  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
  2732                           
  2733                           ;Lab4.c: 370: }else{
  2734   00123C  0012               	return	
  2735   00123E                     l3514:
  2736                           
  2737                           ;Lab4.c: 371: if(Resultado==1001){
  2738   00123E  0EE9               	movlw	233
  2739   001240  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2740   001242  E10E               	bnz	l3520
  2741   001244  0E03               	movlw	3
  2742   001246  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2743   001248  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2744   00124A  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2745   00124C  A4D8               	btfss	status,2,c
  2746   00124E  D008               	goto	l3520
  2747                           
  2748                           ;Lab4.c: 372: DireccionaLCD(0xC1);
  2749   001250  0EC1               	movlw	193
  2750   001252  EC46  F00D         	call	_DireccionaLCD
  2751                           
  2752                           ;Lab4.c: 373: MensajeLCD_Var("Indeterminado");
  2753   001256  0E1E               	movlw	low STR_13
  2754   001258  6E13               	movwf	MensajeLCD_Var@a^0,c
  2755   00125A  EC3B  F00C         	call	_MensajeLCD_Var	;wreg free
  2756                           
  2757                           ;Lab4.c: 374: }else{
  2758   00125E  0012               	return	
  2759   001260                     l3520:
  2760                           
  2761                           ;Lab4.c: 375: EscribeLCD_c(Resultado+'0');
  2762   001260  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  2763   001262  0F30               	addlw	48
  2764   001264  EC3B  F00D         	call	_EscribeLCD_c
  2765   001268  0012               	return		;funcret
  2766   00126A                     __end_of_Imprimir_Resultado:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function ___wmul *****************
  2770 ;; Defined at:
  2771 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  multiplier      2   13[COMRAM] unsigned int 
  2774 ;;  multiplicand    2   15[COMRAM] unsigned int 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  product         2   17[COMRAM] unsigned int 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  2   13[COMRAM] unsigned int 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0, prodl, prodh
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2786 ;;      Params:         4       0       0       0       0       0       0       0       0
  2787 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2789 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2790 ;;Total ram usage:        6 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 5
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;;		_Imprimir_Resultado
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text6
  2802   001A38                     __ptext6:
  2803                           	callstack 0
  2804   001A38                     ___wmul:
  2805                           	callstack 25
  2806                           
  2807                           ;incstack = 0
  2808   001A38  500E               	movf	___wmul@multiplier^0,w,c
  2809   001A3A  0210               	mulwf	___wmul@multiplicand^0,c
  2810   001A3C  CFF3 F012          	movff	prodl,___wmul@product
  2811   001A40  CFF4 F013          	movff	prodh,___wmul@product+1
  2812   001A44  500E               	movf	___wmul@multiplier^0,w,c
  2813   001A46  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  2814   001A48  50F3               	movf	243,w,c
  2815   001A4A  2613               	addwf	(___wmul@product+1)^0,f,c
  2816   001A4C  500F               	movf	(___wmul@multiplier+1)^0,w,c
  2817   001A4E  0210               	mulwf	___wmul@multiplicand^0,c
  2818   001A50  50F3               	movf	243,w,c
  2819   001A52  2613               	addwf	(___wmul@product+1)^0,f,c
  2820   001A54  C012  F00E         	movff	___wmul@product,?___wmul
  2821   001A58  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  2822   001A5C  0012               	return		;funcret
  2823   001A5E                     __end_of___wmul:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function ___lwmod *****************
  2827 ;; Defined at:
  2828 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  dividend        2   13[COMRAM] unsigned int 
  2831 ;;  divisor         2   15[COMRAM] unsigned int 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  counter         1   17[COMRAM] unsigned char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2   13[COMRAM] unsigned int 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2843 ;;      Params:         4       0       0       0       0       0       0       0       0
  2844 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2846 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        5 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 5
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_Imprimir_Resultado
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text7
  2858   0019A6                     __ptext7:
  2859                           	callstack 0
  2860   0019A6                     ___lwmod:
  2861                           	callstack 24
  2862                           
  2863                           ;incstack = 0
  2864   0019A6  5010               	movf	___lwmod@divisor^0,w,c
  2865   0019A8  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  2866   0019AA  B4D8               	btfsc	status,2,c
  2867   0019AC  D018               	goto	l866
  2868   0019AE  0E01               	movlw	1
  2869   0019B0  6E12               	movwf	___lwmod@counter^0,c
  2870   0019B2  D004               	goto	l3356
  2871   0019B4                     l3354:
  2872   0019B4  90D8               	bcf	status,0,c
  2873   0019B6  3610               	rlcf	___lwmod@divisor^0,f,c
  2874   0019B8  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  2875   0019BA  2A12               	incf	___lwmod@counter^0,f,c
  2876   0019BC                     l3356:
  2877   0019BC  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  2878   0019BE  D7FA               	goto	l3354
  2879   0019C0                     u3740:
  2880   0019C0  5010               	movf	___lwmod@divisor^0,w,c
  2881   0019C2  5C0E               	subwf	___lwmod@dividend^0,w,c
  2882   0019C4  5011               	movf	(___lwmod@divisor+1)^0,w,c
  2883   0019C6  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  2884   0019C8  A0D8               	btfss	status,0,c
  2885   0019CA  D004               	goto	l3362
  2886   0019CC  5010               	movf	___lwmod@divisor^0,w,c
  2887   0019CE  5E0E               	subwf	___lwmod@dividend^0,f,c
  2888   0019D0  5011               	movf	(___lwmod@divisor+1)^0,w,c
  2889   0019D2  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  2890   0019D4                     l3362:
  2891   0019D4  90D8               	bcf	status,0,c
  2892   0019D6  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  2893   0019D8  3210               	rrcf	___lwmod@divisor^0,f,c
  2894   0019DA  2E12               	decfsz	___lwmod@counter^0,f,c
  2895   0019DC  D7F1               	goto	u3740
  2896   0019DE                     l866:
  2897   0019DE  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  2898   0019E2  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  2899   0019E6  0012               	return		;funcret
  2900   0019E8                     __end_of___lwmod:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function ___lwdiv *****************
  2904 ;; Defined at:
  2905 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  dividend        2   19[COMRAM] unsigned int 
  2908 ;;  divisor         2   21[COMRAM] unsigned int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  quotient        2   24[COMRAM] unsigned int 
  2911 ;;  counter         1   23[COMRAM] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2   19[COMRAM] unsigned int 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2921 ;;      Params:         4       0       0       0       0       0       0       0       0
  2922 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2924 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2925 ;;Total ram usage:        7 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 5
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;;		_Imprimir_Resultado
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text8
  2937   001824                     __ptext8:
  2938                           	callstack 0
  2939   001824                     ___lwdiv:
  2940                           	callstack 25
  2941                           
  2942                           ;incstack = 0
  2943   001824  0E00               	movlw	0
  2944   001826  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  2945   001828  0E00               	movlw	0
  2946   00182A  6E19               	movwf	___lwdiv@quotient^0,c
  2947   00182C  5016               	movf	___lwdiv@divisor^0,w,c
  2948   00182E  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2949   001830  B4D8               	btfsc	status,2,c
  2950   001832  D01C               	goto	l856
  2951   001834  0E01               	movlw	1
  2952   001836  6E18               	movwf	___lwdiv@counter^0,c
  2953   001838  D004               	goto	l3336
  2954   00183A                     l3334:
  2955   00183A  90D8               	bcf	status,0,c
  2956   00183C  3616               	rlcf	___lwdiv@divisor^0,f,c
  2957   00183E  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2958   001840  2A18               	incf	___lwdiv@counter^0,f,c
  2959   001842                     l3336:
  2960   001842  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  2961   001844  D7FA               	goto	l3334
  2962   001846                     u3710:
  2963   001846  90D8               	bcf	status,0,c
  2964   001848  3619               	rlcf	___lwdiv@quotient^0,f,c
  2965   00184A  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2966   00184C  5016               	movf	___lwdiv@divisor^0,w,c
  2967   00184E  5C14               	subwf	___lwdiv@dividend^0,w,c
  2968   001850  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2969   001852  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2970   001854  A0D8               	btfss	status,0,c
  2971   001856  D005               	goto	l3346
  2972   001858  5016               	movf	___lwdiv@divisor^0,w,c
  2973   00185A  5E14               	subwf	___lwdiv@dividend^0,f,c
  2974   00185C  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2975   00185E  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2976   001860  8019               	bsf	___lwdiv@quotient^0,0,c
  2977   001862                     l3346:
  2978   001862  90D8               	bcf	status,0,c
  2979   001864  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2980   001866  3216               	rrcf	___lwdiv@divisor^0,f,c
  2981   001868  2E18               	decfsz	___lwdiv@counter^0,f,c
  2982   00186A  D7ED               	goto	u3710
  2983   00186C                     l856:
  2984   00186C  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  2985   001870  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2986   001874  0012               	return		;funcret
  2987   001876                     __end_of___lwdiv:
  2988                           	callstack 0
  2989                           
  2990 ;; *************** function ___lmul *****************
  2991 ;; Defined at:
  2992 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  multiplier      4   13[COMRAM] unsigned long 
  2995 ;;  multiplicand    4   17[COMRAM] unsigned long 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  product         4   21[COMRAM] unsigned long 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  4   13[COMRAM] unsigned long 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3007 ;;      Params:         8       0       0       0       0       0       0       0       0
  3008 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3010 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3011 ;;Total ram usage:       12 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; Hardware stack levels required when called: 5
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_main
  3018 ;;		_factorial_function
  3019 ;;		_Imprimir_Resultado
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text9
  3024   001722                     __ptext9:
  3025                           	callstack 0
  3026   001722                     ___lmul:
  3027                           	callstack 24
  3028                           
  3029                           ;incstack = 0
  3030   001722  0E00               	movlw	0
  3031   001724  6E16               	movwf	___lmul@product^0,c
  3032   001726  0E00               	movlw	0
  3033   001728  6E17               	movwf	(___lmul@product+1)^0,c
  3034   00172A  0E00               	movlw	0
  3035   00172C  6E18               	movwf	(___lmul@product+2)^0,c
  3036   00172E  0E00               	movlw	0
  3037   001730  6E19               	movwf	(___lmul@product+3)^0,c
  3038   001732                     l3240:
  3039   001732  A00E               	btfss	___lmul@multiplier^0,0,c
  3040   001734  D008               	goto	l3244
  3041   001736  5012               	movf	___lmul@multiplicand^0,w,c
  3042   001738  2616               	addwf	___lmul@product^0,f,c
  3043   00173A  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  3044   00173C  2217               	addwfc	(___lmul@product+1)^0,f,c
  3045   00173E  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  3046   001740  2218               	addwfc	(___lmul@product+2)^0,f,c
  3047   001742  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  3048   001744  2219               	addwfc	(___lmul@product+3)^0,f,c
  3049   001746                     l3244:
  3050   001746  90D8               	bcf	status,0,c
  3051   001748  3612               	rlcf	___lmul@multiplicand^0,f,c
  3052   00174A  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3053   00174C  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3054   00174E  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3055   001750  90D8               	bcf	status,0,c
  3056   001752  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  3057   001754  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  3058   001756  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  3059   001758  320E               	rrcf	___lmul@multiplier^0,f,c
  3060   00175A  500E               	movf	___lmul@multiplier^0,w,c
  3061   00175C  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  3062   00175E  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  3063   001760  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  3064   001762  A4D8               	btfss	status,2,c
  3065   001764  D7E6               	goto	l3240
  3066   001766  C016  F00E         	movff	___lmul@product,?___lmul
  3067   00176A  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  3068   00176E  C018  F010         	movff	___lmul@product+2,?___lmul+2
  3069   001772  C019  F011         	movff	___lmul@product+3,?___lmul+3
  3070   001776  0012               	return		;funcret
  3071   001778                     __end_of___lmul:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function ___almod *****************
  3075 ;; Defined at:
  3076 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  dividend        4   13[COMRAM] long 
  3079 ;;  divisor         4   17[COMRAM] long 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  sign            1   22[COMRAM] unsigned char 
  3082 ;;  counter         1   21[COMRAM] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  4   13[COMRAM] long 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3092 ;;      Params:         8       0       0       0       0       0       0       0       0
  3093 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3095 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3096 ;;Total ram usage:       10 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 5
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_Imprimir_Resultado
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text10
  3107   001400                     __ptext10:
  3108                           	callstack 0
  3109   001400                     ___almod:
  3110                           	callstack 24
  3111                           
  3112                           ;incstack = 0
  3113   001400  0E00               	movlw	0
  3114   001402  6E17               	movwf	___almod@sign^0,c
  3115   001404  AE11               	btfss	(___almod@dividend+3)^0,7,c
  3116   001406  D00A               	goto	l3300
  3117   001408  1E11               	comf	(___almod@dividend+3)^0,f,c
  3118   00140A  1E10               	comf	(___almod@dividend+2)^0,f,c
  3119   00140C  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3120   00140E  6C0E               	negf	___almod@dividend^0,c
  3121   001410  0E00               	movlw	0
  3122   001412  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3123   001414  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3124   001416  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3125   001418  0E01               	movlw	1
  3126   00141A  6E17               	movwf	___almod@sign^0,c
  3127   00141C                     l3300:
  3128   00141C  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3129   00141E  D008               	goto	l3304
  3130   001420  1E15               	comf	(___almod@divisor+3)^0,f,c
  3131   001422  1E14               	comf	(___almod@divisor+2)^0,f,c
  3132   001424  1E13               	comf	(___almod@divisor+1)^0,f,c
  3133   001426  6C12               	negf	___almod@divisor^0,c
  3134   001428  0E00               	movlw	0
  3135   00142A  2213               	addwfc	(___almod@divisor+1)^0,f,c
  3136   00142C  2214               	addwfc	(___almod@divisor+2)^0,f,c
  3137   00142E  2215               	addwfc	(___almod@divisor+3)^0,f,c
  3138   001430                     l3304:
  3139   001430  5012               	movf	___almod@divisor^0,w,c
  3140   001432  1013               	iorwf	(___almod@divisor+1)^0,w,c
  3141   001434  1014               	iorwf	(___almod@divisor+2)^0,w,c
  3142   001436  1015               	iorwf	(___almod@divisor+3)^0,w,c
  3143   001438  B4D8               	btfsc	status,2,c
  3144   00143A  D024               	goto	l3320
  3145   00143C  0E01               	movlw	1
  3146   00143E  6E16               	movwf	___almod@counter^0,c
  3147   001440  D006               	goto	l3310
  3148   001442                     l3308:
  3149   001442  90D8               	bcf	status,0,c
  3150   001444  3612               	rlcf	___almod@divisor^0,f,c
  3151   001446  3613               	rlcf	(___almod@divisor+1)^0,f,c
  3152   001448  3614               	rlcf	(___almod@divisor+2)^0,f,c
  3153   00144A  3615               	rlcf	(___almod@divisor+3)^0,f,c
  3154   00144C  2A16               	incf	___almod@counter^0,f,c
  3155   00144E                     l3310:
  3156   00144E  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3157   001450  D7F8               	goto	l3308
  3158   001452                     u3670:
  3159   001452  5012               	movf	___almod@divisor^0,w,c
  3160   001454  5C0E               	subwf	___almod@dividend^0,w,c
  3161   001456  5013               	movf	(___almod@divisor+1)^0,w,c
  3162   001458  580F               	subwfb	(___almod@dividend+1)^0,w,c
  3163   00145A  5014               	movf	(___almod@divisor+2)^0,w,c
  3164   00145C  5810               	subwfb	(___almod@dividend+2)^0,w,c
  3165   00145E  5015               	movf	(___almod@divisor+3)^0,w,c
  3166   001460  5811               	subwfb	(___almod@dividend+3)^0,w,c
  3167   001462  A0D8               	btfss	status,0,c
  3168   001464  D008               	goto	l3316
  3169   001466  5012               	movf	___almod@divisor^0,w,c
  3170   001468  5E0E               	subwf	___almod@dividend^0,f,c
  3171   00146A  5013               	movf	(___almod@divisor+1)^0,w,c
  3172   00146C  5A0F               	subwfb	(___almod@dividend+1)^0,f,c
  3173   00146E  5014               	movf	(___almod@divisor+2)^0,w,c
  3174   001470  5A10               	subwfb	(___almod@dividend+2)^0,f,c
  3175   001472  5015               	movf	(___almod@divisor+3)^0,w,c
  3176   001474  5A11               	subwfb	(___almod@dividend+3)^0,f,c
  3177   001476                     l3316:
  3178   001476  90D8               	bcf	status,0,c
  3179   001478  3215               	rrcf	(___almod@divisor+3)^0,f,c
  3180   00147A  3214               	rrcf	(___almod@divisor+2)^0,f,c
  3181   00147C  3213               	rrcf	(___almod@divisor+1)^0,f,c
  3182   00147E  3212               	rrcf	___almod@divisor^0,f,c
  3183   001480  2E16               	decfsz	___almod@counter^0,f,c
  3184   001482  D7E7               	goto	u3670
  3185   001484                     l3320:
  3186   001484  5017               	movf	___almod@sign^0,w,c
  3187   001486  B4D8               	btfsc	status,2,c
  3188   001488  D008               	goto	l3324
  3189   00148A  1E11               	comf	(___almod@dividend+3)^0,f,c
  3190   00148C  1E10               	comf	(___almod@dividend+2)^0,f,c
  3191   00148E  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3192   001490  6C0E               	negf	___almod@dividend^0,c
  3193   001492  0E00               	movlw	0
  3194   001494  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3195   001496  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3196   001498  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3197   00149A                     l3324:
  3198   00149A  C00E  F00E         	movff	___almod@dividend,?___almod
  3199   00149E  C00F  F00F         	movff	___almod@dividend+1,?___almod+1
  3200   0014A2  C010  F010         	movff	___almod@dividend+2,?___almod+2
  3201   0014A6  C011  F011         	movff	___almod@dividend+3,?___almod+3
  3202   0014AA  0012               	return		;funcret
  3203   0014AC                     __end_of___almod:
  3204                           	callstack 0
  3205                           
  3206 ;; *************** function ___aldiv *****************
  3207 ;; Defined at:
  3208 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  dividend        4   13[COMRAM] long 
  3211 ;;  divisor         4   17[COMRAM] long 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  quotient        4   23[COMRAM] long 
  3214 ;;  sign            1   22[COMRAM] unsigned char 
  3215 ;;  counter         1   21[COMRAM] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  4   13[COMRAM] long 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3225 ;;      Params:         8       0       0       0       0       0       0       0       0
  3226 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3228 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3229 ;;Total ram usage:       14 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 5
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_Imprimir_Resultado
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text11
  3240   00126A                     __ptext11:
  3241                           	callstack 0
  3242   00126A                     ___aldiv:
  3243                           	callstack 24
  3244                           
  3245                           ;incstack = 0
  3246   00126A  0E00               	movlw	0
  3247   00126C  6E17               	movwf	___aldiv@sign^0,c
  3248   00126E  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3249   001270  D00A               	goto	l3256
  3250   001272  1E15               	comf	(___aldiv@divisor+3)^0,f,c
  3251   001274  1E14               	comf	(___aldiv@divisor+2)^0,f,c
  3252   001276  1E13               	comf	(___aldiv@divisor+1)^0,f,c
  3253   001278  6C12               	negf	___aldiv@divisor^0,c
  3254   00127A  0E00               	movlw	0
  3255   00127C  2213               	addwfc	(___aldiv@divisor+1)^0,f,c
  3256   00127E  2214               	addwfc	(___aldiv@divisor+2)^0,f,c
  3257   001280  2215               	addwfc	(___aldiv@divisor+3)^0,f,c
  3258   001282  0E01               	movlw	1
  3259   001284  6E17               	movwf	___aldiv@sign^0,c
  3260   001286                     l3256:
  3261   001286  AE11               	btfss	(___aldiv@dividend+3)^0,7,c
  3262   001288  D00A               	goto	l3262
  3263   00128A  1E11               	comf	(___aldiv@dividend+3)^0,f,c
  3264   00128C  1E10               	comf	(___aldiv@dividend+2)^0,f,c
  3265   00128E  1E0F               	comf	(___aldiv@dividend+1)^0,f,c
  3266   001290  6C0E               	negf	___aldiv@dividend^0,c
  3267   001292  0E00               	movlw	0
  3268   001294  220F               	addwfc	(___aldiv@dividend+1)^0,f,c
  3269   001296  2210               	addwfc	(___aldiv@dividend+2)^0,f,c
  3270   001298  2211               	addwfc	(___aldiv@dividend+3)^0,f,c
  3271   00129A  0E01               	movlw	1
  3272   00129C  1A17               	xorwf	___aldiv@sign^0,f,c
  3273   00129E                     l3262:
  3274   00129E  0E00               	movlw	0
  3275   0012A0  6E18               	movwf	___aldiv@quotient^0,c
  3276   0012A2  0E00               	movlw	0
  3277   0012A4  6E19               	movwf	(___aldiv@quotient+1)^0,c
  3278   0012A6  0E00               	movlw	0
  3279   0012A8  6E1A               	movwf	(___aldiv@quotient+2)^0,c
  3280   0012AA  0E00               	movlw	0
  3281   0012AC  6E1B               	movwf	(___aldiv@quotient+3)^0,c
  3282   0012AE  5012               	movf	___aldiv@divisor^0,w,c
  3283   0012B0  1013               	iorwf	(___aldiv@divisor+1)^0,w,c
  3284   0012B2  1014               	iorwf	(___aldiv@divisor+2)^0,w,c
  3285   0012B4  1015               	iorwf	(___aldiv@divisor+3)^0,w,c
  3286   0012B6  B4D8               	btfsc	status,2,c
  3287   0012B8  D02A               	goto	l3284
  3288   0012BA  0E01               	movlw	1
  3289   0012BC  6E16               	movwf	___aldiv@counter^0,c
  3290   0012BE  D006               	goto	l3270
  3291   0012C0                     l3268:
  3292   0012C0  90D8               	bcf	status,0,c
  3293   0012C2  3612               	rlcf	___aldiv@divisor^0,f,c
  3294   0012C4  3613               	rlcf	(___aldiv@divisor+1)^0,f,c
  3295   0012C6  3614               	rlcf	(___aldiv@divisor+2)^0,f,c
  3296   0012C8  3615               	rlcf	(___aldiv@divisor+3)^0,f,c
  3297   0012CA  2A16               	incf	___aldiv@counter^0,f,c
  3298   0012CC                     l3270:
  3299   0012CC  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3300   0012CE  D7F8               	goto	l3268
  3301   0012D0                     u3610:
  3302   0012D0  90D8               	bcf	status,0,c
  3303   0012D2  3618               	rlcf	___aldiv@quotient^0,f,c
  3304   0012D4  3619               	rlcf	(___aldiv@quotient+1)^0,f,c
  3305   0012D6  361A               	rlcf	(___aldiv@quotient+2)^0,f,c
  3306   0012D8  361B               	rlcf	(___aldiv@quotient+3)^0,f,c
  3307   0012DA  5012               	movf	___aldiv@divisor^0,w,c
  3308   0012DC  5C0E               	subwf	___aldiv@dividend^0,w,c
  3309   0012DE  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3310   0012E0  580F               	subwfb	(___aldiv@dividend+1)^0,w,c
  3311   0012E2  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3312   0012E4  5810               	subwfb	(___aldiv@dividend+2)^0,w,c
  3313   0012E6  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3314   0012E8  5811               	subwfb	(___aldiv@dividend+3)^0,w,c
  3315   0012EA  A0D8               	btfss	status,0,c
  3316   0012EC  D009               	goto	l3280
  3317   0012EE  5012               	movf	___aldiv@divisor^0,w,c
  3318   0012F0  5E0E               	subwf	___aldiv@dividend^0,f,c
  3319   0012F2  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3320   0012F4  5A0F               	subwfb	(___aldiv@dividend+1)^0,f,c
  3321   0012F6  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3322   0012F8  5A10               	subwfb	(___aldiv@dividend+2)^0,f,c
  3323   0012FA  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3324   0012FC  5A11               	subwfb	(___aldiv@dividend+3)^0,f,c
  3325   0012FE  8018               	bsf	___aldiv@quotient^0,0,c
  3326   001300                     l3280:
  3327   001300  90D8               	bcf	status,0,c
  3328   001302  3215               	rrcf	(___aldiv@divisor+3)^0,f,c
  3329   001304  3214               	rrcf	(___aldiv@divisor+2)^0,f,c
  3330   001306  3213               	rrcf	(___aldiv@divisor+1)^0,f,c
  3331   001308  3212               	rrcf	___aldiv@divisor^0,f,c
  3332   00130A  2E16               	decfsz	___aldiv@counter^0,f,c
  3333   00130C  D7E1               	goto	u3610
  3334   00130E                     l3284:
  3335   00130E  5017               	movf	___aldiv@sign^0,w,c
  3336   001310  B4D8               	btfsc	status,2,c
  3337   001312  D008               	goto	l3288
  3338   001314  1E1B               	comf	(___aldiv@quotient+3)^0,f,c
  3339   001316  1E1A               	comf	(___aldiv@quotient+2)^0,f,c
  3340   001318  1E19               	comf	(___aldiv@quotient+1)^0,f,c
  3341   00131A  6C18               	negf	___aldiv@quotient^0,c
  3342   00131C  0E00               	movlw	0
  3343   00131E  2219               	addwfc	(___aldiv@quotient+1)^0,f,c
  3344   001320  221A               	addwfc	(___aldiv@quotient+2)^0,f,c
  3345   001322  221B               	addwfc	(___aldiv@quotient+3)^0,f,c
  3346   001324                     l3288:
  3347   001324  C018  F00E         	movff	___aldiv@quotient,?___aldiv
  3348   001328  C019  F00F         	movff	___aldiv@quotient+1,?___aldiv+1
  3349   00132C  C01A  F010         	movff	___aldiv@quotient+2,?___aldiv+2
  3350   001330  C01B  F011         	movff	___aldiv@quotient+3,?___aldiv+3
  3351   001334  0012               	return		;funcret
  3352   001336                     __end_of___aldiv:
  3353                           	callstack 0
  3354                           
  3355 ;; *************** function _MensajeLCD_Var *****************
  3356 ;; Defined at:
  3357 ;;		line 262 in file "LibLCDXC8.h"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  a               1   18[COMRAM] PTR unsigned char 
  3360 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3361 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3362 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3363 ;;		 -> STR_1(8), 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  i               2   20[COMRAM] int 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3375 ;;      Params:         1       0       0       0       0       0       0       0       0
  3376 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3377 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3378 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3379 ;;Total ram usage:        4 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 8
  3382 ;; This function calls:
  3383 ;;		_EscribeLCD_c
  3384 ;;		_strlen
  3385 ;; This function is called by:
  3386 ;;		_main
  3387 ;;		_Imprimir_Resultado
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text12
  3392   001876                     __ptext12:
  3393                           	callstack 0
  3394   001876                     _MensajeLCD_Var:
  3395                           	callstack 22
  3396                           
  3397                           ;LibLCDXC8.h: 266: for(int i = 0; i<strlen(a); i++){
  3398                           
  3399                           ;incstack = 0
  3400   001876  0E00               	movlw	0
  3401   001878  6E16               	movwf	(MensajeLCD_Var@i+1)^0,c
  3402   00187A  0E00               	movlw	0
  3403   00187C  6E15               	movwf	MensajeLCD_Var@i^0,c
  3404   00187E  D019               	goto	l3222
  3405   001880                     l3214:
  3406                           
  3407                           ;LibLCDXC8.h: 267: if(a[i] == (0)){
  3408   001880  5013               	movf	MensajeLCD_Var@a^0,w,c
  3409   001882  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3410   001884  6E14               	movwf	??_MensajeLCD_Var^0,c
  3411   001886  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3412   00188A                     	if	1	;There is more than 1 active tblptr byte
  3413   00188A  0E08               	movlw	high __smallconst
  3414   00188C  6EF7               	movwf	tblptrh,c
  3415   00188E                     	endif
  3416   00188E                     	if	0	;tblptru may be non-zero
  3417   00188E                     	endif
  3418   00188E                     	if	0	;tblptru may be non-zero
  3419   00188E                     	endif
  3420   00188E  0008               	tblrd		*
  3421   001890  50F5               	movf	tablat,w,c
  3422   001892  0900               	iorlw	0
  3423   001894  B4D8               	btfsc	status,2,c
  3424   001896  0012               	return	
  3425                           
  3426                           ;LibLCDXC8.h: 269: };LibLCDXC8.h: 270: EscribeLCD_c(a[i]);
  3427   001898  5013               	movf	MensajeLCD_Var@a^0,w,c
  3428   00189A  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3429   00189C  6E14               	movwf	??_MensajeLCD_Var^0,c
  3430   00189E  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3431   0018A2                     	if	1	;There is more than 1 active tblptr byte
  3432   0018A2  0E08               	movlw	high __smallconst
  3433   0018A4  6EF7               	movwf	tblptrh,c
  3434   0018A6                     	endif
  3435   0018A6                     	if	0	;tblptru may be non-zero
  3436   0018A6                     	endif
  3437   0018A6                     	if	0	;tblptru may be non-zero
  3438   0018A6                     	endif
  3439   0018A6  0008               	tblrd		*
  3440   0018A8  50F5               	movf	tablat,w,c
  3441   0018AA  EC3B  F00D         	call	_EscribeLCD_c
  3442   0018AE  4A15               	infsnz	MensajeLCD_Var@i^0,f,c
  3443   0018B0  2A16               	incf	(MensajeLCD_Var@i+1)^0,f,c
  3444   0018B2                     l3222:
  3445   0018B2  C013  F00E         	movff	MensajeLCD_Var@a,strlen@s
  3446   0018B6  ECF4  F00C         	call	_strlen	;wreg free
  3447   0018BA  500E               	movf	?_strlen^0,w,c
  3448   0018BC  5C15               	subwf	MensajeLCD_Var@i^0,w,c
  3449   0018BE  500F               	movf	(?_strlen+1)^0,w,c
  3450   0018C0  5816               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  3451   0018C2  B0D8               	btfsc	status,0,c
  3452   0018C4  0012               	return	
  3453   0018C6  D7DC               	goto	l3214
  3454   0018C8                     __end_of_MensajeLCD_Var:
  3455                           	callstack 0
  3456                           
  3457 ;; *************** function _strlen *****************
  3458 ;; Defined at:
  3459 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  s               1   13[COMRAM] PTR const unsigned char 
  3462 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3463 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3464 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3465 ;;		 -> STR_1(8), 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  cp              1   15[COMRAM] PTR const unsigned char 
  3468 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3469 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3470 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3471 ;;		 -> STR_1(8), 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  2   13[COMRAM] unsigned int 
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3481 ;;      Params:         2       0       0       0       0       0       0       0       0
  3482 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3484 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3485 ;;Total ram usage:        3 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 5
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_MensajeLCD_Var
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text13
  3496   0019E8                     __ptext13:
  3497                           	callstack 0
  3498   0019E8                     _strlen:
  3499                           	callstack 24
  3500                           
  3501                           ;incstack = 0
  3502   0019E8  C00E  F010         	movff	strlen@s,strlen@cp
  3503   0019EC  D001               	goto	l3198
  3504   0019EE                     l3196:
  3505   0019EE  2A10               	incf	strlen@cp^0,f,c
  3506   0019F0                     l3198:
  3507   0019F0  C010  FFF6         	movff	strlen@cp,tblptrl
  3508   0019F4                     	if	1	;There is more than 1 active tblptr byte
  3509   0019F4  0E08               	movlw	high __smallconst
  3510   0019F6  6EF7               	movwf	tblptrh,c
  3511   0019F8                     	endif
  3512   0019F8                     	if	0	;tblptru may be non-zero
  3513   0019F8                     	endif
  3514   0019F8                     	if	0	;tblptru may be non-zero
  3515   0019F8                     	endif
  3516   0019F8  0008               	tblrd		*
  3517   0019FA  50F5               	movf	tablat,w,c
  3518   0019FC  0900               	iorlw	0
  3519   0019FE  A4D8               	btfss	status,2,c
  3520   001A00  D7F6               	goto	l3196
  3521   001A02  500E               	movf	strlen@s^0,w,c
  3522   001A04  5C10               	subwf	strlen@cp^0,w,c
  3523   001A06  6E0E               	movwf	?_strlen^0,c
  3524   001A08  6A0F               	clrf	(?_strlen+1)^0,c
  3525   001A0A  BE0E               	btfsc	?_strlen^0,7,c
  3526   001A0C  060F               	decf	(?_strlen+1)^0,f,c
  3527   001A0E  0012               	return		;funcret
  3528   001A10                     __end_of_strlen:
  3529                           	callstack 0
  3530                           
  3531 ;; *************** function _EscribeLCD_c *****************
  3532 ;; Defined at:
  3533 ;;		line 118 in file "LibLCDXC8.h"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  a               1    wreg     unsigned char 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  a               1   17[COMRAM] unsigned char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      void 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3547 ;;      Params:         0       0       0       0       0       0       0       0       0
  3548 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3550 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3551 ;;Total ram usage:        1 bytes
  3552 ;; Hardware stack levels used: 1
  3553 ;; Hardware stack levels required when called: 7
  3554 ;; This function calls:
  3555 ;;		_EnviaDato
  3556 ;;		_HabilitaLCD
  3557 ;;		_RetardoLCD
  3558 ;; This function is called by:
  3559 ;;		_MensajeLCD_Var
  3560 ;;		_main
  3561 ;;		_Imprimir_Resultado
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text14
  3566   001A76                     __ptext14:
  3567                           	callstack 0
  3568   001A76                     _EscribeLCD_c:
  3569                           	callstack 22
  3570                           
  3571                           ;incstack = 0
  3572                           ;EscribeLCD_c@a stored from wreg
  3573   001A76  6E12               	movwf	EscribeLCD_c@a^0,c
  3574                           
  3575                           ;LibLCDXC8.h: 122: LATE0=1;
  3576   001A78  808D               	bsf	3981,0,c	;volatile
  3577                           
  3578                           ;LibLCDXC8.h: 123: EnviaDato(a);
  3579   001A7A  5012               	movf	EscribeLCD_c@a^0,w,c
  3580   001A7C  EC8D  F00C         	call	_EnviaDato
  3581                           
  3582                           ;LibLCDXC8.h: 124: HabilitaLCD();
  3583   001A80  EC83  F00D         	call	_HabilitaLCD	;wreg free
  3584                           
  3585                           ;LibLCDXC8.h: 125: RetardoLCD(4);
  3586   001A84  0E04               	movlw	4
  3587   001A86  ECBC  F00B         	call	_RetardoLCD
  3588   001A8A  0012               	return		;funcret
  3589   001A8C                     __end_of_EscribeLCD_c:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _DireccionaLCD *****************
  3593 ;; Defined at:
  3594 ;;		line 274 in file "LibLCDXC8.h"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  a               1    wreg     unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  a               1   17[COMRAM] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3608 ;;      Params:         0       0       0       0       0       0       0       0       0
  3609 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3611 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3612 ;;Total ram usage:        1 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; Hardware stack levels required when called: 7
  3615 ;; This function calls:
  3616 ;;		_EnviaDato
  3617 ;;		_HabilitaLCD
  3618 ;;		_RetardoLCD
  3619 ;; This function is called by:
  3620 ;;		_main
  3621 ;;		_Imprimir_Resultado
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text15
  3626   001A8C                     __ptext15:
  3627                           	callstack 0
  3628   001A8C                     _DireccionaLCD:
  3629                           	callstack 22
  3630                           
  3631                           ;incstack = 0
  3632                           ;DireccionaLCD@a stored from wreg
  3633   001A8C  6E12               	movwf	DireccionaLCD@a^0,c
  3634                           
  3635                           ;LibLCDXC8.h: 277: LATE0=0;
  3636   001A8E  908D               	bcf	3981,0,c	;volatile
  3637                           
  3638                           ;LibLCDXC8.h: 278: EnviaDato(a);
  3639   001A90  5012               	movf	DireccionaLCD@a^0,w,c
  3640   001A92  EC8D  F00C         	call	_EnviaDato
  3641                           
  3642                           ;LibLCDXC8.h: 279: HabilitaLCD();
  3643   001A96  EC83  F00D         	call	_HabilitaLCD	;wreg free
  3644                           
  3645                           ;LibLCDXC8.h: 280: RetardoLCD(4);
  3646   001A9A  0E04               	movlw	4
  3647   001A9C  ECBC  F00B         	call	_RetardoLCD
  3648   001AA0  0012               	return		;funcret
  3649   001AA2                     __end_of_DireccionaLCD:
  3650                           	callstack 0
  3651                           
  3652 ;; *************** function _EnviaDato *****************
  3653 ;; Defined at:
  3654 ;;		line 53 in file "LibLCDXC8.h"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  a               1    wreg     unsigned char 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  a               1   16[COMRAM] unsigned char 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3668 ;;      Params:         0       0       0       0       0       0       0       0       0
  3669 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3670 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3671 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3672 ;;Total ram usage:        2 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 6
  3675 ;; This function calls:
  3676 ;;		_HabilitaLCD
  3677 ;;		_RetardoLCD
  3678 ;; This function is called by:
  3679 ;;		_InicializaLCD
  3680 ;;		_BorraLCD
  3681 ;;		_EscribeLCD_c
  3682 ;;		_DireccionaLCD
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text16
  3687   00191A                     __ptext16:
  3688                           	callstack 0
  3689   00191A                     _EnviaDato:
  3690                           	callstack 22
  3691                           
  3692                           ;incstack = 0
  3693                           ;EnviaDato@a stored from wreg
  3694   00191A  6E11               	movwf	EnviaDato@a^0,c
  3695                           
  3696                           ;LibLCDXC8.h: 54: if(interfaz==4){
  3697   00191C  0E04               	movlw	4
  3698   00191E  184C               	xorwf	_interfaz^0,w,c
  3699   001920  A4D8               	btfss	status,2,c
  3700   001922  D017               	goto	l3182
  3701                           
  3702                           ;LibLCDXC8.h: 55: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3703   001924  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3704   001928  0EF0               	movlw	240
  3705   00192A  1610               	andwf	??_EnviaDato^0,f,c
  3706   00192C  508C               	movf	140,w,c	;volatile
  3707   00192E  0B0F               	andlw	15
  3708   001930  1010               	iorwf	??_EnviaDato^0,w,c
  3709   001932  6E8C               	movwf	140,c	;volatile
  3710                           
  3711                           ;LibLCDXC8.h: 56: HabilitaLCD();
  3712   001934  EC83  F00D         	call	_HabilitaLCD	;wreg free
  3713                           
  3714                           ;LibLCDXC8.h: 57: RetardoLCD(1);
  3715   001938  0E01               	movlw	1
  3716   00193A  ECBC  F00B         	call	_RetardoLCD
  3717                           
  3718                           ;LibLCDXC8.h: 58: LATD=(LATD & 0b00001111) | (a<<4);
  3719   00193E  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3720   001942  3A10               	swapf	??_EnviaDato^0,f,c
  3721   001944  0EF0               	movlw	240
  3722   001946  1610               	andwf	??_EnviaDato^0,f,c
  3723   001948  508C               	movf	140,w,c	;volatile
  3724   00194A  0B0F               	andlw	15
  3725   00194C  1010               	iorwf	??_EnviaDato^0,w,c
  3726   00194E  6E8C               	movwf	140,c	;volatile
  3727                           
  3728                           ;LibLCDXC8.h: 59: }else if(interfaz==8){
  3729   001950  0012               	return	
  3730   001952                     l3182:
  3731   001952  0E08               	movlw	8
  3732   001954  184C               	xorwf	_interfaz^0,w,c
  3733   001956  A4D8               	btfss	status,2,c
  3734   001958  0012               	return	
  3735                           
  3736                           ;LibLCDXC8.h: 60: LATD=a;
  3737   00195A  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  3738   00195E  0012               	return		;funcret
  3739   001960                     __end_of_EnviaDato:
  3740                           	callstack 0
  3741                           
  3742 ;; *************** function _RetardoLCD *****************
  3743 ;; Defined at:
  3744 ;;		line 310 in file "LibLCDXC8.h"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  a               1    wreg     unsigned char 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  a               1   14[COMRAM] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0
  3759 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3760 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3761 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3762 ;;Total ram usage:        2 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 5
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_EnviaDato
  3769 ;;		_InicializaLCD
  3770 ;;		_BorraLCD
  3771 ;;		_EscribeLCD_c
  3772 ;;		_DireccionaLCD
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text17
  3777   001778                     __ptext17:
  3778                           	callstack 0
  3779   001778                     _RetardoLCD:
  3780                           	callstack 23
  3781                           
  3782                           ;incstack = 0
  3783                           ;RetardoLCD@a stored from wreg
  3784   001778  6E0F               	movwf	RetardoLCD@a^0,c
  3785                           
  3786                           ;LibLCDXC8.h: 311: switch(a){
  3787   00177A  D01B               	goto	l3170
  3788   00177C                     l3160:
  3789   00177C  0E05               	movlw	5
  3790   00177E  6E0E               	movwf	??_RetardoLCD^0,c
  3791   001780  0EDE               	movlw	222
  3792   001782                     u4907:
  3793   001782  2EE8               	decfsz	wreg,f,c
  3794   001784  D7FE               	bra	u4907
  3795   001786  2E0E               	decfsz	??_RetardoLCD^0,f,c
  3796   001788  D7FC               	bra	u4907
  3797                           
  3798                           ;LibLCDXC8.h: 314: break;
  3799   00178A  0012               	return	
  3800   00178C                     l3162:
  3801   00178C  0E53               	movlw	83
  3802   00178E                     u4917:
  3803   00178E  2EE8               	decfsz	wreg,f,c
  3804   001790  D7FE               	bra	u4917
  3805   001792  F000               	nop	
  3806                           
  3807                           ;LibLCDXC8.h: 316: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3808   001794  0E35               	movlw	53
  3809   001796                     u4927:
  3810   001796  2EE8               	decfsz	wreg,f,c
  3811   001798  D7FE               	bra	u4927
  3812   00179A  F000               	nop	
  3813                           
  3814                           ;LibLCDXC8.h: 318: break;
  3815   00179C  0012               	return	
  3816   00179E                     l3164:
  3817   00179E  0E08               	movlw	8
  3818   0017A0                     u4937:
  3819   0017A0  2EE8               	decfsz	wreg,f,c
  3820   0017A2  D7FE               	bra	u4937
  3821   0017A4  F000               	nop	
  3822                           
  3823                           ;LibLCDXC8.h: 321: break;
  3824   0017A6  0012               	return	
  3825   0017A8                     l3166:
  3826   0017A8  0E03               	movlw	3
  3827   0017AA                     u4947:
  3828   0017AA  2EE8               	decfsz	wreg,f,c
  3829   0017AC  D7FE               	bra	u4947
  3830   0017AE  F000               	nop	
  3831                           
  3832                           ;LibLCDXC8.h: 324: break;
  3833   0017B0  0012               	return	
  3834   0017B2                     l3170:
  3835   0017B2  500F               	movf	RetardoLCD@a^0,w,c
  3836                           
  3837                           ; Switch size 1, requested type "simple"
  3838                           ; Number of cases is 4, Range of values is 1 to 4
  3839                           ; switch strategies available:
  3840                           ; Name         Instructions Cycles
  3841                           ; simple_byte           13     7 (average)
  3842                           ;	Chosen strategy is simple_byte
  3843   0017B4  0A01               	xorlw	1	; case 1
  3844   0017B6  B4D8               	btfsc	status,2,c
  3845   0017B8  D7E1               	goto	l3160
  3846   0017BA  0A03               	xorlw	3	; case 2
  3847   0017BC  B4D8               	btfsc	status,2,c
  3848   0017BE  D7E6               	goto	l3162
  3849   0017C0  0A01               	xorlw	1	; case 3
  3850   0017C2  B4D8               	btfsc	status,2,c
  3851   0017C4  D7EC               	goto	l3164
  3852   0017C6  0A07               	xorlw	7	; case 4
  3853   0017C8  A4D8               	btfss	status,2,c
  3854   0017CA  0012               	return	
  3855   0017CC  D7ED               	goto	l3166
  3856   0017CE                     __end_of_RetardoLCD:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _HabilitaLCD *****************
  3860 ;; Defined at:
  3861 ;;		line 97 in file "LibLCDXC8.h"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3878 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3879 ;;Total ram usage:        0 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; Hardware stack levels required when called: 5
  3882 ;; This function calls:
  3883 ;;		Nothing
  3884 ;; This function is called by:
  3885 ;;		_EnviaDato
  3886 ;;		_InicializaLCD
  3887 ;;		_BorraLCD
  3888 ;;		_EscribeLCD_c
  3889 ;;		_DireccionaLCD
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text18
  3894   001B06                     __ptext18:
  3895                           	callstack 0
  3896   001B06                     _HabilitaLCD:
  3897                           	callstack 23
  3898                           
  3899                           ;LibLCDXC8.h: 99: LATE1=1;
  3900                           
  3901                           ;incstack = 0
  3902   001B06  828D               	bsf	3981,1,c	;volatile
  3903                           
  3904                           ;LibLCDXC8.h: 100: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3905   001B08  0E03               	movlw	3
  3906   001B0A                     u4957:
  3907   001B0A  2EE8               	decfsz	wreg,f,c
  3908   001B0C  D7FE               	bra	u4957
  3909   001B0E  F000               	nop	
  3910                           
  3911                           ;LibLCDXC8.h: 102: LATE1=0;
  3912   001B10  928D               	bcf	3981,1,c	;volatile
  3913   001B12  0012               	return		;funcret
  3914   001B14                     __end_of_HabilitaLCD:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _ConfiguraLCD *****************
  3918 ;; Defined at:
  3919 ;;		line 49 in file "LibLCDXC8.h"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  a               1    wreg     unsigned char 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  a               1   13[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3933 ;;      Params:         0       0       0       0       0       0       0       0       0
  3934 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3936 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3937 ;;Total ram usage:        1 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 5
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_main
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text19
  3948   001A5E                     __ptext19:
  3949                           	callstack 0
  3950   001A5E                     _ConfiguraLCD:
  3951                           	callstack 25
  3952                           
  3953                           ;incstack = 0
  3954                           ;ConfiguraLCD@a stored from wreg
  3955   001A5E  6E0E               	movwf	ConfiguraLCD@a^0,c
  3956                           
  3957                           ;LibLCDXC8.h: 50: if(a==4 | a ==8)
  3958   001A60  0E04               	movlw	4
  3959   001A62  180E               	xorwf	ConfiguraLCD@a^0,w,c
  3960   001A64  B4D8               	btfsc	status,2,c
  3961   001A66  D004               	goto	u2050
  3962   001A68  0E08               	movlw	8
  3963   001A6A  180E               	xorwf	ConfiguraLCD@a^0,w,c
  3964   001A6C  A4D8               	btfss	status,2,c
  3965   001A6E  0012               	return	
  3966   001A70                     u2050:
  3967                           
  3968                           ;LibLCDXC8.h: 51: interfaz=a;
  3969   001A70  C00E  F04C         	movff	ConfiguraLCD@a,_interfaz
  3970   001A74  0012               	return		;funcret
  3971   001A76                     __end_of_ConfiguraLCD:
  3972                           	callstack 0
  3973                           
  3974 ;; *************** function _ColorRGB *****************
  3975 ;; Defined at:
  3976 ;;		line 262 in file "Lab4.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3992 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3993 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3994 ;;Total ram usage:        2 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; Hardware stack levels required when called: 5
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_main
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text20
  4005   0015D6                     __ptext20:
  4006                           	callstack 0
  4007   0015D6                     _ColorRGB:
  4008                           	callstack 25
  4009                           
  4010                           ;Lab4.c: 263: if(Color==8) Color = 0;
  4011                           
  4012                           ;incstack = 0
  4013   0015D6  0E08               	movlw	8
  4014   0015D8  1838               	xorwf	_Color^0,w,c
  4015   0015DA  1039               	iorwf	(_Color+1)^0,w,c
  4016   0015DC  A4D8               	btfss	status,2,c
  4017   0015DE  D014               	goto	l2624
  4018   0015E0  0E00               	movlw	0
  4019   0015E2  6E39               	movwf	(_Color+1)^0,c
  4020   0015E4  0E00               	movlw	0
  4021   0015E6  6E38               	movwf	_Color^0,c
  4022   0015E8  D00F               	goto	l2624
  4023   0015EA                     l2606:
  4024                           
  4025                           ;Lab4.c: 266: LATC = 0b00000000;
  4026   0015EA  0E00               	movlw	0
  4027   0015EC  D00B               	goto	L12
  4028   0015EE                     l2608:
  4029                           
  4030                           ;Lab4.c: 269: LATC = 0b00000101;
  4031   0015EE  0E05               	movlw	5
  4032   0015F0  D009               	goto	L12
  4033   0015F2                     l2610:
  4034                           
  4035                           ;Lab4.c: 272: LATC = 0b00000110;
  4036   0015F2  0E06               	movlw	6
  4037   0015F4  D007               	goto	L12
  4038   0015F6                     l2612:
  4039                           
  4040                           ;Lab4.c: 275: LATC = 0b00000011;
  4041   0015F6  0E03               	movlw	3
  4042   0015F8  D005               	goto	L12
  4043   0015FA                     l2614:
  4044                           
  4045                           ;Lab4.c: 278: LATC = 0b00000010;
  4046   0015FA  0E02               	movlw	2
  4047   0015FC  D003               	goto	L12
  4048   0015FE                     l2618:
  4049                           
  4050                           ;Lab4.c: 284: LATC = 0b00000100;
  4051   0015FE  0E04               	movlw	4
  4052   001600  D001               	goto	L12
  4053   001602                     l2620:
  4054                           
  4055                           ;Lab4.c: 287: LATC = 0b00000111;
  4056   001602  0E07               	movlw	7
  4057   001604                     L12:
  4058   001604  6E8B               	movwf	139,c	;volatile
  4059                           
  4060                           ;Lab4.c: 288: break;
  4061   001606  D021               	goto	l2626
  4062   001608                     l2624:
  4063   001608  C038  F00E         	movff	_Color,??_ColorRGB
  4064   00160C  C039  F00F         	movff	_Color+1,??_ColorRGB+1
  4065                           
  4066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4067                           ; Switch size 1, requested type "simple"
  4068                           ; Number of cases is 1, Range of values is 0 to 0
  4069                           ; switch strategies available:
  4070                           ; Name         Instructions Cycles
  4071                           ; simple_byte            4     3 (average)
  4072                           ;	Chosen strategy is simple_byte
  4073   001610  500F               	movf	(??_ColorRGB+1)^0,w,c
  4074   001612  0A00               	xorlw	0	; case 0
  4075   001614  A4D8               	btfss	status,2,c
  4076   001616  D019               	goto	l2626
  4077                           
  4078                           ; Switch size 1, requested type "simple"
  4079                           ; Number of cases is 8, Range of values is 0 to 7
  4080                           ; switch strategies available:
  4081                           ; Name         Instructions Cycles
  4082                           ; simple_byte           25    13 (average)
  4083                           ;	Chosen strategy is simple_byte
  4084   001618  500E               	movf	??_ColorRGB^0,w,c
  4085   00161A  0A00               	xorlw	0	; case 0
  4086   00161C  B4D8               	btfsc	status,2,c
  4087   00161E  D7E5               	goto	l2606
  4088   001620  0A01               	xorlw	1	; case 1
  4089   001622  B4D8               	btfsc	status,2,c
  4090   001624  D7E4               	goto	l2608
  4091   001626  0A03               	xorlw	3	; case 2
  4092   001628  B4D8               	btfsc	status,2,c
  4093   00162A  D7E3               	goto	l2610
  4094   00162C  0A01               	xorlw	1	; case 3
  4095   00162E  B4D8               	btfsc	status,2,c
  4096   001630  D7E2               	goto	l2612
  4097   001632  0A07               	xorlw	7	; case 4
  4098   001634  B4D8               	btfsc	status,2,c
  4099   001636  D7E1               	goto	l2614
  4100   001638  0A01               	xorlw	1	; case 5
  4101   00163A  B4D8               	btfsc	status,2,c
  4102   00163C  D7DA               	goto	l2610
  4103   00163E  0A03               	xorlw	3	; case 6
  4104   001640  B4D8               	btfsc	status,2,c
  4105   001642  D7DD               	goto	l2618
  4106   001644  0A01               	xorlw	1	; case 7
  4107   001646  B4D8               	btfsc	status,2,c
  4108   001648  D7DC               	goto	l2620
  4109   00164A                     l2626:
  4110                           
  4111                           ;Lab4.c: 292: Color += 1;
  4112   00164A  4A38               	infsnz	_Color^0,f,c
  4113   00164C  2A39               	incf	(_Color+1)^0,f,c
  4114   00164E  0012               	return		;funcret
  4115   001650                     __end_of_ColorRGB:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function _ISR *****************
  4119 ;; Defined at:
  4120 ;;		line 304 in file "Lab4.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0
  4135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4136 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4137 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4138 ;;Total ram usage:        4 bytes
  4139 ;; Hardware stack levels used: 1
  4140 ;; Hardware stack levels required when called: 4
  4141 ;; This function calls:
  4142 ;;		i2_BorraLCD
  4143 ;;		i2_DireccionaLCD
  4144 ;;		i2_MensajeLCD_Var
  4145 ;; This function is called by:
  4146 ;;		Interrupt level 2
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	intcode
  4151   000008                     __pintcode:
  4152                           	callstack 0
  4153   000008                     _ISR:
  4154                           	callstack 21
  4155                           
  4156                           ;incstack = 0
  4157   000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4158   00000A  EDA4  F00A         	call	int_func,f	;refresh shadow registers
  4159                           
  4160                           	psect	intcode_body
  4161   001548                     __pintcode_body:
  4162                           	callstack 21
  4163   001548                     int_func:
  4164                           	callstack 21
  4165   001548  0006               	pop		; remove dummy address from shadow register refresh
  4166   00154A  CFF6 F00A          	movff	tblptrl,??_ISR
  4167   00154E  CFF7 F00B          	movff	tblptrh,??_ISR+1
  4168   001552  CFF8 F00C          	movff	tblptru,??_ISR+2
  4169   001556  CFF5 F00D          	movff	tablat,??_ISR+3
  4170                           
  4171                           ;Lab4.c: 305: if(TMR0IF==1){
  4172   00155A  A4F2               	btfss	4082,2,c	;volatile
  4173   00155C  D019               	goto	i2l3138
  4174                           
  4175                           ;Lab4.c: 306: if(!Verificador) Contador = Contador +1;
  4176   00155E  5034               	movf	_Verificador^0,w,c
  4177   001560  1035               	iorwf	(_Verificador+1)^0,w,c
  4178   001562  A4D8               	btfss	status,2,c
  4179   001564  D007               	goto	i2l3132
  4180   001566  0E01               	movlw	1
  4181   001568  2436               	addwf	_Contador^0,w,c
  4182   00156A  6E36               	movwf	_Contador^0,c
  4183   00156C  0E00               	movlw	0
  4184   00156E  2037               	addwfc	(_Contador+1)^0,w,c
  4185   001570  6E37               	movwf	(_Contador+1)^0,c
  4186   001572  D004               	goto	i2l3134
  4187   001574                     i2l3132:
  4188                           
  4189                           ;Lab4.c: 307: else Contador = 0;
  4190   001574  0E00               	movlw	0
  4191   001576  6E37               	movwf	(_Contador+1)^0,c
  4192   001578  0E00               	movlw	0
  4193   00157A  6E36               	movwf	_Contador^0,c
  4194   00157C                     i2l3134:
  4195                           
  4196                           ;Lab4.c: 308: TMR0IF=0;
  4197   00157C  94F2               	bcf	4082,2,c	;volatile
  4198                           
  4199                           ;Lab4.c: 309: LATE2 = !LATE2;
  4200   00157E  B48D               	btfsc	3981,2,c	;volatile
  4201   001580  D002               	goto	i2u345_40
  4202   001582  848D               	bsf	3981,2,c	;volatile
  4203   001584  D001               	goto	i2u346_45
  4204   001586                     i2u345_40:
  4205   001586  948D               	bcf	3981,2,c	;volatile
  4206   001588                     i2u346_45:
  4207                           
  4208                           ;Lab4.c: 310: TMR0 = 49911;
  4209   001588  0EC2               	movlw	194
  4210   00158A  6ED7               	movwf	215,c	;volatile
  4211   00158C  0EF7               	movlw	247
  4212   00158E  6ED6               	movwf	214,c	;volatile
  4213   001590                     i2l3138:
  4214                           
  4215                           ;Lab4.c: 311: };Lab4.c: 313: if(Contador == 20){
  4216   001590  0E14               	movlw	20
  4217   001592  1836               	xorwf	_Contador^0,w,c
  4218   001594  1037               	iorwf	(_Contador+1)^0,w,c
  4219   001596  A4D8               	btfss	status,2,c
  4220   001598  D014               	goto	i2l345
  4221                           
  4222                           ;Lab4.c: 314: if(!Verificador){
  4223   00159A  5034               	movf	_Verificador^0,w,c
  4224   00159C  1035               	iorwf	(_Verificador+1)^0,w,c
  4225   00159E  A4D8               	btfss	status,2,c
  4226   0015A0  D010               	goto	i2l345
  4227                           
  4228                           ;Lab4.c: 315: LATC7 = !LATC7;
  4229   0015A2  BE8B               	btfsc	3979,7,c	;volatile
  4230   0015A4  D002               	goto	i2u349_40
  4231   0015A6  8E8B               	bsf	3979,7,c	;volatile
  4232   0015A8  D001               	goto	i2u350_45
  4233   0015AA                     i2u349_40:
  4234   0015AA  9E8B               	bcf	3979,7,c	;volatile
  4235   0015AC                     i2u350_45:
  4236                           
  4237                           ;Lab4.c: 316: BorraLCD();
  4238   0015AC  EC71  F00D         	call	i2_BorraLCD	;wreg free
  4239                           
  4240                           ;Lab4.c: 317: DireccionaLCD(0x82);
  4241   0015B0  0E82               	movlw	130
  4242   0015B2  EC5C  F00D         	call	i2_DireccionaLCD
  4243                           
  4244                           ;Lab4.c: 318: MensajeLCD_Var("LVP Activado");
  4245   0015B6  0E2C               	movlw	low STR_11
  4246   0015B8  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4247   0015BA  EC64  F00C         	call	i2_MensajeLCD_Var	;wreg free
  4248   0015BE  0003               	sleep		;# 
  4249   0015C0                     i2l342:
  4250   0015C0  D7FF               	goto	i2l342
  4251   0015C2                     i2l345:
  4252   0015C2  C00D  FFF5         	movff	??_ISR+3,tablat
  4253   0015C6  C00C  FFF8         	movff	??_ISR+2,tblptru
  4254   0015CA  C00B  FFF7         	movff	??_ISR+1,tblptrh
  4255   0015CE  C00A  FFF6         	movff	??_ISR,tblptrl
  4256   0015D2  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4257   0015D4  0011               	retfie		f
  4258   0015D6                     __end_of_ISR:
  4259                           	callstack 0
  4260                           
  4261 ;; *************** function i2_MensajeLCD_Var *****************
  4262 ;; Defined at:
  4263 ;;		line 262 in file "LibLCDXC8.h"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  a               1    5[COMRAM] PTR unsigned char 
  4266 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4267 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4268 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4269 ;;		 -> STR_1(8), 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;  i               2    7[COMRAM] int 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4281 ;;      Params:         1       0       0       0       0       0       0       0       0
  4282 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4283 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4284 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4285 ;;Total ram usage:        4 bytes
  4286 ;; Hardware stack levels used: 1
  4287 ;; Hardware stack levels required when called: 3
  4288 ;; This function calls:
  4289 ;;		i2_EscribeLCD_c
  4290 ;;		i2_strlen
  4291 ;; This function is called by:
  4292 ;;		_ISR
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text22
  4297   0018C8                     __ptext22:
  4298                           	callstack 0
  4299   0018C8                     i2_MensajeLCD_Var:
  4300                           	callstack 21
  4301                           
  4302                           ;LibLCDXC8.h: 266: for(int i = 0; i<strlen(a); i++){
  4303                           
  4304                           ;incstack = 0
  4305   0018C8  0E00               	movlw	0
  4306   0018CA  6E09               	movwf	(i2MensajeLCD_Var@i+1)^0,c
  4307   0018CC  0E00               	movlw	0
  4308   0018CE  6E08               	movwf	i2MensajeLCD_Var@i^0,c
  4309   0018D0  D019               	goto	i2l2762
  4310   0018D2                     i2l2754:
  4311                           
  4312                           ;LibLCDXC8.h: 267: if(a[i] == (0)){
  4313   0018D2  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4314   0018D4  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4315   0018D6  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4316   0018D8  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4317   0018DC                     	if	1	;There is more than 1 active tblptr byte
  4318   0018DC  0E08               	movlw	high __smallconst
  4319   0018DE  6EF7               	movwf	tblptrh,c
  4320   0018E0                     	endif
  4321   0018E0                     	if	0	;tblptru may be non-zero
  4322   0018E0                     	endif
  4323   0018E0                     	if	0	;tblptru may be non-zero
  4324   0018E0                     	endif
  4325   0018E0  0008               	tblrd		*
  4326   0018E2  50F5               	movf	tablat,w,c
  4327   0018E4  0900               	iorlw	0
  4328   0018E6  B4D8               	btfsc	status,2,c
  4329   0018E8  0012               	return	
  4330                           
  4331                           ;LibLCDXC8.h: 269: };LibLCDXC8.h: 270: EscribeLCD_c(a[i]);
  4332   0018EA  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4333   0018EC  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4334   0018EE  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4335   0018F0  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4336   0018F4                     	if	1	;There is more than 1 active tblptr byte
  4337   0018F4  0E08               	movlw	high __smallconst
  4338   0018F6  6EF7               	movwf	tblptrh,c
  4339   0018F8                     	endif
  4340   0018F8                     	if	0	;tblptru may be non-zero
  4341   0018F8                     	endif
  4342   0018F8                     	if	0	;tblptru may be non-zero
  4343   0018F8                     	endif
  4344   0018F8  0008               	tblrd		*
  4345   0018FA  50F5               	movf	tablat,w,c
  4346   0018FC  EC51  F00D         	call	i2_EscribeLCD_c
  4347   001900  4A08               	infsnz	i2MensajeLCD_Var@i^0,f,c
  4348   001902  2A09               	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  4349   001904                     i2l2762:
  4350   001904  C006  F001         	movff	i2MensajeLCD_Var@a,i2strlen@s
  4351   001908  EC08  F00D         	call	i2_strlen	;wreg free
  4352   00190C  5001               	movf	?i2_strlen^0,w,c
  4353   00190E  5C08               	subwf	i2MensajeLCD_Var@i^0,w,c
  4354   001910  5002               	movf	(?i2_strlen+1)^0,w,c
  4355   001912  5809               	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  4356   001914  B0D8               	btfsc	status,0,c
  4357   001916  0012               	return	
  4358   001918  D7DC               	goto	i2l2754
  4359   00191A                     __end_ofi2_MensajeLCD_Var:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function i2_strlen *****************
  4363 ;; Defined at:
  4364 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  s               1    0[COMRAM] PTR const unsigned char 
  4367 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4368 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4369 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4370 ;;		 -> STR_1(8), 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  4373 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4374 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4375 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4376 ;;		 -> STR_1(8), 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  2    0[COMRAM] unsigned int 
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4386 ;;      Params:         2       0       0       0       0       0       0       0       0
  4387 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4389 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4390 ;;Total ram usage:        3 bytes
  4391 ;; Hardware stack levels used: 1
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		i2_MensajeLCD_Var
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text23
  4400   001A10                     __ptext23:
  4401                           	callstack 0
  4402   001A10                     i2_strlen:
  4403                           	callstack 23
  4404                           
  4405                           ;incstack = 0
  4406   001A10  C001  F003         	movff	i2strlen@s,i2strlen@cp
  4407   001A14  D001               	goto	i2l2400
  4408   001A16                     i2l2398:
  4409   001A16  2A03               	incf	i2strlen@cp^0,f,c
  4410   001A18                     i2l2400:
  4411   001A18  C003  FFF6         	movff	i2strlen@cp,tblptrl
  4412   001A1C                     	if	1	;There is more than 1 active tblptr byte
  4413   001A1C  0E08               	movlw	high __smallconst
  4414   001A1E  6EF7               	movwf	tblptrh,c
  4415   001A20                     	endif
  4416   001A20                     	if	0	;tblptru may be non-zero
  4417   001A20                     	endif
  4418   001A20                     	if	0	;tblptru may be non-zero
  4419   001A20                     	endif
  4420   001A20  0008               	tblrd		*
  4421   001A22  50F5               	movf	tablat,w,c
  4422   001A24  0900               	iorlw	0
  4423   001A26  A4D8               	btfss	status,2,c
  4424   001A28  D7F6               	goto	i2l2398
  4425   001A2A  5001               	movf	i2strlen@s^0,w,c
  4426   001A2C  5C03               	subwf	i2strlen@cp^0,w,c
  4427   001A2E  6E01               	movwf	?i2_strlen^0,c
  4428   001A30  6A02               	clrf	(?i2_strlen+1)^0,c
  4429   001A32  BE01               	btfsc	?i2_strlen^0,7,c
  4430   001A34  0602               	decf	(?i2_strlen+1)^0,f,c
  4431   001A36  0012               	return		;funcret
  4432   001A38                     __end_ofi2_strlen:
  4433                           	callstack 0
  4434                           
  4435 ;; *************** function i2_EscribeLCD_c *****************
  4436 ;; Defined at:
  4437 ;;		line 118 in file "LibLCDXC8.h"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  a               1    wreg     unsigned char 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  a               1    4[COMRAM] unsigned char 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4451 ;;      Params:         0       0       0       0       0       0       0       0       0
  4452 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4454 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4455 ;;Total ram usage:        1 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; Hardware stack levels required when called: 2
  4458 ;; This function calls:
  4459 ;;		i2_EnviaDato
  4460 ;;		i2_HabilitaLCD
  4461 ;;		i2_RetardoLCD
  4462 ;; This function is called by:
  4463 ;;		i2_MensajeLCD_Var
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text24
  4468   001AA2                     __ptext24:
  4469                           	callstack 0
  4470   001AA2                     i2_EscribeLCD_c:
  4471                           	callstack 21
  4472                           
  4473                           ;incstack = 0
  4474                           ;i2EscribeLCD_c@a stored from wreg
  4475   001AA2  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4476                           
  4477                           ;LibLCDXC8.h: 122: LATE0=1;
  4478   001AA4  808D               	bsf	3981,0,c	;volatile
  4479                           
  4480                           ;LibLCDXC8.h: 123: EnviaDato(a);
  4481   001AA6  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4482   001AA8  ECB0  F00C         	call	i2_EnviaDato
  4483                           
  4484                           ;LibLCDXC8.h: 124: HabilitaLCD();
  4485   001AAC  EC8A  F00D         	call	i2_HabilitaLCD	;wreg free
  4486                           
  4487                           ;LibLCDXC8.h: 125: RetardoLCD(4);
  4488   001AB0  0E04               	movlw	4
  4489   001AB2  ECE7  F00B         	call	i2_RetardoLCD
  4490   001AB6  0012               	return		;funcret
  4491   001AB8                     __end_ofi2_EscribeLCD_c:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function i2_DireccionaLCD *****************
  4495 ;; Defined at:
  4496 ;;		line 274 in file "LibLCDXC8.h"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  a               1    wreg     unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  a               1    4[COMRAM] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4510 ;;      Params:         0       0       0       0       0       0       0       0       0
  4511 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4513 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4514 ;;Total ram usage:        1 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; Hardware stack levels required when called: 2
  4517 ;; This function calls:
  4518 ;;		i2_EnviaDato
  4519 ;;		i2_HabilitaLCD
  4520 ;;		i2_RetardoLCD
  4521 ;; This function is called by:
  4522 ;;		_ISR
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text25
  4527   001AB8                     __ptext25:
  4528                           	callstack 0
  4529   001AB8                     i2_DireccionaLCD:
  4530                           	callstack 22
  4531                           
  4532                           ;incstack = 0
  4533                           ;i2DireccionaLCD@a stored from wreg
  4534   001AB8  6E05               	movwf	i2DireccionaLCD@a^0,c
  4535                           
  4536                           ;LibLCDXC8.h: 277: LATE0=0;
  4537   001ABA  908D               	bcf	3981,0,c	;volatile
  4538                           
  4539                           ;LibLCDXC8.h: 278: EnviaDato(a);
  4540   001ABC  5005               	movf	i2DireccionaLCD@a^0,w,c
  4541   001ABE  ECB0  F00C         	call	i2_EnviaDato
  4542                           
  4543                           ;LibLCDXC8.h: 279: HabilitaLCD();
  4544   001AC2  EC8A  F00D         	call	i2_HabilitaLCD	;wreg free
  4545                           
  4546                           ;LibLCDXC8.h: 280: RetardoLCD(4);
  4547   001AC6  0E04               	movlw	4
  4548   001AC8  ECE7  F00B         	call	i2_RetardoLCD
  4549   001ACC  0012               	return		;funcret
  4550   001ACE                     __end_ofi2_DireccionaLCD:
  4551                           	callstack 0
  4552                           
  4553 ;; *************** function i2_BorraLCD *****************
  4554 ;; Defined at:
  4555 ;;		line 104 in file "LibLCDXC8.h"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4569 ;;      Params:         0       0       0       0       0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4572 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4573 ;;Total ram usage:        0 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; Hardware stack levels required when called: 2
  4576 ;; This function calls:
  4577 ;;		i2_EnviaDato
  4578 ;;		i2_HabilitaLCD
  4579 ;;		i2_RetardoLCD
  4580 ;; This function is called by:
  4581 ;;		_ISR
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text26
  4586   001AE2                     __ptext26:
  4587                           	callstack 0
  4588   001AE2                     i2_BorraLCD:
  4589                           	callstack 22
  4590                           
  4591                           ;LibLCDXC8.h: 106: LATE0=0;
  4592                           
  4593                           ;incstack = 0
  4594   001AE2  908D               	bcf	3981,0,c	;volatile
  4595                           
  4596                           ;LibLCDXC8.h: 107: EnviaDato(0x01);
  4597   001AE4  0E01               	movlw	1
  4598   001AE6  ECB0  F00C         	call	i2_EnviaDato
  4599                           
  4600                           ;LibLCDXC8.h: 108: HabilitaLCD();
  4601   001AEA  EC8A  F00D         	call	i2_HabilitaLCD	;wreg free
  4602                           
  4603                           ;LibLCDXC8.h: 109: RetardoLCD(2);
  4604   001AEE  0E02               	movlw	2
  4605   001AF0  ECE7  F00B         	call	i2_RetardoLCD
  4606   001AF4  0012               	return		;funcret
  4607   001AF6                     __end_ofi2_BorraLCD:
  4608                           	callstack 0
  4609                           
  4610 ;; *************** function i2_EnviaDato *****************
  4611 ;; Defined at:
  4612 ;;		line 53 in file "LibLCDXC8.h"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  a               1    wreg     unsigned char 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  a               1    3[COMRAM] unsigned char 
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0
  4627 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4628 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4629 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4630 ;;Total ram usage:        2 bytes
  4631 ;; Hardware stack levels used: 1
  4632 ;; Hardware stack levels required when called: 1
  4633 ;; This function calls:
  4634 ;;		i2_HabilitaLCD
  4635 ;;		i2_RetardoLCD
  4636 ;; This function is called by:
  4637 ;;		i2_BorraLCD
  4638 ;;		i2_EscribeLCD_c
  4639 ;;		i2_DireccionaLCD
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text27
  4644   001960                     __ptext27:
  4645                           	callstack 0
  4646   001960                     i2_EnviaDato:
  4647                           	callstack 21
  4648                           
  4649                           ;incstack = 0
  4650                           ;i2EnviaDato@a stored from wreg
  4651   001960  6E04               	movwf	i2EnviaDato@a^0,c
  4652                           
  4653                           ;LibLCDXC8.h: 54: if(interfaz==4){
  4654   001962  0E04               	movlw	4
  4655   001964  184C               	xorwf	_interfaz^0,w,c
  4656   001966  A4D8               	btfss	status,2,c
  4657   001968  D017               	goto	i2l2222
  4658                           
  4659                           ;LibLCDXC8.h: 55: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4660   00196A  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4661   00196E  0EF0               	movlw	240
  4662   001970  1603               	andwf	??i2_EnviaDato^0,f,c
  4663   001972  508C               	movf	140,w,c	;volatile
  4664   001974  0B0F               	andlw	15
  4665   001976  1003               	iorwf	??i2_EnviaDato^0,w,c
  4666   001978  6E8C               	movwf	140,c	;volatile
  4667                           
  4668                           ;LibLCDXC8.h: 56: HabilitaLCD();
  4669   00197A  EC8A  F00D         	call	i2_HabilitaLCD	;wreg free
  4670                           
  4671                           ;LibLCDXC8.h: 57: RetardoLCD(1);
  4672   00197E  0E01               	movlw	1
  4673   001980  ECE7  F00B         	call	i2_RetardoLCD
  4674                           
  4675                           ;LibLCDXC8.h: 58: LATD=(LATD & 0b00001111) | (a<<4);
  4676   001984  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4677   001988  3A03               	swapf	??i2_EnviaDato^0,f,c
  4678   00198A  0EF0               	movlw	240
  4679   00198C  1603               	andwf	??i2_EnviaDato^0,f,c
  4680   00198E  508C               	movf	140,w,c	;volatile
  4681   001990  0B0F               	andlw	15
  4682   001992  1003               	iorwf	??i2_EnviaDato^0,w,c
  4683   001994  6E8C               	movwf	140,c	;volatile
  4684                           
  4685                           ;LibLCDXC8.h: 59: }else if(interfaz==8){
  4686   001996  0012               	return	
  4687   001998                     i2l2222:
  4688   001998  0E08               	movlw	8
  4689   00199A  184C               	xorwf	_interfaz^0,w,c
  4690   00199C  A4D8               	btfss	status,2,c
  4691   00199E  0012               	return	
  4692                           
  4693                           ;LibLCDXC8.h: 60: LATD=a;
  4694   0019A0  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4695   0019A4  0012               	return		;funcret
  4696   0019A6                     __end_ofi2_EnviaDato:
  4697                           	callstack 0
  4698                           
  4699 ;; *************** function i2_RetardoLCD *****************
  4700 ;; Defined at:
  4701 ;;		line 310 in file "LibLCDXC8.h"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  a               1    wreg     unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  a               1    1[COMRAM] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0
  4716 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4717 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4718 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4719 ;;Total ram usage:        2 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		i2_EnviaDato
  4725 ;;		i2_BorraLCD
  4726 ;;		i2_EscribeLCD_c
  4727 ;;		i2_DireccionaLCD
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text28
  4732   0017CE                     __ptext28:
  4733                           	callstack 0
  4734   0017CE                     i2_RetardoLCD:
  4735                           	callstack 22
  4736                           
  4737                           ;incstack = 0
  4738                           ;i2RetardoLCD@a stored from wreg
  4739   0017CE  6E02               	movwf	i2RetardoLCD@a^0,c
  4740                           
  4741                           ;LibLCDXC8.h: 311: switch(a){
  4742   0017D0  D01B               	goto	i2l2192
  4743   0017D2                     i2l2182:
  4744   0017D2  0E05               	movlw	5
  4745   0017D4  6E01               	movwf	??i2_RetardoLCD^0,c
  4746   0017D6  0EDE               	movlw	222
  4747   0017D8                     i2u496_47:
  4748   0017D8  2EE8               	decfsz	wreg,f,c
  4749   0017DA  D7FE               	bra	i2u496_47
  4750   0017DC  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4751   0017DE  D7FC               	bra	i2u496_47
  4752                           
  4753                           ;LibLCDXC8.h: 314: break;
  4754   0017E0  0012               	return	
  4755   0017E2                     i2l2184:
  4756   0017E2  0E53               	movlw	83
  4757   0017E4                     i2u497_47:
  4758   0017E4  2EE8               	decfsz	wreg,f,c
  4759   0017E6  D7FE               	bra	i2u497_47
  4760   0017E8  F000               	nop	
  4761                           
  4762                           ;LibLCDXC8.h: 316: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4763   0017EA  0E35               	movlw	53
  4764   0017EC                     i2u498_47:
  4765   0017EC  2EE8               	decfsz	wreg,f,c
  4766   0017EE  D7FE               	bra	i2u498_47
  4767   0017F0  F000               	nop	
  4768                           
  4769                           ;LibLCDXC8.h: 318: break;
  4770   0017F2  0012               	return	
  4771   0017F4                     i2l2186:
  4772   0017F4  0E08               	movlw	8
  4773   0017F6                     i2u499_47:
  4774   0017F6  2EE8               	decfsz	wreg,f,c
  4775   0017F8  D7FE               	bra	i2u499_47
  4776   0017FA  F000               	nop	
  4777                           
  4778                           ;LibLCDXC8.h: 321: break;
  4779   0017FC  0012               	return	
  4780   0017FE                     i2l2188:
  4781   0017FE  0E03               	movlw	3
  4782   001800                     i2u500_47:
  4783   001800  2EE8               	decfsz	wreg,f,c
  4784   001802  D7FE               	bra	i2u500_47
  4785   001804  F000               	nop	
  4786                           
  4787                           ;LibLCDXC8.h: 324: break;
  4788   001806  0012               	return	
  4789   001808                     i2l2192:
  4790   001808  5002               	movf	i2RetardoLCD@a^0,w,c
  4791                           
  4792                           ; Switch size 1, requested type "simple"
  4793                           ; Number of cases is 4, Range of values is 1 to 4
  4794                           ; switch strategies available:
  4795                           ; Name         Instructions Cycles
  4796                           ; simple_byte           13     7 (average)
  4797                           ;	Chosen strategy is simple_byte
  4798   00180A  0A01               	xorlw	1	; case 1
  4799   00180C  B4D8               	btfsc	status,2,c
  4800   00180E  D7E1               	goto	i2l2182
  4801   001810  0A03               	xorlw	3	; case 2
  4802   001812  B4D8               	btfsc	status,2,c
  4803   001814  D7E6               	goto	i2l2184
  4804   001816  0A01               	xorlw	1	; case 3
  4805   001818  B4D8               	btfsc	status,2,c
  4806   00181A  D7EC               	goto	i2l2186
  4807   00181C  0A07               	xorlw	7	; case 4
  4808   00181E  A4D8               	btfss	status,2,c
  4809   001820  0012               	return	
  4810   001822  D7ED               	goto	i2l2188
  4811   001824                     __end_ofi2_RetardoLCD:
  4812                           	callstack 0
  4813                           
  4814 ;; *************** function i2_HabilitaLCD *****************
  4815 ;; Defined at:
  4816 ;;		line 97 in file "LibLCDXC8.h"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4830 ;;      Params:         0       0       0       0       0       0       0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4833 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4834 ;;Total ram usage:        0 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		i2_EnviaDato
  4840 ;;		i2_BorraLCD
  4841 ;;		i2_EscribeLCD_c
  4842 ;;		i2_DireccionaLCD
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text29
  4847   001B14                     __ptext29:
  4848                           	callstack 0
  4849   001B14                     i2_HabilitaLCD:
  4850                           	callstack 22
  4851                           
  4852                           ;LibLCDXC8.h: 99: LATE1=1;
  4853                           
  4854                           ;incstack = 0
  4855   001B14  828D               	bsf	3981,1,c	;volatile
  4856                           
  4857                           ;LibLCDXC8.h: 100: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4858   001B16  0E03               	movlw	3
  4859   001B18                     i2u501_47:
  4860   001B18  2EE8               	decfsz	wreg,f,c
  4861   001B1A  D7FE               	bra	i2u501_47
  4862   001B1C  F000               	nop	
  4863                           
  4864                           ;LibLCDXC8.h: 102: LATE1=0;
  4865   001B1E  928D               	bcf	3981,1,c	;volatile
  4866   001B20  0012               	return		;funcret
  4867   001B22                     __end_ofi2_HabilitaLCD:
  4868                           	callstack 0
  4869                           
  4870                           	psect	rparam
  4871   000000                     
  4872                           	psect	temp
  4873   00004D                     btemp:
  4874                           	callstack 0
  4875   00004D                     	ds	1
  4876   000000                     int$flags	set	btemp
  4877   000000                     wtemp8	set	btemp+1
  4878   000000                     ttemp5	set	btemp+1
  4879   000000                     ttemp6	set	btemp+4
  4880   000000                     ttemp7	set	btemp+8
  4881                           
  4882                           	psect	idloc
  4883                           
  4884                           ;Config register IDLOC0 @ 0x200000
  4885                           ;	unspecified, using default values
  4886   200000                     	org	2097152
  4887   200000  FF                 	db	255
  4888                           
  4889                           ;Config register IDLOC1 @ 0x200001
  4890                           ;	unspecified, using default values
  4891   200001                     	org	2097153
  4892   200001  FF                 	db	255
  4893                           
  4894                           ;Config register IDLOC2 @ 0x200002
  4895                           ;	unspecified, using default values
  4896   200002                     	org	2097154
  4897   200002  FF                 	db	255
  4898                           
  4899                           ;Config register IDLOC3 @ 0x200003
  4900                           ;	unspecified, using default values
  4901   200003                     	org	2097155
  4902   200003  FF                 	db	255
  4903                           
  4904                           ;Config register IDLOC4 @ 0x200004
  4905                           ;	unspecified, using default values
  4906   200004                     	org	2097156
  4907   200004  FF                 	db	255
  4908                           
  4909                           ;Config register IDLOC5 @ 0x200005
  4910                           ;	unspecified, using default values
  4911   200005                     	org	2097157
  4912   200005  FF                 	db	255
  4913                           
  4914                           ;Config register IDLOC6 @ 0x200006
  4915                           ;	unspecified, using default values
  4916   200006                     	org	2097158
  4917   200006  FF                 	db	255
  4918                           
  4919                           ;Config register IDLOC7 @ 0x200007
  4920                           ;	unspecified, using default values
  4921   200007                     	org	2097159
  4922   200007  FF                 	db	255
  4923                           
  4924                           	psect	config
  4925                           
  4926                           ;Config register CONFIG1L @ 0x300000
  4927                           ;	unspecified, using default values
  4928                           ;	PLL Prescaler Selection bits
  4929                           ;	PLLDIV = 0x0, unprogrammed default
  4930                           ;	System Clock Postscaler Selection bits
  4931                           ;	CPUDIV = 0x0, unprogrammed default
  4932                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4933                           ;	USBDIV = 0x0, unprogrammed default
  4934   300000                     	org	3145728
  4935   300000  00                 	db	0
  4936                           
  4937                           ;Config register CONFIG1H @ 0x300001
  4938                           ;	Oscillator Selection bits
  4939                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4940                           ;	Fail-Safe Clock Monitor Enable bit
  4941                           ;	FCMEN = 0x0, unprogrammed default
  4942                           ;	Internal/External Oscillator Switchover bit
  4943                           ;	IESO = 0x0, unprogrammed default
  4944   300001                     	org	3145729
  4945   300001  09                 	db	9
  4946                           
  4947                           ;Config register CONFIG2L @ 0x300002
  4948                           ;	unspecified, using default values
  4949                           ;	Power-up Timer Enable bit
  4950                           ;	PWRT = 0x1, unprogrammed default
  4951                           ;	Brown-out Reset Enable bits
  4952                           ;	BOR = 0x3, unprogrammed default
  4953                           ;	Brown-out Reset Voltage bits
  4954                           ;	BORV = 0x3, unprogrammed default
  4955                           ;	USB Voltage Regulator Enable bit
  4956                           ;	VREGEN = 0x0, unprogrammed default
  4957   300002                     	org	3145730
  4958   300002  1F                 	db	31
  4959                           
  4960                           ;Config register CONFIG2H @ 0x300003
  4961                           ;	Watchdog Timer Enable bit
  4962                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4963                           ;	Watchdog Timer Postscale Select bits
  4964                           ;	WDTPS = 0xF, unprogrammed default
  4965   300003                     	org	3145731
  4966   300003  1E                 	db	30
  4967                           
  4968                           ; Padding undefined space
  4969   300004                     	org	3145732
  4970   300004  FF                 	db	255
  4971                           
  4972                           ;Config register CONFIG3H @ 0x300005
  4973                           ;	CCP2 MUX bit
  4974                           ;	CCP2MX = 0x1, unprogrammed default
  4975                           ;	PORTB A/D Enable bit
  4976                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4977                           ;	Low-Power Timer 1 Oscillator Enable bit
  4978                           ;	LPT1OSC = 0x0, unprogrammed default
  4979                           ;	MCLR Pin Enable bit
  4980                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4981   300005                     	org	3145733
  4982   300005  81                 	db	129
  4983                           
  4984                           ;Config register CONFIG4L @ 0x300006
  4985                           ;	Stack Full/Underflow Reset Enable bit
  4986                           ;	STVREN = 0x1, unprogrammed default
  4987                           ;	Single-Supply ICSP Enable bit
  4988                           ;	LVP = OFF, Single-Supply ICSP disabled
  4989                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4990                           ;	ICPRT = 0x0, unprogrammed default
  4991                           ;	Extended Instruction Set Enable bit
  4992                           ;	XINST = 0x0, unprogrammed default
  4993                           ;	Background Debugger Enable bit
  4994                           ;	DEBUG = 0x1, unprogrammed default
  4995   300006                     	org	3145734
  4996   300006  81                 	db	129
  4997                           
  4998                           ; Padding undefined space
  4999   300007                     	org	3145735
  5000   300007  FF                 	db	255
  5001                           
  5002                           ;Config register CONFIG5L @ 0x300008
  5003                           ;	unspecified, using default values
  5004                           ;	Code Protection bit
  5005                           ;	CP0 = 0x1, unprogrammed default
  5006                           ;	Code Protection bit
  5007                           ;	CP1 = 0x1, unprogrammed default
  5008                           ;	Code Protection bit
  5009                           ;	CP2 = 0x1, unprogrammed default
  5010                           ;	Code Protection bit
  5011                           ;	CP3 = 0x1, unprogrammed default
  5012   300008                     	org	3145736
  5013   300008  0F                 	db	15
  5014                           
  5015                           ;Config register CONFIG5H @ 0x300009
  5016                           ;	unspecified, using default values
  5017                           ;	Boot Block Code Protection bit
  5018                           ;	CPB = 0x1, unprogrammed default
  5019                           ;	Data EEPROM Code Protection bit
  5020                           ;	CPD = 0x1, unprogrammed default
  5021   300009                     	org	3145737
  5022   300009  C0                 	db	192
  5023                           
  5024                           ;Config register CONFIG6L @ 0x30000A
  5025                           ;	unspecified, using default values
  5026                           ;	Write Protection bit
  5027                           ;	WRT0 = 0x1, unprogrammed default
  5028                           ;	Write Protection bit
  5029                           ;	WRT1 = 0x1, unprogrammed default
  5030                           ;	Write Protection bit
  5031                           ;	WRT2 = 0x1, unprogrammed default
  5032                           ;	Write Protection bit
  5033                           ;	WRT3 = 0x1, unprogrammed default
  5034   30000A                     	org	3145738
  5035   30000A  0F                 	db	15
  5036                           
  5037                           ;Config register CONFIG6H @ 0x30000B
  5038                           ;	unspecified, using default values
  5039                           ;	Configuration Register Write Protection bit
  5040                           ;	WRTC = 0x1, unprogrammed default
  5041                           ;	Boot Block Write Protection bit
  5042                           ;	WRTB = 0x1, unprogrammed default
  5043                           ;	Data EEPROM Write Protection bit
  5044                           ;	WRTD = 0x1, unprogrammed default
  5045   30000B                     	org	3145739
  5046   30000B  E0                 	db	224
  5047                           
  5048                           ;Config register CONFIG7L @ 0x30000C
  5049                           ;	unspecified, using default values
  5050                           ;	Table Read Protection bit
  5051                           ;	EBTR0 = 0x1, unprogrammed default
  5052                           ;	Table Read Protection bit
  5053                           ;	EBTR1 = 0x1, unprogrammed default
  5054                           ;	Table Read Protection bit
  5055                           ;	EBTR2 = 0x1, unprogrammed default
  5056                           ;	Table Read Protection bit
  5057                           ;	EBTR3 = 0x1, unprogrammed default
  5058   30000C                     	org	3145740
  5059   30000C  0F                 	db	15
  5060                           
  5061                           ;Config register CONFIG7H @ 0x30000D
  5062                           ;	unspecified, using default values
  5063                           ;	Boot Block Table Read Protection bit
  5064                           ;	EBTRB = 0x1, unprogrammed default
  5065   30000D                     	org	3145741
  5066   30000D  40                 	db	64
  5067                           tosu	equ	0xFFF
  5068                           tosh	equ	0xFFE
  5069                           tosl	equ	0xFFD
  5070                           stkptr	equ	0xFFC
  5071                           pclatu	equ	0xFFB
  5072                           pclath	equ	0xFFA
  5073                           pcl	equ	0xFF9
  5074                           tblptru	equ	0xFF8
  5075                           tblptrh	equ	0xFF7
  5076                           tblptrl	equ	0xFF6
  5077                           tablat	equ	0xFF5
  5078                           prodh	equ	0xFF4
  5079                           prodl	equ	0xFF3
  5080                           indf0	equ	0xFEF
  5081                           postinc0	equ	0xFEE
  5082                           postdec0	equ	0xFED
  5083                           preinc0	equ	0xFEC
  5084                           plusw0	equ	0xFEB
  5085                           fsr0h	equ	0xFEA
  5086                           fsr0l	equ	0xFE9
  5087                           wreg	equ	0xFE8
  5088                           indf1	equ	0xFE7
  5089                           postinc1	equ	0xFE6
  5090                           postdec1	equ	0xFE5
  5091                           preinc1	equ	0xFE4
  5092                           plusw1	equ	0xFE3
  5093                           fsr1h	equ	0xFE2
  5094                           fsr1l	equ	0xFE1
  5095                           bsr	equ	0xFE0
  5096                           indf2	equ	0xFDF
  5097                           postinc2	equ	0xFDE
  5098                           postdec2	equ	0xFDD
  5099                           preinc2	equ	0xFDC
  5100                           plusw2	equ	0xFDB
  5101                           fsr2h	equ	0xFDA
  5102                           fsr2l	equ	0xFD9
  5103                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    0
    Data        20
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      76
    BANK0           160     11      27
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Imprimir_Resultado
    _factorial_function->___lmul
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _Imprimir_Resultado->___aldiv
    ___lwdiv->___wmul
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_Imprimir_Resultado

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   17593
                                             35 COMRAM     4     4      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                 _Imprimir_Resultado
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
                             ___lmul
                            ___lwdiv
                             ___wmul
                 _factorial_function
 ---------------------------------------------------------------------------------
 (1) _factorial_function                                   8     4      4    2265
                                             25 COMRAM     8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     310
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     155
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Resultado                                  19    15      4    8989
                                             27 COMRAM     8     4      4
                                              0 BANK0     11    11      0
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     772
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     781
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2076
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     613
                                             13 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             13 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1    1733
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     220
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0     124
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      31
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0     650
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Var                                     4     3      1     408
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Imprimir_Resultado
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
       _EscribeLCD_c
       _strlen
     ___aldiv
     ___almod
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
   ___lmul
   ___lwdiv
   ___wmul
   _factorial_function
     ___lmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_DireccionaLCD
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      1B       5       16.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      4C       1       80.9%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      29        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 19 11:21:58 2023

                          _a 0032                            _b 0030                            _i 003A  
                          _m 0045             i2DireccionaLCD@a 0005                           _PD 007E82  
                         _TO 007E83                   EnviaDato@a 0011          ___wmul@multiplicand 0010  
              ??_LeerTeclado 000E                          l301 13D0                _InicializaLCD 14AC  
                        l305 13E4                          l306 13FC                          l307 13EC  
                        l309 13F4                          l280 1370                          l282 1378  
                        l274 1368                          l194 08B6                          l291 13A4  
                        l293 13AC                          l286 139C                          l297 13C0  
                        l299 13C8                          l856 186C                          l866 19DE  
                        _GIE 007F97                          _RB4 007C0C                          _RB5 007C0D  
                        _RB6 007C0E                          _RB7 007C0F                          _ISR 0008  
                        _POR 007E81                          wreg 000FE8                         ?_ISR 0001  
           ??i2_EscribeLCD_c 0005                         l3300 141C                         l3214 1880  
                       l3222 18B2                         l3310 144E                         l3160 177C  
                       l3320 1484                         l3304 1430                         l3240 1732  
                       l2520 1392                         l2610 15F2                         l3162 178C  
                       l3170 17B2                         l2620 1602                         l2612 15F6  
                       l3164 179E                         l3324 149A                         l3316 1476  
                       l3308 1442                         l3244 1746                         l3412 1532  
                       l2508 1380                         l2614 15FA                         l2606 15EA  
                       l3166 17A8                         l3182 1952                         l3270 12CC  
                       l3262 129E                         l3334 183A                         l3510 1222  
                       l2608 15EE                         l2624 1608                         l3280 1300  
                       l3256 1286                         l3336 1842                         l3520 1260  
                       l3504 120E                         l3440 0FCA                         l3432 0F66  
                       l2544 13B4                         l2618 15FE                         l2626 164A  
                       l3346 1862                         l3362 19D4                         l3354 19B4  
                       l3514 123E                         l3506 1214                         l3530 16A6  
                       l3196 19EE                         l3268 12C0                         l3284 130E  
                       l3356 19BC                         l3372 14BE                         l2572 13D8  
                       l2484 135E                         l3198 19F0                         l3462 1070  
                       l3382 14DC                         l3526 166A                         l3710 0B14  
                       l3614 09BC                         l3288 1324                         l3448 100C  
                       l3392 14FA                         l3608 09A4                         l3624 09DA  
                       l3482 10DC                         l3474 10B2                         l3706 0B02  
                       l3650 0A28                         l3562 08C6                         l3804 0C84  
                       l3660 0A46                         l3572 08FC                         l3478 10CE  
                       l3814 0CFC                         l3806 0C9C                         l3496 11B8  
                       l3488 111A                         l3840 0DAC                         l3832 0D94  
                       l3808 0CD2                         l3744 0B9A                         l3736 0B82  
                       l3826 0D80                         l3818 0D1A                         l3586 0952  
                       l3852 0E10                         l3844 0DC6                         l3860 0E30  
                       l3588 0958                         l3862 0E52                         l3686 0AB0  
                       l3864 0E58                         l3856 0E1E                         l3848 0DDC  
                       l3768 0BFA                         l3792 0C50                         l3688 0AB6  
                       l3882 0EF6                         l3866 0E6E                         l3876 0E8E  
                       l3884 0EFC                         STR_1 0857                         STR_2 085F  
                       STR_3 0810                         STR_4 0830                         STR_5 0844  
                       STR_6 0830                         STR_7 0801                         STR_8 0830  
                       STR_9 0839                         u2050 1A70                         u2130 1344  
                       _LATB 000F8A                         _LATC 000F8B                         u4000 16B6  
                       _LATD 000F8C                         u4130 09F2                         u4070 0970  
                       u3610 12D0                         u4260 0A94                         u3710 1846  
                       u4190 0A5E                         u4360 0AF6                         u3740 19C0  
                       u3900 1096                         u4460 0B64                         u3670 1452  
                       u3910 10A8                         u3840 100A                         u4560 0BDC  
                       u3930 1150                         u3850 1020                         u3860 1032  
                       u3870 1044                         u4670 0C42                         u3960 1204  
                       u3890 1084                         u4907 1782                         u4917 178E  
                       u4927 1796                         u4937 17A0                         u4947 17AA  
                       u4867 08D0                         u4957 1B0A                         u4877 08EC  
                       u4887 09AE                         u4897 0F02                         _RBPU 007F8F  
                       _TMR0 000FD6               ??_EscribeLCD_c 0012                         _main 0866  
                       fsr1l 000FE1                         btemp 004D                         prodh 000FF4  
                       prodl 000FF3                         start 000E                 ___param_bank 000000  
                      ??_ISR 000A              i2_DireccionaLCD 1AB8               ?_InicializaLCD 0001  
            __end_of___aldiv 1336              __end_of___almod 14AC                        ?_main 0001  
                      STR_10 0830                        STR_11 082C                        STR_12 084E  
                      STR_13 081E                EscribeLCD_c@a 0012                        _T0CON 000FD5  
                      _LATE0 007C68                        _LATE1 007C69                        _LATE2 007C6A  
                      _LATC7 007C5F              __end_of___lwdiv 1876              __end_of___lwmod 19E8  
                      i2l342 15C0                        i2l345 15C2                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _Color 0038                        _Boton 0044          ___lmul@multiplicand 0012  
        __end_of_LeerTeclado 1400                        _heart 0068                  ?i2_BorraLCD 0001  
                      tablat 000FF5                  _HabilitaLCD 1B06                        ttemp5 004E  
                      ttemp6 0051                        ttemp7 0055                        status 000FD8  
                      wtemp8 004E             __end_ofi2_strlen 1A38             __end_of_BorraLCD 1AE2  
           __end_of_ColorRGB 1650              __initialization 16C8                 __end_of_main 0F0E  
           i2_MensajeLCD_Var 18C8                       ??_main 0024         __end_of_ConfiguraLCD 1A76  
              __activetblptr 000002                   i2strlen@cp 0003           _Imprimir_Resultado 0F0E  
                     _ADCON1 000FC1               DireccionaLCD@a 0012                       i2l2222 1998  
                     i2l2400 1A18                       i2l3132 1574                       i2l2182 17D2  
                     i2l3134 157C                       i2l2184 17E2                       i2l2192 1808  
                     i2l2186 17F4                       i2l3138 1590                       i2l2188 17FE  
                     i2l2398 1A16                       i2l2754 18D2                       i2l2762 1904  
                     _OSCCON 000FD3                       _TMR0IE 007F95                       _TMR0IF 007F92  
                     _TMR0ON 007EAF          ?_Imprimir_Resultado 001C        __end_of_DireccionaLCD 1AA2  
                 _RetardoLCD 1778      __end_ofi2_DireccionaLCD 1ACE                       ___lmul 1722  
                  ??___aldiv 0016                    ??___almod 0016                       ___wmul 1A38  
                  ??___lwdiv 0018                    ??___lwmod 0012              ??_InicializaLCD 0012  
                     clear_0 170E                       isa$std 000001         ??_Imprimir_Resultado 0020  
       __end_of_EscribeLCD_c 1A8C                       _strlen 19E8                  _LeerTeclado 1336  
               ?i2_EnviaDato 0001                 __pdataCOMRAM 0049                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
 __end_of_factorial_function 16C8        __end_ofi2_HabilitaLCD 1B22                   __accesstop 0060  
    __end_of__initialization 1714                ___rparam_used 000001               __pcstackCOMRAM 0001  
               __pidataBANK0 1AF6            __end_of_EnviaDato 1960                _Parte_Decimal 002C  
                  ?i2_strlen 0001                    ?_BorraLCD 0001                    ?_ColorRGB 0001  
             _MensajeLCD_Var 1876              MensajeLCD_Var@a 0013              MensajeLCD_Var@i 0015  
     factorial_function@fact 001E                  ?_RetardoLCD 0001                  RetardoLCD@a 000F  
           ?i2_DireccionaLCD 0001                      ?___lmul 000E                      ?___wmul 000E  
             ___lmul@product 0016                      ?_strlen 000E       __end_of_MensajeLCD_Var 18C8  
                 ??i2_strlen 0003                 ??i2_BorraLCD 0005                   ??_BorraLCD 0012  
                 ??_ColorRGB 000E     __end_ofi2_MensajeLCD_Var 191A                 ?_HabilitaLCD 0001  
               _ConfiguraLCD 1A5E                      __Hparam 0000                      __Lparam 0000  
                    ___aldiv 126A                      ___almod 1400                      ___lwdiv 1824  
                    ___lwmod 19A6                 __psmallconst 0800           __end_ofi2_BorraLCD 1AF6  
        factorial_function@a 001A                      __pcinit 16C8                      __ramtop 0800  
Imprimir_Resultado@Resultado 001C                      __ptext0 0866                      __ptext1 1650  
                    __ptext2 1336                      __ptext3 14AC                      __ptext4 1ACE  
                    __ptext5 0F0E                      __ptext6 1A38                      __ptext7 19A6  
                    __ptext8 1824                      __ptext9 1722             ___aldiv@dividend 000E  
                    _persona 0060              ?_MensajeLCD_Var 0013               __pintcode_body 1548  
       end_of_initialization 1714                  _Verificador 0034                __Lmediumconst 0000  
                    int_func 1548                 _EscribeLCD_c 1A76             ___aldiv@quotient 0018  
                    postdec1 000FE5                      postinc0 000FEE                      strlen@s 000E  
               ?_LeerTeclado 0001              i2EscribeLCD_c@a 0005                ?i2_RetardoLCD 0001  
                  _Factorial 0042           _factorial_function 1650               __end_of___lmul 1778  
             __end_of___wmul 1A5E                __pidataCOMRAM 1B22          ?_factorial_function 001A  
      __end_of_InicializaLCD 1548                    _EnviaDato 191A               __end_of_strlen 1A10  
        start_initialization 16C8                  __end_of_ISR 15D6         ??_factorial_function 001E  
                  i2strlen@s 0001               ??i2_RetardoLCD 0001                 ??_RetardoLCD 000E  
                   ??___lmul 0016                    _Resultado 0028                     ??___wmul 0012  
                __pdataBANK0 0060                     ??_strlen 0010                   ?_EnviaDato 0001  
                __pbssCOMRAM 0028           __end_of_RetardoLCD 17CE                __pcstackBANK0 0070  
          ?i2_MensajeLCD_Var 0006           ??i2_MensajeLCD_Var 0007                _DireccionaLCD 1A8C  
             i2_EscribeLCD_c 1AA2             ___lwdiv@dividend 0014                    __pintcode 0008  
                   ?___aldiv 000E                     ?___almod 000E                     ?___lwdiv 0014  
                   ?___lwmod 000E             ___almod@dividend 000E             ??_MensajeLCD_Var 0014  
                __smallconst 0800                _Numero_1_Char 004A                _Numero_2_Char 0049  
           ___lwdiv@quotient 0019              ___aldiv@divisor 0012              ___aldiv@counter 0016  
             ___wmul@product 0012                i2_HabilitaLCD 1B14               ?_DireccionaLCD 0001  
     __end_ofi2_EscribeLCD_c 1AB8                    _ubicacion 0040                     i2u500_47 1800  
                   i2u501_47 1B18                     i2u350_45 15AC                     i2u345_40 1586  
                   i2u346_45 1588                     i2u349_40 15AA                     i2u496_47 17D8  
                   i2u497_47 17E4                     i2u498_47 17EC                     i2u499_47 17F6  
     Imprimir_Resultado@flag 0070            ___wmul@multiplier 000E                ??i2_EnviaDato 0003  
       __end_ofi2_RetardoLCD 1824                  ??_EnviaDato 0010                     i2_strlen 1A10  
                   _BorraLCD 1ACE                     _ColorRGB 15D6            ___lmul@multiplier 000E  
                  copy_data0 16DC                    copy_data1 16FC                     _Contador 0036  
                   _Negativo 0041               ?i2_HabilitaLCD 0001              ?i2_EscribeLCD_c 0001  
                   __Hrparam 0000                     _Operador 004B                     __Lrparam 0000  
                   _Numero_1 003E                     _Numero_2 003C                     _Potencia 0043  
               i2EnviaDato@a 0004                ConfiguraLCD@a 000E                     _main$166 0026  
                   _main$167 0027            ??i2_DireccionaLCD 0005              ___lwdiv@divisor 0016  
            ___lwdiv@counter 0018                     __ptext10 1400                     __ptext11 126A  
                   __ptext20 15D6                     __ptext12 1876                     __ptext13 19E8  
                   __ptext22 18C8                     __ptext14 1A76                     __ptext23 1A10  
                   __ptext15 1A8C                     __ptext24 1AA2                     __ptext16 191A  
                   __ptext25 1AB8                     __ptext17 1778                     __ptext26 1AE2  
                   __ptext18 1B06                     __ptext27 1960                     __ptext19 1A5E  
                   __ptext28 17CE                     __ptext29 1B14          __end_ofi2_EnviaDato 19A6  
            ___almod@divisor 0012              ___almod@counter 0016              ??_DireccionaLCD 0012  
                   _interfaz 004C                     isa$xinst 000000                     int$flags 004D  
 __end_of_Imprimir_Resultado 126A              ??i2_HabilitaLCD 0001                     intlevel2 0000  
              ??_HabilitaLCD 000E   Imprimir_Resultado@Potencia 0077             ___lwmod@dividend 000E  
              ?_ConfiguraLCD 0001                i2RetardoLCD@a 0002                  i2_EnviaDato 1960  
            ___lwmod@divisor 0010                     strlen@cp 0010              ___lwmod@counter 0012  
               ___aldiv@sign 0017          Imprimir_Resultado@i 0073          Imprimir_Resultado@j 0075  
        Imprimir_Resultado@k 0071                   i2_BorraLCD 1AE2                 ___almod@sign 0017  
             ??_ConfiguraLCD 000E                ?_EscribeLCD_c 0001            i2MensajeLCD_Var@a 0006  
          i2MensajeLCD_Var@i 0008                 i2_RetardoLCD 17CE          __end_of_HabilitaLCD 1B14  
