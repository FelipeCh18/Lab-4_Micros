

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 16 07:27:15 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Version 2.40
    31                           ; Generated 04/07/2022 GMT
    32                           ; 
    33                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   000C9E                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _interfaz
    71   000C9E  08                 	db	8
    72   000000                     _PORTB	set	3969
    73   000000                     _LATE	set	3981
    74   000000                     _LATD1	set	31841
    75   000000                     _TMR0IF	set	32658
    76   000000                     _RB7	set	31759
    77   000000                     _RB6	set	31758
    78   000000                     _RB5	set	31757
    79   000000                     _GIE	set	32663
    80   000000                     _RBIE	set	32659
    81   000000                     _LATE1	set	31849
    82   000000                     _LATB	set	3978
    83   000000                     _LATD	set	3980
    84   000000                     _RB4	set	31756
    85   000000                     _TRISB	set	3987
    86   000000                     _TRISD	set	3989
    87   000000                     _ADCON1	set	4033
    88   000000                     _LATE0	set	31848
    89   000000                     _TMR0	set	4054
    90   000000                     _RBPU	set	32655
    91   000000                     _TRISE	set	3990
    92   000000                     _RBIF	set	32656
    93                           
    94                           	psect	smallconst
    95   000800                     __psmallconst:
    96                           	callstack 0
    97   000800  00                 	db	0
    98   000801                     STR_1:
    99   000801  48                 	db	72	;'H'
   100   000802  6F                 	db	111	;'o'
   101   000803  6C                 	db	108	;'l'
   102   000804  61                 	db	97	;'a'
   103   000805  20                 	db	32
   104   000806  6D                 	db	109	;'m'
   105   000807  75                 	db	117	;'u'
   106   000808  6E                 	db	110	;'n'
   107   000809  64                 	db	100	;'d'
   108   00080A  6F                 	db	111	;'o'
   109   00080B  00                 	db	0
   110   00080C                     STR_13:
   111   00080C  31                 	db	49	;'1'
   112   00080D  30                 	db	48	;'0'
   113   00080E  00                 	db	0
   114   00080F                     STR_14:
   115   00080F  31                 	db	49	;'1'
   116   000810  31                 	db	49	;'1'
   117   000811  00                 	db	0
   118   000812                     STR_15:
   119   000812  31                 	db	49	;'1'
   120   000813  32                 	db	50	;'2'
   121   000814  00                 	db	0
   122   000815                     STR_16:
   123   000815  31                 	db	49	;'1'
   124   000816  33                 	db	51	;'3'
   125   000817  00                 	db	0
   126   000818                     STR_17:
   127   000818  31                 	db	49	;'1'
   128   000819  34                 	db	52	;'4'
   129   00081A  00                 	db	0
   130   00081B                     STR_18:
   131   00081B  31                 	db	49	;'1'
   132   00081C  35                 	db	53	;'5'
   133   00081D  00                 	db	0
   134   00081E                     STR_9:
   135   00081E  36                 	db	54	;'6'
   136   00081F  00                 	db	0
   137   000820                     STR_2:
   138   000820  37                 	db	55	;'7'
   139   000821  00                 	db	0
   140   000822                     STR_11:
   141   000822  38                 	db	56	;'8'
   142   000823  00                 	db	0
   143   000824                     STR_12:
   144   000824  39                 	db	57	;'9'
   145   000825  00                 	db	0
   146   000826  00                 	db	0	; dummy byte at the end
   147   000000                     
   148                           ; #config settings
   149                           
   150                           	psect	cinit
   151   000C16                     __pcinit:
   152                           	callstack 0
   153   000C16                     start_initialization:
   154                           	callstack 0
   155   000C16                     __initialization:
   156                           	callstack 0
   157                           
   158                           ; Initialize objects allocated to COMRAM (1 bytes)
   159                           ; load TBLPTR registers with __pidataCOMRAM
   160   000C16  0E9E               	movlw	low __pidataCOMRAM
   161   000C18  6EF6               	movwf	tblptrl,c
   162   000C1A  0E0C               	movlw	high __pidataCOMRAM
   163   000C1C  6EF7               	movwf	tblptrh,c
   164   000C1E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   165   000C20  6EF8               	movwf	tblptru,c
   166   000C22  0009               	tblrd		*+	;fetch initializer
   167   000C24  CFF5 F010          	movff	tablat,__pdataCOMRAM
   168                           
   169                           ; Clear objects allocated to COMRAM (1 bytes)
   170   000C28  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   171   000C2A                     end_of_initialization:
   172                           	callstack 0
   173   000C2A                     __end_of__initialization:
   174                           	callstack 0
   175   000C2A  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   176   000C2C  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   177   000C2E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178   000C30  6EF8               	movwf	tblptru,c
   179   000C32  0100               	movlb	0
   180   000C34  EF7E  F004         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183   00000F                     __pbssCOMRAM:
   184                           	callstack 0
   185   00000F                     _Tecla:
   186                           	callstack 0
   187   00000F                     	ds	1
   188                           
   189                           	psect	dataCOMRAM
   190   000010                     __pdataCOMRAM:
   191                           	callstack 0
   192   000010                     _interfaz:
   193                           	callstack 0
   194   000010                     	ds	1
   195                           
   196                           	psect	cstackCOMRAM
   197   000001                     __pcstackCOMRAM:
   198                           	callstack 0
   199   000001                     ??_ISR:
   200                           
   201                           ; 1 bytes @ 0x0
   202   000001                     	ds	1
   203   000002                     ??_RetardoLCD:
   204   000002                     ConfiguraLCD@a:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0x1
   208   000002                     	ds	1
   209   000003                     RetardoLCD@a:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x2
   213   000003                     	ds	1
   214   000004                     ??_EnviaDato:
   215                           
   216                           ; 1 bytes @ 0x3
   217   000004                     	ds	1
   218   000005                     EnviaDato@a:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0x4
   222   000005                     	ds	1
   223   000006                     EscribeLCD_c@a:
   224                           	callstack 0
   225   000006                     DireccionaLCD@a:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x5
   229   000006                     	ds	1
   230   000007                     MensajeLCD_Var@a:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x6
   234   000007                     	ds	2
   235   000009                     ??_MensajeLCD_Var:
   236                           
   237                           ; 1 bytes @ 0x8
   238   000009                     	ds	2
   239   00000B                     MensajeLCD_Var@i:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0xA
   243   00000B                     	ds	2
   244   00000D                     ??_main:
   245                           
   246                           ; 1 bytes @ 0xC
   247   00000D                     	ds	2
   248                           
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 20 in file "Lab4.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;  i               1    0        unsigned char 
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : 0/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   268 ;;      Params:         0       0       0       0       0       0       0       0       0
   269 ;;      Locals:         0       0       0       0       0       0       0       0       0
   270 ;;      Temps:          2       0       0       0       0       0       0       0       0
   271 ;;      Totals:         2       0       0       0       0       0       0       0       0
   272 ;;Total ram usage:        2 bytes
   273 ;; Hardware stack levels required when called: 5
   274 ;; This function calls:
   275 ;;		_BorraLCD
   276 ;;		_ConfiguraLCD
   277 ;;		_DireccionaLCD
   278 ;;		_InicializaLCD
   279 ;;		_LeerTeclado
   280 ;;		_MensajeLCD_Var
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text0
   287   0008FC                     __ptext0:
   288                           	callstack 0
   289   0008FC                     _main:
   290                           	callstack 26
   291                           
   292                           ;Lab4.c: 21: unsigned char i;;Lab4.c: 22: ADCON1=15;
   293                           
   294                           ;incstack = 0
   295   0008FC  0E0F               	movlw	15
   296   0008FE  6EC1               	movwf	193,c	;volatile
   297                           
   298                           ;Lab4.c: 23: TRISD = 0;
   299   000900  0E00               	movlw	0
   300   000902  6E95               	movwf	149,c	;volatile
   301                           
   302                           ;Lab4.c: 24: TRISE = 0;
   303   000904  0E00               	movlw	0
   304   000906  6E96               	movwf	150,c	;volatile
   305                           
   306                           ;Lab4.c: 25: TRISB = 0b11110000;
   307   000908  0EF0               	movlw	240
   308   00090A  6E93               	movwf	147,c	;volatile
   309                           
   310                           ;Lab4.c: 26: LATD = 0;
   311   00090C  0E00               	movlw	0
   312   00090E  6E8C               	movwf	140,c	;volatile
   313                           
   314                           ;Lab4.c: 27: LATE = 0;
   315   000910  0E00               	movlw	0
   316   000912  6E8D               	movwf	141,c	;volatile
   317                           
   318                           ;Lab4.c: 28: LATB = 0;
   319   000914  0E00               	movlw	0
   320   000916  6E8A               	movwf	138,c	;volatile
   321                           
   322                           ;Lab4.c: 29: _delay((unsigned long)((100)*(1000000/4000.0)));
   323   000918  0E21               	movlw	33
   324   00091A  6E0D               	movwf	??_main^0,c
   325   00091C  0E76               	movlw	118
   326   00091E                     u587:
   327   00091E  2EE8               	decfsz	wreg,f,c
   328   000920  D7FE               	bra	u587
   329   000922  2E0D               	decfsz	??_main^0,f,c
   330   000924  D7FC               	bra	u587
   331   000926  D000               	nop2	
   332                           
   333                           ;Lab4.c: 30: RBPU = 0;
   334   000928  9EF1               	bcf	4081,7,c	;volatile
   335                           
   336                           ;Lab4.c: 31: _delay((unsigned long)((100)*(1000000/4000.0)));
   337   00092A  0E21               	movlw	33
   338   00092C  6E0D               	movwf	??_main^0,c
   339   00092E  0E76               	movlw	118
   340   000930                     u597:
   341   000930  2EE8               	decfsz	wreg,f,c
   342   000932  D7FE               	bra	u597
   343   000934  2E0D               	decfsz	??_main^0,f,c
   344   000936  D7FC               	bra	u597
   345   000938  D000               	nop2	
   346                           
   347                           ;Lab4.c: 37: RBIF=0;
   348   00093A  90F2               	bcf	4082,0,c	;volatile
   349                           
   350                           ;Lab4.c: 38: RBIE=1;
   351   00093C  86F2               	bsf	4082,3,c	;volatile
   352                           
   353                           ;Lab4.c: 39: GIE=1;
   354   00093E  8EF2               	bsf	4082,7,c	;volatile
   355                           
   356                           ;Lab4.c: 40: _delay((unsigned long)((1000)*(1000000/4000.0)));
   357   000940  0E02               	movlw	2
   358   000942  6E0E               	movwf	(??_main+1)^0,c
   359   000944  0E45               	movlw	69
   360   000946  6E0D               	movwf	??_main^0,c
   361   000948  0EAA               	movlw	170
   362   00094A                     u607:
   363   00094A  2EE8               	decfsz	wreg,f,c
   364   00094C  D7FE               	bra	u607
   365   00094E  2E0D               	decfsz	??_main^0,f,c
   366   000950  D7FC               	bra	u607
   367   000952  2E0E               	decfsz	(??_main+1)^0,f,c
   368   000954  D7FA               	bra	u607
   369                           
   370                           ;Lab4.c: 41: ConfiguraLCD(4);
   371   000956  0E04               	movlw	4
   372   000958  EC1C  F006         	call	_ConfiguraLCD
   373                           
   374                           ;Lab4.c: 42: InicializaLCD();
   375   00095C  EC2E  F005         	call	_InicializaLCD	;wreg free
   376                           
   377                           ;Lab4.c: 43: BorraLCD();
   378   000960  EC3E  F006         	call	_BorraLCD	;wreg free
   379                           
   380                           ;Lab4.c: 44: MensajeLCD_Var("Hola mundo");
   381   000964  0E01               	movlw	low STR_1
   382   000966  6E07               	movwf	MensajeLCD_Var@a^0,c
   383   000968  5007               	movf	MensajeLCD_Var@a^0,w,c
   384   00096A  A4D8               	btfss	status,2,c
   385   00096C  0E08               	movlw	high __smallconst
   386   00096E  6E08               	movwf	(MensajeLCD_Var@a+1)^0,c
   387   000970  EC7C  F005         	call	_MensajeLCD_Var	;wreg free
   388                           
   389                           ;Lab4.c: 45: DireccionaLCD(0xC0);
   390   000974  0EC0               	movlw	192
   391   000976  EC33  F006         	call	_DireccionaLCD
   392                           
   393                           ;Lab4.c: 46: MensajeLCD_Var("7");
   394   00097A  0E20               	movlw	low STR_2
   395   00097C  6E07               	movwf	MensajeLCD_Var@a^0,c
   396   00097E  5007               	movf	MensajeLCD_Var@a^0,w,c
   397   000980  A4D8               	btfss	status,2,c
   398   000982  0E08               	movlw	high __smallconst
   399   000984  6E08               	movwf	(MensajeLCD_Var@a+1)^0,c
   400   000986  EC7C  F005         	call	_MensajeLCD_Var	;wreg free
   401                           
   402                           ;Lab4.c: 47: _delay((unsigned long)((1000)*(1000000/4000.0)));
   403   00098A  0E02               	movlw	2
   404   00098C  6E0E               	movwf	(??_main+1)^0,c
   405   00098E  0E45               	movlw	69
   406   000990  6E0D               	movwf	??_main^0,c
   407   000992  0EAA               	movlw	170
   408   000994                     u617:
   409   000994  2EE8               	decfsz	wreg,f,c
   410   000996  D7FE               	bra	u617
   411   000998  2E0D               	decfsz	??_main^0,f,c
   412   00099A  D7FC               	bra	u617
   413   00099C  2E0E               	decfsz	(??_main+1)^0,f,c
   414   00099E  D7FA               	bra	u617
   415   0009A0                     l1338:
   416                           
   417                           ;Lab4.c: 49: Tecla=LeerTeclado();
   418   0009A0  ECDD  F004         	call	_LeerTeclado	;wreg free
   419   0009A4  6E0F               	movwf	_Tecla^0,c
   420                           
   421                           ;Lab4.c: 51: MensajeLCD_Var(Tecla);
   422   0009A6  500F               	movf	_Tecla^0,w,c
   423   0009A8  6E0D               	movwf	??_main^0,c
   424   0009AA  6A0E               	clrf	(??_main+1)^0,c
   425   0009AC  C00D  F007         	movff	??_main,MensajeLCD_Var@a
   426   0009B0  C00E  F008         	movff	??_main+1,MensajeLCD_Var@a+1
   427   0009B4  EC7C  F005         	call	_MensajeLCD_Var	;wreg free
   428   0009B8  D7F3               	goto	l1338
   429   0009BA                     __end_of_main:
   430                           	callstack 0
   431                           
   432 ;; *************** function _MensajeLCD_Var *****************
   433 ;; Defined at:
   434 ;;		line 215 in file "LibLCDXC8.h"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  a               2    6[COMRAM] PTR unsigned char 
   437 ;;		 -> RAM(2047), STR_2(2), STR_1(11), 
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  i               2   10[COMRAM] int 
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   449 ;;      Params:         2       0       0       0       0       0       0       0       0
   450 ;;      Locals:         2       0       0       0       0       0       0       0       0
   451 ;;      Temps:          2       0       0       0       0       0       0       0       0
   452 ;;      Totals:         6       0       0       0       0       0       0       0       0
   453 ;;Total ram usage:        6 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; Hardware stack levels required when called: 4
   456 ;; This function calls:
   457 ;;		_EscribeLCD_c
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text1
   464   000AF8                     __ptext1:
   465                           	callstack 0
   466   000AF8                     _MensajeLCD_Var:
   467                           	callstack 26
   468                           
   469                           ;LibLCDXC8.h: 219: for(int i = 0; i<16; i++){
   470                           
   471                           ;incstack = 0
   472   000AF8  0E00               	movlw	0
   473   000AFA  6E0C               	movwf	(MensajeLCD_Var@i+1)^0,c
   474   000AFC  0E00               	movlw	0
   475   000AFE  6E0B               	movwf	MensajeLCD_Var@i^0,c
   476   000B00                     l1298:
   477                           
   478                           ;LibLCDXC8.h: 220: if(a[i] == (0)){
   479   000B00  500B               	movf	MensajeLCD_Var@i^0,w,c
   480   000B02  2407               	addwf	MensajeLCD_Var@a^0,w,c
   481   000B04  6E09               	movwf	??_MensajeLCD_Var^0,c
   482   000B06  500C               	movf	(MensajeLCD_Var@i+1)^0,w,c
   483   000B08  2008               	addwfc	(MensajeLCD_Var@a+1)^0,w,c
   484   000B0A  6E0A               	movwf	(??_MensajeLCD_Var+1)^0,c
   485   000B0C  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   486   000B10  C00A  FFF7         	movff	??_MensajeLCD_Var+1,tblptrh
   487   000B14  6AF8               	clrf	tblptru,c
   488   000B16  0E07               	movlw	(high __ramtop+-1)
   489   000B18  64F7               	cpfsgt	tblptrh,c
   490   000B1A  D003               	bra	u547
   491   000B1C  0008               	tblrd		*
   492   000B1E  50F5               	movf	tablat,w,c
   493   000B20  D005               	bra	u540
   494   000B22                     u547:
   495   000B22  CFF6 FFE9          	movff	tblptrl,fsr0l
   496   000B26  CFF7 FFEA          	movff	tblptrh,fsr0h
   497   000B2A  50EF               	movf	indf0,w,c
   498   000B2C                     u540:
   499   000B2C  0900               	iorlw	0
   500   000B2E  B4D8               	btfsc	status,2,c
   501   000B30  0012               	return	
   502                           
   503                           ;LibLCDXC8.h: 222: };LibLCDXC8.h: 223: EscribeLCD_c(a[i]);
   504   000B32  500B               	movf	MensajeLCD_Var@i^0,w,c
   505   000B34  2407               	addwf	MensajeLCD_Var@a^0,w,c
   506   000B36  6E09               	movwf	??_MensajeLCD_Var^0,c
   507   000B38  500C               	movf	(MensajeLCD_Var@i+1)^0,w,c
   508   000B3A  2008               	addwfc	(MensajeLCD_Var@a+1)^0,w,c
   509   000B3C  6E0A               	movwf	(??_MensajeLCD_Var+1)^0,c
   510   000B3E  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   511   000B42  C00A  FFF7         	movff	??_MensajeLCD_Var+1,tblptrh
   512   000B46  6AF8               	clrf	tblptru,c
   513   000B48  0E07               	movlw	(high __ramtop+-1)
   514   000B4A  64F7               	cpfsgt	tblptrh,c
   515   000B4C  D003               	bra	u567
   516   000B4E  0008               	tblrd		*
   517   000B50  50F5               	movf	tablat,w,c
   518   000B52  D005               	bra	u560
   519   000B54                     u567:
   520   000B54  CFF6 FFE9          	movff	tblptrl,fsr0l
   521   000B58  CFF7 FFEA          	movff	tblptrh,fsr0h
   522   000B5C  50EF               	movf	indf0,w,c
   523   000B5E                     u560:
   524   000B5E  EC28  F006         	call	_EscribeLCD_c
   525   000B62  4A0B               	infsnz	MensajeLCD_Var@i^0,f,c
   526   000B64  2A0C               	incf	(MensajeLCD_Var@i+1)^0,f,c
   527   000B66  BE0C               	btfsc	(MensajeLCD_Var@i+1)^0,7,c
   528   000B68  D7CB               	goto	l1298
   529   000B6A  500C               	movf	(MensajeLCD_Var@i+1)^0,w,c
   530   000B6C  E105               	bnz	u570
   531   000B6E  0E10               	movlw	16
   532   000B70  5C0B               	subwf	MensajeLCD_Var@i^0,w,c
   533   000B72  B0D8               	btfsc	status,0,c
   534   000B74  0012               	return	
   535   000B76  D7C4               	goto	l1298
   536   000B78                     u570:
   537   000B78  0012               	return		;funcret
   538   000B7A                     __end_of_MensajeLCD_Var:
   539                           	callstack 0
   540                           
   541 ;; *************** function _EscribeLCD_c *****************
   542 ;; Defined at:
   543 ;;		line 116 in file "LibLCDXC8.h"
   544 ;; Parameters:    Size  Location     Type
   545 ;;  a               1    wreg     unsigned char 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  a               1    5[COMRAM] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   557 ;;      Params:         0       0       0       0       0       0       0       0       0
   558 ;;      Locals:         1       0       0       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0
   560 ;;      Totals:         1       0       0       0       0       0       0       0       0
   561 ;;Total ram usage:        1 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; Hardware stack levels required when called: 3
   564 ;; This function calls:
   565 ;;		_EnviaDato
   566 ;;		_HabilitaLCD
   567 ;;		_RetardoLCD
   568 ;; This function is called by:
   569 ;;		_MensajeLCD_Var
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text2
   574   000C50                     __ptext2:
   575                           	callstack 0
   576   000C50                     _EscribeLCD_c:
   577                           	callstack 26
   578                           
   579                           ;incstack = 0
   580                           ;EscribeLCD_c@a stored from wreg
   581   000C50  6E06               	movwf	EscribeLCD_c@a^0,c
   582                           
   583                           ;LibLCDXC8.h: 120: LATE0=1;
   584   000C52  808D               	bsf	3981,0,c	;volatile
   585                           
   586                           ;LibLCDXC8.h: 121: EnviaDato(a);
   587   000C54  5006               	movf	EscribeLCD_c@a^0,w,c
   588   000C56  ECE8  F005         	call	_EnviaDato
   589                           
   590                           ;LibLCDXC8.h: 122: HabilitaLCD();
   591   000C5A  EC48  F006         	call	_HabilitaLCD	;wreg free
   592                           
   593                           ;LibLCDXC8.h: 123: RetardoLCD(4);
   594   000C5E  0E04               	movlw	4
   595   000C60  ECBD  F005         	call	_RetardoLCD
   596   000C64  0012               	return		;funcret
   597   000C66                     __end_of_EscribeLCD_c:
   598                           	callstack 0
   599                           
   600 ;; *************** function _LeerTeclado *****************
   601 ;; Defined at:
   602 ;;		line 55 in file "Lab4.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      unsigned char 
   609 ;; Registers used:
   610 ;;		wreg, status,2
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   616 ;;      Params:         0       0       0       0       0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text3
   631   0009BA                     __ptext3:
   632                           	callstack 0
   633   0009BA                     _LeerTeclado:
   634                           	callstack 29
   635                           
   636                           ;Lab4.c: 115: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
   637                           
   638                           ;incstack = 0
   639   0009BA  B881               	btfsc	3969,4,c	;volatile
   640   0009BC  AA81               	btfss	3969,5,c	;volatile
   641   0009BE  D004               	goto	u160
   642   0009C0  AC81               	btfss	3969,6,c	;volatile
   643   0009C2  D002               	goto	u160
   644   0009C4  BE81               	btfsc	3969,7,c	;volatile
   645   0009C6  D7F9               	goto	__ptext3
   646   0009C8                     u160:
   647                           
   648                           ;Lab4.c: 116: LATB=0b11111110;
   649   0009C8  0EFE               	movlw	254
   650   0009CA  6E8A               	movwf	138,c	;volatile
   651                           
   652                           ;Lab4.c: 117: if(RB4==0) return '1';
   653   0009CC  B881               	btfsc	3969,4,c	;volatile
   654   0009CE  D002               	goto	l122
   655   0009D0  0E31               	movlw	49
   656   0009D2  0012               	return	
   657   0009D4                     l122:
   658                           
   659                           ;Lab4.c: 118: else if(RB5==0) return '2';
   660   0009D4  BA81               	btfsc	3969,5,c	;volatile
   661   0009D6  D002               	goto	l125
   662   0009D8  0E32               	movlw	50
   663   0009DA  0012               	return	
   664   0009DC                     l125:
   665                           
   666                           ;Lab4.c: 119: else if(RB6==0) return '3';
   667   0009DC  BC81               	btfsc	3969,6,c	;volatile
   668   0009DE  D002               	goto	l127
   669   0009E0  0E33               	movlw	51
   670   0009E2  0012               	return	
   671   0009E4                     l127:
   672                           
   673                           ;Lab4.c: 120: else if(RB7==0) return '+';
   674   0009E4  BE81               	btfsc	3969,7,c	;volatile
   675   0009E6  D002               	goto	l1108
   676   0009E8  0E2B               	movlw	43
   677   0009EA  0012               	return	
   678   0009EC                     l1108:
   679                           
   680                           ;Lab4.c: 121: else{;Lab4.c: 122: LATB=0b11111101;
   681   0009EC  0EFD               	movlw	253
   682   0009EE  6E8A               	movwf	138,c	;volatile
   683                           
   684                           ;Lab4.c: 123: if(RB4==0) return '4';
   685   0009F0  B881               	btfsc	3969,4,c	;volatile
   686   0009F2  D002               	goto	l131
   687   0009F4  0E34               	movlw	52
   688   0009F6  0012               	return	
   689   0009F8                     l131:
   690                           
   691                           ;Lab4.c: 124: else if(RB5==0) return '5';
   692   0009F8  BA81               	btfsc	3969,5,c	;volatile
   693   0009FA  D002               	goto	l133
   694   0009FC  0E35               	movlw	53
   695   0009FE  0012               	return	
   696   000A00                     l133:
   697                           
   698                           ;Lab4.c: 125: else if(RB6==0) return '6';
   699   000A00  BC81               	btfsc	3969,6,c	;volatile
   700   000A02  D002               	goto	l135
   701   000A04  0E36               	movlw	54
   702   000A06  0012               	return	
   703   000A08                     l135:
   704                           
   705                           ;Lab4.c: 126: else if(RB7==0) return '-';
   706   000A08  BE81               	btfsc	3969,7,c	;volatile
   707   000A0A  D002               	goto	l1136
   708   000A0C  0E2D               	movlw	45
   709   000A0E  0012               	return	
   710   000A10                     l1136:
   711                           
   712                           ;Lab4.c: 127: else{;Lab4.c: 128: LATB=0b11111011;
   713   000A10  0EFB               	movlw	251
   714   000A12  6E8A               	movwf	138,c	;volatile
   715                           
   716                           ;Lab4.c: 129: if(RB4==0) return '7';
   717   000A14  B881               	btfsc	3969,4,c	;volatile
   718   000A16  D002               	goto	l139
   719   000A18  0E37               	movlw	55
   720   000A1A  0012               	return	
   721   000A1C                     l139:
   722                           
   723                           ;Lab4.c: 130: else if(RB5==0) return '8';
   724   000A1C  BA81               	btfsc	3969,5,c	;volatile
   725   000A1E  D002               	goto	l141
   726   000A20  0E38               	movlw	56
   727   000A22  0012               	return	
   728   000A24                     l141:
   729                           
   730                           ;Lab4.c: 131: else if(RB6==0) return '9';
   731   000A24  BC81               	btfsc	3969,6,c	;volatile
   732   000A26  D002               	goto	l143
   733   000A28  0E39               	movlw	57
   734   000A2A  0012               	return	
   735   000A2C                     l143:
   736                           
   737                           ;Lab4.c: 132: else if(RB7==0) return '/';
   738   000A2C  BE81               	btfsc	3969,7,c	;volatile
   739   000A2E  D002               	goto	l1164
   740   000A30  0E2F               	movlw	47
   741   000A32  0012               	return	
   742   000A34                     l1164:
   743                           
   744                           ;Lab4.c: 133: else{;Lab4.c: 134: LATB=0b11110111;
   745   000A34  0EF7               	movlw	247
   746   000A36  6E8A               	movwf	138,c	;volatile
   747                           
   748                           ;Lab4.c: 135: if(RB4==0) return 'C';
   749   000A38  B881               	btfsc	3969,4,c	;volatile
   750   000A3A  D002               	goto	l147
   751   000A3C  0E43               	movlw	67
   752   000A3E  0012               	return	
   753   000A40                     l147:
   754                           
   755                           ;Lab4.c: 136: else if(RB5==0) return '0';
   756   000A40  BA81               	btfsc	3969,5,c	;volatile
   757   000A42  D002               	goto	l149
   758   000A44  0E30               	movlw	48
   759   000A46  0012               	return	
   760   000A48                     l149:
   761                           
   762                           ;Lab4.c: 137: else if(RB6==0) return '=';
   763   000A48  BC81               	btfsc	3969,6,c	;volatile
   764   000A4A  D002               	goto	l151
   765   000A4C  0E3D               	movlw	61
   766   000A4E  0012               	return	
   767   000A50                     l151:
   768                           
   769                           ;Lab4.c: 138: else if(RB7==0) return 'x';
   770   000A50  BE81               	btfsc	3969,7,c	;volatile
   771   000A52  D002               	goto	l148
   772   000A54  0E78               	movlw	120
   773   000A56  0012               	return	
   774   000A58                     l148:
   775                           
   776                           ;Lab4.c: 139: }}};Lab4.c: 140: return '?';
   777   000A58  0E3F               	movlw	63
   778   000A5A  0012               	return		;funcret
   779   000A5C                     __end_of_LeerTeclado:
   780                           	callstack 0
   781                           
   782 ;; *************** function _InicializaLCD *****************
   783 ;; Defined at:
   784 ;;		line 61 in file "LibLCDXC8.h"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   798 ;;      Params:         0       0       0       0       0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 4
   805 ;; This function calls:
   806 ;;		_BorraLCD
   807 ;;		_EnviaDato
   808 ;;		_HabilitaLCD
   809 ;;		_RetardoLCD
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text4
   816   000A5C                     __ptext4:
   817                           	callstack 0
   818   000A5C                     _InicializaLCD:
   819                           	callstack 26
   820                           
   821                           ;LibLCDXC8.h: 63: LATE0=0;
   822                           
   823                           ;incstack = 0
   824   000A5C  908D               	bcf	3981,0,c	;volatile
   825                           
   826                           ;LibLCDXC8.h: 64: if(interfaz==4)
   827   000A5E  0E04               	movlw	4
   828   000A60  1810               	xorwf	_interfaz^0,w,c
   829   000A62  A4D8               	btfss	status,2,c
   830   000A64  D004               	goto	l1000
   831                           
   832                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | 0x30;
   833   000A66  508C               	movf	140,w,c	;volatile
   834   000A68  0B0F               	andlw	15
   835   000A6A  0930               	iorlw	48
   836   000A6C  D001               	goto	L1
   837   000A6E                     l1000:
   838                           
   839                           ;LibLCDXC8.h: 66: else;LibLCDXC8.h: 67: LATD=0x3F;
   840   000A6E  0E3F               	movlw	63
   841   000A70                     L1:
   842   000A70  6E8C               	movwf	140,c	;volatile
   843                           
   844                           ;LibLCDXC8.h: 68: HabilitaLCD();
   845   000A72  EC48  F006         	call	_HabilitaLCD	;wreg free
   846                           
   847                           ;LibLCDXC8.h: 69: RetardoLCD(1);
   848   000A76  0E01               	movlw	1
   849   000A78  ECBD  F005         	call	_RetardoLCD
   850                           
   851                           ;LibLCDXC8.h: 70: if(interfaz==4)
   852   000A7C  0E04               	movlw	4
   853   000A7E  1810               	xorwf	_interfaz^0,w,c
   854   000A80  A4D8               	btfss	status,2,c
   855   000A82  D004               	goto	l1010
   856                           
   857                           ;LibLCDXC8.h: 71: LATD=(LATD & 0b00001111) | 0x30;
   858   000A84  508C               	movf	140,w,c	;volatile
   859   000A86  0B0F               	andlw	15
   860   000A88  0930               	iorlw	48
   861   000A8A  D001               	goto	L2
   862   000A8C                     l1010:
   863                           
   864                           ;LibLCDXC8.h: 72: else;LibLCDXC8.h: 73: LATD=0x3F;
   865   000A8C  0E3F               	movlw	63
   866   000A8E                     L2:
   867   000A8E  6E8C               	movwf	140,c	;volatile
   868                           
   869                           ;LibLCDXC8.h: 74: HabilitaLCD();
   870   000A90  EC48  F006         	call	_HabilitaLCD	;wreg free
   871                           
   872                           ;LibLCDXC8.h: 75: RetardoLCD(3);
   873   000A94  0E03               	movlw	3
   874   000A96  ECBD  F005         	call	_RetardoLCD
   875                           
   876                           ;LibLCDXC8.h: 76: if(interfaz==4)
   877   000A9A  0E04               	movlw	4
   878   000A9C  1810               	xorwf	_interfaz^0,w,c
   879   000A9E  A4D8               	btfss	status,2,c
   880   000AA0  D004               	goto	l1020
   881                           
   882                           ;LibLCDXC8.h: 77: LATD=(LATD & 0b00001111) | 0x30;
   883   000AA2  508C               	movf	140,w,c	;volatile
   884   000AA4  0B0F               	andlw	15
   885   000AA6  0930               	iorlw	48
   886   000AA8  D001               	goto	L3
   887   000AAA                     l1020:
   888                           
   889                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATD=0x3F;
   890   000AAA  0E3F               	movlw	63
   891   000AAC                     L3:
   892   000AAC  6E8C               	movwf	140,c	;volatile
   893                           
   894                           ;LibLCDXC8.h: 80: HabilitaLCD();
   895   000AAE  EC48  F006         	call	_HabilitaLCD	;wreg free
   896                           
   897                           ;LibLCDXC8.h: 81: RetardoLCD(4);
   898   000AB2  0E04               	movlw	4
   899   000AB4  ECBD  F005         	call	_RetardoLCD
   900                           
   901                           ;LibLCDXC8.h: 82: if(interfaz==4){
   902   000AB8  0E04               	movlw	4
   903   000ABA  1810               	xorwf	_interfaz^0,w,c
   904   000ABC  A4D8               	btfss	status,2,c
   905   000ABE  D011               	goto	l1040
   906                           
   907                           ;LibLCDXC8.h: 83: LATD=(LATD & 0b00001111) | 0x20;
   908   000AC0  508C               	movf	140,w,c	;volatile
   909   000AC2  0B0F               	andlw	15
   910   000AC4  0920               	iorlw	32
   911   000AC6  6E8C               	movwf	140,c	;volatile
   912                           
   913                           ;LibLCDXC8.h: 84: HabilitaLCD();
   914   000AC8  EC48  F006         	call	_HabilitaLCD	;wreg free
   915                           
   916                           ;LibLCDXC8.h: 85: RetardoLCD(4);
   917   000ACC  0E04               	movlw	4
   918   000ACE  ECBD  F005         	call	_RetardoLCD
   919                           
   920                           ;LibLCDXC8.h: 86: EnviaDato(0x2F);
   921   000AD2  0E2F               	movlw	47
   922   000AD4  ECE8  F005         	call	_EnviaDato
   923                           
   924                           ;LibLCDXC8.h: 87: HabilitaLCD();
   925   000AD8  EC48  F006         	call	_HabilitaLCD	;wreg free
   926                           
   927                           ;LibLCDXC8.h: 88: RetardoLCD(4);
   928   000ADC  0E04               	movlw	4
   929   000ADE  ECBD  F005         	call	_RetardoLCD
   930   000AE2                     l1040:
   931                           
   932                           ;LibLCDXC8.h: 89: };LibLCDXC8.h: 90: BorraLCD();
   933   000AE2  EC3E  F006         	call	_BorraLCD	;wreg free
   934                           
   935                           ;LibLCDXC8.h: 91: EnviaDato(0xF);
   936   000AE6  0E0F               	movlw	15
   937   000AE8  ECE8  F005         	call	_EnviaDato
   938                           
   939                           ;LibLCDXC8.h: 92: HabilitaLCD();
   940   000AEC  EC48  F006         	call	_HabilitaLCD	;wreg free
   941                           
   942                           ;LibLCDXC8.h: 93: RetardoLCD(4);
   943   000AF0  0E04               	movlw	4
   944   000AF2  ECBD  F005         	call	_RetardoLCD
   945   000AF6  0012               	return		;funcret
   946   000AF8                     __end_of_InicializaLCD:
   947                           	callstack 0
   948                           
   949 ;; *************** function _BorraLCD *****************
   950 ;; Defined at:
   951 ;;		line 102 in file "LibLCDXC8.h"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   965 ;;      Params:         0       0       0       0       0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0       0       0
   968 ;;      Totals:         0       0       0       0       0       0       0       0       0
   969 ;;Total ram usage:        0 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 3
   972 ;; This function calls:
   973 ;;		_EnviaDato
   974 ;;		_HabilitaLCD
   975 ;;		_RetardoLCD
   976 ;; This function is called by:
   977 ;;		_InicializaLCD
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text5
   983   000C7C                     __ptext5:
   984                           	callstack 0
   985   000C7C                     _BorraLCD:
   986                           	callstack 26
   987                           
   988                           ;LibLCDXC8.h: 104: LATE0=0;
   989                           
   990                           ;incstack = 0
   991   000C7C  908D               	bcf	3981,0,c	;volatile
   992                           
   993                           ;LibLCDXC8.h: 105: EnviaDato(0x01);
   994   000C7E  0E01               	movlw	1
   995   000C80  ECE8  F005         	call	_EnviaDato
   996                           
   997                           ;LibLCDXC8.h: 106: HabilitaLCD();
   998   000C84  EC48  F006         	call	_HabilitaLCD	;wreg free
   999                           
  1000                           ;LibLCDXC8.h: 107: RetardoLCD(2);
  1001   000C88  0E02               	movlw	2
  1002   000C8A  ECBD  F005         	call	_RetardoLCD
  1003   000C8E  0012               	return		;funcret
  1004   000C90                     __end_of_BorraLCD:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _DireccionaLCD *****************
  1008 ;; Defined at:
  1009 ;;		line 227 in file "LibLCDXC8.h"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  a               1    wreg     unsigned char 
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;  a               1    5[COMRAM] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1023 ;;      Params:         0       0       0       0       0       0       0       0       0
  1024 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1026 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1027 ;;Total ram usage:        1 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; Hardware stack levels required when called: 3
  1030 ;; This function calls:
  1031 ;;		_EnviaDato
  1032 ;;		_HabilitaLCD
  1033 ;;		_RetardoLCD
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text6
  1040   000C66                     __ptext6:
  1041                           	callstack 0
  1042   000C66                     _DireccionaLCD:
  1043                           	callstack 27
  1044                           
  1045                           ;incstack = 0
  1046                           ;DireccionaLCD@a stored from wreg
  1047   000C66  6E06               	movwf	DireccionaLCD@a^0,c
  1048                           
  1049                           ;LibLCDXC8.h: 230: LATE0=0;
  1050   000C68  908D               	bcf	3981,0,c	;volatile
  1051                           
  1052                           ;LibLCDXC8.h: 231: EnviaDato(a);
  1053   000C6A  5006               	movf	DireccionaLCD@a^0,w,c
  1054   000C6C  ECE8  F005         	call	_EnviaDato
  1055                           
  1056                           ;LibLCDXC8.h: 232: HabilitaLCD();
  1057   000C70  EC48  F006         	call	_HabilitaLCD	;wreg free
  1058                           
  1059                           ;LibLCDXC8.h: 233: RetardoLCD(4);
  1060   000C74  0E04               	movlw	4
  1061   000C76  ECBD  F005         	call	_RetardoLCD
  1062   000C7A  0012               	return		;funcret
  1063   000C7C                     __end_of_DireccionaLCD:
  1064                           	callstack 0
  1065                           
  1066 ;; *************** function _EnviaDato *****************
  1067 ;; Defined at:
  1068 ;;		line 51 in file "LibLCDXC8.h"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  a               1    wreg     unsigned char 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  a               1    4[COMRAM] unsigned char 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2, status,0, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1082 ;;      Params:         0       0       0       0       0       0       0       0       0
  1083 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1084 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1085 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1086 ;;Total ram usage:        2 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; Hardware stack levels required when called: 2
  1089 ;; This function calls:
  1090 ;;		_HabilitaLCD
  1091 ;;		_RetardoLCD
  1092 ;; This function is called by:
  1093 ;;		_InicializaLCD
  1094 ;;		_BorraLCD
  1095 ;;		_EscribeLCD_c
  1096 ;;		_DireccionaLCD
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text7
  1101   000BD0                     __ptext7:
  1102                           	callstack 0
  1103   000BD0                     _EnviaDato:
  1104                           	callstack 26
  1105                           
  1106                           ;incstack = 0
  1107                           ;EnviaDato@a stored from wreg
  1108   000BD0  6E05               	movwf	EnviaDato@a^0,c
  1109                           
  1110                           ;LibLCDXC8.h: 52: if(interfaz==4){
  1111   000BD2  0E04               	movlw	4
  1112   000BD4  1810               	xorwf	_interfaz^0,w,c
  1113   000BD6  A4D8               	btfss	status,2,c
  1114   000BD8  D017               	goto	l970
  1115                           
  1116                           ;LibLCDXC8.h: 53: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  1117   000BDA  C005  F004         	movff	EnviaDato@a,??_EnviaDato
  1118   000BDE  0EF0               	movlw	240
  1119   000BE0  1604               	andwf	??_EnviaDato^0,f,c
  1120   000BE2  508C               	movf	140,w,c	;volatile
  1121   000BE4  0B0F               	andlw	15
  1122   000BE6  1004               	iorwf	??_EnviaDato^0,w,c
  1123   000BE8  6E8C               	movwf	140,c	;volatile
  1124                           
  1125                           ;LibLCDXC8.h: 54: HabilitaLCD();
  1126   000BEA  EC48  F006         	call	_HabilitaLCD	;wreg free
  1127                           
  1128                           ;LibLCDXC8.h: 55: RetardoLCD(1);
  1129   000BEE  0E01               	movlw	1
  1130   000BF0  ECBD  F005         	call	_RetardoLCD
  1131                           
  1132                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a<<4);
  1133   000BF4  C005  F004         	movff	EnviaDato@a,??_EnviaDato
  1134   000BF8  3A04               	swapf	??_EnviaDato^0,f,c
  1135   000BFA  0EF0               	movlw	240
  1136   000BFC  1604               	andwf	??_EnviaDato^0,f,c
  1137   000BFE  508C               	movf	140,w,c	;volatile
  1138   000C00  0B0F               	andlw	15
  1139   000C02  1004               	iorwf	??_EnviaDato^0,w,c
  1140   000C04  6E8C               	movwf	140,c	;volatile
  1141                           
  1142                           ;LibLCDXC8.h: 57: }else if(interfaz==8){
  1143   000C06  0012               	return	
  1144   000C08                     l970:
  1145   000C08  0E08               	movlw	8
  1146   000C0A  1810               	xorwf	_interfaz^0,w,c
  1147   000C0C  A4D8               	btfss	status,2,c
  1148   000C0E  0012               	return	
  1149                           
  1150                           ;LibLCDXC8.h: 58: LATD=a;
  1151   000C10  C005  FF8C         	movff	EnviaDato@a,3980	;volatile
  1152   000C14  0012               	return		;funcret
  1153   000C16                     __end_of_EnviaDato:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _RetardoLCD *****************
  1157 ;; Defined at:
  1158 ;;		line 263 in file "LibLCDXC8.h"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  a               1    wreg     unsigned char 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  a               1    2[COMRAM] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1172 ;;      Params:         0       0       0       0       0       0       0       0       0
  1173 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1174 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1175 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1176 ;;Total ram usage:        2 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_EnviaDato
  1183 ;;		_InicializaLCD
  1184 ;;		_BorraLCD
  1185 ;;		_EscribeLCD_c
  1186 ;;		_DireccionaLCD
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text8
  1191   000B7A                     __ptext8:
  1192                           	callstack 0
  1193   000B7A                     _RetardoLCD:
  1194                           	callstack 27
  1195                           
  1196                           ;incstack = 0
  1197                           ;RetardoLCD@a stored from wreg
  1198   000B7A  6E03               	movwf	RetardoLCD@a^0,c
  1199                           
  1200                           ;LibLCDXC8.h: 264: switch(a){
  1201   000B7C  D01B               	goto	l958
  1202   000B7E                     l948:
  1203   000B7E  0E05               	movlw	5
  1204   000B80  6E02               	movwf	??_RetardoLCD^0,c
  1205   000B82  0EDE               	movlw	222
  1206   000B84                     u627:
  1207   000B84  2EE8               	decfsz	wreg,f,c
  1208   000B86  D7FE               	bra	u627
  1209   000B88  2E02               	decfsz	??_RetardoLCD^0,f,c
  1210   000B8A  D7FC               	bra	u627
  1211                           
  1212                           ;LibLCDXC8.h: 267: break;
  1213   000B8C  0012               	return	
  1214   000B8E                     l950:
  1215   000B8E  0E53               	movlw	83
  1216   000B90                     u637:
  1217   000B90  2EE8               	decfsz	wreg,f,c
  1218   000B92  D7FE               	bra	u637
  1219   000B94  F000               	nop	
  1220                           
  1221                           ;LibLCDXC8.h: 269: _delay((unsigned long)((640)*(1000000/4000000.0)));
  1222   000B96  0E35               	movlw	53
  1223   000B98                     u647:
  1224   000B98  2EE8               	decfsz	wreg,f,c
  1225   000B9A  D7FE               	bra	u647
  1226   000B9C  F000               	nop	
  1227                           
  1228                           ;LibLCDXC8.h: 271: break;
  1229   000B9E  0012               	return	
  1230   000BA0                     l952:
  1231   000BA0  0E08               	movlw	8
  1232   000BA2                     u657:
  1233   000BA2  2EE8               	decfsz	wreg,f,c
  1234   000BA4  D7FE               	bra	u657
  1235   000BA6  F000               	nop	
  1236                           
  1237                           ;LibLCDXC8.h: 274: break;
  1238   000BA8  0012               	return	
  1239   000BAA                     l954:
  1240   000BAA  0E03               	movlw	3
  1241   000BAC                     u667:
  1242   000BAC  2EE8               	decfsz	wreg,f,c
  1243   000BAE  D7FE               	bra	u667
  1244   000BB0  F000               	nop	
  1245                           
  1246                           ;LibLCDXC8.h: 277: break;
  1247   000BB2  0012               	return	
  1248   000BB4                     l958:
  1249   000BB4  5003               	movf	RetardoLCD@a^0,w,c
  1250                           
  1251                           ; Switch size 1, requested type "simple"
  1252                           ; Number of cases is 4, Range of values is 1 to 4
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte           13     7 (average)
  1256                           ;	Chosen strategy is simple_byte
  1257   000BB6  0A01               	xorlw	1	; case 1
  1258   000BB8  B4D8               	btfsc	status,2,c
  1259   000BBA  D7E1               	goto	l948
  1260   000BBC  0A03               	xorlw	3	; case 2
  1261   000BBE  B4D8               	btfsc	status,2,c
  1262   000BC0  D7E6               	goto	l950
  1263   000BC2  0A01               	xorlw	1	; case 3
  1264   000BC4  B4D8               	btfsc	status,2,c
  1265   000BC6  D7EC               	goto	l952
  1266   000BC8  0A07               	xorlw	7	; case 4
  1267   000BCA  A4D8               	btfss	status,2,c
  1268   000BCC  0012               	return	
  1269   000BCE  D7ED               	goto	l954
  1270   000BD0                     __end_of_RetardoLCD:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _HabilitaLCD *****************
  1274 ;; Defined at:
  1275 ;;		line 95 in file "LibLCDXC8.h"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1292 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 1
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_EnviaDato
  1300 ;;		_InicializaLCD
  1301 ;;		_BorraLCD
  1302 ;;		_EscribeLCD_c
  1303 ;;		_DireccionaLCD
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text9
  1308   000C90                     __ptext9:
  1309                           	callstack 0
  1310   000C90                     _HabilitaLCD:
  1311                           	callstack 27
  1312                           
  1313                           ;LibLCDXC8.h: 97: LATE1=1;
  1314                           
  1315                           ;incstack = 0
  1316   000C90  828D               	bsf	3981,1,c	;volatile
  1317                           
  1318                           ;LibLCDXC8.h: 98: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1319   000C92  0E03               	movlw	3
  1320   000C94                     u677:
  1321   000C94  2EE8               	decfsz	wreg,f,c
  1322   000C96  D7FE               	bra	u677
  1323   000C98  F000               	nop	
  1324                           
  1325                           ;LibLCDXC8.h: 100: LATE1=0;
  1326   000C9A  928D               	bcf	3981,1,c	;volatile
  1327   000C9C  0012               	return		;funcret
  1328   000C9E                     __end_of_HabilitaLCD:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _ConfiguraLCD *****************
  1332 ;; Defined at:
  1333 ;;		line 47 in file "LibLCDXC8.h"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  a               1    wreg     unsigned char 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  a               1    1[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0
  1348 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1350 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1351 ;;Total ram usage:        1 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text10
  1362   000C38                     __ptext10:
  1363                           	callstack 0
  1364   000C38                     _ConfiguraLCD:
  1365                           	callstack 29
  1366                           
  1367                           ;incstack = 0
  1368                           ;ConfiguraLCD@a stored from wreg
  1369   000C38  6E02               	movwf	ConfiguraLCD@a^0,c
  1370                           
  1371                           ;LibLCDXC8.h: 48: if(a==4 | a ==8)
  1372   000C3A  0E04               	movlw	4
  1373   000C3C  1802               	xorwf	ConfiguraLCD@a^0,w,c
  1374   000C3E  B4D8               	btfsc	status,2,c
  1375   000C40  D004               	goto	u40
  1376   000C42  0E08               	movlw	8
  1377   000C44  1802               	xorwf	ConfiguraLCD@a^0,w,c
  1378   000C46  A4D8               	btfss	status,2,c
  1379   000C48  0012               	return	
  1380   000C4A                     u40:
  1381                           
  1382                           ;LibLCDXC8.h: 49: interfaz=a;
  1383   000C4A  C002  F010         	movff	ConfiguraLCD@a,_interfaz
  1384   000C4E  0012               	return		;funcret
  1385   000C50                     __end_of_ConfiguraLCD:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _ISR *****************
  1389 ;; Defined at:
  1390 ;;		line 142 in file "Lab4.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1404 ;;      Params:         0       0       0       0       0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1406 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1407 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1408 ;;Total ram usage:        1 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		Interrupt level 2
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	intcode
  1418   000008                     __pintcode:
  1419                           	callstack 0
  1420   000008                     _ISR:
  1421                           	callstack 26
  1422                           
  1423                           ;incstack = 0
  1424   000008  8211               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1425   00000A  ED14  F004         	call	int_func,f	;refresh shadow registers
  1426                           
  1427                           	psect	intcode_body
  1428   000828                     __pintcode_body:
  1429                           	callstack 26
  1430   000828                     int_func:
  1431                           	callstack 26
  1432   000828  0006               	pop		; remove dummy address from shadow register refresh
  1433                           
  1434                           ;Lab4.c: 143: if(RBIF==1){
  1435   00082A  A0F2               	btfss	4082,0,c	;volatile
  1436   00082C  D059               	goto	i2l1284
  1437                           
  1438                           ;Lab4.c: 144: if(PORTB!=0b11110000){
  1439   00082E  0EF0               	movlw	240
  1440   000830  1881               	xorwf	129,w,c	;volatile
  1441   000832  B4D8               	btfsc	status,2,c
  1442   000834  D04C               	goto	i2l1280
  1443                           
  1444                           ;Lab4.c: 145: Tecla=16;
  1445   000836  0E10               	movlw	16
  1446   000838  6E0F               	movwf	_Tecla^0,c
  1447                           
  1448                           ;Lab4.c: 146: LATB=0b11111110;
  1449   00083A  0EFE               	movlw	254
  1450   00083C  6E8A               	movwf	138,c	;volatile
  1451                           
  1452                           ;Lab4.c: 147: if(RB4==0) Tecla="0";
  1453   00083E  B881               	btfsc	3969,4,c	;volatile
  1454   000840  D002               	goto	i2l160
  1455   000842  0E0D               	movlw	low (low (STR_13+1))
  1456   000844  D041               	goto	L18
  1457   000846                     i2l160:
  1458                           
  1459                           ;Lab4.c: 148: else if(RB5==0) Tecla="1";
  1460   000846  BA81               	btfsc	3969,5,c	;volatile
  1461   000848  D002               	goto	i2l162
  1462   00084A  0E10               	movlw	low (low (STR_14+1))
  1463   00084C  D03D               	goto	L18
  1464   00084E                     i2l162:
  1465                           
  1466                           ;Lab4.c: 149: else if(RB6==0) Tecla="2";
  1467   00084E  BC81               	btfsc	3969,6,c	;volatile
  1468   000850  D002               	goto	i2l164
  1469   000852  0E13               	movlw	low (low (STR_15+1))
  1470   000854  D039               	goto	L18
  1471   000856                     i2l164:
  1472                           
  1473                           ;Lab4.c: 150: else if(RB7==0) Tecla="3";
  1474   000856  BE81               	btfsc	3969,7,c	;volatile
  1475   000858  D002               	goto	i2l1244
  1476   00085A  0E16               	movlw	low (low (STR_16+1))
  1477   00085C  D035               	goto	L18
  1478   00085E                     i2l1244:
  1479                           
  1480                           ;Lab4.c: 151: else{;Lab4.c: 152: LATB=0b11111101;
  1481   00085E  0EFD               	movlw	253
  1482   000860  6E8A               	movwf	138,c	;volatile
  1483                           
  1484                           ;Lab4.c: 153: if(RB4==0) Tecla="4";
  1485   000862  B881               	btfsc	3969,4,c	;volatile
  1486   000864  D002               	goto	i2l168
  1487   000866  0E19               	movlw	low (low (STR_17+1))
  1488   000868  D02F               	goto	L18
  1489   00086A                     i2l168:
  1490                           
  1491                           ;Lab4.c: 154: else if(RB5==0) Tecla="5";
  1492   00086A  BA81               	btfsc	3969,5,c	;volatile
  1493   00086C  D002               	goto	i2l170
  1494   00086E  0E1C               	movlw	low (low (STR_18+1))
  1495   000870  D02B               	goto	L18
  1496   000872                     i2l170:
  1497                           
  1498                           ;Lab4.c: 155: else if(RB6==0) Tecla="6";
  1499   000872  BC81               	btfsc	3969,6,c	;volatile
  1500   000874  D002               	goto	i2l172
  1501   000876  0E1E               	movlw	low (low STR_9)
  1502   000878  D027               	goto	L18
  1503   00087A                     i2l172:
  1504                           
  1505                           ;Lab4.c: 156: else if(RB7==0) Tecla="7";
  1506   00087A  BE81               	btfsc	3969,7,c	;volatile
  1507   00087C  D002               	goto	i2l1256
  1508   00087E  0E20               	movlw	low (low STR_2)
  1509   000880  D023               	goto	L18
  1510   000882                     i2l1256:
  1511                           
  1512                           ;Lab4.c: 157: else{;Lab4.c: 158: LATB=0b11111011;
  1513   000882  0EFB               	movlw	251
  1514   000884  6E8A               	movwf	138,c	;volatile
  1515                           
  1516                           ;Lab4.c: 159: if(RB4==0) Tecla="8";
  1517   000886  B881               	btfsc	3969,4,c	;volatile
  1518   000888  D002               	goto	i2l176
  1519   00088A  0E22               	movlw	low (low STR_11)
  1520   00088C  D01D               	goto	L18
  1521   00088E                     i2l176:
  1522                           
  1523                           ;Lab4.c: 160: else if(RB5==0) Tecla="9";
  1524   00088E  BA81               	btfsc	3969,5,c	;volatile
  1525   000890  D002               	goto	i2l178
  1526   000892  0E24               	movlw	low (low STR_12)
  1527   000894  D019               	goto	L18
  1528   000896                     i2l178:
  1529                           
  1530                           ;Lab4.c: 161: else if(RB6==0) Tecla="10";
  1531   000896  BC81               	btfsc	3969,6,c	;volatile
  1532   000898  D002               	goto	i2l180
  1533   00089A  0E0C               	movlw	low (low STR_13)
  1534   00089C  D015               	goto	L18
  1535   00089E                     i2l180:
  1536                           
  1537                           ;Lab4.c: 162: else if(RB7==0) Tecla="11";
  1538   00089E  BE81               	btfsc	3969,7,c	;volatile
  1539   0008A0  D002               	goto	i2l1268
  1540   0008A2  0E0F               	movlw	low (low STR_14)
  1541   0008A4  D011               	goto	L18
  1542   0008A6                     i2l1268:
  1543                           
  1544                           ;Lab4.c: 163: else{;Lab4.c: 164: LATB=0b11110111;
  1545   0008A6  0EF7               	movlw	247
  1546   0008A8  6E8A               	movwf	138,c	;volatile
  1547                           
  1548                           ;Lab4.c: 165: if(RB4==0) Tecla="12";
  1549   0008AA  B881               	btfsc	3969,4,c	;volatile
  1550   0008AC  D002               	goto	i2l184
  1551   0008AE  0E12               	movlw	low (low STR_15)
  1552   0008B0  D00B               	goto	L18
  1553   0008B2                     i2l184:
  1554                           
  1555                           ;Lab4.c: 166: else if(RB5==0) Tecla="13";
  1556   0008B2  BA81               	btfsc	3969,5,c	;volatile
  1557   0008B4  D002               	goto	i2l186
  1558   0008B6  0E15               	movlw	low (low STR_16)
  1559   0008B8  D007               	goto	L18
  1560   0008BA                     i2l186:
  1561                           
  1562                           ;Lab4.c: 167: else if(RB6==0) Tecla="14";
  1563   0008BA  BC81               	btfsc	3969,6,c	;volatile
  1564   0008BC  D002               	goto	i2l188
  1565   0008BE  0E18               	movlw	low (low STR_17)
  1566   0008C0  D003               	goto	L18
  1567   0008C2                     i2l188:
  1568                           
  1569                           ;Lab4.c: 168: else if(RB7==0) Tecla="15";
  1570   0008C2  BE81               	btfsc	3969,7,c	;volatile
  1571   0008C4  D002               	goto	i2l185
  1572   0008C6  0E1B               	movlw	low (low STR_18)
  1573   0008C8                     L18:
  1574   0008C8  6E0F               	movwf	_Tecla^0,c
  1575   0008CA                     i2l185:
  1576                           
  1577                           ;Lab4.c: 169: };Lab4.c: 170: };Lab4.c: 171: };Lab4.c: 172: LATB=0b11110000;
  1578   0008CA  0EF0               	movlw	240
  1579   0008CC  6E8A               	movwf	138,c	;volatile
  1580   0008CE                     i2l1280:
  1581                           
  1582                           ;Lab4.c: 173: };Lab4.c: 174: _delay((unsigned long)((100)*(1000000/4000.0)));
  1583   0008CE  0E21               	movlw	33
  1584   0008D0  6E01               	movwf	??_ISR^0,c
  1585   0008D2  0E76               	movlw	118
  1586   0008D4                     i2u68_47:
  1587   0008D4  2EE8               	decfsz	wreg,f,c
  1588   0008D6  D7FE               	bra	i2u68_47
  1589   0008D8  2E01               	decfsz	??_ISR^0,f,c
  1590   0008DA  D7FC               	bra	i2u68_47
  1591   0008DC  D000               	nop2	
  1592                           
  1593                           ;Lab4.c: 175: RBIF=0;
  1594   0008DE  90F2               	bcf	4082,0,c	;volatile
  1595   0008E0                     i2l1284:
  1596                           
  1597                           ;Lab4.c: 176: };Lab4.c: 177: if(TMR0IF==1){
  1598   0008E0  A4F2               	btfss	4082,2,c	;volatile
  1599   0008E2  D00A               	goto	i2u53_45
  1600                           
  1601                           ;Lab4.c: 178: TMR0IF=0;
  1602   0008E4  94F2               	bcf	4082,2,c	;volatile
  1603                           
  1604                           ;Lab4.c: 179: TMR0=3036;
  1605   0008E6  0E0B               	movlw	11
  1606   0008E8  6ED7               	movwf	215,c	;volatile
  1607   0008EA  0EDC               	movlw	220
  1608   0008EC  6ED6               	movwf	214,c	;volatile
  1609                           
  1610                           ;Lab4.c: 180: LATD1=LATD1^1;
  1611   0008EE  B28C               	btfsc	3980,1,c	;volatile
  1612   0008F0  D002               	goto	i2u52_40
  1613   0008F2  828C               	bsf	3980,1,c	;volatile
  1614   0008F4  D001               	goto	i2u53_45
  1615   0008F6                     i2u52_40:
  1616   0008F6  928C               	bcf	3980,1,c	;volatile
  1617   0008F8                     i2u53_45:
  1618   0008F8  9211               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1619   0008FA  0011               	retfie		f
  1620   0008FC                     __end_of_ISR:
  1621                           	callstack 0
  1622                           
  1623                           	psect	rparam
  1624   000000                     
  1625                           	psect	temp
  1626   000011                     btemp:
  1627                           	callstack 0
  1628   000011                     	ds	1
  1629   000000                     int$flags	set	btemp
  1630   000000                     wtemp8	set	btemp+1
  1631   000000                     ttemp5	set	btemp+1
  1632   000000                     ttemp6	set	btemp+4
  1633   000000                     ttemp7	set	btemp+8
  1634                           
  1635                           	psect	idloc
  1636                           
  1637                           ;Config register IDLOC0 @ 0x200000
  1638                           ;	unspecified, using default values
  1639   200000                     	org	2097152
  1640   200000  FF                 	db	255
  1641                           
  1642                           ;Config register IDLOC1 @ 0x200001
  1643                           ;	unspecified, using default values
  1644   200001                     	org	2097153
  1645   200001  FF                 	db	255
  1646                           
  1647                           ;Config register IDLOC2 @ 0x200002
  1648                           ;	unspecified, using default values
  1649   200002                     	org	2097154
  1650   200002  FF                 	db	255
  1651                           
  1652                           ;Config register IDLOC3 @ 0x200003
  1653                           ;	unspecified, using default values
  1654   200003                     	org	2097155
  1655   200003  FF                 	db	255
  1656                           
  1657                           ;Config register IDLOC4 @ 0x200004
  1658                           ;	unspecified, using default values
  1659   200004                     	org	2097156
  1660   200004  FF                 	db	255
  1661                           
  1662                           ;Config register IDLOC5 @ 0x200005
  1663                           ;	unspecified, using default values
  1664   200005                     	org	2097157
  1665   200005  FF                 	db	255
  1666                           
  1667                           ;Config register IDLOC6 @ 0x200006
  1668                           ;	unspecified, using default values
  1669   200006                     	org	2097158
  1670   200006  FF                 	db	255
  1671                           
  1672                           ;Config register IDLOC7 @ 0x200007
  1673                           ;	unspecified, using default values
  1674   200007                     	org	2097159
  1675   200007  FF                 	db	255
  1676                           
  1677                           	psect	config
  1678                           
  1679                           ;Config register CONFIG1L @ 0x300000
  1680                           ;	unspecified, using default values
  1681                           ;	PLL Prescaler Selection bits
  1682                           ;	PLLDIV = 0x0, unprogrammed default
  1683                           ;	System Clock Postscaler Selection bits
  1684                           ;	CPUDIV = 0x0, unprogrammed default
  1685                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1686                           ;	USBDIV = 0x0, unprogrammed default
  1687   300000                     	org	3145728
  1688   300000  00                 	db	0
  1689                           
  1690                           ;Config register CONFIG1H @ 0x300001
  1691                           ;	Oscillator Selection bits
  1692                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1693                           ;	Fail-Safe Clock Monitor Enable bit
  1694                           ;	FCMEN = 0x0, unprogrammed default
  1695                           ;	Internal/External Oscillator Switchover bit
  1696                           ;	IESO = 0x0, unprogrammed default
  1697   300001                     	org	3145729
  1698   300001  09                 	db	9
  1699                           
  1700                           ;Config register CONFIG2L @ 0x300002
  1701                           ;	unspecified, using default values
  1702                           ;	Power-up Timer Enable bit
  1703                           ;	PWRT = 0x1, unprogrammed default
  1704                           ;	Brown-out Reset Enable bits
  1705                           ;	BOR = 0x3, unprogrammed default
  1706                           ;	Brown-out Reset Voltage bits
  1707                           ;	BORV = 0x3, unprogrammed default
  1708                           ;	USB Voltage Regulator Enable bit
  1709                           ;	VREGEN = 0x0, unprogrammed default
  1710   300002                     	org	3145730
  1711   300002  1F                 	db	31
  1712                           
  1713                           ;Config register CONFIG2H @ 0x300003
  1714                           ;	Watchdog Timer Enable bit
  1715                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1716                           ;	Watchdog Timer Postscale Select bits
  1717                           ;	WDTPS = 0xF, unprogrammed default
  1718   300003                     	org	3145731
  1719   300003  1E                 	db	30
  1720                           
  1721                           ; Padding undefined space
  1722   300004                     	org	3145732
  1723   300004  FF                 	db	255
  1724                           
  1725                           ;Config register CONFIG3H @ 0x300005
  1726                           ;	CCP2 MUX bit
  1727                           ;	CCP2MX = 0x1, unprogrammed default
  1728                           ;	PORTB A/D Enable bit
  1729                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1730                           ;	Low-Power Timer 1 Oscillator Enable bit
  1731                           ;	LPT1OSC = 0x0, unprogrammed default
  1732                           ;	MCLR Pin Enable bit
  1733                           ;	MCLRE = 0x1, unprogrammed default
  1734   300005                     	org	3145733
  1735   300005  81                 	db	129
  1736                           
  1737                           ;Config register CONFIG4L @ 0x300006
  1738                           ;	Stack Full/Underflow Reset Enable bit
  1739                           ;	STVREN = 0x1, unprogrammed default
  1740                           ;	Single-Supply ICSP Enable bit
  1741                           ;	LVP = OFF, Single-Supply ICSP disabled
  1742                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1743                           ;	ICPRT = 0x0, unprogrammed default
  1744                           ;	Extended Instruction Set Enable bit
  1745                           ;	XINST = 0x0, unprogrammed default
  1746                           ;	Background Debugger Enable bit
  1747                           ;	DEBUG = 0x1, unprogrammed default
  1748   300006                     	org	3145734
  1749   300006  81                 	db	129
  1750                           
  1751                           ; Padding undefined space
  1752   300007                     	org	3145735
  1753   300007  FF                 	db	255
  1754                           
  1755                           ;Config register CONFIG5L @ 0x300008
  1756                           ;	unspecified, using default values
  1757                           ;	Code Protection bit
  1758                           ;	CP0 = 0x1, unprogrammed default
  1759                           ;	Code Protection bit
  1760                           ;	CP1 = 0x1, unprogrammed default
  1761                           ;	Code Protection bit
  1762                           ;	CP2 = 0x1, unprogrammed default
  1763                           ;	Code Protection bit
  1764                           ;	CP3 = 0x1, unprogrammed default
  1765   300008                     	org	3145736
  1766   300008  0F                 	db	15
  1767                           
  1768                           ;Config register CONFIG5H @ 0x300009
  1769                           ;	unspecified, using default values
  1770                           ;	Boot Block Code Protection bit
  1771                           ;	CPB = 0x1, unprogrammed default
  1772                           ;	Data EEPROM Code Protection bit
  1773                           ;	CPD = 0x1, unprogrammed default
  1774   300009                     	org	3145737
  1775   300009  C0                 	db	192
  1776                           
  1777                           ;Config register CONFIG6L @ 0x30000A
  1778                           ;	unspecified, using default values
  1779                           ;	Write Protection bit
  1780                           ;	WRT0 = 0x1, unprogrammed default
  1781                           ;	Write Protection bit
  1782                           ;	WRT1 = 0x1, unprogrammed default
  1783                           ;	Write Protection bit
  1784                           ;	WRT2 = 0x1, unprogrammed default
  1785                           ;	Write Protection bit
  1786                           ;	WRT3 = 0x1, unprogrammed default
  1787   30000A                     	org	3145738
  1788   30000A  0F                 	db	15
  1789                           
  1790                           ;Config register CONFIG6H @ 0x30000B
  1791                           ;	unspecified, using default values
  1792                           ;	Configuration Register Write Protection bit
  1793                           ;	WRTC = 0x1, unprogrammed default
  1794                           ;	Boot Block Write Protection bit
  1795                           ;	WRTB = 0x1, unprogrammed default
  1796                           ;	Data EEPROM Write Protection bit
  1797                           ;	WRTD = 0x1, unprogrammed default
  1798   30000B                     	org	3145739
  1799   30000B  E0                 	db	224
  1800                           
  1801                           ;Config register CONFIG7L @ 0x30000C
  1802                           ;	unspecified, using default values
  1803                           ;	Table Read Protection bit
  1804                           ;	EBTR0 = 0x1, unprogrammed default
  1805                           ;	Table Read Protection bit
  1806                           ;	EBTR1 = 0x1, unprogrammed default
  1807                           ;	Table Read Protection bit
  1808                           ;	EBTR2 = 0x1, unprogrammed default
  1809                           ;	Table Read Protection bit
  1810                           ;	EBTR3 = 0x1, unprogrammed default
  1811   30000C                     	org	3145740
  1812   30000C  0F                 	db	15
  1813                           
  1814                           ;Config register CONFIG7H @ 0x30000D
  1815                           ;	unspecified, using default values
  1816                           ;	Boot Block Table Read Protection bit
  1817                           ;	EBTRB = 0x1, unprogrammed default
  1818   30000D                     	org	3145741
  1819   30000D  40                 	db	64
  1820                           tosu	equ	0xFFF
  1821                           tosh	equ	0xFFE
  1822                           tosl	equ	0xFFD
  1823                           stkptr	equ	0xFFC
  1824                           pclatu	equ	0xFFB
  1825                           pclath	equ	0xFFA
  1826                           pcl	equ	0xFF9
  1827                           tblptru	equ	0xFF8
  1828                           tblptrh	equ	0xFF7
  1829                           tblptrl	equ	0xFF6
  1830                           tablat	equ	0xFF5
  1831                           prodh	equ	0xFF4
  1832                           prodl	equ	0xFF3
  1833                           indf0	equ	0xFEF
  1834                           postinc0	equ	0xFEE
  1835                           postdec0	equ	0xFED
  1836                           preinc0	equ	0xFEC
  1837                           plusw0	equ	0xFEB
  1838                           fsr0h	equ	0xFEA
  1839                           fsr0l	equ	0xFE9
  1840                           wreg	equ	0xFE8
  1841                           indf1	equ	0xFE7
  1842                           postinc1	equ	0xFE6
  1843                           postdec1	equ	0xFE5
  1844                           preinc1	equ	0xFE4
  1845                           plusw1	equ	0xFE3
  1846                           fsr1h	equ	0xFE2
  1847                           fsr1l	equ	0xFE1
  1848                           bsr	equ	0xFE0
  1849                           indf2	equ	0xFDF
  1850                           postinc2	equ	0xFDE
  1851                           postdec2	equ	0xFDD
  1852                           preinc2	equ	0xFDC
  1853                           plusw2	equ	0xFDB
  1854                           fsr2h	equ	0xFDA
  1855                           fsr2l	equ	0xFD9
  1856                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Var@a	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), STR_2(CODE[2]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     812
                                             12 COMRAM     2     2      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       6     4      2     452
                                              6 COMRAM     6     4      2
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                              3 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      E      10       1       17.0%
BITBIGSFRhlh        2A      0       0      23        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhll       14      0       0      22        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      25        0.0%
BITBIGSFRlh          1      0       0      26        0.0%
BITBIGSFRhllh        1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      29        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 16 07:27:15 2023

                     u40 0C4A               EnviaDato@a 0005            ??_LeerTeclado 0002  
                    l122 09D4                      l131 09F8                      l141 0A24  
                    l133 0A00                      l125 09DC            _InicializaLCD 0A5C  
                    l151 0A50                      l143 0A2C                      l135 0A08  
                    l127 09E4                      l147 0A40                      l139 0A1C  
                    l148 0A58                      l149 0A48                      l950 0B8E  
                    l952 0BA0                      l954 0BAA                      l970 0C08  
                    l948 0B7E                      l958 0BB4                      _GIE 007F97  
                    _RB4 007C0C                      _RB5 007C0D                      _RB6 007C0E  
                    _RB7 007C0F                      u160 09C8                      u540 0B2C  
                    _ISR 0008                      u607 094A                      u560 0B5E  
                    u617 0994                      u570 0B78                      u627 0B84  
                    u547 0B22                      u637 0B90                      u647 0B98  
                    u567 0B54                      u657 0BA2                      u667 0BAC  
                    u587 091E                      u677 0C94                      u597 0930  
                    wreg 000FE8                     ?_ISR 0001                     l1000 0A6E  
                   l1010 0A8C                     l1020 0AAA                     l1040 0AE2  
                   l1108 09EC                     l1136 0A10                     l1164 0A34  
                   l1338 09A0                     l1298 0B00                     STR_1 0801  
                   STR_2 0820                     STR_3 080D                     STR_4 0810  
                   STR_5 0813                     STR_6 0816                     STR_7 0819  
                   STR_8 081C                     STR_9 081E                     _LATB 000F8A  
                   _LATD 000F8C                     _LATE 000F8D                     _RBIE 007F93  
                   _RBIF 007F90                     _RBPU 007F8F                     _TMR0 000FD6  
         ??_EscribeLCD_c 0006                     _main 08FC                     fsr0h 000FEA  
                   indf0 000FEF                     fsr0l 000FE9                     btemp 0011  
                   start 000E             ___param_bank 000000                    ??_ISR 0001  
         ?_InicializaLCD 0001                    ?_main 0001                    STR_10 0820  
                  STR_11 0822                    STR_12 0824                    STR_13 080C  
                  STR_14 080F                    STR_15 0812                    STR_16 0815  
                  STR_17 0818                    STR_18 081B            EscribeLCD_c@a 0006  
                  _LATD1 007C61                    _LATE0 007C68                    _LATE1 007C69  
                  i2l160 0846                    i2l170 0872                    i2l162 084E  
                  i2l180 089E                    i2l172 087A                    i2l164 0856  
                  i2l184 08B2                    i2l176 088E                    i2l168 086A  
                  i2l185 08CA                    i2l186 08BA                    i2l178 0896  
                  i2l188 08C2                    _PORTB 000F81                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96                    _Tecla 000F  
    __end_of_LeerTeclado 0A5C                    tablat 000FF5              _HabilitaLCD 0C90  
                  ttemp5 0012                    ttemp6 0015                    ttemp7 0019  
                  status 000FD8                    wtemp8 0012         __end_of_BorraLCD 0C90  
        __initialization 0C16             __end_of_main 09BA                   ??_main 000D  
   __end_of_ConfiguraLCD 0C50            __activetblptr 000002                   _ADCON1 000FC1  
         DireccionaLCD@a 0006                   i2l1244 085E                   i2l1256 0882  
                 i2l1280 08CE                   i2l1268 08A6                   i2l1284 08E0  
                 _TMR0IF 007F92    __end_of_DireccionaLCD 0C7C               _RetardoLCD 0B7A  
        ??_InicializaLCD 0006                   isa$std 000001     __end_of_EscribeLCD_c 0C66  
            _LeerTeclado 09BA             __pdataCOMRAM 0010             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0C2A            ___rparam_used 000001  
         __pcstackCOMRAM 0001        __end_of_EnviaDato 0C16                ?_BorraLCD 0001  
         _MensajeLCD_Var 0AF8          MensajeLCD_Var@a 0007          MensajeLCD_Var@i 000B  
            ?_RetardoLCD 0001              RetardoLCD@a 0003   __end_of_MensajeLCD_Var 0B7A  
                i2u52_40 08F6                  i2u53_45 08F8                  i2u68_47 08D4  
             ??_BorraLCD 0006             ?_HabilitaLCD 0001             _ConfiguraLCD 0C38  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0C16                  __ramtop 0800                  __ptext0 08FC  
                __ptext1 0AF8                  __ptext2 0C50                  __ptext3 09BA  
                __ptext4 0A5C                  __ptext5 0C7C                  __ptext6 0C66  
                __ptext7 0BD0                  __ptext8 0B7A                  __ptext9 0C90  
        ?_MensajeLCD_Var 0007           __pintcode_body 0828     end_of_initialization 0C2A  
          __Lmediumconst 0000                  int_func 0828             _EscribeLCD_c 0C50  
           ?_LeerTeclado 0001            __pidataCOMRAM 0C9E    __end_of_InicializaLCD 0AF8  
              _EnviaDato 0BD0      start_initialization 0C16              __end_of_ISR 08FC  
           ??_RetardoLCD 0002               ?_EnviaDato 0001              __pbssCOMRAM 000F  
     __end_of_RetardoLCD 0BD0            _DireccionaLCD 0C66                __pintcode 0008  
       ??_MensajeLCD_Var 0009              __smallconst 0800           ?_DireccionaLCD 0001  
            ??_EnviaDato 0004                 _BorraLCD 0C7C                 __Hrparam 0000  
               __Lrparam 0000            ConfiguraLCD@a 0002                 __ptext10 0C38  
        ??_DireccionaLCD 0006                 _interfaz 0010                 isa$xinst 000000  
               int$flags 0011                 intlevel2 0000            ??_HabilitaLCD 0002  
          ?_ConfiguraLCD 0001           ??_ConfiguraLCD 0002            ?_EscribeLCD_c 0001  
    __end_of_HabilitaLCD 0C9E  
