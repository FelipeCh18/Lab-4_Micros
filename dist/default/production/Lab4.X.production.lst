

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 18 11:39:37 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Version 2.40
    50                           ; Generated 04/07/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   001AB0                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for _n2c
    90   001AB0  20                 	db	32
    91                           
    92                           ;initializer for _n1c
    93   001AB1  20                 	db	32
    94                           
    95                           ;initializer for _op
    96   001AB2  20                 	db	32
    97                           
    98                           ;initializer for _interfaz
    99   001AB3  08                 	db	8
   100   000000                     _LATC	set	3979
   101   000000                     _TRISC	set	3988
   102   000000                     _LATC7	set	31839
   103   000000                     _LATE2	set	31850
   104   000000                     _RB7	set	31759
   105   000000                     _RB6	set	31758
   106   000000                     _RB5	set	31757
   107   000000                     _POR	set	32385
   108   000000                     _PD	set	32386
   109   000000                     _TMR0ON	set	32431
   110   000000                     _GIE	set	32663
   111   000000                     _TMR0IE	set	32661
   112   000000                     _LATE1	set	31849
   113   000000                     _LATB	set	3978
   114   000000                     _LATD	set	3980
   115   000000                     _RB4	set	31756
   116   000000                     _TRISB	set	3987
   117   000000                     _TRISD	set	3989
   118   000000                     _ADCON1	set	4033
   119   000000                     _LATE0	set	31848
   120   000000                     _OSCCON	set	4051
   121   000000                     _T0CON	set	4053
   122   000000                     _TO	set	32387
   123   000000                     _RBPU	set	32655
   124   000000                     _TRISE	set	3990
   125   000000                     _TMR0IF	set	32658
   126   000000                     _TMR0	set	4054
   127                           
   128                           	psect	smallconst
   129   000800                     __psmallconst:
   130                           	callstack 0
   131   000800  00                 	db	0
   132   000801                     STR_7:
   133   000801  4D                 	db	77	;'M'
   134   000802  6F                 	db	111	;'o'
   135   000803  64                 	db	100	;'d'
   136   000804  6F                 	db	111	;'o'
   137   000805  20                 	db	32
   138   000806  46                 	db	70	;'F'
   139   000807  61                 	db	97	;'a'
   140   000808  63                 	db	99	;'c'
   141   000809  74                 	db	116	;'t'
   142   00080A  6F                 	db	111	;'o'
   143   00080B  72                 	db	114	;'r'
   144   00080C  69                 	db	105	;'i'
   145   00080D  61                 	db	97	;'a'
   146   00080E  6C                 	db	108	;'l'
   147   00080F  00                 	db	0
   148   000810                     STR_3:
   149   000810  4D                 	db	77	;'M'
   150   000811  6F                 	db	111	;'o'
   151   000812  64                 	db	100	;'d'
   152   000813  6F                 	db	111	;'o'
   153   000814  20                 	db	32
   154   000815  50                 	db	80	;'P'
   155   000816  6F                 	db	111	;'o'
   156   000817  74                 	db	116	;'t'
   157   000818  65                 	db	101	;'e'
   158   000819  6E                 	db	110	;'n'
   159   00081A  63                 	db	99	;'c'
   160   00081B  69                 	db	105	;'i'
   161   00081C  61                 	db	97	;'a'
   162   00081D  00                 	db	0
   163   00081E                     STR_15:
   164   00081E  49                 	db	73	;'I'
   165   00081F  6E                 	db	110	;'n'
   166   000820  64                 	db	100	;'d'
   167   000821  65                 	db	101	;'e'
   168   000822  74                 	db	116	;'t'
   169   000823  65                 	db	101	;'e'
   170   000824  72                 	db	114	;'r'
   171   000825  6D                 	db	109	;'m'
   172   000826  69                 	db	105	;'i'
   173   000827  6E                 	db	110	;'n'
   174   000828  61                 	db	97	;'a'
   175   000829  64                 	db	100	;'d'
   176   00082A  6F                 	db	111	;'o'
   177   00082B  00                 	db	0
   178   00082C                     STR_11:
   179   00082C  4C                 	db	76	;'L'
   180   00082D  56                 	db	86	;'V'
   181   00082E  50                 	db	80	;'P'
   182   00082F  20                 	db	32
   183   000830  41                 	db	65	;'A'
   184   000831  63                 	db	99	;'c'
   185   000832  74                 	db	116	;'t'
   186   000833  69                 	db	105	;'i'
   187   000834  76                 	db	118	;'v'
   188   000835  61                 	db	97	;'a'
   189   000836  64                 	db	100	;'d'
   190   000837  6F                 	db	111	;'o'
   191   000838  00                 	db	0
   192   000839                     STR_13:
   193   000839  64                 	db	100	;'d'
   194   00083A  65                 	db	101	;'e'
   195   00083B  20                 	db	32
   196   00083C  63                 	db	99	;'c'
   197   00083D  61                 	db	97	;'a'
   198   00083E  6C                 	db	108	;'l'
   199   00083F  63                 	db	99	;'c'
   200   000840  75                 	db	117	;'u'
   201   000841  6C                 	db	108	;'l'
   202   000842  61                 	db	97	;'a'
   203   000843  72                 	db	114	;'r'
   204   000844  00                 	db	0
   205   000845                     STR_9:
   206   000845  4D                 	db	77	;'M'
   207   000846  6F                 	db	111	;'o'
   208   000847  64                 	db	100	;'d'
   209   000848  6F                 	db	111	;'o'
   210   000849  20                 	db	32
   211   00084A  52                 	db	82	;'R'
   212   00084B  65                 	db	101	;'e'
   213   00084C  73                 	db	115	;'s'
   214   00084D  74                 	db	116	;'t'
   215   00084E  61                 	db	97	;'a'
   216   00084F  00                 	db	0
   217   000850                     STR_5:
   218   000850  4D                 	db	77	;'M'
   219   000851  6F                 	db	111	;'o'
   220   000852  64                 	db	100	;'d'
   221   000853  6F                 	db	111	;'o'
   222   000854  20                 	db	32
   223   000855  53                 	db	83	;'S'
   224   000856  75                 	db	117	;'u'
   225   000857  6D                 	db	109	;'m'
   226   000858  61                 	db	97	;'a'
   227   000859  00                 	db	0
   228   00085A                     STR_12:
   229   00085A  49                 	db	73	;'I'
   230   00085B  6D                 	db	109	;'m'
   231   00085C  70                 	db	112	;'p'
   232   00085D  6F                 	db	111	;'o'
   233   00085E  73                 	db	115	;'s'
   234   00085F  69                 	db	105	;'i'
   235   000860  62                 	db	98	;'b'
   236   000861  6C                 	db	108	;'l'
   237   000862  65                 	db	101	;'e'
   238   000863  00                 	db	0
   239   000864                     STR_14:
   240   000864  49                 	db	73	;'I'
   241   000865  6E                 	db	110	;'n'
   242   000866  66                 	db	102	;'f'
   243   000867  69                 	db	105	;'i'
   244   000868  6E                 	db	110	;'n'
   245   000869  69                 	db	105	;'i'
   246   00086A  74                 	db	116	;'t'
   247   00086B  6F                 	db	111	;'o'
   248   00086C  00                 	db	0
   249   00086D                     STR_1:
   250   00086D  45                 	db	69	;'E'
   251   00086E  6E                 	db	110	;'n'
   252   00086F  65                 	db	101	;'e'
   253   000870  72                 	db	114	;'r'
   254   000871  67                 	db	103	;'g'
   255   000872  69                 	db	105	;'i'
   256   000873  61                 	db	97	;'a'
   257   000874  00                 	db	0
   258   000875                     STR_2:
   259   000875  4D                 	db	77	;'M'
   260   000876  43                 	db	67	;'C'
   261   000877  4C                 	db	76	;'L'
   262   000878  52                 	db	82	;'R'
   263   000879  00                 	db	0
   264   00087A  00                 	db	0	; dummy byte at the end
   265   000000                     
   266                           ; #config settings
   267                           
   268                           	psect	cinit
   269   00194C                     __pcinit:
   270                           	callstack 0
   271   00194C                     start_initialization:
   272                           	callstack 0
   273   00194C                     __initialization:
   274                           	callstack 0
   275                           
   276                           ; Initialize objects allocated to COMRAM (4 bytes)
   277                           ; load TBLPTR registers with __pidataCOMRAM
   278   00194C  0EB0               	movlw	low __pidataCOMRAM
   279   00194E  6EF6               	movwf	tblptrl,c
   280   001950  0E1A               	movlw	high __pidataCOMRAM
   281   001952  6EF7               	movwf	tblptrh,c
   282   001954  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   283   001956  6EF8               	movwf	tblptru,c
   284   001958  EE00  F04D         	lfsr	0,__pdataCOMRAM
   285   00195C  EE10 F004          	lfsr	1,4
   286   001960                     copy_data0:
   287   001960  0009               	tblrd		*+
   288   001962  CFF5 FFEE          	movff	tablat,postinc0
   289   001966  50E5               	movf	postdec1,w,c
   290   001968  50E1               	movf	fsr1l,w,c
   291   00196A  E1FA               	bnz	copy_data0
   292                           
   293                           ; Clear objects allocated to COMRAM (37 bytes)
   294   00196C  EE00  F028         	lfsr	0,__pbssCOMRAM
   295   001970  0E25               	movlw	37
   296   001972                     clear_0:
   297   001972  6AEE               	clrf	postinc0,c
   298   001974  06E8               	decf	wreg,f,c
   299   001976  E1FD               	bnz	clear_0
   300   001978                     end_of_initialization:
   301                           	callstack 0
   302   001978                     __end_of__initialization:
   303                           	callstack 0
   304   001978  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   305   00197A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   306   00197C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   307   00197E  6EF8               	movwf	tblptru,c
   308   001980  0100               	movlb	0
   309   001982  EF3E  F004         	goto	_main	;jump to C main() function
   310                           
   311                           	psect	bssCOMRAM
   312   000028                     __pbssCOMRAM:
   313                           	callstack 0
   314   000028                     _res:
   315                           	callstack 0
   316   000028                     	ds	4
   317   00002C                     _r:
   318                           	callstack 0
   319   00002C                     	ds	4
   320   000030                     _partdecl:
   321                           	callstack 0
   322   000030                     	ds	4
   323   000034                     _b:
   324                           	callstack 0
   325   000034                     	ds	2
   326   000036                     _a:
   327                           	callstack 0
   328   000036                     	ds	2
   329   000038                     _verificador:
   330                           	callstack 0
   331   000038                     	ds	2
   332   00003A                     _contador_digitos:
   333                           	callstack 0
   334   00003A                     	ds	2
   335   00003C                     _contador:
   336                           	callstack 0
   337   00003C                     	ds	2
   338   00003E                     _color:
   339                           	callstack 0
   340   00003E                     	ds	2
   341   000040                     _i:
   342                           	callstack 0
   343   000040                     	ds	2
   344   000042                     _n2:
   345                           	callstack 0
   346   000042                     	ds	2
   347   000044                     _n1:
   348                           	callstack 0
   349   000044                     	ds	2
   350   000046                     _factorial:
   351                           	callstack 0
   352   000046                     	ds	1
   353   000047                     _potencia:
   354                           	callstack 0
   355   000047                     	ds	1
   356   000048                     _Tecla:
   357                           	callstack 0
   358   000048                     	ds	1
   359   000049                     _m:
   360                           	callstack 0
   361   000049                     	ds	4
   362                           
   363                           	psect	dataCOMRAM
   364   00004D                     __pdataCOMRAM:
   365                           	callstack 0
   366   00004D                     _n2c:
   367                           	callstack 0
   368   00004D                     	ds	1
   369   00004E                     _n1c:
   370                           	callstack 0
   371   00004E                     	ds	1
   372   00004F                     _op:
   373                           	callstack 0
   374   00004F                     	ds	1
   375   000050                     _interfaz:
   376                           	callstack 0
   377   000050                     	ds	1
   378                           
   379                           	psect	cstackBANK0
   380   000060                     __pcstackBANK0:
   381                           	callstack 0
   382   000060                     Imprimir_Resultado@flag:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x0
   386   000060                     	ds	1
   387   000061                     Imprimir_Resultado@k:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x1
   391   000061                     	ds	2
   392   000063                     Imprimir_Resultado@i:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x3
   396   000063                     	ds	2
   397   000065                     Imprimir_Resultado@j:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x5
   401   000065                     	ds	2
   402   000067                     Imprimir_Resultado@potencia:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x7
   406   000067                     	ds	4
   407                           
   408                           	psect	cstackCOMRAM
   409   000001                     __pcstackCOMRAM:
   410                           	callstack 0
   411   000001                     ??i2_RetardoLCD:
   412   000001                     ?i2_strlen:
   413                           	callstack 0
   414   000001                     i2strlen@s:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x0
   418   000001                     	ds	1
   419   000002                     i2RetardoLCD@a:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x1
   423   000002                     	ds	1
   424   000003                     ??i2_EnviaDato:
   425   000003                     i2strlen@cp:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x2
   429   000003                     	ds	1
   430   000004                     i2EnviaDato@a:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x3
   434   000004                     	ds	1
   435   000005                     i2EscribeLCD_c@a:
   436                           	callstack 0
   437   000005                     i2DireccionaLCD@a:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x4
   441   000005                     	ds	1
   442   000006                     i2MensajeLCD_Var@a:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x5
   446   000006                     	ds	1
   447   000007                     ??i2_MensajeLCD_Var:
   448                           
   449                           ; 1 bytes @ 0x6
   450   000007                     	ds	1
   451   000008                     i2MensajeLCD_Var@i:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x7
   455   000008                     	ds	2
   456   00000A                     ??_ISR:
   457                           
   458                           ; 1 bytes @ 0x9
   459   00000A                     	ds	4
   460   00000E                     ??_RetardoLCD:
   461   00000E                     ??_ColorRGB:
   462   00000E                     ?_strlen:
   463                           	callstack 0
   464   00000E                     ?___wmul:
   465                           	callstack 0
   466   00000E                     ?___lwmod:
   467                           	callstack 0
   468   00000E                     ?___lmul:
   469                           	callstack 0
   470   00000E                     ?___aldiv:
   471                           	callstack 0
   472   00000E                     ?___almod:
   473                           	callstack 0
   474   00000E                     ConfiguraLCD@a:
   475                           	callstack 0
   476   00000E                     strlen@s:
   477                           	callstack 0
   478   00000E                     ___wmul@multiplier:
   479                           	callstack 0
   480   00000E                     ___lwmod@dividend:
   481                           	callstack 0
   482   00000E                     ___lmul@multiplier:
   483                           	callstack 0
   484   00000E                     ___aldiv@dividend:
   485                           	callstack 0
   486   00000E                     ___almod@dividend:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0xD
   490   00000E                     	ds	1
   491   00000F                     RetardoLCD@a:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0xE
   495   00000F                     	ds	1
   496   000010                     ??_EnviaDato:
   497   000010                     strlen@cp:
   498                           	callstack 0
   499   000010                     ___wmul@multiplicand:
   500                           	callstack 0
   501   000010                     ___lwmod@divisor:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xF
   505   000010                     	ds	1
   506   000011                     EnviaDato@a:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x10
   510   000011                     	ds	1
   511   000012                     EscribeLCD_c@a:
   512                           	callstack 0
   513   000012                     DireccionaLCD@a:
   514                           	callstack 0
   515   000012                     ___lwmod@counter:
   516                           	callstack 0
   517   000012                     ___wmul@product:
   518                           	callstack 0
   519   000012                     ___lmul@multiplicand:
   520                           	callstack 0
   521   000012                     ___aldiv@divisor:
   522                           	callstack 0
   523   000012                     ___almod@divisor:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x11
   527   000012                     	ds	1
   528   000013                     MensajeLCD_Var@a:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x12
   532   000013                     	ds	1
   533   000014                     ??_MensajeLCD_Var:
   534   000014                     ?___lwdiv:
   535                           	callstack 0
   536   000014                     ___lwdiv@dividend:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x13
   540   000014                     	ds	1
   541   000015                     MensajeLCD_Var@i:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x14
   545   000015                     	ds	1
   546   000016                     ___aldiv@counter:
   547                           	callstack 0
   548   000016                     ___almod@counter:
   549                           	callstack 0
   550   000016                     ___lwdiv@divisor:
   551                           	callstack 0
   552   000016                     ___lmul@product:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x15
   556   000016                     	ds	1
   557   000017                     ___aldiv@sign:
   558                           	callstack 0
   559   000017                     ___almod@sign:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x16
   563   000017                     	ds	1
   564   000018                     ___lwdiv@counter:
   565                           	callstack 0
   566   000018                     ___aldiv@quotient:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x17
   570   000018                     	ds	1
   571   000019                     ___lwdiv@quotient:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x18
   575   000019                     	ds	1
   576   00001A                     ?_factorial_function:
   577                           	callstack 0
   578   00001A                     factorial_function@a:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x19
   582   00001A                     	ds	2
   583   00001C                     Imprimir_Resultado@r:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x1B
   587   00001C                     	ds	2
   588   00001E                     factorial_function@fact:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x1D
   592   00001E                     	ds	2
   593   000020                     ??_Imprimir_Resultado:
   594                           
   595                           ; 1 bytes @ 0x1F
   596   000020                     	ds	4
   597   000024                     ??_main:
   598                           
   599                           ; 1 bytes @ 0x23
   600   000024                     	ds	2
   601   000026                     _main$157:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x25
   605   000026                     	ds	1
   606   000027                     _main$158:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x26
   610   000027                     	ds	1
   611                           
   612 ;;
   613 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   614 ;;
   615 ;; *************** function _main *****************
   616 ;; Defined at:
   617 ;;		line 37 in file "Lab4.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   631 ;;      Params:         0       0       0       0       0       0       0       0       0
   632 ;;      Locals:         2       0       0       0       0       0       0       0       0
   633 ;;      Temps:          2       0       0       0       0       0       0       0       0
   634 ;;      Totals:         4       0       0       0       0       0       0       0       0
   635 ;;Total ram usage:        4 bytes
   636 ;; Hardware stack levels required when called: 10
   637 ;; This function calls:
   638 ;;		_BorraLCD
   639 ;;		_ColorRGB
   640 ;;		_ConfiguraLCD
   641 ;;		_DireccionaLCD
   642 ;;		_EscribeLCD_c
   643 ;;		_Imprimir_Resultado
   644 ;;		_InicializaLCD
   645 ;;		_LeerTeclado
   646 ;;		_MensajeLCD_Var
   647 ;;		___lmul
   648 ;;		___lwdiv
   649 ;;		___wmul
   650 ;;		_factorial_function
   651 ;; This function is called by:
   652 ;;		Startup code after reset
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text0
   657   00087C                     __ptext0:
   658                           	callstack 0
   659   00087C                     _main:
   660                           	callstack 21
   661                           
   662                           ;Lab4.c: 38: ADCON1=15;
   663                           
   664                           ;incstack = 0
   665   00087C  0E0F               	movlw	15
   666   00087E  6EC1               	movwf	193,c	;volatile
   667                           
   668                           ;Lab4.c: 39: TRISD=0;
   669   000880  0E00               	movlw	0
   670   000882  6E95               	movwf	149,c	;volatile
   671                           
   672                           ;Lab4.c: 40: TRISB=0b11110000;
   673   000884  0EF0               	movlw	240
   674   000886  6E93               	movwf	147,c	;volatile
   675                           
   676                           ;Lab4.c: 41: TRISE=0;
   677   000888  0E00               	movlw	0
   678   00088A  6E96               	movwf	150,c	;volatile
   679                           
   680                           ;Lab4.c: 42: TRISC=0;
   681   00088C  0E00               	movlw	0
   682   00088E  6E94               	movwf	148,c	;volatile
   683                           
   684                           ;Lab4.c: 43: RBPU=0;
   685   000890  9EF1               	bcf	4081,7,c	;volatile
   686                           
   687                           ;Lab4.c: 44: ConfiguraLCD(4);
   688   000892  0E04               	movlw	4
   689   000894  ECFE  F00C         	call	_ConfiguraLCD
   690                           
   691                           ;Lab4.c: 45: InicializaLCD();
   692   000898  EC33  F00A         	call	_InicializaLCD	;wreg free
   693                           
   694                           ;Lab4.c: 47: T0CON=0b10000010;
   695   00089C  0E82               	movlw	130
   696   00089E  6ED5               	movwf	213,c	;volatile
   697                           
   698                           ;Lab4.c: 48: TMR0IF=0;
   699   0008A0  94F2               	bcf	4082,2,c	;volatile
   700                           
   701                           ;Lab4.c: 49: TMR0=49911;
   702   0008A2  0EC2               	movlw	194
   703   0008A4  6ED7               	movwf	215,c	;volatile
   704   0008A6  0EF7               	movlw	247
   705   0008A8  6ED6               	movwf	214,c	;volatile
   706                           
   707                           ;Lab4.c: 50: TMR0IE=1;
   708   0008AA  8AF2               	bsf	4082,5,c	;volatile
   709                           
   710                           ;Lab4.c: 51: GIE=1;
   711   0008AC  8EF2               	bsf	4082,7,c	;volatile
   712                           
   713                           ;Lab4.c: 52: TMR0ON=1;
   714   0008AE  8ED5               	bsf	4053,7,c	;volatile
   715                           
   716                           ;Lab4.c: 55: OSCCON = 0b11000100;
   717   0008B0  0EC4               	movlw	196
   718   0008B2  6ED3               	movwf	211,c	;volatile
   719                           
   720                           ;Lab4.c: 57: BorraLCD();
   721   0008B4  EC36  F00D         	call	_BorraLCD	;wreg free
   722                           
   723                           ;Lab4.c: 58: if(TO == 1 && PD == 1){
   724   0008B8  B6D0               	btfsc	4048,3,c	;volatile
   725   0008BA  A4D0               	btfss	4048,2,c	;volatile
   726   0008BC  D007               	goto	l179
   727                           
   728                           ;Lab4.c: 59: BorraLCD();
   729   0008BE  EC36  F00D         	call	_BorraLCD	;wreg free
   730                           
   731                           ;Lab4.c: 60: MensajeLCD_Var("Energia");
   732   0008C2  0E6D               	movlw	low STR_1
   733   0008C4  6E13               	movwf	MensajeLCD_Var@a^0,c
   734   0008C6  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
   735                           
   736                           ;Lab4.c: 61: }else{
   737   0008CA  D008               	goto	l3510
   738   0008CC                     l179:
   739                           
   740                           ;Lab4.c: 62: if(POR==0){
   741   0008CC  B2D0               	btfsc	4048,1,c	;volatile
   742   0008CE  D006               	goto	l3510
   743                           
   744                           ;Lab4.c: 63: BorraLCD();
   745   0008D0  EC36  F00D         	call	_BorraLCD	;wreg free
   746                           
   747                           ;Lab4.c: 64: MensajeLCD_Var("MCLR");
   748   0008D4  0E75               	movlw	low STR_2
   749   0008D6  6E13               	movwf	MensajeLCD_Var@a^0,c
   750   0008D8  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
   751   0008DC                     l3510:
   752                           
   753                           ;Lab4.c: 65: };Lab4.c: 66: };Lab4.c: 67: _delay((unsigned long)((2000)*(1000000/4000.0))
      +                          );
   754   0008DC  0E03               	movlw	3
   755   0008DE  6E25               	movwf	(??_main+1)^0,c
   756   0008E0  0E8A               	movlw	138
   757   0008E2  6E24               	movwf	??_main^0,c
   758   0008E4  0E56               	movlw	86
   759   0008E6                     u4777:
   760   0008E6  2EE8               	decfsz	wreg,f,c
   761   0008E8  D7FE               	bra	u4777
   762   0008EA  2E24               	decfsz	??_main^0,f,c
   763   0008EC  D7FC               	bra	u4777
   764   0008EE  2E25               	decfsz	(??_main+1)^0,f,c
   765   0008F0  D7FA               	bra	u4777
   766   0008F2                     l3512:
   767                           
   768                           ;Lab4.c: 68: BorraLCD();
   769   0008F2  EC36  F00D         	call	_BorraLCD	;wreg free
   770   0008F6                     l3514:
   771                           
   772                           ;Lab4.c: 70: LATB=0b00000000;
   773   0008F6  0E00               	movlw	0
   774   0008F8  6E8A               	movwf	138,c	;volatile
   775                           
   776                           ;Lab4.c: 71: verificador = 0;
   777   0008FA  0E00               	movlw	0
   778   0008FC  6E39               	movwf	(_verificador+1)^0,c
   779   0008FE  0E00               	movlw	0
   780   000900  6E38               	movwf	_verificador^0,c
   781                           
   782                           ;Lab4.c: 72: Tecla = LeerTeclado();
   783   000902  EC78  F009         	call	_LeerTeclado	;wreg free
   784   000906  6E48               	movwf	_Tecla^0,c
   785                           
   786                           ;Lab4.c: 73: ColorRGB();
   787   000908  ECCA  F00A         	call	_ColorRGB	;wreg free
   788                           
   789                           ;Lab4.c: 74: if(Tecla=='C'){
   790   00090C  0E43               	movlw	67
   791   00090E  1848               	xorwf	_Tecla^0,w,c
   792   000910  A4D8               	btfss	status,2,c
   793   000912  D01B               	goto	l3528
   794                           
   795                           ;Lab4.c: 76: op = ' ';
   796   000914  0E20               	movlw	32
   797   000916  6E4F               	movwf	_op^0,c
   798                           
   799                           ;Lab4.c: 77: n1c = ' ';
   800   000918  0E20               	movlw	32
   801   00091A  6E4E               	movwf	_n1c^0,c
   802                           
   803                           ;Lab4.c: 78: n2c = ' ';
   804   00091C  0E20               	movlw	32
   805   00091E  6E4D               	movwf	_n2c^0,c
   806                           
   807                           ;Lab4.c: 79: n1 = 0;
   808   000920  0E00               	movlw	0
   809   000922  6E45               	movwf	(_n1+1)^0,c
   810   000924  0E00               	movlw	0
   811   000926  6E44               	movwf	_n1^0,c
   812                           
   813                           ;Lab4.c: 80: n2 = 0;
   814   000928  0E00               	movlw	0
   815   00092A  6E43               	movwf	(_n2+1)^0,c
   816   00092C  0E00               	movlw	0
   817   00092E  6E42               	movwf	_n2^0,c
   818                           
   819                           ;Lab4.c: 81: i = 0;
   820   000930  0E00               	movlw	0
   821   000932  6E41               	movwf	(_i+1)^0,c
   822   000934  0E00               	movlw	0
   823   000936  6E40               	movwf	_i^0,c
   824                           
   825                           ;Lab4.c: 82: partdecl = 0;
   826   000938  0E00               	movlw	0
   827   00093A  6E30               	movwf	_partdecl^0,c
   828   00093C  0E00               	movlw	0
   829   00093E  6E31               	movwf	(_partdecl+1)^0,c
   830   000940  0E00               	movlw	0
   831   000942  6E32               	movwf	(_partdecl+2)^0,c
   832   000944  0E00               	movlw	0
   833   000946  6E33               	movwf	(_partdecl+3)^0,c
   834   000948  D7D4               	goto	l3512
   835   00094A                     l3528:
   836   00094A  0E20               	movlw	32
   837   00094C  184F               	xorwf	_op^0,w,c
   838   00094E  A4D8               	btfss	status,2,c
   839   000950  D03D               	goto	l3564
   840   000952  0E2B               	movlw	43
   841   000954  1848               	xorwf	_Tecla^0,w,c
   842   000956  B4D8               	btfsc	status,2,c
   843   000958  D004               	goto	u4000
   844   00095A  0E5E               	movlw	94
   845   00095C  1848               	xorwf	_Tecla^0,w,c
   846   00095E  A4D8               	btfss	status,2,c
   847   000960  D035               	goto	l3564
   848   000962                     u4000:
   849   000962  0E20               	movlw	32
   850   000964  184E               	xorwf	_n1c^0,w,c
   851   000966  A4D8               	btfss	status,2,c
   852   000968  D031               	goto	l3564
   853   00096A  0E20               	movlw	32
   854   00096C  184D               	xorwf	_n2c^0,w,c
   855   00096E  A4D8               	btfss	status,2,c
   856   000970  D02D               	goto	l3564
   857                           
   858                           ;Lab4.c: 85: potencia=~potencia;
   859   000972  1E47               	comf	_potencia^0,f,c
   860                           
   861                           ;Lab4.c: 86: if(potencia){
   862   000974  5047               	movf	_potencia^0,w,c
   863   000976  B4D8               	btfsc	status,2,c
   864   000978  D01A               	goto	l3554
   865                           
   866                           ;Lab4.c: 87: DireccionaLCD(0x80);
   867   00097A  0E80               	movlw	128
   868   00097C  EC15  F00D         	call	_DireccionaLCD
   869                           
   870                           ;Lab4.c: 88: MensajeLCD_Var("Modo Potencia");
   871   000980  0E10               	movlw	low STR_3
   872   000982  6E13               	movwf	MensajeLCD_Var@a^0,c
   873   000984  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
   874                           
   875                           ;Lab4.c: 89: DireccionaLCD(0xC0);
   876   000988  0EC0               	movlw	192
   877   00098A  EC15  F00D         	call	_DireccionaLCD
   878                           
   879                           ;Lab4.c: 90: MensajeLCD_Var("Activado");
   880   00098E  0E30               	movlw	low (STR_11+4)
   881   000990  6E13               	movwf	MensajeLCD_Var@a^0,c
   882   000992  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
   883   000996                     l3548:
   884                           
   885                           ;Lab4.c: 91: _delay((unsigned long)((1000)*(1000000/4000.0)));
   886   000996  0E02               	movlw	2
   887   000998  6E25               	movwf	(??_main+1)^0,c
   888   00099A  0E45               	movlw	69
   889   00099C  6E24               	movwf	??_main^0,c
   890   00099E  0EAA               	movlw	170
   891   0009A0                     u4787:
   892   0009A0  2EE8               	decfsz	wreg,f,c
   893   0009A2  D7FE               	bra	u4787
   894   0009A4  2E24               	decfsz	??_main^0,f,c
   895   0009A6  D7FC               	bra	u4787
   896   0009A8  2E25               	decfsz	(??_main+1)^0,f,c
   897   0009AA  D7FA               	bra	u4787
   898   0009AC  D7A2               	goto	l3512
   899   0009AE                     l3554:
   900                           
   901                           ;Lab4.c: 95: DireccionaLCD(0x80);
   902   0009AE  0E80               	movlw	128
   903   0009B0  EC15  F00D         	call	_DireccionaLCD
   904                           
   905                           ;Lab4.c: 96: MensajeLCD_Var("Modo Suma");
   906   0009B4  0E50               	movlw	low STR_5
   907   0009B6  6E13               	movwf	MensajeLCD_Var@a^0,c
   908   0009B8  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
   909                           
   910                           ;Lab4.c: 97: DireccionaLCD(0xC0);
   911   0009BC  0EC0               	movlw	192
   912   0009BE  EC15  F00D         	call	_DireccionaLCD
   913                           
   914                           ;Lab4.c: 98: MensajeLCD_Var("Activado");
   915   0009C2  0E30               	movlw	low (STR_11+4)
   916   0009C4  6E13               	movwf	MensajeLCD_Var@a^0,c
   917   0009C6  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
   918   0009CA  D7E5               	goto	l3548
   919   0009CC                     l3564:
   920   0009CC  0E20               	movlw	32
   921   0009CE  184F               	xorwf	_op^0,w,c
   922   0009D0  A4D8               	btfss	status,2,c
   923   0009D2  D032               	goto	l3600
   924   0009D4  0E2D               	movlw	45
   925   0009D6  1848               	xorwf	_Tecla^0,w,c
   926   0009D8  B4D8               	btfsc	status,2,c
   927   0009DA  D004               	goto	u4060
   928   0009DC  0E21               	movlw	33
   929   0009DE  1848               	xorwf	_Tecla^0,w,c
   930   0009E0  A4D8               	btfss	status,2,c
   931   0009E2  D02A               	goto	l3600
   932   0009E4                     u4060:
   933   0009E4  0E20               	movlw	32
   934   0009E6  184E               	xorwf	_n1c^0,w,c
   935   0009E8  A4D8               	btfss	status,2,c
   936   0009EA  D026               	goto	l3600
   937   0009EC  0E20               	movlw	32
   938   0009EE  184D               	xorwf	_n2c^0,w,c
   939   0009F0  A4D8               	btfss	status,2,c
   940   0009F2  D022               	goto	l3600
   941                           
   942                           ;Lab4.c: 104: factorial=~factorial;
   943   0009F4  1E46               	comf	_factorial^0,f,c
   944                           
   945                           ;Lab4.c: 105: if(factorial){
   946   0009F6  5046               	movf	_factorial^0,w,c
   947   0009F8  B4D8               	btfsc	status,2,c
   948   0009FA  D00F               	goto	l3590
   949                           
   950                           ;Lab4.c: 106: DireccionaLCD(0x80);
   951   0009FC  0E80               	movlw	128
   952   0009FE  EC15  F00D         	call	_DireccionaLCD
   953                           
   954                           ;Lab4.c: 107: MensajeLCD_Var("Modo Factorial");
   955   000A02  0E01               	movlw	low STR_7
   956   000A04  6E13               	movwf	MensajeLCD_Var@a^0,c
   957   000A06  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
   958                           
   959                           ;Lab4.c: 108: DireccionaLCD(0xC0);
   960   000A0A  0EC0               	movlw	192
   961   000A0C  EC15  F00D         	call	_DireccionaLCD
   962                           
   963                           ;Lab4.c: 109: MensajeLCD_Var("Activado");
   964   000A10  0E30               	movlw	low (STR_11+4)
   965   000A12  6E13               	movwf	MensajeLCD_Var@a^0,c
   966   000A14  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
   967   000A18  D7BE               	goto	l3548
   968   000A1A                     l3590:
   969                           
   970                           ;Lab4.c: 114: DireccionaLCD(0x80);
   971   000A1A  0E80               	movlw	128
   972   000A1C  EC15  F00D         	call	_DireccionaLCD
   973                           
   974                           ;Lab4.c: 115: MensajeLCD_Var("Modo Resta");
   975   000A20  0E45               	movlw	low STR_9
   976   000A22  6E13               	movwf	MensajeLCD_Var@a^0,c
   977   000A24  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
   978                           
   979                           ;Lab4.c: 116: DireccionaLCD(0xC0);
   980   000A28  0EC0               	movlw	192
   981   000A2A  EC15  F00D         	call	_DireccionaLCD
   982                           
   983                           ;Lab4.c: 117: MensajeLCD_Var("Activado");
   984   000A2E  0E30               	movlw	low (STR_11+4)
   985   000A30  6E13               	movwf	MensajeLCD_Var@a^0,c
   986   000A32  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
   987   000A36  D7AF               	goto	l3548
   988   000A38                     l3600:
   989                           
   990                           ;Lab4.c: 123: if((n1c==' '|n2c==' '|op==' ') & !factorial){
   991   000A38  0E20               	movlw	32
   992   000A3A  184E               	xorwf	_n1c^0,w,c
   993   000A3C  B4D8               	btfsc	status,2,c
   994   000A3E  D008               	goto	u4120
   995   000A40  0E20               	movlw	32
   996   000A42  184D               	xorwf	_n2c^0,w,c
   997   000A44  B4D8               	btfsc	status,2,c
   998   000A46  D004               	goto	u4120
   999   000A48  0E20               	movlw	32
  1000   000A4A  184F               	xorwf	_op^0,w,c
  1001   000A4C  A4D8               	btfss	status,2,c
  1002   000A4E  D092               	goto	l3676
  1003   000A50                     u4120:
  1004   000A50  5046               	movf	_factorial^0,w,c
  1005   000A52  A4D8               	btfss	status,2,c
  1006   000A54  D08F               	goto	l3676
  1007                           
  1008                           ;Lab4.c: 124: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='^') & n1
      +                          c != ' ' & n2c ==' '){
  1009   000A56  0E20               	movlw	32
  1010   000A58  184F               	xorwf	_op^0,w,c
  1011   000A5A  A4D8               	btfss	status,2,c
  1012   000A5C  D025               	goto	l3628
  1013   000A5E  0E2B               	movlw	43
  1014   000A60  1848               	xorwf	_Tecla^0,w,c
  1015   000A62  B4D8               	btfsc	status,2,c
  1016   000A64  D010               	goto	u4190
  1017   000A66  0E2D               	movlw	45
  1018   000A68  1848               	xorwf	_Tecla^0,w,c
  1019   000A6A  B4D8               	btfsc	status,2,c
  1020   000A6C  D00C               	goto	u4190
  1021   000A6E  0E2F               	movlw	47
  1022   000A70  1848               	xorwf	_Tecla^0,w,c
  1023   000A72  B4D8               	btfsc	status,2,c
  1024   000A74  D008               	goto	u4190
  1025   000A76  0E78               	movlw	120
  1026   000A78  1848               	xorwf	_Tecla^0,w,c
  1027   000A7A  B4D8               	btfsc	status,2,c
  1028   000A7C  D004               	goto	u4190
  1029   000A7E  0E5E               	movlw	94
  1030   000A80  1848               	xorwf	_Tecla^0,w,c
  1031   000A82  A4D8               	btfss	status,2,c
  1032   000A84  D011               	goto	l3628
  1033   000A86                     u4190:
  1034   000A86  0E20               	movlw	32
  1035   000A88  184E               	xorwf	_n1c^0,w,c
  1036   000A8A  B4D8               	btfsc	status,2,c
  1037   000A8C  D00D               	goto	l3628
  1038   000A8E  0E20               	movlw	32
  1039   000A90  184D               	xorwf	_n2c^0,w,c
  1040   000A92  A4D8               	btfss	status,2,c
  1041   000A94  D009               	goto	l3628
  1042                           
  1043                           ;Lab4.c: 125: DireccionaLCD(0x81);
  1044   000A96  0E81               	movlw	129
  1045   000A98  EC15  F00D         	call	_DireccionaLCD
  1046                           
  1047                           ;Lab4.c: 126: EscribeLCD_c(Tecla);
  1048   000A9C  5048               	movf	_Tecla^0,w,c
  1049   000A9E  EC0A  F00D         	call	_EscribeLCD_c
  1050   000AA2                     l3626:
  1051                           
  1052                           ;Lab4.c: 127: op = Tecla;
  1053   000AA2  C048  F04F         	movff	_Tecla,_op
  1054                           
  1055                           ;Lab4.c: 128: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|Tecla!=
      +                          '='|Tecla!='C'|Tecla!='^')){
  1056   000AA6  D20C               	goto	l3818
  1057   000AA8                     l3628:
  1058   000AA8  0E20               	movlw	32
  1059   000AAA  184E               	xorwf	_n1c^0,w,c
  1060   000AAC  A4D8               	btfss	status,2,c
  1061   000AAE  D02B               	goto	l3650
  1062   000AB0  0E2B               	movlw	43
  1063   000AB2  1848               	xorwf	_Tecla^0,w,c
  1064   000AB4  A4D8               	btfss	status,2,c
  1065   000AB6  D018               	goto	u4290
  1066   000AB8  0E2D               	movlw	45
  1067   000ABA  1848               	xorwf	_Tecla^0,w,c
  1068   000ABC  A4D8               	btfss	status,2,c
  1069   000ABE  D014               	goto	u4290
  1070   000AC0  0E2F               	movlw	47
  1071   000AC2  1848               	xorwf	_Tecla^0,w,c
  1072   000AC4  A4D8               	btfss	status,2,c
  1073   000AC6  D010               	goto	u4290
  1074   000AC8  0E78               	movlw	120
  1075   000ACA  1848               	xorwf	_Tecla^0,w,c
  1076   000ACC  A4D8               	btfss	status,2,c
  1077   000ACE  D00C               	goto	u4290
  1078   000AD0  0E3D               	movlw	61
  1079   000AD2  1848               	xorwf	_Tecla^0,w,c
  1080   000AD4  A4D8               	btfss	status,2,c
  1081   000AD6  D008               	goto	u4290
  1082   000AD8  0E43               	movlw	67
  1083   000ADA  1848               	xorwf	_Tecla^0,w,c
  1084   000ADC  A4D8               	btfss	status,2,c
  1085   000ADE  D004               	goto	u4290
  1086   000AE0  0E5E               	movlw	94
  1087   000AE2  1848               	xorwf	_Tecla^0,w,c
  1088   000AE4  B4D8               	btfsc	status,2,c
  1089   000AE6  D00F               	goto	l3650
  1090   000AE8                     u4290:
  1091                           
  1092                           ;Lab4.c: 129: DireccionaLCD(0x80);
  1093   000AE8  0E80               	movlw	128
  1094   000AEA  EC15  F00D         	call	_DireccionaLCD
  1095                           
  1096                           ;Lab4.c: 130: EscribeLCD_c(Tecla);
  1097   000AEE  5048               	movf	_Tecla^0,w,c
  1098   000AF0  EC0A  F00D         	call	_EscribeLCD_c
  1099   000AF4                     l3646:
  1100                           
  1101                           ;Lab4.c: 131: n1c=Tecla;
  1102   000AF4  C048  F04E         	movff	_Tecla,_n1c
  1103                           
  1104                           ;Lab4.c: 132: n1 = Tecla-'0';
  1105   000AF8  0ED0               	movlw	208
  1106   000AFA  2448               	addwf	_Tecla^0,w,c
  1107   000AFC  6E44               	movwf	_n1^0,c
  1108   000AFE  6A45               	clrf	(_n1+1)^0,c
  1109   000B00  0EFF               	movlw	255
  1110   000B02  2245               	addwfc	(_n1+1)^0,f,c
  1111                           
  1112                           ;Lab4.c: 133: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='
      +                          /'|Tecla!='x'|Tecla!='='|Tecla!='C'|Tecla!='^')){
  1113   000B04  D1DD               	goto	l3818
  1114   000B06                     l3650:
  1115   000B06  0E20               	movlw	32
  1116   000B08  184D               	xorwf	_n2c^0,w,c
  1117   000B0A  A4D8               	btfss	status,2,c
  1118   000B0C  D1D9               	goto	l3818
  1119   000B0E  0E20               	movlw	32
  1120   000B10  184F               	xorwf	_op^0,w,c
  1121   000B12  B4D8               	btfsc	status,2,c
  1122   000B14  D1D5               	goto	l3818
  1123   000B16  0E20               	movlw	32
  1124   000B18  184E               	xorwf	_n1c^0,w,c
  1125   000B1A  B4D8               	btfsc	status,2,c
  1126   000B1C  D1D1               	goto	l3818
  1127   000B1E  0E2B               	movlw	43
  1128   000B20  1848               	xorwf	_Tecla^0,w,c
  1129   000B22  A4D8               	btfss	status,2,c
  1130   000B24  D018               	goto	u4390
  1131   000B26  0E2D               	movlw	45
  1132   000B28  1848               	xorwf	_Tecla^0,w,c
  1133   000B2A  A4D8               	btfss	status,2,c
  1134   000B2C  D014               	goto	u4390
  1135   000B2E  0E2F               	movlw	47
  1136   000B30  1848               	xorwf	_Tecla^0,w,c
  1137   000B32  A4D8               	btfss	status,2,c
  1138   000B34  D010               	goto	u4390
  1139   000B36  0E78               	movlw	120
  1140   000B38  1848               	xorwf	_Tecla^0,w,c
  1141   000B3A  A4D8               	btfss	status,2,c
  1142   000B3C  D00C               	goto	u4390
  1143   000B3E  0E3D               	movlw	61
  1144   000B40  1848               	xorwf	_Tecla^0,w,c
  1145   000B42  A4D8               	btfss	status,2,c
  1146   000B44  D008               	goto	u4390
  1147   000B46  0E43               	movlw	67
  1148   000B48  1848               	xorwf	_Tecla^0,w,c
  1149   000B4A  A4D8               	btfss	status,2,c
  1150   000B4C  D004               	goto	u4390
  1151   000B4E  0E5E               	movlw	94
  1152   000B50  1848               	xorwf	_Tecla^0,w,c
  1153   000B52  B4D8               	btfsc	status,2,c
  1154   000B54  D1B5               	goto	l3818
  1155   000B56                     u4390:
  1156                           
  1157                           ;Lab4.c: 134: DireccionaLCD(0x82);
  1158   000B56  0E82               	movlw	130
  1159   000B58  EC15  F00D         	call	_DireccionaLCD
  1160                           
  1161                           ;Lab4.c: 135: EscribeLCD_c(Tecla);
  1162   000B5C  5048               	movf	_Tecla^0,w,c
  1163   000B5E  EC0A  F00D         	call	_EscribeLCD_c
  1164                           
  1165                           ;Lab4.c: 136: n2c=Tecla;
  1166   000B62  C048  F04D         	movff	_Tecla,_n2c
  1167                           
  1168                           ;Lab4.c: 137: n2 = Tecla-'0';
  1169   000B66  0ED0               	movlw	208
  1170   000B68  2448               	addwf	_Tecla^0,w,c
  1171   000B6A  6E42               	movwf	_n2^0,c
  1172   000B6C  6A43               	clrf	(_n2+1)^0,c
  1173   000B6E  0EFF               	movlw	255
  1174   000B70  2243               	addwfc	(_n2+1)^0,f,c
  1175                           
  1176                           ;Lab4.c: 138: };Lab4.c: 139: }else if ((n1c==' '|op==' ') & factorial){
  1177   000B72  D1A6               	goto	l3818
  1178   000B74                     l3676:
  1179   000B74  0E01               	movlw	1
  1180   000B76  6E26               	movwf	_main$157^0,c
  1181   000B78  0E20               	movlw	32
  1182   000B7A  184E               	xorwf	_n1c^0,w,c
  1183   000B7C  B4D8               	btfsc	status,2,c
  1184   000B7E  D006               	goto	l3684
  1185   000B80  0E20               	movlw	32
  1186   000B82  184F               	xorwf	_op^0,w,c
  1187   000B84  B4D8               	btfsc	status,2,c
  1188   000B86  D002               	goto	l3684
  1189   000B88  0E00               	movlw	0
  1190   000B8A  6E26               	movwf	_main$157^0,c
  1191   000B8C                     l3684:
  1192   000B8C  5026               	movf	_main$157^0,w,c
  1193   000B8E  1446               	andwf	_factorial^0,w,c
  1194   000B90  0900               	iorlw	0
  1195   000B92  B4D8               	btfsc	status,2,c
  1196   000B94  D056               	goto	l3732
  1197                           
  1198                           ;Lab4.c: 140: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='^'|Tecla
      +                          =='!') & n1c != ' ' & n2c ==' '){
  1199   000B96  0E20               	movlw	32
  1200   000B98  184F               	xorwf	_op^0,w,c
  1201   000B9A  A4D8               	btfss	status,2,c
  1202   000B9C  D027               	goto	l3708
  1203   000B9E  0E2B               	movlw	43
  1204   000BA0  1848               	xorwf	_Tecla^0,w,c
  1205   000BA2  B4D8               	btfsc	status,2,c
  1206   000BA4  D014               	goto	u4490
  1207   000BA6  0E2D               	movlw	45
  1208   000BA8  1848               	xorwf	_Tecla^0,w,c
  1209   000BAA  B4D8               	btfsc	status,2,c
  1210   000BAC  D010               	goto	u4490
  1211   000BAE  0E2F               	movlw	47
  1212   000BB0  1848               	xorwf	_Tecla^0,w,c
  1213   000BB2  B4D8               	btfsc	status,2,c
  1214   000BB4  D00C               	goto	u4490
  1215   000BB6  0E78               	movlw	120
  1216   000BB8  1848               	xorwf	_Tecla^0,w,c
  1217   000BBA  B4D8               	btfsc	status,2,c
  1218   000BBC  D008               	goto	u4490
  1219   000BBE  0E5E               	movlw	94
  1220   000BC0  1848               	xorwf	_Tecla^0,w,c
  1221   000BC2  B4D8               	btfsc	status,2,c
  1222   000BC4  D004               	goto	u4490
  1223   000BC6  0E21               	movlw	33
  1224   000BC8  1848               	xorwf	_Tecla^0,w,c
  1225   000BCA  A4D8               	btfss	status,2,c
  1226   000BCC  D00F               	goto	l3708
  1227   000BCE                     u4490:
  1228   000BCE  0E20               	movlw	32
  1229   000BD0  184E               	xorwf	_n1c^0,w,c
  1230   000BD2  B4D8               	btfsc	status,2,c
  1231   000BD4  D00B               	goto	l3708
  1232   000BD6  0E20               	movlw	32
  1233   000BD8  184D               	xorwf	_n2c^0,w,c
  1234   000BDA  A4D8               	btfss	status,2,c
  1235   000BDC  D007               	goto	l3708
  1236                           
  1237                           ;Lab4.c: 141: DireccionaLCD(0x81);
  1238   000BDE  0E81               	movlw	129
  1239   000BE0  EC15  F00D         	call	_DireccionaLCD
  1240                           
  1241                           ;Lab4.c: 142: EscribeLCD_c(Tecla);
  1242   000BE4  5048               	movf	_Tecla^0,w,c
  1243   000BE6  EC0A  F00D         	call	_EscribeLCD_c
  1244   000BEA  D75B               	goto	l3626
  1245   000BEC                     l3708:
  1246   000BEC  0E20               	movlw	32
  1247   000BEE  184E               	xorwf	_n1c^0,w,c
  1248   000BF0  A4D8               	btfss	status,2,c
  1249   000BF2  D166               	goto	l3818
  1250   000BF4  0E2B               	movlw	43
  1251   000BF6  1848               	xorwf	_Tecla^0,w,c
  1252   000BF8  A4D8               	btfss	status,2,c
  1253   000BFA  D01C               	goto	u4600
  1254   000BFC  0E2D               	movlw	45
  1255   000BFE  1848               	xorwf	_Tecla^0,w,c
  1256   000C00  A4D8               	btfss	status,2,c
  1257   000C02  D018               	goto	u4600
  1258   000C04  0E2F               	movlw	47
  1259   000C06  1848               	xorwf	_Tecla^0,w,c
  1260   000C08  A4D8               	btfss	status,2,c
  1261   000C0A  D014               	goto	u4600
  1262   000C0C  0E78               	movlw	120
  1263   000C0E  1848               	xorwf	_Tecla^0,w,c
  1264   000C10  A4D8               	btfss	status,2,c
  1265   000C12  D010               	goto	u4600
  1266   000C14  0E3D               	movlw	61
  1267   000C16  1848               	xorwf	_Tecla^0,w,c
  1268   000C18  A4D8               	btfss	status,2,c
  1269   000C1A  D00C               	goto	u4600
  1270   000C1C  0E43               	movlw	67
  1271   000C1E  1848               	xorwf	_Tecla^0,w,c
  1272   000C20  A4D8               	btfss	status,2,c
  1273   000C22  D008               	goto	u4600
  1274   000C24  0E5E               	movlw	94
  1275   000C26  1848               	xorwf	_Tecla^0,w,c
  1276   000C28  A4D8               	btfss	status,2,c
  1277   000C2A  D004               	goto	u4600
  1278   000C2C  0E21               	movlw	33
  1279   000C2E  1848               	xorwf	_Tecla^0,w,c
  1280   000C30  B4D8               	btfsc	status,2,c
  1281   000C32  D146               	goto	l3818
  1282   000C34                     u4600:
  1283                           
  1284                           ;Lab4.c: 145: DireccionaLCD(0x80);
  1285   000C34  0E80               	movlw	128
  1286   000C36  EC15  F00D         	call	_DireccionaLCD
  1287                           
  1288                           ;Lab4.c: 146: EscribeLCD_c(Tecla);
  1289   000C3A  5048               	movf	_Tecla^0,w,c
  1290   000C3C  EC0A  F00D         	call	_EscribeLCD_c
  1291   000C40  D759               	goto	l3646
  1292   000C42                     l3732:
  1293   000C42  0E3D               	movlw	61
  1294   000C44  1848               	xorwf	_Tecla^0,w,c
  1295   000C46  A4D8               	btfss	status,2,c
  1296   000C48  D0F4               	goto	l3800
  1297   000C4A  0E20               	movlw	32
  1298   000C4C  184D               	xorwf	_n2c^0,w,c
  1299   000C4E  B4D8               	btfsc	status,2,c
  1300   000C50  D0F0               	goto	l3800
  1301   000C52  0E20               	movlw	32
  1302   000C54  184F               	xorwf	_op^0,w,c
  1303   000C56  B4D8               	btfsc	status,2,c
  1304   000C58  D0EC               	goto	l3800
  1305   000C5A  0E20               	movlw	32
  1306   000C5C  184E               	xorwf	_n1c^0,w,c
  1307   000C5E  B4D8               	btfsc	status,2,c
  1308   000C60  D0E8               	goto	l3800
  1309   000C62  5046               	movf	_factorial^0,w,c
  1310   000C64  A4D8               	btfss	status,2,c
  1311   000C66  D0E5               	goto	l3800
  1312                           
  1313                           ;Lab4.c: 151: DireccionaLCD(0x83);
  1314   000C68  0E83               	movlw	131
  1315   000C6A  EC15  F00D         	call	_DireccionaLCD
  1316                           
  1317                           ;Lab4.c: 152: EscribeLCD_c('=');
  1318   000C6E  0E3D               	movlw	61
  1319   000C70  EC0A  F00D         	call	_EscribeLCD_c
  1320                           
  1321                           ;Lab4.c: 153: switch(op){
  1322   000C74  D0BF               	goto	l3794
  1323   000C76                     l3744:
  1324                           
  1325                           ;Lab4.c: 155: r = n1 + n2;
  1326   000C76  5042               	movf	_n2^0,w,c
  1327   000C78  2444               	addwf	_n1^0,w,c
  1328   000C7A  6E24               	movwf	??_main^0,c
  1329   000C7C  5043               	movf	(_n2+1)^0,w,c
  1330   000C7E  2045               	addwfc	(_n1+1)^0,w,c
  1331   000C80  6E25               	movwf	(??_main+1)^0,c
  1332   000C82  C024  F02C         	movff	??_main,_r
  1333   000C86  C025  F02D         	movff	??_main+1,_r+1
  1334   000C8A  6A2E               	clrf	(_r+2)^0,c
  1335   000C8C  6A2F               	clrf	(_r+3)^0,c
  1336   000C8E                     l3746:
  1337                           
  1338                           ;Lab4.c: 156: partdecl = r*100;
  1339   000C8E  C02C  F00E         	movff	_r,___lmul@multiplier
  1340   000C92  C02D  F00F         	movff	_r+1,___lmul@multiplier+1
  1341   000C96  C02E  F010         	movff	_r+2,___lmul@multiplier+2
  1342   000C9A  C02F  F011         	movff	_r+3,___lmul@multiplier+3
  1343   000C9E  0E64               	movlw	100
  1344   000CA0  6E12               	movwf	___lmul@multiplicand^0,c
  1345   000CA2  0E00               	movlw	0
  1346   000CA4  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1347   000CA6  0E00               	movlw	0
  1348   000CA8  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1349   000CAA  0E00               	movlw	0
  1350   000CAC  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1351   000CAE  EC43  F00B         	call	___lmul	;wreg free
  1352   000CB2  C00E  F030         	movff	?___lmul,_partdecl
  1353   000CB6  C00F  F031         	movff	?___lmul+1,_partdecl+1
  1354   000CBA  C010  F032         	movff	?___lmul+2,_partdecl+2
  1355   000CBE  C011  F033         	movff	?___lmul+3,_partdecl+3
  1356                           
  1357                           ;Lab4.c: 157: break;
  1358   000CC2  D0A9               	goto	l3796
  1359   000CC4                     l3748:
  1360                           
  1361                           ;Lab4.c: 159: r = n1 - n2;
  1362   000CC4  5042               	movf	_n2^0,w,c
  1363   000CC6  5C44               	subwf	_n1^0,w,c
  1364   000CC8  6E24               	movwf	??_main^0,c
  1365   000CCA  5043               	movf	(_n2+1)^0,w,c
  1366   000CCC  5845               	subwfb	(_n1+1)^0,w,c
  1367   000CCE  D7D8               	goto	L1
  1368   000CD0                     l3752:
  1369                           
  1370                           ;Lab4.c: 163: r = n1*n2;
  1371   000CD0  C044  F00E         	movff	_n1,___wmul@multiplier
  1372   000CD4  C045  F00F         	movff	_n1+1,___wmul@multiplier+1
  1373   000CD8  C042  F010         	movff	_n2,___wmul@multiplicand
  1374   000CDC  C043  F011         	movff	_n2+1,___wmul@multiplicand+1
  1375   000CE0  ECEB  F00C         	call	___wmul	;wreg free
  1376   000CE4  C00E  F02C         	movff	?___wmul,_r
  1377   000CE8  C00F  F02D         	movff	?___wmul+1,_r+1
  1378   000CEC  D7CE               	goto	L2
  1379   000CEE                     l3756:
  1380                           
  1381                           ;Lab4.c: 167: if(n2!=0){
  1382   000CEE  5042               	movf	_n2^0,w,c
  1383   000CF0  1043               	iorwf	(_n2+1)^0,w,c
  1384   000CF2  B4D8               	btfsc	status,2,c
  1385   000CF4  D02F               	goto	l3764
  1386                           
  1387                           ;Lab4.c: 168: if(n1!=0){
  1388   000CF6  5044               	movf	_n1^0,w,c
  1389   000CF8  1045               	iorwf	(_n1+1)^0,w,c
  1390   000CFA  B4D8               	btfsc	status,2,c
  1391   000CFC  D08C               	goto	l3796
  1392                           
  1393                           ;Lab4.c: 169: r = n1/n2;
  1394   000CFE  C044  F014         	movff	_n1,___lwdiv@dividend
  1395   000D02  C045  F015         	movff	_n1+1,___lwdiv@dividend+1
  1396   000D06  C042  F016         	movff	_n2,___lwdiv@divisor
  1397   000D0A  C043  F017         	movff	_n2+1,___lwdiv@divisor+1
  1398   000D0E  ECC4  F00B         	call	___lwdiv	;wreg free
  1399   000D12  C014  F02C         	movff	?___lwdiv,_r
  1400   000D16  C015  F02D         	movff	?___lwdiv+1,_r+1
  1401   000D1A  6A2E               	clrf	(_r+2)^0,c
  1402   000D1C  6A2F               	clrf	(_r+3)^0,c
  1403                           
  1404                           ;Lab4.c: 170: partdecl = (n1*100)/n2;
  1405   000D1E  C044  F00E         	movff	_n1,___wmul@multiplier
  1406   000D22  C045  F00F         	movff	_n1+1,___wmul@multiplier+1
  1407   000D26  0E00               	movlw	0
  1408   000D28  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1409   000D2A  0E64               	movlw	100
  1410   000D2C  6E10               	movwf	___wmul@multiplicand^0,c
  1411   000D2E  ECEB  F00C         	call	___wmul	;wreg free
  1412   000D32  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1413   000D36  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1414   000D3A  C042  F016         	movff	_n2,___lwdiv@divisor
  1415   000D3E  C043  F017         	movff	_n2+1,___lwdiv@divisor+1
  1416   000D42  ECC4  F00B         	call	___lwdiv	;wreg free
  1417   000D46  C014  F030         	movff	?___lwdiv,_partdecl
  1418   000D4A  C015  F031         	movff	?___lwdiv+1,_partdecl+1
  1419   000D4E  6A32               	clrf	(_partdecl+2)^0,c
  1420   000D50  6A33               	clrf	(_partdecl+3)^0,c
  1421   000D52  D061               	goto	l3796
  1422   000D54                     l3764:
  1423                           
  1424                           ;Lab4.c: 173: if(n1 != 0 & n2 == 0) r = 1000;
  1425   000D54  5044               	movf	_n1^0,w,c
  1426   000D56  1045               	iorwf	(_n1+1)^0,w,c
  1427   000D58  B4D8               	btfsc	status,2,c
  1428   000D5A  D006               	goto	l3770
  1429   000D5C  5042               	movf	_n2^0,w,c
  1430   000D5E  1043               	iorwf	(_n2+1)^0,w,c
  1431   000D60  A4D8               	btfss	status,2,c
  1432   000D62  D002               	goto	l3770
  1433   000D64  0EE8               	movlw	232
  1434   000D66  D009               	goto	L3
  1435   000D68                     l3770:
  1436                           
  1437                           ;Lab4.c: 174: else if(n1 == 0 & n2 == 0) r = 1001;
  1438   000D68  5044               	movf	_n1^0,w,c
  1439   000D6A  1045               	iorwf	(_n1+1)^0,w,c
  1440   000D6C  A4D8               	btfss	status,2,c
  1441   000D6E  D78F               	goto	l3746
  1442   000D70  5042               	movf	_n2^0,w,c
  1443   000D72  1043               	iorwf	(_n2+1)^0,w,c
  1444   000D74  A4D8               	btfss	status,2,c
  1445   000D76  D78B               	goto	l3746
  1446   000D78  0EE9               	movlw	233
  1447   000D7A                     L3:
  1448   000D7A  6E2C               	movwf	_r^0,c
  1449   000D7C  0E03               	movlw	3
  1450   000D7E  6E2D               	movwf	(_r+1)^0,c
  1451   000D80  0E00               	movlw	0
  1452   000D82  6E2E               	movwf	(_r+2)^0,c
  1453   000D84  0E00               	movlw	0
  1454   000D86  6E2F               	movwf	(_r+3)^0,c
  1455   000D88  D782               	goto	l3746
  1456   000D8A                     l3778:
  1457                           
  1458                           ;Lab4.c: 179: r=n1;
  1459   000D8A  C044  F02C         	movff	_n1,_r
  1460   000D8E  C045  F02D         	movff	_n1+1,_r+1
  1461   000D92  6A2E               	clrf	(_r+2)^0,c
  1462   000D94  6A2F               	clrf	(_r+3)^0,c
  1463                           
  1464                           ;Lab4.c: 180: for(i=1;i<n2;i++){
  1465   000D96  0E00               	movlw	0
  1466   000D98  6E41               	movwf	(_i+1)^0,c
  1467   000D9A  0E01               	movlw	1
  1468   000D9C  6E40               	movwf	_i^0,c
  1469   000D9E  D01A               	goto	l3786
  1470   000DA0                     l3782:
  1471                           
  1472                           ;Lab4.c: 181: r=r*n1;
  1473   000DA0  C044  F00E         	movff	_n1,___lmul@multiplier
  1474   000DA4  C045  F00F         	movff	_n1+1,___lmul@multiplier+1
  1475   000DA8  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1476   000DAA  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1477   000DAC  C02C  F012         	movff	_r,___lmul@multiplicand
  1478   000DB0  C02D  F013         	movff	_r+1,___lmul@multiplicand+1
  1479   000DB4  C02E  F014         	movff	_r+2,___lmul@multiplicand+2
  1480   000DB8  C02F  F015         	movff	_r+3,___lmul@multiplicand+3
  1481   000DBC  EC43  F00B         	call	___lmul	;wreg free
  1482   000DC0  C00E  F02C         	movff	?___lmul,_r
  1483   000DC4  C00F  F02D         	movff	?___lmul+1,_r+1
  1484   000DC8  C010  F02E         	movff	?___lmul+2,_r+2
  1485   000DCC  C011  F02F         	movff	?___lmul+3,_r+3
  1486   000DD0  4A40               	infsnz	_i^0,f,c
  1487   000DD2  2A41               	incf	(_i+1)^0,f,c
  1488   000DD4                     l3786:
  1489   000DD4  5042               	movf	_n2^0,w,c
  1490   000DD6  5C40               	subwf	_i^0,w,c
  1491   000DD8  5043               	movf	(_n2+1)^0,w,c
  1492   000DDA  5841               	subwfb	(_i+1)^0,w,c
  1493   000DDC  B0D8               	btfsc	status,0,c
  1494   000DDE  D757               	goto	l3746
  1495   000DE0  D7DF               	goto	l3782
  1496   000DE2                     l3790:
  1497                           
  1498                           ;Lab4.c: 186: r = 0;
  1499   000DE2  0E00               	movlw	0
  1500   000DE4  6E2C               	movwf	_r^0,c
  1501   000DE6  0E00               	movlw	0
  1502   000DE8  6E2D               	movwf	(_r+1)^0,c
  1503   000DEA  0E00               	movlw	0
  1504   000DEC  6E2E               	movwf	(_r+2)^0,c
  1505   000DEE  0E00               	movlw	0
  1506   000DF0  6E2F               	movwf	(_r+3)^0,c
  1507                           
  1508                           ;Lab4.c: 187: break;
  1509   000DF2  D011               	goto	l3796
  1510   000DF4                     l3794:
  1511   000DF4  504F               	movf	_op^0,w,c
  1512                           
  1513                           ; Switch size 1, requested type "simple"
  1514                           ; Number of cases is 5, Range of values is 43 to 120
  1515                           ; switch strategies available:
  1516                           ; Name         Instructions Cycles
  1517                           ; simple_byte           16     9 (average)
  1518                           ;	Chosen strategy is simple_byte
  1519   000DF6  0A2B               	xorlw	43	; case 43
  1520   000DF8  B4D8               	btfsc	status,2,c
  1521   000DFA  D73D               	goto	l3744
  1522   000DFC  0A06               	xorlw	6	; case 45
  1523   000DFE  B4D8               	btfsc	status,2,c
  1524   000E00  D761               	goto	l3748
  1525   000E02  0A02               	xorlw	2	; case 47
  1526   000E04  B4D8               	btfsc	status,2,c
  1527   000E06  D773               	goto	l3756
  1528   000E08  0A71               	xorlw	113	; case 94
  1529   000E0A  B4D8               	btfsc	status,2,c
  1530   000E0C  D7BE               	goto	l3778
  1531   000E0E  0A26               	xorlw	38	; case 120
  1532   000E10  B4D8               	btfsc	status,2,c
  1533   000E12  D75E               	goto	l3752
  1534   000E14  D7E6               	goto	l3790
  1535   000E16                     l3796:
  1536                           
  1537                           ;Lab4.c: 189: DireccionaLCD(0x84);
  1538   000E16  0E84               	movlw	132
  1539   000E18  EC15  F00D         	call	_DireccionaLCD
  1540   000E1C                     l3798:
  1541                           
  1542                           ;Lab4.c: 190: Imprimir_Resultado(r);
  1543   000E1C  C02C  F01C         	movff	_r,Imprimir_Resultado@r
  1544   000E20  C02D  F01D         	movff	_r+1,Imprimir_Resultado@r+1
  1545   000E24  C02E  F01E         	movff	_r+2,Imprimir_Resultado@r+2
  1546   000E28  C02F  F01F         	movff	_r+3,Imprimir_Resultado@r+3
  1547   000E2C  EC69  F007         	call	_Imprimir_Resultado	;wreg free
  1548                           
  1549                           ;Lab4.c: 191: }else if((Tecla=='=' & op=='!' & n1c != ' ') & factorial) {
  1550   000E30  D047               	goto	l3818
  1551   000E32                     l3800:
  1552   000E32  0E00               	movlw	0
  1553   000E34  6E27               	movwf	_main$158^0,c
  1554   000E36  0E3D               	movlw	61
  1555   000E38  1848               	xorwf	_Tecla^0,w,c
  1556   000E3A  A4D8               	btfss	status,2,c
  1557   000E3C  D00A               	goto	l3810
  1558   000E3E  0E21               	movlw	33
  1559   000E40  184F               	xorwf	_op^0,w,c
  1560   000E42  A4D8               	btfss	status,2,c
  1561   000E44  D006               	goto	l3810
  1562   000E46  0E20               	movlw	32
  1563   000E48  184E               	xorwf	_n1c^0,w,c
  1564   000E4A  B4D8               	btfsc	status,2,c
  1565   000E4C  D002               	goto	l3810
  1566   000E4E  0E01               	movlw	1
  1567   000E50  6E27               	movwf	_main$158^0,c
  1568   000E52                     l3810:
  1569   000E52  5027               	movf	_main$158^0,w,c
  1570   000E54  1446               	andwf	_factorial^0,w,c
  1571   000E56  0900               	iorlw	0
  1572   000E58  B4D8               	btfsc	status,2,c
  1573   000E5A  D02F               	goto	l3816
  1574                           
  1575                           ;Lab4.c: 192: DireccionaLCD(0x82);
  1576   000E5C  0E82               	movlw	130
  1577   000E5E  EC15  F00D         	call	_DireccionaLCD
  1578                           
  1579                           ;Lab4.c: 193: EscribeLCD_c('=');
  1580   000E62  0E3D               	movlw	61
  1581   000E64  EC0A  F00D         	call	_EscribeLCD_c
  1582                           
  1583                           ;Lab4.c: 194: r=factorial_function(n1);
  1584   000E68  C044  F01A         	movff	_n1,factorial_function@a
  1585   000E6C  C045  F01B         	movff	_n1+1,factorial_function@a+1
  1586   000E70  EC07  F00B         	call	_factorial_function	;wreg free
  1587   000E74  C01A  F02C         	movff	?_factorial_function,_r
  1588   000E78  C01B  F02D         	movff	?_factorial_function+1,_r+1
  1589   000E7C  C01C  F02E         	movff	?_factorial_function+2,_r+2
  1590   000E80  C01D  F02F         	movff	?_factorial_function+3,_r+3
  1591                           
  1592                           ;Lab4.c: 195: partdecl = r*100;
  1593   000E84  C02C  F00E         	movff	_r,___lmul@multiplier
  1594   000E88  C02D  F00F         	movff	_r+1,___lmul@multiplier+1
  1595   000E8C  C02E  F010         	movff	_r+2,___lmul@multiplier+2
  1596   000E90  C02F  F011         	movff	_r+3,___lmul@multiplier+3
  1597   000E94  0E64               	movlw	100
  1598   000E96  6E12               	movwf	___lmul@multiplicand^0,c
  1599   000E98  0E00               	movlw	0
  1600   000E9A  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1601   000E9C  0E00               	movlw	0
  1602   000E9E  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1603   000EA0  0E00               	movlw	0
  1604   000EA2  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1605   000EA4  EC43  F00B         	call	___lmul	;wreg free
  1606   000EA8  C00E  F030         	movff	?___lmul,_partdecl
  1607   000EAC  C00F  F031         	movff	?___lmul+1,_partdecl+1
  1608   000EB0  C010  F032         	movff	?___lmul+2,_partdecl+2
  1609   000EB4  C011  F033         	movff	?___lmul+3,_partdecl+3
  1610   000EB8  D7B1               	goto	l3798
  1611   000EBA                     l3816:
  1612                           
  1613                           ;Lab4.c: 198: EscribeLCD_c('W');
  1614   000EBA  0E57               	movlw	87
  1615   000EBC  EC0A  F00D         	call	_EscribeLCD_c
  1616   000EC0                     l3818:
  1617                           
  1618                           ;Lab4.c: 199: };Lab4.c: 200: _delay((unsigned long)((700)*(1000000/4000.0)));
  1619   000EC0  0EE4               	movlw	228
  1620   000EC2  6E24               	movwf	??_main^0,c
  1621   000EC4  0E44               	movlw	68
  1622   000EC6                     u4797:
  1623   000EC6  2EE8               	decfsz	wreg,f,c
  1624   000EC8  D7FE               	bra	u4797
  1625   000ECA  2E24               	decfsz	??_main^0,f,c
  1626   000ECC  D7FC               	bra	u4797
  1627   000ECE  D000               	nop2	
  1628   000ED0  D512               	goto	l3514
  1629   000ED2                     __end_of_main:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function _factorial_function *****************
  1633 ;; Defined at:
  1634 ;;		line 277 in file "Lab4.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  a               2   25[COMRAM] int 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  fact            4   29[COMRAM] long 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  4   25[COMRAM] unsigned long 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1648 ;;      Params:         4       0       0       0       0       0       0       0       0
  1649 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1651 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1652 ;;Total ram usage:        8 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; Hardware stack levels required when called: 6
  1655 ;; This function calls:
  1656 ;;		___lmul
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text1
  1663   00160E                     __ptext1:
  1664                           	callstack 0
  1665   00160E                     _factorial_function:
  1666                           	callstack 24
  1667                           
  1668                           ;Lab4.c: 278: long fact = 1;
  1669                           
  1670                           ;incstack = 0
  1671   00160E  0E01               	movlw	1
  1672   001610  6E1E               	movwf	factorial_function@fact^0,c
  1673   001612  0E00               	movlw	0
  1674   001614  6E1F               	movwf	(factorial_function@fact+1)^0,c
  1675   001616  0E00               	movlw	0
  1676   001618  6E20               	movwf	(factorial_function@fact+2)^0,c
  1677   00161A  0E00               	movlw	0
  1678   00161C  6E21               	movwf	(factorial_function@fact+3)^0,c
  1679                           
  1680                           ;Lab4.c: 279: for (b = a; b > 1; b--){
  1681   00161E  C01A  F034         	movff	factorial_function@a,_b
  1682   001622  C01B  F035         	movff	factorial_function@a+1,_b+1
  1683   001626  D01E               	goto	l3478
  1684   001628                     l3474:
  1685                           
  1686                           ;Lab4.c: 280: fact = fact * b;
  1687   001628  C034  F00E         	movff	_b,___lmul@multiplier
  1688   00162C  C035  F00F         	movff	_b+1,___lmul@multiplier+1
  1689   001630  0E00               	movlw	0
  1690   001632  BE0F               	btfsc	(___lmul@multiplier+1)^0,7,c
  1691   001634  0EFF               	movlw	-1
  1692   001636  6E10               	movwf	(___lmul@multiplier+2)^0,c
  1693   001638  6E11               	movwf	(___lmul@multiplier+3)^0,c
  1694   00163A  C01E  F012         	movff	factorial_function@fact,___lmul@multiplicand
  1695   00163E  C01F  F013         	movff	factorial_function@fact+1,___lmul@multiplicand+1
  1696   001642  C020  F014         	movff	factorial_function@fact+2,___lmul@multiplicand+2
  1697   001646  C021  F015         	movff	factorial_function@fact+3,___lmul@multiplicand+3
  1698   00164A  EC43  F00B         	call	___lmul	;wreg free
  1699   00164E  C00E  F01E         	movff	?___lmul,factorial_function@fact
  1700   001652  C00F  F01F         	movff	?___lmul+1,factorial_function@fact+1
  1701   001656  C010  F020         	movff	?___lmul+2,factorial_function@fact+2
  1702   00165A  C011  F021         	movff	?___lmul+3,factorial_function@fact+3
  1703   00165E  0634               	decf	_b^0,f,c
  1704   001660  A0D8               	btfss	status,0,c
  1705   001662  0635               	decf	(_b+1)^0,f,c
  1706   001664                     l3478:
  1707   001664  BE35               	btfsc	(_b+1)^0,7,c
  1708   001666  D006               	goto	u3930
  1709   001668  5035               	movf	(_b+1)^0,w,c
  1710   00166A  E1DE               	bnz	l3474
  1711   00166C  0E02               	movlw	2
  1712   00166E  5C34               	subwf	_b^0,w,c
  1713   001670  B0D8               	btfsc	status,0,c
  1714   001672  D7DA               	goto	l3474
  1715   001674                     u3930:
  1716                           
  1717                           ;Lab4.c: 281: };Lab4.c: 283: return fact;
  1718   001674  C01E  F01A         	movff	factorial_function@fact,?_factorial_function
  1719   001678  C01F  F01B         	movff	factorial_function@fact+1,?_factorial_function+1
  1720   00167C  C020  F01C         	movff	factorial_function@fact+2,?_factorial_function+2
  1721   001680  C021  F01D         	movff	factorial_function@fact+3,?_factorial_function+3
  1722   001684  0012               	return		;funcret
  1723   001686                     __end_of_factorial_function:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _LeerTeclado *****************
  1727 ;; Defined at:
  1728 ;;		line 206 in file "Lab4.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      unsigned char 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1742 ;;      Params:         0       0       0       0       0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 5
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text2
  1757   0012F0                     __ptext2:
  1758                           	callstack 0
  1759   0012F0                     _LeerTeclado:
  1760                           	callstack 25
  1761                           
  1762                           ;Lab4.c: 207: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1763                           
  1764                           ;incstack = 0
  1765   0012F0  B881               	btfsc	3969,4,c	;volatile
  1766   0012F2  AA81               	btfss	3969,5,c	;volatile
  1767   0012F4  D004               	goto	u2100
  1768   0012F6  AC81               	btfss	3969,6,c	;volatile
  1769   0012F8  D002               	goto	u2100
  1770   0012FA  BE81               	btfsc	3969,7,c	;volatile
  1771   0012FC  D7F9               	goto	__ptext2
  1772   0012FE                     u2100:
  1773                           
  1774                           ;Lab4.c: 208: verificador = 1;
  1775   0012FE  0E00               	movlw	0
  1776   001300  6E39               	movwf	(_verificador+1)^0,c
  1777   001302  0E01               	movlw	1
  1778   001304  6E38               	movwf	_verificador^0,c
  1779                           
  1780                           ;Lab4.c: 209: LATB=0b11111110;
  1781   001306  0EFE               	movlw	254
  1782   001308  6E8A               	movwf	138,c	;volatile
  1783                           
  1784                           ;Lab4.c: 210: if(RB4==0){
  1785   00130A  B881               	btfsc	3969,4,c	;volatile
  1786   00130C  D00A               	goto	l256
  1787                           
  1788                           ;Lab4.c: 211: if(!potencia) return '+';
  1789   00130E  5047               	movf	_potencia^0,w,c
  1790   001310  A4D8               	btfss	status,2,c
  1791   001312  D002               	goto	l2450
  1792   001314  0E2B               	movlw	43
  1793   001316  0012               	return	
  1794   001318                     l2450:
  1795                           
  1796                           ;Lab4.c: 212: else if(potencia) return '^';
  1797   001318  5047               	movf	_potencia^0,w,c
  1798   00131A  B4D8               	btfsc	status,2,c
  1799   00131C  D04C               	goto	l288
  1800   00131E  0E5E               	movlw	94
  1801   001320  0012               	return	
  1802   001322                     l256:
  1803                           
  1804                           ;Lab4.c: 214: else if(RB5==0) return '=';
  1805   001322  BA81               	btfsc	3969,5,c	;volatile
  1806   001324  D002               	goto	l262
  1807   001326  0E3D               	movlw	61
  1808   001328  0012               	return	
  1809   00132A                     l262:
  1810                           
  1811                           ;Lab4.c: 215: else if(RB6==0) return '0';
  1812   00132A  BC81               	btfsc	3969,6,c	;volatile
  1813   00132C  D002               	goto	l264
  1814   00132E  0E30               	movlw	48
  1815   001330  0012               	return	
  1816   001332                     l264:
  1817                           
  1818                           ;Lab4.c: 216: else if(RB7==0) return 'C';
  1819   001332  BE81               	btfsc	3969,7,c	;volatile
  1820   001334  D002               	goto	l2474
  1821   001336  0E43               	movlw	67
  1822   001338  0012               	return	
  1823   00133A                     l2474:
  1824                           
  1825                           ;Lab4.c: 217: else{;Lab4.c: 218: LATB=0b11111101;
  1826   00133A  0EFD               	movlw	253
  1827   00133C  6E8A               	movwf	138,c	;volatile
  1828                           
  1829                           ;Lab4.c: 219: if(RB4==0){
  1830   00133E  B881               	btfsc	3969,4,c	;volatile
  1831   001340  D00A               	goto	l268
  1832                           
  1833                           ;Lab4.c: 220: if(!factorial) return '-';
  1834   001342  5046               	movf	_factorial^0,w,c
  1835   001344  A4D8               	btfss	status,2,c
  1836   001346  D002               	goto	l2486
  1837   001348  0E2D               	movlw	45
  1838   00134A  0012               	return	
  1839   00134C                     l2486:
  1840                           
  1841                           ;Lab4.c: 221: else if(factorial) return '!';
  1842   00134C  5046               	movf	_factorial^0,w,c
  1843   00134E  B4D8               	btfsc	status,2,c
  1844   001350  D032               	goto	l288
  1845   001352  0E21               	movlw	33
  1846   001354  0012               	return	
  1847   001356                     l268:
  1848                           
  1849                           ;Lab4.c: 223: else if(RB5==0) return '9';
  1850   001356  BA81               	btfsc	3969,5,c	;volatile
  1851   001358  D002               	goto	l273
  1852   00135A  0E39               	movlw	57
  1853   00135C  0012               	return	
  1854   00135E                     l273:
  1855                           
  1856                           ;Lab4.c: 224: else if(RB6==0) return '8';
  1857   00135E  BC81               	btfsc	3969,6,c	;volatile
  1858   001360  D002               	goto	l275
  1859   001362  0E38               	movlw	56
  1860   001364  0012               	return	
  1861   001366                     l275:
  1862                           
  1863                           ;Lab4.c: 225: else if(RB7==0) return '7';
  1864   001366  BE81               	btfsc	3969,7,c	;volatile
  1865   001368  D002               	goto	l2510
  1866   00136A  0E37               	movlw	55
  1867   00136C  0012               	return	
  1868   00136E                     l2510:
  1869                           
  1870                           ;Lab4.c: 226: else{;Lab4.c: 227: LATB=0b11111011;
  1871   00136E  0EFB               	movlw	251
  1872   001370  6E8A               	movwf	138,c	;volatile
  1873                           
  1874                           ;Lab4.c: 228: if(RB4==0) return 'x';
  1875   001372  B881               	btfsc	3969,4,c	;volatile
  1876   001374  D002               	goto	l279
  1877   001376  0E78               	movlw	120
  1878   001378  0012               	return	
  1879   00137A                     l279:
  1880                           
  1881                           ;Lab4.c: 229: else if(RB5==0) return '6';
  1882   00137A  BA81               	btfsc	3969,5,c	;volatile
  1883   00137C  D002               	goto	l281
  1884   00137E  0E36               	movlw	54
  1885   001380  0012               	return	
  1886   001382                     l281:
  1887                           
  1888                           ;Lab4.c: 230: else if(RB6==0) return '5';
  1889   001382  BC81               	btfsc	3969,6,c	;volatile
  1890   001384  D002               	goto	l283
  1891   001386  0E35               	movlw	53
  1892   001388  0012               	return	
  1893   00138A                     l283:
  1894                           
  1895                           ;Lab4.c: 231: else if(RB7==0) return '4';
  1896   00138A  BE81               	btfsc	3969,7,c	;volatile
  1897   00138C  D002               	goto	l2538
  1898   00138E  0E34               	movlw	52
  1899   001390  0012               	return	
  1900   001392                     l2538:
  1901                           
  1902                           ;Lab4.c: 232: else{;Lab4.c: 233: LATB=0b11110111;
  1903   001392  0EF7               	movlw	247
  1904   001394  6E8A               	movwf	138,c	;volatile
  1905                           
  1906                           ;Lab4.c: 234: if(RB4==0) return '/';
  1907   001396  B881               	btfsc	3969,4,c	;volatile
  1908   001398  D002               	goto	l287
  1909   00139A  0E2F               	movlw	47
  1910   00139C  0012               	return	
  1911   00139E                     l287:
  1912                           
  1913                           ;Lab4.c: 235: else if(RB5==0) return '3';
  1914   00139E  BA81               	btfsc	3969,5,c	;volatile
  1915   0013A0  D002               	goto	l289
  1916   0013A2  0E33               	movlw	51
  1917   0013A4  0012               	return	
  1918   0013A6                     l289:
  1919                           
  1920                           ;Lab4.c: 236: else if(RB6==0) return '2';
  1921   0013A6  BC81               	btfsc	3969,6,c	;volatile
  1922   0013A8  D002               	goto	l291
  1923   0013AA  0E32               	movlw	50
  1924   0013AC  0012               	return	
  1925   0013AE                     l291:
  1926                           
  1927                           ;Lab4.c: 237: else if(RB7==0) return '1';
  1928   0013AE  BE81               	btfsc	3969,7,c	;volatile
  1929   0013B0  D002               	goto	l288
  1930   0013B2  0E31               	movlw	49
  1931   0013B4  0012               	return	
  1932   0013B6                     l288:
  1933                           
  1934                           ;Lab4.c: 238: };Lab4.c: 239: };Lab4.c: 240: };Lab4.c: 241: return '?';
  1935   0013B6  0E3F               	movlw	63
  1936   0013B8  0012               	return		;funcret
  1937   0013BA                     __end_of_LeerTeclado:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function _InicializaLCD *****************
  1941 ;; Defined at:
  1942 ;;		line 62 in file "LibLCDXC8.h"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 8
  1963 ;; This function calls:
  1964 ;;		_BorraLCD
  1965 ;;		_EnviaDato
  1966 ;;		_HabilitaLCD
  1967 ;;		_RetardoLCD
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text3
  1974   001466                     __ptext3:
  1975                           	callstack 0
  1976   001466                     _InicializaLCD:
  1977                           	callstack 22
  1978                           
  1979                           ;LibLCDXC8.h: 64: LATE0=0;
  1980                           
  1981                           ;incstack = 0
  1982   001466  908D               	bcf	3981,0,c	;volatile
  1983                           
  1984                           ;LibLCDXC8.h: 65: if(interfaz==4)
  1985   001468  0E04               	movlw	4
  1986   00146A  1850               	xorwf	_interfaz^0,w,c
  1987   00146C  A4D8               	btfss	status,2,c
  1988   00146E  D004               	goto	l3322
  1989                           
  1990                           ;LibLCDXC8.h: 66: LATD=(LATD & 0b00001111) | 0x30;
  1991   001470  508C               	movf	140,w,c	;volatile
  1992   001472  0B0F               	andlw	15
  1993   001474  0930               	iorlw	48
  1994   001476  D001               	goto	L4
  1995   001478                     l3322:
  1996                           
  1997                           ;LibLCDXC8.h: 67: else;LibLCDXC8.h: 68: LATD=0x3F;
  1998   001478  0E3F               	movlw	63
  1999   00147A                     L4:
  2000   00147A  6E8C               	movwf	140,c	;volatile
  2001                           
  2002                           ;LibLCDXC8.h: 69: HabilitaLCD();
  2003   00147C  EC4A  F00D         	call	_HabilitaLCD	;wreg free
  2004                           
  2005                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  2006   001480  0E01               	movlw	1
  2007   001482  EC6E  F00B         	call	_RetardoLCD
  2008                           
  2009                           ;LibLCDXC8.h: 71: if(interfaz==4)
  2010   001486  0E04               	movlw	4
  2011   001488  1850               	xorwf	_interfaz^0,w,c
  2012   00148A  A4D8               	btfss	status,2,c
  2013   00148C  D004               	goto	l3332
  2014                           
  2015                           ;LibLCDXC8.h: 72: LATD=(LATD & 0b00001111) | 0x30;
  2016   00148E  508C               	movf	140,w,c	;volatile
  2017   001490  0B0F               	andlw	15
  2018   001492  0930               	iorlw	48
  2019   001494  D001               	goto	L5
  2020   001496                     l3332:
  2021                           
  2022                           ;LibLCDXC8.h: 73: else;LibLCDXC8.h: 74: LATD=0x3F;
  2023   001496  0E3F               	movlw	63
  2024   001498                     L5:
  2025   001498  6E8C               	movwf	140,c	;volatile
  2026                           
  2027                           ;LibLCDXC8.h: 75: HabilitaLCD();
  2028   00149A  EC4A  F00D         	call	_HabilitaLCD	;wreg free
  2029                           
  2030                           ;LibLCDXC8.h: 76: RetardoLCD(3);
  2031   00149E  0E03               	movlw	3
  2032   0014A0  EC6E  F00B         	call	_RetardoLCD
  2033                           
  2034                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2035   0014A4  0E04               	movlw	4
  2036   0014A6  1850               	xorwf	_interfaz^0,w,c
  2037   0014A8  A4D8               	btfss	status,2,c
  2038   0014AA  D004               	goto	l3342
  2039                           
  2040                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2041   0014AC  508C               	movf	140,w,c	;volatile
  2042   0014AE  0B0F               	andlw	15
  2043   0014B0  0930               	iorlw	48
  2044   0014B2  D001               	goto	L6
  2045   0014B4                     l3342:
  2046                           
  2047                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2048   0014B4  0E3F               	movlw	63
  2049   0014B6                     L6:
  2050   0014B6  6E8C               	movwf	140,c	;volatile
  2051                           
  2052                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2053   0014B8  EC4A  F00D         	call	_HabilitaLCD	;wreg free
  2054                           
  2055                           ;LibLCDXC8.h: 82: RetardoLCD(4);
  2056   0014BC  0E04               	movlw	4
  2057   0014BE  EC6E  F00B         	call	_RetardoLCD
  2058                           
  2059                           ;LibLCDXC8.h: 83: if(interfaz==4){
  2060   0014C2  0E04               	movlw	4
  2061   0014C4  1850               	xorwf	_interfaz^0,w,c
  2062   0014C6  A4D8               	btfss	status,2,c
  2063   0014C8  D011               	goto	l3362
  2064                           
  2065                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x20;
  2066   0014CA  508C               	movf	140,w,c	;volatile
  2067   0014CC  0B0F               	andlw	15
  2068   0014CE  0920               	iorlw	32
  2069   0014D0  6E8C               	movwf	140,c	;volatile
  2070                           
  2071                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2072   0014D2  EC4A  F00D         	call	_HabilitaLCD	;wreg free
  2073                           
  2074                           ;LibLCDXC8.h: 86: RetardoLCD(4);
  2075   0014D6  0E04               	movlw	4
  2076   0014D8  EC6E  F00B         	call	_RetardoLCD
  2077                           
  2078                           ;LibLCDXC8.h: 87: EnviaDato(0x2F);
  2079   0014DC  0E2F               	movlw	47
  2080   0014DE  EC3F  F00C         	call	_EnviaDato
  2081                           
  2082                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2083   0014E2  EC4A  F00D         	call	_HabilitaLCD	;wreg free
  2084                           
  2085                           ;LibLCDXC8.h: 89: RetardoLCD(4);
  2086   0014E6  0E04               	movlw	4
  2087   0014E8  EC6E  F00B         	call	_RetardoLCD
  2088   0014EC                     l3362:
  2089                           
  2090                           ;LibLCDXC8.h: 90: };LibLCDXC8.h: 91: BorraLCD();
  2091   0014EC  EC36  F00D         	call	_BorraLCD	;wreg free
  2092                           
  2093                           ;LibLCDXC8.h: 92: EnviaDato(0xF);
  2094   0014F0  0E0F               	movlw	15
  2095   0014F2  EC3F  F00C         	call	_EnviaDato
  2096                           
  2097                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2098   0014F6  EC4A  F00D         	call	_HabilitaLCD	;wreg free
  2099                           
  2100                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2101   0014FA  0E04               	movlw	4
  2102   0014FC  EC6E  F00B         	call	_RetardoLCD
  2103   001500  0012               	return		;funcret
  2104   001502                     __end_of_InicializaLCD:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _BorraLCD *****************
  2108 ;; Defined at:
  2109 ;;		line 103 in file "LibLCDXC8.h"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2126 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 7
  2130 ;; This function calls:
  2131 ;;		_EnviaDato
  2132 ;;		_HabilitaLCD
  2133 ;;		_RetardoLCD
  2134 ;; This function is called by:
  2135 ;;		_InicializaLCD
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text4
  2141   001A6C                     __ptext4:
  2142                           	callstack 0
  2143   001A6C                     _BorraLCD:
  2144                           	callstack 22
  2145                           
  2146                           ;LibLCDXC8.h: 105: LATE0=0;
  2147                           
  2148                           ;incstack = 0
  2149   001A6C  908D               	bcf	3981,0,c	;volatile
  2150                           
  2151                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  2152   001A6E  0E01               	movlw	1
  2153   001A70  EC3F  F00C         	call	_EnviaDato
  2154                           
  2155                           ;LibLCDXC8.h: 107: HabilitaLCD();
  2156   001A74  EC4A  F00D         	call	_HabilitaLCD	;wreg free
  2157                           
  2158                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  2159   001A78  0E02               	movlw	2
  2160   001A7A  EC6E  F00B         	call	_RetardoLCD
  2161   001A7E  0012               	return		;funcret
  2162   001A80                     __end_of_BorraLCD:
  2163                           	callstack 0
  2164                           
  2165 ;; *************** function _Imprimir_Resultado *****************
  2166 ;; Defined at:
  2167 ;;		line 308 in file "Lab4.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  r               4   27[COMRAM] long 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  k               2    1[BANK0 ] int 
  2172 ;;  j               2    5[BANK0 ] int 
  2173 ;;  i               2    3[BANK0 ] int 
  2174 ;;  potencia        4    7[BANK0 ] long 
  2175 ;;  flag            1    0[BANK0 ] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2185 ;;      Params:         4       0       0       0       0       0       0       0       0
  2186 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2187 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2188 ;;      Totals:         8      11       0       0       0       0       0       0       0
  2189 ;;Total ram usage:       19 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; Hardware stack levels required when called: 9
  2192 ;; This function calls:
  2193 ;;		_DireccionaLCD
  2194 ;;		_EscribeLCD_c
  2195 ;;		_MensajeLCD_Var
  2196 ;;		___aldiv
  2197 ;;		___almod
  2198 ;;		___lmul
  2199 ;;		___lwdiv
  2200 ;;		___lwmod
  2201 ;;		___wmul
  2202 ;; This function is called by:
  2203 ;;		_main
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text5
  2208   000ED2                     __ptext5:
  2209                           	callstack 0
  2210   000ED2                     _Imprimir_Resultado:
  2211                           	callstack 21
  2212                           
  2213                           ;Lab4.c: 310: bool flag=0;
  2214                           
  2215                           ;incstack = 0
  2216   000ED2  0E00               	movlw	0
  2217   000ED4  0100               	movlb	0	; () banked
  2218   000ED6  6F60               	movwf	Imprimir_Resultado@flag& (0+255),b
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;Lab4.c: 311: if ((partdecl-(r*100))>0 | (partdecl-(r*100))<0){
  2222   000ED8  C01C  F00E         	movff	Imprimir_Resultado@r,___lmul@multiplier
  2223   000EDC  C01D  F00F         	movff	Imprimir_Resultado@r+1,___lmul@multiplier+1
  2224   000EE0  C01E  F010         	movff	Imprimir_Resultado@r+2,___lmul@multiplier+2
  2225   000EE4  C01F  F011         	movff	Imprimir_Resultado@r+3,___lmul@multiplier+3
  2226   000EE8  0E9C               	movlw	156
  2227   000EEA  6E12               	movwf	___lmul@multiplicand^0,c
  2228   000EEC  0EFF               	movlw	255
  2229   000EEE  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2230   000EF0  0EFF               	movlw	255
  2231   000EF2  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2232   000EF4  0EFF               	movlw	255
  2233   000EF6  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2234   000EF8  EC43  F00B         	call	___lmul	;wreg free
  2235   000EFC  5030               	movf	_partdecl^0,w,c
  2236   000EFE  240E               	addwf	?___lmul^0,w,c
  2237   000F00  6E20               	movwf	??_Imprimir_Resultado^0,c
  2238   000F02  5031               	movf	(_partdecl+1)^0,w,c
  2239   000F04  200F               	addwfc	(?___lmul+1)^0,w,c
  2240   000F06  6E21               	movwf	(??_Imprimir_Resultado+1)^0,c
  2241   000F08  5032               	movf	(_partdecl+2)^0,w,c
  2242   000F0A  2010               	addwfc	(?___lmul+2)^0,w,c
  2243   000F0C  6E22               	movwf	(??_Imprimir_Resultado+2)^0,c
  2244   000F0E  5033               	movf	(_partdecl+3)^0,w,c
  2245   000F10  2011               	addwfc	(?___lmul+3)^0,w,c
  2246   000F12  6E23               	movwf	(??_Imprimir_Resultado+3)^0,c
  2247   000F14  5020               	movf	??_Imprimir_Resultado^0,w,c
  2248   000F16  1021               	iorwf	(??_Imprimir_Resultado+1)^0,w,c
  2249   000F18  1022               	iorwf	(??_Imprimir_Resultado+2)^0,w,c
  2250   000F1A  1023               	iorwf	(??_Imprimir_Resultado+3)^0,w,c
  2251   000F1C  B4D8               	btfsc	status,2,c
  2252   000F1E  D058               	goto	l3398
  2253                           
  2254                           ;Lab4.c: 312: for (int i = 0; i < 3; i++) {
  2255   000F20  0E00               	movlw	0
  2256   000F22  0100               	movlb	0	; () banked
  2257   000F24  6F64               	movwf	(Imprimir_Resultado@i+1)& (0+255),b
  2258   000F26  0E00               	movlw	0
  2259   000F28  6F63               	movwf	Imprimir_Resultado@i& (0+255),b
  2260   000F2A                     l3382:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;Lab4.c: 313: r = n1 / n2;
  2264   000F2A  C044  F014         	movff	_n1,___lwdiv@dividend
  2265   000F2E  C045  F015         	movff	_n1+1,___lwdiv@dividend+1
  2266   000F32  C042  F016         	movff	_n2,___lwdiv@divisor
  2267   000F36  C043  F017         	movff	_n2+1,___lwdiv@divisor+1
  2268   000F3A  ECC4  F00B         	call	___lwdiv	;wreg free
  2269   000F3E  C014  F01C         	movff	?___lwdiv,Imprimir_Resultado@r
  2270   000F42  C015  F01D         	movff	?___lwdiv+1,Imprimir_Resultado@r+1
  2271   000F46  6A1E               	clrf	(Imprimir_Resultado@r+2)^0,c
  2272   000F48  6A1F               	clrf	(Imprimir_Resultado@r+3)^0,c
  2273                           
  2274                           ;Lab4.c: 314: m = n1 % n2;
  2275   000F4A  C044  F00E         	movff	_n1,___lwmod@dividend
  2276   000F4E  C045  F00F         	movff	_n1+1,___lwmod@dividend+1
  2277   000F52  C042  F010         	movff	_n2,___lwmod@divisor
  2278   000F56  C043  F011         	movff	_n2+1,___lwmod@divisor+1
  2279   000F5A  EC85  F00C         	call	___lwmod	;wreg free
  2280   000F5E  C00E  F049         	movff	?___lwmod,_m
  2281   000F62  C00F  F04A         	movff	?___lwmod+1,_m+1
  2282   000F66  6A4B               	clrf	(_m+2)^0,c
  2283   000F68  6A4C               	clrf	(_m+3)^0,c
  2284                           
  2285                           ;Lab4.c: 315: EscribeLCD_c(r+'0');
  2286   000F6A  501C               	movf	Imprimir_Resultado@r^0,w,c
  2287   000F6C  0F30               	addlw	48
  2288   000F6E  EC0A  F00D         	call	_EscribeLCD_c
  2289                           
  2290                           ;Lab4.c: 316: if(i == 0 && m != 0) {
  2291   000F72  0100               	movlb	0	; () banked
  2292   000F74  5163               	movf	Imprimir_Resultado@i& (0+255),w,b
  2293   000F76  1164               	iorwf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2294   000F78  A4D8               	btfss	status,2,c
  2295   000F7A  D009               	goto	l3390
  2296                           
  2297                           ; BSR set to: 0
  2298   000F7C  5049               	movf	_m^0,w,c
  2299   000F7E  104A               	iorwf	(_m+1)^0,w,c
  2300   000F80  104B               	iorwf	(_m+2)^0,w,c
  2301   000F82  104C               	iorwf	(_m+3)^0,w,c
  2302   000F84  B4D8               	btfsc	status,2,c
  2303   000F86  D003               	goto	l3390
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;Lab4.c: 317: EscribeLCD_c(',');
  2307   000F88  0E2C               	movlw	44
  2308   000F8A  EC0A  F00D         	call	_EscribeLCD_c
  2309   000F8E                     l3390:
  2310                           
  2311                           ;Lab4.c: 318: };Lab4.c: 320: if (m != 0) {
  2312   000F8E  5049               	movf	_m^0,w,c
  2313   000F90  104A               	iorwf	(_m+1)^0,w,c
  2314   000F92  104B               	iorwf	(_m+2)^0,w,c
  2315   000F94  104C               	iorwf	(_m+3)^0,w,c
  2316   000F96  B4D8               	btfsc	status,2,c
  2317   000F98  0012               	return	
  2318                           
  2319                           ;Lab4.c: 321: n1 = m * 10;
  2320   000F9A  C049  F00E         	movff	_m,___wmul@multiplier
  2321   000F9E  C04A  F00F         	movff	_m+1,___wmul@multiplier+1
  2322   000FA2  0E00               	movlw	0
  2323   000FA4  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  2324   000FA6  0E0A               	movlw	10
  2325   000FA8  6E10               	movwf	___wmul@multiplicand^0,c
  2326   000FAA  ECEB  F00C         	call	___wmul	;wreg free
  2327   000FAE  C00E  F044         	movff	?___wmul,_n1
  2328   000FB2  C00F  F045         	movff	?___wmul+1,_n1+1
  2329                           
  2330                           ;Lab4.c: 322: } else {
  2331   000FB6  0100               	movlb	0	; () banked
  2332   000FB8  4B63               	infsnz	Imprimir_Resultado@i& (0+255),f,b
  2333   000FBA  2B64               	incf	(Imprimir_Resultado@i+1)& (0+255),f,b
  2334                           
  2335                           ; BSR set to: 0
  2336   000FBC  BF64               	btfsc	(Imprimir_Resultado@i+1)& (0+255),7,b
  2337   000FBE  D7B5               	goto	l3382
  2338   000FC0  5164               	movf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2339   000FC2  E105               	bnz	u3780
  2340   000FC4  0E03               	movlw	3
  2341   000FC6  5D63               	subwf	Imprimir_Resultado@i& (0+255),w,b
  2342   000FC8  B0D8               	btfsc	status,0,c
  2343   000FCA  0012               	return	
  2344   000FCC  D7AE               	goto	l3382
  2345   000FCE                     u3780:
  2346   000FCE  0012               	return	
  2347   000FD0                     l3398:
  2348                           
  2349                           ;Lab4.c: 328: if(r>0x17179149 & r!=1000 & r !=1001){
  2350   000FD0  BE1F               	btfsc	(Imprimir_Resultado@r+3)^0,7,c
  2351   000FD2  D02B               	goto	l3410
  2352   000FD4  0E4A               	movlw	74
  2353   000FD6  5C1C               	subwf	Imprimir_Resultado@r^0,w,c
  2354   000FD8  0E91               	movlw	145
  2355   000FDA  581D               	subwfb	(Imprimir_Resultado@r+1)^0,w,c
  2356   000FDC  0E17               	movlw	23
  2357   000FDE  581E               	subwfb	(Imprimir_Resultado@r+2)^0,w,c
  2358   000FE0  0E17               	movlw	23
  2359   000FE2  581F               	subwfb	(Imprimir_Resultado@r+3)^0,w,c
  2360   000FE4  A0D8               	btfss	status,0,c
  2361   000FE6  D021               	goto	l3410
  2362   000FE8  0EE8               	movlw	232
  2363   000FEA  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2364   000FEC  E106               	bnz	u3800
  2365   000FEE  0E03               	movlw	3
  2366   000FF0  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2367   000FF2  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2368   000FF4  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2369   000FF6  B4D8               	btfsc	status,2,c
  2370   000FF8  D018               	goto	l3410
  2371   000FFA                     u3800:
  2372   000FFA  0EE9               	movlw	233
  2373   000FFC  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2374   000FFE  E106               	bnz	u3810
  2375   001000  0E03               	movlw	3
  2376   001002  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2377   001004  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2378   001006  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2379   001008  B4D8               	btfsc	status,2,c
  2380   00100A  D00F               	goto	l3410
  2381   00100C                     u3810:
  2382                           
  2383                           ;Lab4.c: 329: DireccionaLCD(0x85);
  2384   00100C  0E85               	movlw	133
  2385   00100E  EC15  F00D         	call	_DireccionaLCD
  2386                           
  2387                           ;Lab4.c: 330: MensajeLCD_Var("Imposible");
  2388   001012  0E5A               	movlw	low STR_12
  2389   001014  6E13               	movwf	MensajeLCD_Var@a^0,c
  2390   001016  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
  2391                           
  2392                           ;Lab4.c: 331: DireccionaLCD(0xC0);
  2393   00101A  0EC0               	movlw	192
  2394   00101C  EC15  F00D         	call	_DireccionaLCD
  2395                           
  2396                           ;Lab4.c: 332: MensajeLCD_Var("de calcular");
  2397   001020  0E39               	movlw	low STR_13
  2398   001022  6E13               	movwf	MensajeLCD_Var@a^0,c
  2399   001024  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
  2400                           
  2401                           ;Lab4.c: 333: }else{
  2402   001028  0012               	return	
  2403   00102A                     l3410:
  2404                           
  2405                           ;Lab4.c: 334: if(r>=0xA & r!=1000 & r !=1001){
  2406   00102A  BE1F               	btfsc	(Imprimir_Resultado@r+3)^0,7,c
  2407   00102C  D0D7               	goto	l3458
  2408   00102E  501F               	movf	(Imprimir_Resultado@r+3)^0,w,c
  2409   001030  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2410   001032  101D               	iorwf	(Imprimir_Resultado@r+1)^0,w,c
  2411   001034  E104               	bnz	u3820
  2412   001036  0E0A               	movlw	10
  2413   001038  5C1C               	subwf	Imprimir_Resultado@r^0,w,c
  2414   00103A  A0D8               	btfss	status,0,c
  2415   00103C  D0CF               	goto	l3458
  2416   00103E                     u3820:
  2417   00103E  0EE8               	movlw	232
  2418   001040  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2419   001042  E106               	bnz	u3830
  2420   001044  0E03               	movlw	3
  2421   001046  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2422   001048  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2423   00104A  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2424   00104C  B4D8               	btfsc	status,2,c
  2425   00104E  D0C6               	goto	l3458
  2426   001050                     u3830:
  2427   001050  0EE9               	movlw	233
  2428   001052  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2429   001054  E106               	bnz	u3840
  2430   001056  0E03               	movlw	3
  2431   001058  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2432   00105A  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2433   00105C  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2434   00105E  B4D8               	btfsc	status,2,c
  2435   001060  D0BD               	goto	l3458
  2436   001062                     u3840:
  2437                           
  2438                           ;Lab4.c: 358: for(int j=9;j>=0;j--){
  2439   001062  0E00               	movlw	0
  2440   001064  0100               	movlb	0	; () banked
  2441   001066  6F66               	movwf	(Imprimir_Resultado@j+1)& (0+255),b
  2442   001068  0E09               	movlw	9
  2443   00106A  6F65               	movwf	Imprimir_Resultado@j& (0+255),b
  2444   00106C                     l3422:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;Lab4.c: 359: potencia = 10;
  2448   00106C  0E0A               	movlw	10
  2449   00106E  6F67               	movwf	Imprimir_Resultado@potencia& (0+255),b
  2450   001070  0E00               	movlw	0
  2451   001072  6F68               	movwf	(Imprimir_Resultado@potencia+1)& (0+255),b
  2452   001074  0E00               	movlw	0
  2453   001076  6F69               	movwf	(Imprimir_Resultado@potencia+2)& (0+255),b
  2454   001078  0E00               	movlw	0
  2455   00107A  6F6A               	movwf	(Imprimir_Resultado@potencia+3)& (0+255),b
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;Lab4.c: 360: for(int k=j-1;k>0;k--){
  2459   00107C  0EFF               	movlw	255
  2460   00107E  2565               	addwf	Imprimir_Resultado@j& (0+255),w,b
  2461   001080  6F61               	movwf	Imprimir_Resultado@k& (0+255),b
  2462   001082  0EFF               	movlw	255
  2463   001084  2166               	addwfc	(Imprimir_Resultado@j+1)& (0+255),w,b
  2464   001086  6F62               	movwf	(Imprimir_Resultado@k+1)& (0+255),b
  2465   001088                     l3426:
  2466                           
  2467                           ; BSR set to: 0
  2468   001088  BF62               	btfsc	(Imprimir_Resultado@k+1)& (0+255),7,b
  2469   00108A  D024               	goto	l3436
  2470   00108C  5162               	movf	(Imprimir_Resultado@k+1)& (0+255),w,b
  2471   00108E  E103               	bnz	l3430
  2472   001090  0561               	decf	Imprimir_Resultado@k& (0+255),w,b
  2473   001092  A0D8               	btfss	status,0,c
  2474   001094  D01F               	goto	l3436
  2475   001096                     l3430:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;Lab4.c: 361: potencia = potencia*10;
  2479   001096  C067  F00E         	movff	Imprimir_Resultado@potencia,___lmul@multiplier
  2480   00109A  C068  F00F         	movff	Imprimir_Resultado@potencia+1,___lmul@multiplier+1
  2481   00109E  C069  F010         	movff	Imprimir_Resultado@potencia+2,___lmul@multiplier+2
  2482   0010A2  C06A  F011         	movff	Imprimir_Resultado@potencia+3,___lmul@multiplier+3
  2483   0010A6  0E0A               	movlw	10
  2484   0010A8  6E12               	movwf	___lmul@multiplicand^0,c
  2485   0010AA  0E00               	movlw	0
  2486   0010AC  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2487   0010AE  0E00               	movlw	0
  2488   0010B0  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2489   0010B2  0E00               	movlw	0
  2490   0010B4  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2491   0010B6  EC43  F00B         	call	___lmul	;wreg free
  2492   0010BA  C00E  F067         	movff	?___lmul,Imprimir_Resultado@potencia
  2493   0010BE  C00F  F068         	movff	?___lmul+1,Imprimir_Resultado@potencia+1
  2494   0010C2  C010  F069         	movff	?___lmul+2,Imprimir_Resultado@potencia+2
  2495   0010C6  C011  F06A         	movff	?___lmul+3,Imprimir_Resultado@potencia+3
  2496   0010CA  0100               	movlb	0	; () banked
  2497   0010CC  0761               	decf	Imprimir_Resultado@k& (0+255),f,b
  2498   0010CE  A0D8               	btfss	status,0,c
  2499   0010D0  0762               	decf	(Imprimir_Resultado@k+1)& (0+255),f,b
  2500   0010D2  D7DA               	goto	l3426
  2501   0010D4                     l3436:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;Lab4.c: 362: };Lab4.c: 363: if(r/potencia>0){
  2505   0010D4  C01C  F00E         	movff	Imprimir_Resultado@r,___aldiv@dividend
  2506   0010D8  C01D  F00F         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  2507   0010DC  C01E  F010         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  2508   0010E0  C01F  F011         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  2509   0010E4  C067  F012         	movff	Imprimir_Resultado@potencia,___aldiv@divisor
  2510   0010E8  C068  F013         	movff	Imprimir_Resultado@potencia+1,___aldiv@divisor+1
  2511   0010EC  C069  F014         	movff	Imprimir_Resultado@potencia+2,___aldiv@divisor+2
  2512   0010F0  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___aldiv@divisor+3
  2513   0010F4  EC12  F009         	call	___aldiv	;wreg free
  2514   0010F8  BE11               	btfsc	(?___aldiv+3)^0,7,c
  2515   0010FA  D03B               	goto	l3444
  2516   0010FC  5011               	movf	(?___aldiv+3)^0,w,c
  2517   0010FE  1010               	iorwf	(?___aldiv+2)^0,w,c
  2518   001100  100F               	iorwf	(?___aldiv+1)^0,w,c
  2519   001102  E103               	bnz	u3860
  2520   001104  040E               	decf	?___aldiv^0,w,c
  2521   001106  A0D8               	btfss	status,0,c
  2522   001108  D034               	goto	l3444
  2523   00110A                     u3860:
  2524                           
  2525                           ;Lab4.c: 364: flag = 1;
  2526   00110A  0E01               	movlw	1
  2527   00110C  0100               	movlb	0	; () banked
  2528   00110E  6F60               	movwf	Imprimir_Resultado@flag& (0+255),b
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;Lab4.c: 365: EscribeLCD_c(r/potencia+48);
  2532   001110  C01C  F00E         	movff	Imprimir_Resultado@r,___aldiv@dividend
  2533   001114  C01D  F00F         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  2534   001118  C01E  F010         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  2535   00111C  C01F  F011         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  2536   001120  C067  F012         	movff	Imprimir_Resultado@potencia,___aldiv@divisor
  2537   001124  C068  F013         	movff	Imprimir_Resultado@potencia+1,___aldiv@divisor+1
  2538   001128  C069  F014         	movff	Imprimir_Resultado@potencia+2,___aldiv@divisor+2
  2539   00112C  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___aldiv@divisor+3
  2540   001130  EC12  F009         	call	___aldiv	;wreg free
  2541   001134  500E               	movf	?___aldiv^0,w,c
  2542   001136  0F30               	addlw	48
  2543   001138  EC0A  F00D         	call	_EscribeLCD_c
  2544                           
  2545                           ;Lab4.c: 366: r=r%potencia;
  2546   00113C  C01C  F00E         	movff	Imprimir_Resultado@r,___almod@dividend
  2547   001140  C01D  F00F         	movff	Imprimir_Resultado@r+1,___almod@dividend+1
  2548   001144  C01E  F010         	movff	Imprimir_Resultado@r+2,___almod@dividend+2
  2549   001148  C01F  F011         	movff	Imprimir_Resultado@r+3,___almod@dividend+3
  2550   00114C  C067  F012         	movff	Imprimir_Resultado@potencia,___almod@divisor
  2551   001150  C068  F013         	movff	Imprimir_Resultado@potencia+1,___almod@divisor+1
  2552   001154  C069  F014         	movff	Imprimir_Resultado@potencia+2,___almod@divisor+2
  2553   001158  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___almod@divisor+3
  2554   00115C  ECDD  F009         	call	___almod	;wreg free
  2555   001160  C00E  F01C         	movff	?___almod,Imprimir_Resultado@r
  2556   001164  C00F  F01D         	movff	?___almod+1,Imprimir_Resultado@r+1
  2557   001168  C010  F01E         	movff	?___almod+2,Imprimir_Resultado@r+2
  2558   00116C  C011  F01F         	movff	?___almod+3,Imprimir_Resultado@r+3
  2559                           
  2560                           ;Lab4.c: 367: }else if( (r/potencia)==0 && flag){
  2561   001170  D02E               	goto	l3454
  2562   001172                     l3444:
  2563   001172  C01C  F00E         	movff	Imprimir_Resultado@r,___aldiv@dividend
  2564   001176  C01D  F00F         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  2565   00117A  C01E  F010         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  2566   00117E  C01F  F011         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  2567   001182  C067  F012         	movff	Imprimir_Resultado@potencia,___aldiv@divisor
  2568   001186  C068  F013         	movff	Imprimir_Resultado@potencia+1,___aldiv@divisor+1
  2569   00118A  C069  F014         	movff	Imprimir_Resultado@potencia+2,___aldiv@divisor+2
  2570   00118E  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___aldiv@divisor+3
  2571   001192  EC12  F009         	call	___aldiv	;wreg free
  2572   001196  500E               	movf	?___aldiv^0,w,c
  2573   001198  100F               	iorwf	(?___aldiv+1)^0,w,c
  2574   00119A  1010               	iorwf	(?___aldiv+2)^0,w,c
  2575   00119C  1011               	iorwf	(?___aldiv+3)^0,w,c
  2576   00119E  A4D8               	btfss	status,2,c
  2577   0011A0  D016               	goto	l3454
  2578   0011A2  0100               	movlb	0	; () banked
  2579   0011A4  5160               	movf	Imprimir_Resultado@flag& (0+255),w,b
  2580   0011A6  B4D8               	btfsc	status,2,c
  2581   0011A8  D012               	goto	l3454
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;Lab4.c: 368: if(r<10) EscribeLCD_c(r+48);
  2585   0011AA  BE1F               	btfsc	(Imprimir_Resultado@r+3)^0,7,c
  2586   0011AC  D008               	goto	u3890
  2587   0011AE  501F               	movf	(Imprimir_Resultado@r+3)^0,w,c
  2588   0011B0  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2589   0011B2  101D               	iorwf	(Imprimir_Resultado@r+1)^0,w,c
  2590   0011B4  E109               	bnz	l3452
  2591   0011B6  0E0A               	movlw	10
  2592   0011B8  5C1C               	subwf	Imprimir_Resultado@r^0,w,c
  2593   0011BA  B0D8               	btfsc	status,0,c
  2594   0011BC  D005               	goto	l3452
  2595   0011BE                     u3890:
  2596                           
  2597                           ; BSR set to: 0
  2598   0011BE  501C               	movf	Imprimir_Resultado@r^0,w,c
  2599   0011C0  0F30               	addlw	48
  2600   0011C2  EC0A  F00D         	call	_EscribeLCD_c
  2601   0011C6  D003               	goto	l3454
  2602   0011C8                     l3452:
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;Lab4.c: 369: else EscribeLCD_c(48);
  2606   0011C8  0E30               	movlw	48
  2607   0011CA  EC0A  F00D         	call	_EscribeLCD_c
  2608   0011CE                     l3454:
  2609   0011CE  0100               	movlb	0	; () banked
  2610   0011D0  0765               	decf	Imprimir_Resultado@j& (0+255),f,b
  2611   0011D2  A0D8               	btfss	status,0,c
  2612   0011D4  0766               	decf	(Imprimir_Resultado@j+1)& (0+255),f,b
  2613                           
  2614                           ; BSR set to: 0
  2615   0011D6  BF66               	btfsc	(Imprimir_Resultado@j+1)& (0+255),7,b
  2616   0011D8  0012               	return	
  2617   0011DA  D748               	goto	l3422
  2618   0011DC                     l3458:
  2619                           
  2620                           ;Lab4.c: 373: if(r==1000){
  2621   0011DC  0EE8               	movlw	232
  2622   0011DE  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2623   0011E0  E10B               	bnz	l3462
  2624   0011E2  0E03               	movlw	3
  2625   0011E4  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2626   0011E6  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2627   0011E8  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2628   0011EA  A4D8               	btfss	status,2,c
  2629   0011EC  D005               	goto	l3462
  2630                           
  2631                           ;Lab4.c: 374: MensajeLCD_Var("Infinito");
  2632   0011EE  0E64               	movlw	low STR_14
  2633   0011F0  6E13               	movwf	MensajeLCD_Var@a^0,c
  2634   0011F2  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
  2635                           
  2636                           ;Lab4.c: 375: }else{
  2637   0011F6  0012               	return	
  2638   0011F8                     l3462:
  2639                           
  2640                           ;Lab4.c: 376: if(r==1001){
  2641   0011F8  0EE9               	movlw	233
  2642   0011FA  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2643   0011FC  E10E               	bnz	l3468
  2644   0011FE  0E03               	movlw	3
  2645   001200  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2646   001202  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2647   001204  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2648   001206  A4D8               	btfss	status,2,c
  2649   001208  D008               	goto	l3468
  2650                           
  2651                           ;Lab4.c: 377: DireccionaLCD(0xC1);
  2652   00120A  0EC1               	movlw	193
  2653   00120C  EC15  F00D         	call	_DireccionaLCD
  2654                           
  2655                           ;Lab4.c: 378: MensajeLCD_Var("Indeterminado");
  2656   001210  0E1E               	movlw	low STR_15
  2657   001212  6E13               	movwf	MensajeLCD_Var@a^0,c
  2658   001214  ECED  F00B         	call	_MensajeLCD_Var	;wreg free
  2659                           
  2660                           ;Lab4.c: 379: }else{
  2661   001218  0012               	return	
  2662   00121A                     l3468:
  2663                           
  2664                           ;Lab4.c: 380: EscribeLCD_c(r+'0');
  2665   00121A  501C               	movf	Imprimir_Resultado@r^0,w,c
  2666   00121C  0F30               	addlw	48
  2667   00121E  EC0A  F00D         	call	_EscribeLCD_c
  2668   001222  0012               	return		;funcret
  2669   001224                     __end_of_Imprimir_Resultado:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function ___wmul *****************
  2673 ;; Defined at:
  2674 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  multiplier      2   13[COMRAM] unsigned int 
  2677 ;;  multiplicand    2   15[COMRAM] unsigned int 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  product         2   17[COMRAM] unsigned int 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  2   13[COMRAM] unsigned int 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, prodl, prodh
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2689 ;;      Params:         4       0       0       0       0       0       0       0       0
  2690 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2692 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2693 ;;Total ram usage:        6 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 5
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_main
  2700 ;;		_Imprimir_Resultado
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text6
  2705   0019D6                     __ptext6:
  2706                           	callstack 0
  2707   0019D6                     ___wmul:
  2708                           	callstack 25
  2709                           
  2710                           ;incstack = 0
  2711   0019D6  500E               	movf	___wmul@multiplier^0,w,c
  2712   0019D8  0210               	mulwf	___wmul@multiplicand^0,c
  2713   0019DA  CFF3 F012          	movff	prodl,___wmul@product
  2714   0019DE  CFF4 F013          	movff	prodh,___wmul@product+1
  2715   0019E2  500E               	movf	___wmul@multiplier^0,w,c
  2716   0019E4  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  2717   0019E6  50F3               	movf	243,w,c
  2718   0019E8  2613               	addwf	(___wmul@product+1)^0,f,c
  2719   0019EA  500F               	movf	(___wmul@multiplier+1)^0,w,c
  2720   0019EC  0210               	mulwf	___wmul@multiplicand^0,c
  2721   0019EE  50F3               	movf	243,w,c
  2722   0019F0  2613               	addwf	(___wmul@product+1)^0,f,c
  2723   0019F2  C012  F00E         	movff	___wmul@product,?___wmul
  2724   0019F6  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  2725   0019FA  0012               	return		;funcret
  2726   0019FC                     __end_of___wmul:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function ___lwmod *****************
  2730 ;; Defined at:
  2731 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  dividend        2   13[COMRAM] unsigned int 
  2734 ;;  divisor         2   15[COMRAM] unsigned int 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  counter         1   17[COMRAM] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  2   13[COMRAM] unsigned int 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2746 ;;      Params:         4       0       0       0       0       0       0       0       0
  2747 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2748 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2749 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2750 ;;Total ram usage:        5 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 5
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_Imprimir_Resultado
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text7
  2761   00190A                     __ptext7:
  2762                           	callstack 0
  2763   00190A                     ___lwmod:
  2764                           	callstack 24
  2765                           
  2766                           ;incstack = 0
  2767   00190A  5010               	movf	___lwmod@divisor^0,w,c
  2768   00190C  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  2769   00190E  B4D8               	btfsc	status,2,c
  2770   001910  D018               	goto	l848
  2771   001912  0E01               	movlw	1
  2772   001914  6E12               	movwf	___lwmod@counter^0,c
  2773   001916  D004               	goto	l3306
  2774   001918                     l3304:
  2775   001918  90D8               	bcf	status,0,c
  2776   00191A  3610               	rlcf	___lwmod@divisor^0,f,c
  2777   00191C  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  2778   00191E  2A12               	incf	___lwmod@counter^0,f,c
  2779   001920                     l3306:
  2780   001920  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  2781   001922  D7FA               	goto	l3304
  2782   001924                     u3680:
  2783   001924  5010               	movf	___lwmod@divisor^0,w,c
  2784   001926  5C0E               	subwf	___lwmod@dividend^0,w,c
  2785   001928  5011               	movf	(___lwmod@divisor+1)^0,w,c
  2786   00192A  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  2787   00192C  A0D8               	btfss	status,0,c
  2788   00192E  D004               	goto	l3312
  2789   001930  5010               	movf	___lwmod@divisor^0,w,c
  2790   001932  5E0E               	subwf	___lwmod@dividend^0,f,c
  2791   001934  5011               	movf	(___lwmod@divisor+1)^0,w,c
  2792   001936  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  2793   001938                     l3312:
  2794   001938  90D8               	bcf	status,0,c
  2795   00193A  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  2796   00193C  3210               	rrcf	___lwmod@divisor^0,f,c
  2797   00193E  2E12               	decfsz	___lwmod@counter^0,f,c
  2798   001940  D7F1               	goto	u3680
  2799   001942                     l848:
  2800   001942  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  2801   001946  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  2802   00194A  0012               	return		;funcret
  2803   00194C                     __end_of___lwmod:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function ___lwdiv *****************
  2807 ;; Defined at:
  2808 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  dividend        2   19[COMRAM] unsigned int 
  2811 ;;  divisor         2   21[COMRAM] unsigned int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  quotient        2   24[COMRAM] unsigned int 
  2814 ;;  counter         1   23[COMRAM] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  2   19[COMRAM] unsigned int 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2824 ;;      Params:         4       0       0       0       0       0       0       0       0
  2825 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2827 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2828 ;;Total ram usage:        7 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 5
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;;		_Imprimir_Resultado
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text8
  2840   001788                     __ptext8:
  2841                           	callstack 0
  2842   001788                     ___lwdiv:
  2843                           	callstack 25
  2844                           
  2845                           ;incstack = 0
  2846   001788  0E00               	movlw	0
  2847   00178A  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  2848   00178C  0E00               	movlw	0
  2849   00178E  6E19               	movwf	___lwdiv@quotient^0,c
  2850   001790  5016               	movf	___lwdiv@divisor^0,w,c
  2851   001792  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2852   001794  B4D8               	btfsc	status,2,c
  2853   001796  D01C               	goto	l838
  2854   001798  0E01               	movlw	1
  2855   00179A  6E18               	movwf	___lwdiv@counter^0,c
  2856   00179C  D004               	goto	l3286
  2857   00179E                     l3284:
  2858   00179E  90D8               	bcf	status,0,c
  2859   0017A0  3616               	rlcf	___lwdiv@divisor^0,f,c
  2860   0017A2  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2861   0017A4  2A18               	incf	___lwdiv@counter^0,f,c
  2862   0017A6                     l3286:
  2863   0017A6  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  2864   0017A8  D7FA               	goto	l3284
  2865   0017AA                     u3650:
  2866   0017AA  90D8               	bcf	status,0,c
  2867   0017AC  3619               	rlcf	___lwdiv@quotient^0,f,c
  2868   0017AE  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2869   0017B0  5016               	movf	___lwdiv@divisor^0,w,c
  2870   0017B2  5C14               	subwf	___lwdiv@dividend^0,w,c
  2871   0017B4  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2872   0017B6  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2873   0017B8  A0D8               	btfss	status,0,c
  2874   0017BA  D005               	goto	l3296
  2875   0017BC  5016               	movf	___lwdiv@divisor^0,w,c
  2876   0017BE  5E14               	subwf	___lwdiv@dividend^0,f,c
  2877   0017C0  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2878   0017C2  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2879   0017C4  8019               	bsf	___lwdiv@quotient^0,0,c
  2880   0017C6                     l3296:
  2881   0017C6  90D8               	bcf	status,0,c
  2882   0017C8  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2883   0017CA  3216               	rrcf	___lwdiv@divisor^0,f,c
  2884   0017CC  2E18               	decfsz	___lwdiv@counter^0,f,c
  2885   0017CE  D7ED               	goto	u3650
  2886   0017D0                     l838:
  2887   0017D0  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  2888   0017D4  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2889   0017D8  0012               	return		;funcret
  2890   0017DA                     __end_of___lwdiv:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function ___lmul *****************
  2894 ;; Defined at:
  2895 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  multiplier      4   13[COMRAM] unsigned long 
  2898 ;;  multiplicand    4   17[COMRAM] unsigned long 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  product         4   21[COMRAM] unsigned long 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  4   13[COMRAM] unsigned long 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2910 ;;      Params:         8       0       0       0       0       0       0       0       0
  2911 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2913 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2914 ;;Total ram usage:       12 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; Hardware stack levels required when called: 5
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_main
  2921 ;;		_factorial_function
  2922 ;;		_Imprimir_Resultado
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text9
  2927   001686                     __ptext9:
  2928                           	callstack 0
  2929   001686                     ___lmul:
  2930                           	callstack 24
  2931                           
  2932                           ;incstack = 0
  2933   001686  0E00               	movlw	0
  2934   001688  6E16               	movwf	___lmul@product^0,c
  2935   00168A  0E00               	movlw	0
  2936   00168C  6E17               	movwf	(___lmul@product+1)^0,c
  2937   00168E  0E00               	movlw	0
  2938   001690  6E18               	movwf	(___lmul@product+2)^0,c
  2939   001692  0E00               	movlw	0
  2940   001694  6E19               	movwf	(___lmul@product+3)^0,c
  2941   001696                     l3190:
  2942   001696  A00E               	btfss	___lmul@multiplier^0,0,c
  2943   001698  D008               	goto	l3194
  2944   00169A  5012               	movf	___lmul@multiplicand^0,w,c
  2945   00169C  2616               	addwf	___lmul@product^0,f,c
  2946   00169E  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  2947   0016A0  2217               	addwfc	(___lmul@product+1)^0,f,c
  2948   0016A2  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  2949   0016A4  2218               	addwfc	(___lmul@product+2)^0,f,c
  2950   0016A6  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  2951   0016A8  2219               	addwfc	(___lmul@product+3)^0,f,c
  2952   0016AA                     l3194:
  2953   0016AA  90D8               	bcf	status,0,c
  2954   0016AC  3612               	rlcf	___lmul@multiplicand^0,f,c
  2955   0016AE  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2956   0016B0  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2957   0016B2  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2958   0016B4  90D8               	bcf	status,0,c
  2959   0016B6  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  2960   0016B8  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  2961   0016BA  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  2962   0016BC  320E               	rrcf	___lmul@multiplier^0,f,c
  2963   0016BE  500E               	movf	___lmul@multiplier^0,w,c
  2964   0016C0  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  2965   0016C2  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  2966   0016C4  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  2967   0016C6  A4D8               	btfss	status,2,c
  2968   0016C8  D7E6               	goto	l3190
  2969   0016CA  C016  F00E         	movff	___lmul@product,?___lmul
  2970   0016CE  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  2971   0016D2  C018  F010         	movff	___lmul@product+2,?___lmul+2
  2972   0016D6  C019  F011         	movff	___lmul@product+3,?___lmul+3
  2973   0016DA  0012               	return		;funcret
  2974   0016DC                     __end_of___lmul:
  2975                           	callstack 0
  2976                           
  2977 ;; *************** function ___almod *****************
  2978 ;; Defined at:
  2979 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  dividend        4   13[COMRAM] long 
  2982 ;;  divisor         4   17[COMRAM] long 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  sign            1   22[COMRAM] unsigned char 
  2985 ;;  counter         1   21[COMRAM] unsigned char 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  4   13[COMRAM] long 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2995 ;;      Params:         8       0       0       0       0       0       0       0       0
  2996 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2998 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2999 ;;Total ram usage:       10 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 5
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_Imprimir_Resultado
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text10
  3010   0013BA                     __ptext10:
  3011                           	callstack 0
  3012   0013BA                     ___almod:
  3013                           	callstack 24
  3014                           
  3015                           ;incstack = 0
  3016   0013BA  0E00               	movlw	0
  3017   0013BC  6E17               	movwf	___almod@sign^0,c
  3018   0013BE  AE11               	btfss	(___almod@dividend+3)^0,7,c
  3019   0013C0  D00A               	goto	l3250
  3020   0013C2  1E11               	comf	(___almod@dividend+3)^0,f,c
  3021   0013C4  1E10               	comf	(___almod@dividend+2)^0,f,c
  3022   0013C6  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3023   0013C8  6C0E               	negf	___almod@dividend^0,c
  3024   0013CA  0E00               	movlw	0
  3025   0013CC  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3026   0013CE  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3027   0013D0  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3028   0013D2  0E01               	movlw	1
  3029   0013D4  6E17               	movwf	___almod@sign^0,c
  3030   0013D6                     l3250:
  3031   0013D6  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3032   0013D8  D008               	goto	l3254
  3033   0013DA  1E15               	comf	(___almod@divisor+3)^0,f,c
  3034   0013DC  1E14               	comf	(___almod@divisor+2)^0,f,c
  3035   0013DE  1E13               	comf	(___almod@divisor+1)^0,f,c
  3036   0013E0  6C12               	negf	___almod@divisor^0,c
  3037   0013E2  0E00               	movlw	0
  3038   0013E4  2213               	addwfc	(___almod@divisor+1)^0,f,c
  3039   0013E6  2214               	addwfc	(___almod@divisor+2)^0,f,c
  3040   0013E8  2215               	addwfc	(___almod@divisor+3)^0,f,c
  3041   0013EA                     l3254:
  3042   0013EA  5012               	movf	___almod@divisor^0,w,c
  3043   0013EC  1013               	iorwf	(___almod@divisor+1)^0,w,c
  3044   0013EE  1014               	iorwf	(___almod@divisor+2)^0,w,c
  3045   0013F0  1015               	iorwf	(___almod@divisor+3)^0,w,c
  3046   0013F2  B4D8               	btfsc	status,2,c
  3047   0013F4  D024               	goto	l3270
  3048   0013F6  0E01               	movlw	1
  3049   0013F8  6E16               	movwf	___almod@counter^0,c
  3050   0013FA  D006               	goto	l3260
  3051   0013FC                     l3258:
  3052   0013FC  90D8               	bcf	status,0,c
  3053   0013FE  3612               	rlcf	___almod@divisor^0,f,c
  3054   001400  3613               	rlcf	(___almod@divisor+1)^0,f,c
  3055   001402  3614               	rlcf	(___almod@divisor+2)^0,f,c
  3056   001404  3615               	rlcf	(___almod@divisor+3)^0,f,c
  3057   001406  2A16               	incf	___almod@counter^0,f,c
  3058   001408                     l3260:
  3059   001408  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3060   00140A  D7F8               	goto	l3258
  3061   00140C                     u3610:
  3062   00140C  5012               	movf	___almod@divisor^0,w,c
  3063   00140E  5C0E               	subwf	___almod@dividend^0,w,c
  3064   001410  5013               	movf	(___almod@divisor+1)^0,w,c
  3065   001412  580F               	subwfb	(___almod@dividend+1)^0,w,c
  3066   001414  5014               	movf	(___almod@divisor+2)^0,w,c
  3067   001416  5810               	subwfb	(___almod@dividend+2)^0,w,c
  3068   001418  5015               	movf	(___almod@divisor+3)^0,w,c
  3069   00141A  5811               	subwfb	(___almod@dividend+3)^0,w,c
  3070   00141C  A0D8               	btfss	status,0,c
  3071   00141E  D008               	goto	l3266
  3072   001420  5012               	movf	___almod@divisor^0,w,c
  3073   001422  5E0E               	subwf	___almod@dividend^0,f,c
  3074   001424  5013               	movf	(___almod@divisor+1)^0,w,c
  3075   001426  5A0F               	subwfb	(___almod@dividend+1)^0,f,c
  3076   001428  5014               	movf	(___almod@divisor+2)^0,w,c
  3077   00142A  5A10               	subwfb	(___almod@dividend+2)^0,f,c
  3078   00142C  5015               	movf	(___almod@divisor+3)^0,w,c
  3079   00142E  5A11               	subwfb	(___almod@dividend+3)^0,f,c
  3080   001430                     l3266:
  3081   001430  90D8               	bcf	status,0,c
  3082   001432  3215               	rrcf	(___almod@divisor+3)^0,f,c
  3083   001434  3214               	rrcf	(___almod@divisor+2)^0,f,c
  3084   001436  3213               	rrcf	(___almod@divisor+1)^0,f,c
  3085   001438  3212               	rrcf	___almod@divisor^0,f,c
  3086   00143A  2E16               	decfsz	___almod@counter^0,f,c
  3087   00143C  D7E7               	goto	u3610
  3088   00143E                     l3270:
  3089   00143E  5017               	movf	___almod@sign^0,w,c
  3090   001440  B4D8               	btfsc	status,2,c
  3091   001442  D008               	goto	l3274
  3092   001444  1E11               	comf	(___almod@dividend+3)^0,f,c
  3093   001446  1E10               	comf	(___almod@dividend+2)^0,f,c
  3094   001448  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3095   00144A  6C0E               	negf	___almod@dividend^0,c
  3096   00144C  0E00               	movlw	0
  3097   00144E  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3098   001450  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3099   001452  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3100   001454                     l3274:
  3101   001454  C00E  F00E         	movff	___almod@dividend,?___almod
  3102   001458  C00F  F00F         	movff	___almod@dividend+1,?___almod+1
  3103   00145C  C010  F010         	movff	___almod@dividend+2,?___almod+2
  3104   001460  C011  F011         	movff	___almod@dividend+3,?___almod+3
  3105   001464  0012               	return		;funcret
  3106   001466                     __end_of___almod:
  3107                           	callstack 0
  3108                           
  3109 ;; *************** function ___aldiv *****************
  3110 ;; Defined at:
  3111 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  dividend        4   13[COMRAM] long 
  3114 ;;  divisor         4   17[COMRAM] long 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  quotient        4   23[COMRAM] long 
  3117 ;;  sign            1   22[COMRAM] unsigned char 
  3118 ;;  counter         1   21[COMRAM] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  4   13[COMRAM] long 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3128 ;;      Params:         8       0       0       0       0       0       0       0       0
  3129 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3131 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3132 ;;Total ram usage:       14 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; Hardware stack levels required when called: 5
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_Imprimir_Resultado
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text11
  3143   001224                     __ptext11:
  3144                           	callstack 0
  3145   001224                     ___aldiv:
  3146                           	callstack 24
  3147                           
  3148                           ;incstack = 0
  3149   001224  0E00               	movlw	0
  3150   001226  6E17               	movwf	___aldiv@sign^0,c
  3151   001228  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3152   00122A  D00A               	goto	l3206
  3153   00122C  1E15               	comf	(___aldiv@divisor+3)^0,f,c
  3154   00122E  1E14               	comf	(___aldiv@divisor+2)^0,f,c
  3155   001230  1E13               	comf	(___aldiv@divisor+1)^0,f,c
  3156   001232  6C12               	negf	___aldiv@divisor^0,c
  3157   001234  0E00               	movlw	0
  3158   001236  2213               	addwfc	(___aldiv@divisor+1)^0,f,c
  3159   001238  2214               	addwfc	(___aldiv@divisor+2)^0,f,c
  3160   00123A  2215               	addwfc	(___aldiv@divisor+3)^0,f,c
  3161   00123C  0E01               	movlw	1
  3162   00123E  6E17               	movwf	___aldiv@sign^0,c
  3163   001240                     l3206:
  3164   001240  AE11               	btfss	(___aldiv@dividend+3)^0,7,c
  3165   001242  D00A               	goto	l3212
  3166   001244  1E11               	comf	(___aldiv@dividend+3)^0,f,c
  3167   001246  1E10               	comf	(___aldiv@dividend+2)^0,f,c
  3168   001248  1E0F               	comf	(___aldiv@dividend+1)^0,f,c
  3169   00124A  6C0E               	negf	___aldiv@dividend^0,c
  3170   00124C  0E00               	movlw	0
  3171   00124E  220F               	addwfc	(___aldiv@dividend+1)^0,f,c
  3172   001250  2210               	addwfc	(___aldiv@dividend+2)^0,f,c
  3173   001252  2211               	addwfc	(___aldiv@dividend+3)^0,f,c
  3174   001254  0E01               	movlw	1
  3175   001256  1A17               	xorwf	___aldiv@sign^0,f,c
  3176   001258                     l3212:
  3177   001258  0E00               	movlw	0
  3178   00125A  6E18               	movwf	___aldiv@quotient^0,c
  3179   00125C  0E00               	movlw	0
  3180   00125E  6E19               	movwf	(___aldiv@quotient+1)^0,c
  3181   001260  0E00               	movlw	0
  3182   001262  6E1A               	movwf	(___aldiv@quotient+2)^0,c
  3183   001264  0E00               	movlw	0
  3184   001266  6E1B               	movwf	(___aldiv@quotient+3)^0,c
  3185   001268  5012               	movf	___aldiv@divisor^0,w,c
  3186   00126A  1013               	iorwf	(___aldiv@divisor+1)^0,w,c
  3187   00126C  1014               	iorwf	(___aldiv@divisor+2)^0,w,c
  3188   00126E  1015               	iorwf	(___aldiv@divisor+3)^0,w,c
  3189   001270  B4D8               	btfsc	status,2,c
  3190   001272  D02A               	goto	l3234
  3191   001274  0E01               	movlw	1
  3192   001276  6E16               	movwf	___aldiv@counter^0,c
  3193   001278  D006               	goto	l3220
  3194   00127A                     l3218:
  3195   00127A  90D8               	bcf	status,0,c
  3196   00127C  3612               	rlcf	___aldiv@divisor^0,f,c
  3197   00127E  3613               	rlcf	(___aldiv@divisor+1)^0,f,c
  3198   001280  3614               	rlcf	(___aldiv@divisor+2)^0,f,c
  3199   001282  3615               	rlcf	(___aldiv@divisor+3)^0,f,c
  3200   001284  2A16               	incf	___aldiv@counter^0,f,c
  3201   001286                     l3220:
  3202   001286  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3203   001288  D7F8               	goto	l3218
  3204   00128A                     u3550:
  3205   00128A  90D8               	bcf	status,0,c
  3206   00128C  3618               	rlcf	___aldiv@quotient^0,f,c
  3207   00128E  3619               	rlcf	(___aldiv@quotient+1)^0,f,c
  3208   001290  361A               	rlcf	(___aldiv@quotient+2)^0,f,c
  3209   001292  361B               	rlcf	(___aldiv@quotient+3)^0,f,c
  3210   001294  5012               	movf	___aldiv@divisor^0,w,c
  3211   001296  5C0E               	subwf	___aldiv@dividend^0,w,c
  3212   001298  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3213   00129A  580F               	subwfb	(___aldiv@dividend+1)^0,w,c
  3214   00129C  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3215   00129E  5810               	subwfb	(___aldiv@dividend+2)^0,w,c
  3216   0012A0  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3217   0012A2  5811               	subwfb	(___aldiv@dividend+3)^0,w,c
  3218   0012A4  A0D8               	btfss	status,0,c
  3219   0012A6  D009               	goto	l3230
  3220   0012A8  5012               	movf	___aldiv@divisor^0,w,c
  3221   0012AA  5E0E               	subwf	___aldiv@dividend^0,f,c
  3222   0012AC  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3223   0012AE  5A0F               	subwfb	(___aldiv@dividend+1)^0,f,c
  3224   0012B0  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3225   0012B2  5A10               	subwfb	(___aldiv@dividend+2)^0,f,c
  3226   0012B4  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3227   0012B6  5A11               	subwfb	(___aldiv@dividend+3)^0,f,c
  3228   0012B8  8018               	bsf	___aldiv@quotient^0,0,c
  3229   0012BA                     l3230:
  3230   0012BA  90D8               	bcf	status,0,c
  3231   0012BC  3215               	rrcf	(___aldiv@divisor+3)^0,f,c
  3232   0012BE  3214               	rrcf	(___aldiv@divisor+2)^0,f,c
  3233   0012C0  3213               	rrcf	(___aldiv@divisor+1)^0,f,c
  3234   0012C2  3212               	rrcf	___aldiv@divisor^0,f,c
  3235   0012C4  2E16               	decfsz	___aldiv@counter^0,f,c
  3236   0012C6  D7E1               	goto	u3550
  3237   0012C8                     l3234:
  3238   0012C8  5017               	movf	___aldiv@sign^0,w,c
  3239   0012CA  B4D8               	btfsc	status,2,c
  3240   0012CC  D008               	goto	l3238
  3241   0012CE  1E1B               	comf	(___aldiv@quotient+3)^0,f,c
  3242   0012D0  1E1A               	comf	(___aldiv@quotient+2)^0,f,c
  3243   0012D2  1E19               	comf	(___aldiv@quotient+1)^0,f,c
  3244   0012D4  6C18               	negf	___aldiv@quotient^0,c
  3245   0012D6  0E00               	movlw	0
  3246   0012D8  2219               	addwfc	(___aldiv@quotient+1)^0,f,c
  3247   0012DA  221A               	addwfc	(___aldiv@quotient+2)^0,f,c
  3248   0012DC  221B               	addwfc	(___aldiv@quotient+3)^0,f,c
  3249   0012DE                     l3238:
  3250   0012DE  C018  F00E         	movff	___aldiv@quotient,?___aldiv
  3251   0012E2  C019  F00F         	movff	___aldiv@quotient+1,?___aldiv+1
  3252   0012E6  C01A  F010         	movff	___aldiv@quotient+2,?___aldiv+2
  3253   0012EA  C01B  F011         	movff	___aldiv@quotient+3,?___aldiv+3
  3254   0012EE  0012               	return		;funcret
  3255   0012F0                     __end_of___aldiv:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _MensajeLCD_Var *****************
  3259 ;; Defined at:
  3260 ;;		line 261 in file "LibLCDXC8.h"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  a               1   18[COMRAM] PTR unsigned char 
  3263 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  3264 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  3265 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  3266 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  i               2   20[COMRAM] int 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3278 ;;      Params:         1       0       0       0       0       0       0       0       0
  3279 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3280 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3281 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3282 ;;Total ram usage:        4 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 8
  3285 ;; This function calls:
  3286 ;;		_EscribeLCD_c
  3287 ;;		_strlen
  3288 ;; This function is called by:
  3289 ;;		_main
  3290 ;;		_Imprimir_Resultado
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text12
  3295   0017DA                     __ptext12:
  3296                           	callstack 0
  3297   0017DA                     _MensajeLCD_Var:
  3298                           	callstack 22
  3299                           
  3300                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  3301                           
  3302                           ;incstack = 0
  3303   0017DA  0E00               	movlw	0
  3304   0017DC  6E16               	movwf	(MensajeLCD_Var@i+1)^0,c
  3305   0017DE  0E00               	movlw	0
  3306   0017E0  6E15               	movwf	MensajeLCD_Var@i^0,c
  3307   0017E2  D019               	goto	l3172
  3308   0017E4                     l3164:
  3309                           
  3310                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  3311   0017E4  5013               	movf	MensajeLCD_Var@a^0,w,c
  3312   0017E6  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3313   0017E8  6E14               	movwf	??_MensajeLCD_Var^0,c
  3314   0017EA  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3315   0017EE                     	if	1	;There is more than 1 active tblptr byte
  3316   0017EE  0E08               	movlw	high __smallconst
  3317   0017F0  6EF7               	movwf	tblptrh,c
  3318   0017F2                     	endif
  3319   0017F2                     	if	0	;tblptru may be non-zero
  3320   0017F2                     	endif
  3321   0017F2                     	if	0	;tblptru may be non-zero
  3322   0017F2                     	endif
  3323   0017F2  0008               	tblrd		*
  3324   0017F4  50F5               	movf	tablat,w,c
  3325   0017F6  0900               	iorlw	0
  3326   0017F8  B4D8               	btfsc	status,2,c
  3327   0017FA  0012               	return	
  3328                           
  3329                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  3330   0017FC  5013               	movf	MensajeLCD_Var@a^0,w,c
  3331   0017FE  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3332   001800  6E14               	movwf	??_MensajeLCD_Var^0,c
  3333   001802  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3334   001806                     	if	1	;There is more than 1 active tblptr byte
  3335   001806  0E08               	movlw	high __smallconst
  3336   001808  6EF7               	movwf	tblptrh,c
  3337   00180A                     	endif
  3338   00180A                     	if	0	;tblptru may be non-zero
  3339   00180A                     	endif
  3340   00180A                     	if	0	;tblptru may be non-zero
  3341   00180A                     	endif
  3342   00180A  0008               	tblrd		*
  3343   00180C  50F5               	movf	tablat,w,c
  3344   00180E  EC0A  F00D         	call	_EscribeLCD_c
  3345   001812  4A15               	infsnz	MensajeLCD_Var@i^0,f,c
  3346   001814  2A16               	incf	(MensajeLCD_Var@i+1)^0,f,c
  3347   001816                     l3172:
  3348   001816  C013  F00E         	movff	MensajeLCD_Var@a,strlen@s
  3349   00181A  ECC3  F00C         	call	_strlen	;wreg free
  3350   00181E  500E               	movf	?_strlen^0,w,c
  3351   001820  5C15               	subwf	MensajeLCD_Var@i^0,w,c
  3352   001822  500F               	movf	(?_strlen+1)^0,w,c
  3353   001824  5816               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  3354   001826  B0D8               	btfsc	status,0,c
  3355   001828  0012               	return	
  3356   00182A  D7DC               	goto	l3164
  3357   00182C                     __end_of_MensajeLCD_Var:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function _strlen *****************
  3361 ;; Defined at:
  3362 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  s               1   13[COMRAM] PTR const unsigned char 
  3365 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  3366 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  3367 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  3368 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  cp              1   15[COMRAM] PTR const unsigned char 
  3371 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  3372 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  3373 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  3374 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2   13[COMRAM] unsigned int 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3384 ;;      Params:         2       0       0       0       0       0       0       0       0
  3385 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3387 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3388 ;;Total ram usage:        3 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 5
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_MensajeLCD_Var
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text13
  3399   001986                     __ptext13:
  3400                           	callstack 0
  3401   001986                     _strlen:
  3402                           	callstack 24
  3403                           
  3404                           ;incstack = 0
  3405   001986  C00E  F010         	movff	strlen@s,strlen@cp
  3406   00198A  D001               	goto	l3148
  3407   00198C                     l3146:
  3408   00198C  2A10               	incf	strlen@cp^0,f,c
  3409   00198E                     l3148:
  3410   00198E  C010  FFF6         	movff	strlen@cp,tblptrl
  3411   001992                     	if	1	;There is more than 1 active tblptr byte
  3412   001992  0E08               	movlw	high __smallconst
  3413   001994  6EF7               	movwf	tblptrh,c
  3414   001996                     	endif
  3415   001996                     	if	0	;tblptru may be non-zero
  3416   001996                     	endif
  3417   001996                     	if	0	;tblptru may be non-zero
  3418   001996                     	endif
  3419   001996  0008               	tblrd		*
  3420   001998  50F5               	movf	tablat,w,c
  3421   00199A  0900               	iorlw	0
  3422   00199C  A4D8               	btfss	status,2,c
  3423   00199E  D7F6               	goto	l3146
  3424   0019A0  500E               	movf	strlen@s^0,w,c
  3425   0019A2  5C10               	subwf	strlen@cp^0,w,c
  3426   0019A4  6E0E               	movwf	?_strlen^0,c
  3427   0019A6  6A0F               	clrf	(?_strlen+1)^0,c
  3428   0019A8  BE0E               	btfsc	?_strlen^0,7,c
  3429   0019AA  060F               	decf	(?_strlen+1)^0,f,c
  3430   0019AC  0012               	return		;funcret
  3431   0019AE                     __end_of_strlen:
  3432                           	callstack 0
  3433                           
  3434 ;; *************** function _EscribeLCD_c *****************
  3435 ;; Defined at:
  3436 ;;		line 117 in file "LibLCDXC8.h"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  a               1    wreg     unsigned char 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  a               1   17[COMRAM] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0
  3451 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3453 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3454 ;;Total ram usage:        1 bytes
  3455 ;; Hardware stack levels used: 1
  3456 ;; Hardware stack levels required when called: 7
  3457 ;; This function calls:
  3458 ;;		_EnviaDato
  3459 ;;		_HabilitaLCD
  3460 ;;		_RetardoLCD
  3461 ;; This function is called by:
  3462 ;;		_MensajeLCD_Var
  3463 ;;		_main
  3464 ;;		_Imprimir_Resultado
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text14
  3469   001A14                     __ptext14:
  3470                           	callstack 0
  3471   001A14                     _EscribeLCD_c:
  3472                           	callstack 22
  3473                           
  3474                           ;incstack = 0
  3475                           ;EscribeLCD_c@a stored from wreg
  3476   001A14  6E12               	movwf	EscribeLCD_c@a^0,c
  3477                           
  3478                           ;LibLCDXC8.h: 121: LATE0=1;
  3479   001A16  808D               	bsf	3981,0,c	;volatile
  3480                           
  3481                           ;LibLCDXC8.h: 122: EnviaDato(a);
  3482   001A18  5012               	movf	EscribeLCD_c@a^0,w,c
  3483   001A1A  EC3F  F00C         	call	_EnviaDato
  3484                           
  3485                           ;LibLCDXC8.h: 123: HabilitaLCD();
  3486   001A1E  EC4A  F00D         	call	_HabilitaLCD	;wreg free
  3487                           
  3488                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  3489   001A22  0E04               	movlw	4
  3490   001A24  EC6E  F00B         	call	_RetardoLCD
  3491   001A28  0012               	return		;funcret
  3492   001A2A                     __end_of_EscribeLCD_c:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _DireccionaLCD *****************
  3496 ;; Defined at:
  3497 ;;		line 273 in file "LibLCDXC8.h"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  a               1    wreg     unsigned char 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  a               1   17[COMRAM] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3511 ;;      Params:         0       0       0       0       0       0       0       0       0
  3512 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3514 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3515 ;;Total ram usage:        1 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 7
  3518 ;; This function calls:
  3519 ;;		_EnviaDato
  3520 ;;		_HabilitaLCD
  3521 ;;		_RetardoLCD
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;;		_Imprimir_Resultado
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text15
  3529   001A2A                     __ptext15:
  3530                           	callstack 0
  3531   001A2A                     _DireccionaLCD:
  3532                           	callstack 22
  3533                           
  3534                           ;incstack = 0
  3535                           ;DireccionaLCD@a stored from wreg
  3536   001A2A  6E12               	movwf	DireccionaLCD@a^0,c
  3537                           
  3538                           ;LibLCDXC8.h: 276: LATE0=0;
  3539   001A2C  908D               	bcf	3981,0,c	;volatile
  3540                           
  3541                           ;LibLCDXC8.h: 277: EnviaDato(a);
  3542   001A2E  5012               	movf	DireccionaLCD@a^0,w,c
  3543   001A30  EC3F  F00C         	call	_EnviaDato
  3544                           
  3545                           ;LibLCDXC8.h: 278: HabilitaLCD();
  3546   001A34  EC4A  F00D         	call	_HabilitaLCD	;wreg free
  3547                           
  3548                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  3549   001A38  0E04               	movlw	4
  3550   001A3A  EC6E  F00B         	call	_RetardoLCD
  3551   001A3E  0012               	return		;funcret
  3552   001A40                     __end_of_DireccionaLCD:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function _EnviaDato *****************
  3556 ;; Defined at:
  3557 ;;		line 52 in file "LibLCDXC8.h"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  a               1    wreg     unsigned char 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  a               1   16[COMRAM] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  1    wreg      void 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3571 ;;      Params:         0       0       0       0       0       0       0       0       0
  3572 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3573 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3574 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3575 ;;Total ram usage:        2 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 6
  3578 ;; This function calls:
  3579 ;;		_HabilitaLCD
  3580 ;;		_RetardoLCD
  3581 ;; This function is called by:
  3582 ;;		_InicializaLCD
  3583 ;;		_BorraLCD
  3584 ;;		_EscribeLCD_c
  3585 ;;		_DireccionaLCD
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text16
  3590   00187E                     __ptext16:
  3591                           	callstack 0
  3592   00187E                     _EnviaDato:
  3593                           	callstack 22
  3594                           
  3595                           ;incstack = 0
  3596                           ;EnviaDato@a stored from wreg
  3597   00187E  6E11               	movwf	EnviaDato@a^0,c
  3598                           
  3599                           ;LibLCDXC8.h: 53: if(interfaz==4){
  3600   001880  0E04               	movlw	4
  3601   001882  1850               	xorwf	_interfaz^0,w,c
  3602   001884  A4D8               	btfss	status,2,c
  3603   001886  D017               	goto	l3132
  3604                           
  3605                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3606   001888  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3607   00188C  0EF0               	movlw	240
  3608   00188E  1610               	andwf	??_EnviaDato^0,f,c
  3609   001890  508C               	movf	140,w,c	;volatile
  3610   001892  0B0F               	andlw	15
  3611   001894  1010               	iorwf	??_EnviaDato^0,w,c
  3612   001896  6E8C               	movwf	140,c	;volatile
  3613                           
  3614                           ;LibLCDXC8.h: 55: HabilitaLCD();
  3615   001898  EC4A  F00D         	call	_HabilitaLCD	;wreg free
  3616                           
  3617                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  3618   00189C  0E01               	movlw	1
  3619   00189E  EC6E  F00B         	call	_RetardoLCD
  3620                           
  3621                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  3622   0018A2  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3623   0018A6  3A10               	swapf	??_EnviaDato^0,f,c
  3624   0018A8  0EF0               	movlw	240
  3625   0018AA  1610               	andwf	??_EnviaDato^0,f,c
  3626   0018AC  508C               	movf	140,w,c	;volatile
  3627   0018AE  0B0F               	andlw	15
  3628   0018B0  1010               	iorwf	??_EnviaDato^0,w,c
  3629   0018B2  6E8C               	movwf	140,c	;volatile
  3630                           
  3631                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  3632   0018B4  0012               	return	
  3633   0018B6                     l3132:
  3634   0018B6  0E08               	movlw	8
  3635   0018B8  1850               	xorwf	_interfaz^0,w,c
  3636   0018BA  A4D8               	btfss	status,2,c
  3637   0018BC  0012               	return	
  3638                           
  3639                           ;LibLCDXC8.h: 59: LATD=a;
  3640   0018BE  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  3641   0018C2  0012               	return		;funcret
  3642   0018C4                     __end_of_EnviaDato:
  3643                           	callstack 0
  3644                           
  3645 ;; *************** function _RetardoLCD *****************
  3646 ;; Defined at:
  3647 ;;		line 309 in file "LibLCDXC8.h"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  a               1    wreg     unsigned char 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  a               1   14[COMRAM] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3661 ;;      Params:         0       0       0       0       0       0       0       0       0
  3662 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3663 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3664 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3665 ;;Total ram usage:        2 bytes
  3666 ;; Hardware stack levels used: 1
  3667 ;; Hardware stack levels required when called: 5
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_EnviaDato
  3672 ;;		_InicializaLCD
  3673 ;;		_BorraLCD
  3674 ;;		_EscribeLCD_c
  3675 ;;		_DireccionaLCD
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text17
  3680   0016DC                     __ptext17:
  3681                           	callstack 0
  3682   0016DC                     _RetardoLCD:
  3683                           	callstack 23
  3684                           
  3685                           ;incstack = 0
  3686                           ;RetardoLCD@a stored from wreg
  3687   0016DC  6E0F               	movwf	RetardoLCD@a^0,c
  3688                           
  3689                           ;LibLCDXC8.h: 310: switch(a){
  3690   0016DE  D01B               	goto	l3120
  3691   0016E0                     l3110:
  3692   0016E0  0E05               	movlw	5
  3693   0016E2  6E0E               	movwf	??_RetardoLCD^0,c
  3694   0016E4  0EDE               	movlw	222
  3695   0016E6                     u4807:
  3696   0016E6  2EE8               	decfsz	wreg,f,c
  3697   0016E8  D7FE               	bra	u4807
  3698   0016EA  2E0E               	decfsz	??_RetardoLCD^0,f,c
  3699   0016EC  D7FC               	bra	u4807
  3700                           
  3701                           ;LibLCDXC8.h: 313: break;
  3702   0016EE  0012               	return	
  3703   0016F0                     l3112:
  3704   0016F0  0E53               	movlw	83
  3705   0016F2                     u4817:
  3706   0016F2  2EE8               	decfsz	wreg,f,c
  3707   0016F4  D7FE               	bra	u4817
  3708   0016F6  F000               	nop	
  3709                           
  3710                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3711   0016F8  0E35               	movlw	53
  3712   0016FA                     u4827:
  3713   0016FA  2EE8               	decfsz	wreg,f,c
  3714   0016FC  D7FE               	bra	u4827
  3715   0016FE  F000               	nop	
  3716                           
  3717                           ;LibLCDXC8.h: 317: break;
  3718   001700  0012               	return	
  3719   001702                     l3114:
  3720   001702  0E08               	movlw	8
  3721   001704                     u4837:
  3722   001704  2EE8               	decfsz	wreg,f,c
  3723   001706  D7FE               	bra	u4837
  3724   001708  F000               	nop	
  3725                           
  3726                           ;LibLCDXC8.h: 320: break;
  3727   00170A  0012               	return	
  3728   00170C                     l3116:
  3729   00170C  0E03               	movlw	3
  3730   00170E                     u4847:
  3731   00170E  2EE8               	decfsz	wreg,f,c
  3732   001710  D7FE               	bra	u4847
  3733   001712  F000               	nop	
  3734                           
  3735                           ;LibLCDXC8.h: 323: break;
  3736   001714  0012               	return	
  3737   001716                     l3120:
  3738   001716  500F               	movf	RetardoLCD@a^0,w,c
  3739                           
  3740                           ; Switch size 1, requested type "simple"
  3741                           ; Number of cases is 4, Range of values is 1 to 4
  3742                           ; switch strategies available:
  3743                           ; Name         Instructions Cycles
  3744                           ; simple_byte           13     7 (average)
  3745                           ;	Chosen strategy is simple_byte
  3746   001718  0A01               	xorlw	1	; case 1
  3747   00171A  B4D8               	btfsc	status,2,c
  3748   00171C  D7E1               	goto	l3110
  3749   00171E  0A03               	xorlw	3	; case 2
  3750   001720  B4D8               	btfsc	status,2,c
  3751   001722  D7E6               	goto	l3112
  3752   001724  0A01               	xorlw	1	; case 3
  3753   001726  B4D8               	btfsc	status,2,c
  3754   001728  D7EC               	goto	l3114
  3755   00172A  0A07               	xorlw	7	; case 4
  3756   00172C  A4D8               	btfss	status,2,c
  3757   00172E  0012               	return	
  3758   001730  D7ED               	goto	l3116
  3759   001732                     __end_of_RetardoLCD:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _HabilitaLCD *****************
  3763 ;; Defined at:
  3764 ;;		line 96 in file "LibLCDXC8.h"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 5
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_EnviaDato
  3789 ;;		_InicializaLCD
  3790 ;;		_BorraLCD
  3791 ;;		_EscribeLCD_c
  3792 ;;		_DireccionaLCD
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text18
  3797   001A94                     __ptext18:
  3798                           	callstack 0
  3799   001A94                     _HabilitaLCD:
  3800                           	callstack 23
  3801                           
  3802                           ;LibLCDXC8.h: 98: LATE1=1;
  3803                           
  3804                           ;incstack = 0
  3805   001A94  828D               	bsf	3981,1,c	;volatile
  3806                           
  3807                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3808   001A96  0E03               	movlw	3
  3809   001A98                     u4857:
  3810   001A98  2EE8               	decfsz	wreg,f,c
  3811   001A9A  D7FE               	bra	u4857
  3812   001A9C  F000               	nop	
  3813                           
  3814                           ;LibLCDXC8.h: 101: LATE1=0;
  3815   001A9E  928D               	bcf	3981,1,c	;volatile
  3816   001AA0  0012               	return		;funcret
  3817   001AA2                     __end_of_HabilitaLCD:
  3818                           	callstack 0
  3819                           
  3820 ;; *************** function _ConfiguraLCD *****************
  3821 ;; Defined at:
  3822 ;;		line 48 in file "LibLCDXC8.h"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  a               1    wreg     unsigned char 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  a               1   13[COMRAM] unsigned char 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0
  3837 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3839 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3840 ;;Total ram usage:        1 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 5
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_main
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text19
  3851   0019FC                     __ptext19:
  3852                           	callstack 0
  3853   0019FC                     _ConfiguraLCD:
  3854                           	callstack 25
  3855                           
  3856                           ;incstack = 0
  3857                           ;ConfiguraLCD@a stored from wreg
  3858   0019FC  6E0E               	movwf	ConfiguraLCD@a^0,c
  3859                           
  3860                           ;LibLCDXC8.h: 49: if(a==4 | a ==8)
  3861   0019FE  0E04               	movlw	4
  3862   001A00  180E               	xorwf	ConfiguraLCD@a^0,w,c
  3863   001A02  B4D8               	btfsc	status,2,c
  3864   001A04  D004               	goto	u2020
  3865   001A06  0E08               	movlw	8
  3866   001A08  180E               	xorwf	ConfiguraLCD@a^0,w,c
  3867   001A0A  A4D8               	btfss	status,2,c
  3868   001A0C  0012               	return	
  3869   001A0E                     u2020:
  3870                           
  3871                           ;LibLCDXC8.h: 50: interfaz=a;
  3872   001A0E  C00E  F050         	movff	ConfiguraLCD@a,_interfaz
  3873   001A12  0012               	return		;funcret
  3874   001A14                     __end_of_ConfiguraLCD:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _ColorRGB *****************
  3878 ;; Defined at:
  3879 ;;		line 244 in file "Lab4.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3895 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3896 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3897 ;;Total ram usage:        2 bytes
  3898 ;; Hardware stack levels used: 1
  3899 ;; Hardware stack levels required when called: 5
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_main
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text20
  3908   001594                     __ptext20:
  3909                           	callstack 0
  3910   001594                     _ColorRGB:
  3911                           	callstack 25
  3912                           
  3913                           ;Lab4.c: 245: if(color==8) color = 0;
  3914                           
  3915                           ;incstack = 0
  3916   001594  0E08               	movlw	8
  3917   001596  183E               	xorwf	_color^0,w,c
  3918   001598  103F               	iorwf	(_color+1)^0,w,c
  3919   00159A  A4D8               	btfss	status,2,c
  3920   00159C  D014               	goto	l2590
  3921   00159E  0E00               	movlw	0
  3922   0015A0  6E3F               	movwf	(_color+1)^0,c
  3923   0015A2  0E00               	movlw	0
  3924   0015A4  6E3E               	movwf	_color^0,c
  3925   0015A6  D00F               	goto	l2590
  3926   0015A8                     l2572:
  3927                           
  3928                           ;Lab4.c: 248: LATC = 0b00000000;
  3929   0015A8  0E00               	movlw	0
  3930   0015AA  D00B               	goto	L12
  3931   0015AC                     l2574:
  3932                           
  3933                           ;Lab4.c: 251: LATC = 0b00000101;
  3934   0015AC  0E05               	movlw	5
  3935   0015AE  D009               	goto	L12
  3936   0015B0                     l2576:
  3937                           
  3938                           ;Lab4.c: 254: LATC = 0b00000110;
  3939   0015B0  0E06               	movlw	6
  3940   0015B2  D007               	goto	L12
  3941   0015B4                     l2578:
  3942                           
  3943                           ;Lab4.c: 257: LATC = 0b00000011;
  3944   0015B4  0E03               	movlw	3
  3945   0015B6  D005               	goto	L12
  3946   0015B8                     l2580:
  3947                           
  3948                           ;Lab4.c: 260: LATC = 0b00000010;
  3949   0015B8  0E02               	movlw	2
  3950   0015BA  D003               	goto	L12
  3951   0015BC                     l2584:
  3952                           
  3953                           ;Lab4.c: 266: LATC = 0b00000100;
  3954   0015BC  0E04               	movlw	4
  3955   0015BE  D001               	goto	L12
  3956   0015C0                     l2586:
  3957                           
  3958                           ;Lab4.c: 269: LATC = 0b00000111;
  3959   0015C0  0E07               	movlw	7
  3960   0015C2                     L12:
  3961   0015C2  6E8B               	movwf	139,c	;volatile
  3962                           
  3963                           ;Lab4.c: 270: break;
  3964   0015C4  D021               	goto	l2592
  3965   0015C6                     l2590:
  3966   0015C6  C03E  F00E         	movff	_color,??_ColorRGB
  3967   0015CA  C03F  F00F         	movff	_color+1,??_ColorRGB+1
  3968                           
  3969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3970                           ; Switch size 1, requested type "simple"
  3971                           ; Number of cases is 1, Range of values is 0 to 0
  3972                           ; switch strategies available:
  3973                           ; Name         Instructions Cycles
  3974                           ; simple_byte            4     3 (average)
  3975                           ;	Chosen strategy is simple_byte
  3976   0015CE  500F               	movf	(??_ColorRGB+1)^0,w,c
  3977   0015D0  0A00               	xorlw	0	; case 0
  3978   0015D2  A4D8               	btfss	status,2,c
  3979   0015D4  D019               	goto	l2592
  3980                           
  3981                           ; Switch size 1, requested type "simple"
  3982                           ; Number of cases is 8, Range of values is 0 to 7
  3983                           ; switch strategies available:
  3984                           ; Name         Instructions Cycles
  3985                           ; simple_byte           25    13 (average)
  3986                           ;	Chosen strategy is simple_byte
  3987   0015D6  500E               	movf	??_ColorRGB^0,w,c
  3988   0015D8  0A00               	xorlw	0	; case 0
  3989   0015DA  B4D8               	btfsc	status,2,c
  3990   0015DC  D7E5               	goto	l2572
  3991   0015DE  0A01               	xorlw	1	; case 1
  3992   0015E0  B4D8               	btfsc	status,2,c
  3993   0015E2  D7E4               	goto	l2574
  3994   0015E4  0A03               	xorlw	3	; case 2
  3995   0015E6  B4D8               	btfsc	status,2,c
  3996   0015E8  D7E3               	goto	l2576
  3997   0015EA  0A01               	xorlw	1	; case 3
  3998   0015EC  B4D8               	btfsc	status,2,c
  3999   0015EE  D7E2               	goto	l2578
  4000   0015F0  0A07               	xorlw	7	; case 4
  4001   0015F2  B4D8               	btfsc	status,2,c
  4002   0015F4  D7E1               	goto	l2580
  4003   0015F6  0A01               	xorlw	1	; case 5
  4004   0015F8  B4D8               	btfsc	status,2,c
  4005   0015FA  D7DA               	goto	l2576
  4006   0015FC  0A03               	xorlw	3	; case 6
  4007   0015FE  B4D8               	btfsc	status,2,c
  4008   001600  D7DD               	goto	l2584
  4009   001602  0A01               	xorlw	1	; case 7
  4010   001604  B4D8               	btfsc	status,2,c
  4011   001606  D7DC               	goto	l2586
  4012   001608                     l2592:
  4013                           
  4014                           ;Lab4.c: 274: color += 1;
  4015   001608  4A3E               	infsnz	_color^0,f,c
  4016   00160A  2A3F               	incf	(_color+1)^0,f,c
  4017   00160C  0012               	return		;funcret
  4018   00160E                     __end_of_ColorRGB:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _ISR *****************
  4022 ;; Defined at:
  4023 ;;		line 286 in file "Lab4.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4039 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4040 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4041 ;;Total ram usage:        4 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; Hardware stack levels required when called: 4
  4044 ;; This function calls:
  4045 ;;		i2_BorraLCD
  4046 ;;		i2_DireccionaLCD
  4047 ;;		i2_MensajeLCD_Var
  4048 ;; This function is called by:
  4049 ;;		Interrupt level 2
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	intcode
  4054   000008                     __pintcode:
  4055                           	callstack 0
  4056   000008                     _ISR:
  4057                           	callstack 21
  4058                           
  4059                           ;incstack = 0
  4060   000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4061   00000A  ED81  F00A         	call	int_func,f	;refresh shadow registers
  4062                           
  4063                           	psect	intcode_body
  4064   001502                     __pintcode_body:
  4065                           	callstack 21
  4066   001502                     int_func:
  4067                           	callstack 21
  4068   001502  0006               	pop		; remove dummy address from shadow register refresh
  4069   001504  CFF6 F00A          	movff	tblptrl,??_ISR
  4070   001508  CFF7 F00B          	movff	tblptrh,??_ISR+1
  4071   00150C  CFF8 F00C          	movff	tblptru,??_ISR+2
  4072   001510  CFF5 F00D          	movff	tablat,??_ISR+3
  4073                           
  4074                           ;Lab4.c: 287: if(TMR0IF==1){
  4075   001514  A4F2               	btfss	4082,2,c	;volatile
  4076   001516  D019               	goto	i2l3088
  4077                           
  4078                           ;Lab4.c: 288: if(!verificador) contador = contador +1;
  4079   001518  5038               	movf	_verificador^0,w,c
  4080   00151A  1039               	iorwf	(_verificador+1)^0,w,c
  4081   00151C  A4D8               	btfss	status,2,c
  4082   00151E  D007               	goto	i2l3082
  4083   001520  0E01               	movlw	1
  4084   001522  243C               	addwf	_contador^0,w,c
  4085   001524  6E3C               	movwf	_contador^0,c
  4086   001526  0E00               	movlw	0
  4087   001528  203D               	addwfc	(_contador+1)^0,w,c
  4088   00152A  6E3D               	movwf	(_contador+1)^0,c
  4089   00152C  D004               	goto	i2l3084
  4090   00152E                     i2l3082:
  4091                           
  4092                           ;Lab4.c: 289: else contador = 0;
  4093   00152E  0E00               	movlw	0
  4094   001530  6E3D               	movwf	(_contador+1)^0,c
  4095   001532  0E00               	movlw	0
  4096   001534  6E3C               	movwf	_contador^0,c
  4097   001536                     i2l3084:
  4098                           
  4099                           ;Lab4.c: 290: TMR0IF=0;
  4100   001536  94F2               	bcf	4082,2,c	;volatile
  4101                           
  4102                           ;Lab4.c: 291: LATE2 = !LATE2;
  4103   001538  B48D               	btfsc	3981,2,c	;volatile
  4104   00153A  D002               	goto	i2u339_40
  4105   00153C  848D               	bsf	3981,2,c	;volatile
  4106   00153E  D001               	goto	i2u340_45
  4107   001540                     i2u339_40:
  4108   001540  948D               	bcf	3981,2,c	;volatile
  4109   001542                     i2u340_45:
  4110                           
  4111                           ;Lab4.c: 292: TMR0 = 49911;
  4112   001542  0EC2               	movlw	194
  4113   001544  6ED7               	movwf	215,c	;volatile
  4114   001546  0EF7               	movlw	247
  4115   001548  6ED6               	movwf	214,c	;volatile
  4116   00154A                     i2l3088:
  4117                           
  4118                           ;Lab4.c: 293: };Lab4.c: 295: if(contador == 2100){
  4119   00154A  0E34               	movlw	52
  4120   00154C  183C               	xorwf	_contador^0,w,c
  4121   00154E  E118               	bnz	i2l327
  4122   001550  0E08               	movlw	8
  4123   001552  183D               	xorwf	(_contador+1)^0,w,c
  4124   001554  A4D8               	btfss	status,2,c
  4125   001556  D014               	goto	i2l327
  4126                           
  4127                           ;Lab4.c: 296: if(!verificador){
  4128   001558  5038               	movf	_verificador^0,w,c
  4129   00155A  1039               	iorwf	(_verificador+1)^0,w,c
  4130   00155C  A4D8               	btfss	status,2,c
  4131   00155E  D010               	goto	i2l327
  4132                           
  4133                           ;Lab4.c: 297: LATC7 = !LATC7;
  4134   001560  BE8B               	btfsc	3979,7,c	;volatile
  4135   001562  D002               	goto	i2u343_40
  4136   001564  8E8B               	bsf	3979,7,c	;volatile
  4137   001566  D001               	goto	i2u344_45
  4138   001568                     i2u343_40:
  4139   001568  9E8B               	bcf	3979,7,c	;volatile
  4140   00156A                     i2u344_45:
  4141                           
  4142                           ;Lab4.c: 298: BorraLCD();
  4143   00156A  EC40  F00D         	call	i2_BorraLCD	;wreg free
  4144                           
  4145                           ;Lab4.c: 299: DireccionaLCD(0x82);
  4146   00156E  0E82               	movlw	130
  4147   001570  EC2B  F00D         	call	i2_DireccionaLCD
  4148                           
  4149                           ;Lab4.c: 300: MensajeLCD_Var("LVP Activado");
  4150   001574  0E2C               	movlw	low STR_11
  4151   001576  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4152   001578  EC16  F00C         	call	i2_MensajeLCD_Var	;wreg free
  4153   00157C  0003               	sleep		;# 
  4154   00157E                     i2l324:
  4155   00157E  D7FF               	goto	i2l324
  4156   001580                     i2l327:
  4157   001580  C00D  FFF5         	movff	??_ISR+3,tablat
  4158   001584  C00C  FFF8         	movff	??_ISR+2,tblptru
  4159   001588  C00B  FFF7         	movff	??_ISR+1,tblptrh
  4160   00158C  C00A  FFF6         	movff	??_ISR,tblptrl
  4161   001590  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4162   001592  0011               	retfie		f
  4163   001594                     __end_of_ISR:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function i2_MensajeLCD_Var *****************
  4167 ;; Defined at:
  4168 ;;		line 261 in file "LibLCDXC8.h"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  a               1    5[COMRAM] PTR unsigned char 
  4171 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  4172 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  4173 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  4174 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  i               2    7[COMRAM] int 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4186 ;;      Params:         1       0       0       0       0       0       0       0       0
  4187 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4188 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4189 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4190 ;;Total ram usage:        4 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 3
  4193 ;; This function calls:
  4194 ;;		i2_EscribeLCD_c
  4195 ;;		i2_strlen
  4196 ;; This function is called by:
  4197 ;;		_ISR
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text22
  4202   00182C                     __ptext22:
  4203                           	callstack 0
  4204   00182C                     i2_MensajeLCD_Var:
  4205                           	callstack 21
  4206                           
  4207                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  4208                           
  4209                           ;incstack = 0
  4210   00182C  0E00               	movlw	0
  4211   00182E  6E09               	movwf	(i2MensajeLCD_Var@i+1)^0,c
  4212   001830  0E00               	movlw	0
  4213   001832  6E08               	movwf	i2MensajeLCD_Var@i^0,c
  4214   001834  D019               	goto	i2l2726
  4215   001836                     i2l2718:
  4216                           
  4217                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  4218   001836  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4219   001838  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4220   00183A  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4221   00183C  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4222   001840                     	if	1	;There is more than 1 active tblptr byte
  4223   001840  0E08               	movlw	high __smallconst
  4224   001842  6EF7               	movwf	tblptrh,c
  4225   001844                     	endif
  4226   001844                     	if	0	;tblptru may be non-zero
  4227   001844                     	endif
  4228   001844                     	if	0	;tblptru may be non-zero
  4229   001844                     	endif
  4230   001844  0008               	tblrd		*
  4231   001846  50F5               	movf	tablat,w,c
  4232   001848  0900               	iorlw	0
  4233   00184A  B4D8               	btfsc	status,2,c
  4234   00184C  0012               	return	
  4235                           
  4236                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  4237   00184E  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4238   001850  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4239   001852  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4240   001854  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4241   001858                     	if	1	;There is more than 1 active tblptr byte
  4242   001858  0E08               	movlw	high __smallconst
  4243   00185A  6EF7               	movwf	tblptrh,c
  4244   00185C                     	endif
  4245   00185C                     	if	0	;tblptru may be non-zero
  4246   00185C                     	endif
  4247   00185C                     	if	0	;tblptru may be non-zero
  4248   00185C                     	endif
  4249   00185C  0008               	tblrd		*
  4250   00185E  50F5               	movf	tablat,w,c
  4251   001860  EC20  F00D         	call	i2_EscribeLCD_c
  4252   001864  4A08               	infsnz	i2MensajeLCD_Var@i^0,f,c
  4253   001866  2A09               	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  4254   001868                     i2l2726:
  4255   001868  C006  F001         	movff	i2MensajeLCD_Var@a,i2strlen@s
  4256   00186C  ECD7  F00C         	call	i2_strlen	;wreg free
  4257   001870  5001               	movf	?i2_strlen^0,w,c
  4258   001872  5C08               	subwf	i2MensajeLCD_Var@i^0,w,c
  4259   001874  5002               	movf	(?i2_strlen+1)^0,w,c
  4260   001876  5809               	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  4261   001878  B0D8               	btfsc	status,0,c
  4262   00187A  0012               	return	
  4263   00187C  D7DC               	goto	i2l2718
  4264   00187E                     __end_ofi2_MensajeLCD_Var:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function i2_strlen *****************
  4268 ;; Defined at:
  4269 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  s               1    0[COMRAM] PTR const unsigned char 
  4272 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  4273 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  4274 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  4275 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  4278 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  4279 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  4280 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  4281 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  2    0[COMRAM] unsigned int 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4291 ;;      Params:         2       0       0       0       0       0       0       0       0
  4292 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4294 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4295 ;;Total ram usage:        3 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		i2_MensajeLCD_Var
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text23
  4305   0019AE                     __ptext23:
  4306                           	callstack 0
  4307   0019AE                     i2_strlen:
  4308                           	callstack 23
  4309                           
  4310                           ;incstack = 0
  4311   0019AE  C001  F003         	movff	i2strlen@s,i2strlen@cp
  4312   0019B2  D001               	goto	i2l2366
  4313   0019B4                     i2l2364:
  4314   0019B4  2A03               	incf	i2strlen@cp^0,f,c
  4315   0019B6                     i2l2366:
  4316   0019B6  C003  FFF6         	movff	i2strlen@cp,tblptrl
  4317   0019BA                     	if	1	;There is more than 1 active tblptr byte
  4318   0019BA  0E08               	movlw	high __smallconst
  4319   0019BC  6EF7               	movwf	tblptrh,c
  4320   0019BE                     	endif
  4321   0019BE                     	if	0	;tblptru may be non-zero
  4322   0019BE                     	endif
  4323   0019BE                     	if	0	;tblptru may be non-zero
  4324   0019BE                     	endif
  4325   0019BE  0008               	tblrd		*
  4326   0019C0  50F5               	movf	tablat,w,c
  4327   0019C2  0900               	iorlw	0
  4328   0019C4  A4D8               	btfss	status,2,c
  4329   0019C6  D7F6               	goto	i2l2364
  4330   0019C8  5001               	movf	i2strlen@s^0,w,c
  4331   0019CA  5C03               	subwf	i2strlen@cp^0,w,c
  4332   0019CC  6E01               	movwf	?i2_strlen^0,c
  4333   0019CE  6A02               	clrf	(?i2_strlen+1)^0,c
  4334   0019D0  BE01               	btfsc	?i2_strlen^0,7,c
  4335   0019D2  0602               	decf	(?i2_strlen+1)^0,f,c
  4336   0019D4  0012               	return		;funcret
  4337   0019D6                     __end_ofi2_strlen:
  4338                           	callstack 0
  4339                           
  4340 ;; *************** function i2_EscribeLCD_c *****************
  4341 ;; Defined at:
  4342 ;;		line 117 in file "LibLCDXC8.h"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  a               1    wreg     unsigned char 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  a               1    4[COMRAM] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4356 ;;      Params:         0       0       0       0       0       0       0       0       0
  4357 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4359 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4360 ;;Total ram usage:        1 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 2
  4363 ;; This function calls:
  4364 ;;		i2_EnviaDato
  4365 ;;		i2_HabilitaLCD
  4366 ;;		i2_RetardoLCD
  4367 ;; This function is called by:
  4368 ;;		i2_MensajeLCD_Var
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text24
  4373   001A40                     __ptext24:
  4374                           	callstack 0
  4375   001A40                     i2_EscribeLCD_c:
  4376                           	callstack 21
  4377                           
  4378                           ;incstack = 0
  4379                           ;i2EscribeLCD_c@a stored from wreg
  4380   001A40  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4381                           
  4382                           ;LibLCDXC8.h: 121: LATE0=1;
  4383   001A42  808D               	bsf	3981,0,c	;volatile
  4384                           
  4385                           ;LibLCDXC8.h: 122: EnviaDato(a);
  4386   001A44  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4387   001A46  EC62  F00C         	call	i2_EnviaDato
  4388                           
  4389                           ;LibLCDXC8.h: 123: HabilitaLCD();
  4390   001A4A  EC51  F00D         	call	i2_HabilitaLCD	;wreg free
  4391                           
  4392                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  4393   001A4E  0E04               	movlw	4
  4394   001A50  EC99  F00B         	call	i2_RetardoLCD
  4395   001A54  0012               	return		;funcret
  4396   001A56                     __end_ofi2_EscribeLCD_c:
  4397                           	callstack 0
  4398                           
  4399 ;; *************** function i2_DireccionaLCD *****************
  4400 ;; Defined at:
  4401 ;;		line 273 in file "LibLCDXC8.h"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  a               1    wreg     unsigned char 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  a               1    4[COMRAM] unsigned char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4415 ;;      Params:         0       0       0       0       0       0       0       0       0
  4416 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4418 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4419 ;;Total ram usage:        1 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; Hardware stack levels required when called: 2
  4422 ;; This function calls:
  4423 ;;		i2_EnviaDato
  4424 ;;		i2_HabilitaLCD
  4425 ;;		i2_RetardoLCD
  4426 ;; This function is called by:
  4427 ;;		_ISR
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text25
  4432   001A56                     __ptext25:
  4433                           	callstack 0
  4434   001A56                     i2_DireccionaLCD:
  4435                           	callstack 22
  4436                           
  4437                           ;incstack = 0
  4438                           ;i2DireccionaLCD@a stored from wreg
  4439   001A56  6E05               	movwf	i2DireccionaLCD@a^0,c
  4440                           
  4441                           ;LibLCDXC8.h: 276: LATE0=0;
  4442   001A58  908D               	bcf	3981,0,c	;volatile
  4443                           
  4444                           ;LibLCDXC8.h: 277: EnviaDato(a);
  4445   001A5A  5005               	movf	i2DireccionaLCD@a^0,w,c
  4446   001A5C  EC62  F00C         	call	i2_EnviaDato
  4447                           
  4448                           ;LibLCDXC8.h: 278: HabilitaLCD();
  4449   001A60  EC51  F00D         	call	i2_HabilitaLCD	;wreg free
  4450                           
  4451                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  4452   001A64  0E04               	movlw	4
  4453   001A66  EC99  F00B         	call	i2_RetardoLCD
  4454   001A6A  0012               	return		;funcret
  4455   001A6C                     __end_ofi2_DireccionaLCD:
  4456                           	callstack 0
  4457                           
  4458 ;; *************** function i2_BorraLCD *****************
  4459 ;; Defined at:
  4460 ;;		line 103 in file "LibLCDXC8.h"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4477 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 2
  4481 ;; This function calls:
  4482 ;;		i2_EnviaDato
  4483 ;;		i2_HabilitaLCD
  4484 ;;		i2_RetardoLCD
  4485 ;; This function is called by:
  4486 ;;		_ISR
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text26
  4491   001A80                     __ptext26:
  4492                           	callstack 0
  4493   001A80                     i2_BorraLCD:
  4494                           	callstack 22
  4495                           
  4496                           ;LibLCDXC8.h: 105: LATE0=0;
  4497                           
  4498                           ;incstack = 0
  4499   001A80  908D               	bcf	3981,0,c	;volatile
  4500                           
  4501                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  4502   001A82  0E01               	movlw	1
  4503   001A84  EC62  F00C         	call	i2_EnviaDato
  4504                           
  4505                           ;LibLCDXC8.h: 107: HabilitaLCD();
  4506   001A88  EC51  F00D         	call	i2_HabilitaLCD	;wreg free
  4507                           
  4508                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  4509   001A8C  0E02               	movlw	2
  4510   001A8E  EC99  F00B         	call	i2_RetardoLCD
  4511   001A92  0012               	return		;funcret
  4512   001A94                     __end_ofi2_BorraLCD:
  4513                           	callstack 0
  4514                           
  4515 ;; *************** function i2_EnviaDato *****************
  4516 ;; Defined at:
  4517 ;;		line 52 in file "LibLCDXC8.h"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  a               1    wreg     unsigned char 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  a               1    3[COMRAM] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4531 ;;      Params:         0       0       0       0       0       0       0       0       0
  4532 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4533 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4534 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4535 ;;Total ram usage:        2 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; Hardware stack levels required when called: 1
  4538 ;; This function calls:
  4539 ;;		i2_HabilitaLCD
  4540 ;;		i2_RetardoLCD
  4541 ;; This function is called by:
  4542 ;;		i2_BorraLCD
  4543 ;;		i2_EscribeLCD_c
  4544 ;;		i2_DireccionaLCD
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text27
  4549   0018C4                     __ptext27:
  4550                           	callstack 0
  4551   0018C4                     i2_EnviaDato:
  4552                           	callstack 21
  4553                           
  4554                           ;incstack = 0
  4555                           ;i2EnviaDato@a stored from wreg
  4556   0018C4  6E04               	movwf	i2EnviaDato@a^0,c
  4557                           
  4558                           ;LibLCDXC8.h: 53: if(interfaz==4){
  4559   0018C6  0E04               	movlw	4
  4560   0018C8  1850               	xorwf	_interfaz^0,w,c
  4561   0018CA  A4D8               	btfss	status,2,c
  4562   0018CC  D017               	goto	i2l2188
  4563                           
  4564                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4565   0018CE  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4566   0018D2  0EF0               	movlw	240
  4567   0018D4  1603               	andwf	??i2_EnviaDato^0,f,c
  4568   0018D6  508C               	movf	140,w,c	;volatile
  4569   0018D8  0B0F               	andlw	15
  4570   0018DA  1003               	iorwf	??i2_EnviaDato^0,w,c
  4571   0018DC  6E8C               	movwf	140,c	;volatile
  4572                           
  4573                           ;LibLCDXC8.h: 55: HabilitaLCD();
  4574   0018DE  EC51  F00D         	call	i2_HabilitaLCD	;wreg free
  4575                           
  4576                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  4577   0018E2  0E01               	movlw	1
  4578   0018E4  EC99  F00B         	call	i2_RetardoLCD
  4579                           
  4580                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  4581   0018E8  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4582   0018EC  3A03               	swapf	??i2_EnviaDato^0,f,c
  4583   0018EE  0EF0               	movlw	240
  4584   0018F0  1603               	andwf	??i2_EnviaDato^0,f,c
  4585   0018F2  508C               	movf	140,w,c	;volatile
  4586   0018F4  0B0F               	andlw	15
  4587   0018F6  1003               	iorwf	??i2_EnviaDato^0,w,c
  4588   0018F8  6E8C               	movwf	140,c	;volatile
  4589                           
  4590                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  4591   0018FA  0012               	return	
  4592   0018FC                     i2l2188:
  4593   0018FC  0E08               	movlw	8
  4594   0018FE  1850               	xorwf	_interfaz^0,w,c
  4595   001900  A4D8               	btfss	status,2,c
  4596   001902  0012               	return	
  4597                           
  4598                           ;LibLCDXC8.h: 59: LATD=a;
  4599   001904  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4600   001908  0012               	return		;funcret
  4601   00190A                     __end_ofi2_EnviaDato:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function i2_RetardoLCD *****************
  4605 ;; Defined at:
  4606 ;;		line 309 in file "LibLCDXC8.h"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  a               1    wreg     unsigned char 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  a               1    1[COMRAM] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4620 ;;      Params:         0       0       0       0       0       0       0       0       0
  4621 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4622 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4623 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4624 ;;Total ram usage:        2 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		i2_EnviaDato
  4630 ;;		i2_BorraLCD
  4631 ;;		i2_EscribeLCD_c
  4632 ;;		i2_DireccionaLCD
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text28
  4637   001732                     __ptext28:
  4638                           	callstack 0
  4639   001732                     i2_RetardoLCD:
  4640                           	callstack 22
  4641                           
  4642                           ;incstack = 0
  4643                           ;i2RetardoLCD@a stored from wreg
  4644   001732  6E02               	movwf	i2RetardoLCD@a^0,c
  4645                           
  4646                           ;LibLCDXC8.h: 310: switch(a){
  4647   001734  D01B               	goto	i2l2158
  4648   001736                     i2l2148:
  4649   001736  0E05               	movlw	5
  4650   001738  6E01               	movwf	??i2_RetardoLCD^0,c
  4651   00173A  0EDE               	movlw	222
  4652   00173C                     i2u486_47:
  4653   00173C  2EE8               	decfsz	wreg,f,c
  4654   00173E  D7FE               	bra	i2u486_47
  4655   001740  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4656   001742  D7FC               	bra	i2u486_47
  4657                           
  4658                           ;LibLCDXC8.h: 313: break;
  4659   001744  0012               	return	
  4660   001746                     i2l2150:
  4661   001746  0E53               	movlw	83
  4662   001748                     i2u487_47:
  4663   001748  2EE8               	decfsz	wreg,f,c
  4664   00174A  D7FE               	bra	i2u487_47
  4665   00174C  F000               	nop	
  4666                           
  4667                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4668   00174E  0E35               	movlw	53
  4669   001750                     i2u488_47:
  4670   001750  2EE8               	decfsz	wreg,f,c
  4671   001752  D7FE               	bra	i2u488_47
  4672   001754  F000               	nop	
  4673                           
  4674                           ;LibLCDXC8.h: 317: break;
  4675   001756  0012               	return	
  4676   001758                     i2l2152:
  4677   001758  0E08               	movlw	8
  4678   00175A                     i2u489_47:
  4679   00175A  2EE8               	decfsz	wreg,f,c
  4680   00175C  D7FE               	bra	i2u489_47
  4681   00175E  F000               	nop	
  4682                           
  4683                           ;LibLCDXC8.h: 320: break;
  4684   001760  0012               	return	
  4685   001762                     i2l2154:
  4686   001762  0E03               	movlw	3
  4687   001764                     i2u490_47:
  4688   001764  2EE8               	decfsz	wreg,f,c
  4689   001766  D7FE               	bra	i2u490_47
  4690   001768  F000               	nop	
  4691                           
  4692                           ;LibLCDXC8.h: 323: break;
  4693   00176A  0012               	return	
  4694   00176C                     i2l2158:
  4695   00176C  5002               	movf	i2RetardoLCD@a^0,w,c
  4696                           
  4697                           ; Switch size 1, requested type "simple"
  4698                           ; Number of cases is 4, Range of values is 1 to 4
  4699                           ; switch strategies available:
  4700                           ; Name         Instructions Cycles
  4701                           ; simple_byte           13     7 (average)
  4702                           ;	Chosen strategy is simple_byte
  4703   00176E  0A01               	xorlw	1	; case 1
  4704   001770  B4D8               	btfsc	status,2,c
  4705   001772  D7E1               	goto	i2l2148
  4706   001774  0A03               	xorlw	3	; case 2
  4707   001776  B4D8               	btfsc	status,2,c
  4708   001778  D7E6               	goto	i2l2150
  4709   00177A  0A01               	xorlw	1	; case 3
  4710   00177C  B4D8               	btfsc	status,2,c
  4711   00177E  D7EC               	goto	i2l2152
  4712   001780  0A07               	xorlw	7	; case 4
  4713   001782  A4D8               	btfss	status,2,c
  4714   001784  0012               	return	
  4715   001786  D7ED               	goto	i2l2154
  4716   001788                     __end_ofi2_RetardoLCD:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function i2_HabilitaLCD *****************
  4720 ;; Defined at:
  4721 ;;		line 96 in file "LibLCDXC8.h"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      void 
  4728 ;; Registers used:
  4729 ;;		wreg
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4739 ;;Total ram usage:        0 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		i2_EnviaDato
  4745 ;;		i2_BorraLCD
  4746 ;;		i2_EscribeLCD_c
  4747 ;;		i2_DireccionaLCD
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text29
  4752   001AA2                     __ptext29:
  4753                           	callstack 0
  4754   001AA2                     i2_HabilitaLCD:
  4755                           	callstack 22
  4756                           
  4757                           ;LibLCDXC8.h: 98: LATE1=1;
  4758                           
  4759                           ;incstack = 0
  4760   001AA2  828D               	bsf	3981,1,c	;volatile
  4761                           
  4762                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4763   001AA4  0E03               	movlw	3
  4764   001AA6                     i2u491_47:
  4765   001AA6  2EE8               	decfsz	wreg,f,c
  4766   001AA8  D7FE               	bra	i2u491_47
  4767   001AAA  F000               	nop	
  4768                           
  4769                           ;LibLCDXC8.h: 101: LATE1=0;
  4770   001AAC  928D               	bcf	3981,1,c	;volatile
  4771   001AAE  0012               	return		;funcret
  4772   001AB0                     __end_ofi2_HabilitaLCD:
  4773                           	callstack 0
  4774                           
  4775                           	psect	rparam
  4776   000000                     
  4777                           	psect	temp
  4778   000051                     btemp:
  4779                           	callstack 0
  4780   000051                     	ds	1
  4781   000000                     int$flags	set	btemp
  4782   000000                     wtemp8	set	btemp+1
  4783   000000                     ttemp5	set	btemp+1
  4784   000000                     ttemp6	set	btemp+4
  4785   000000                     ttemp7	set	btemp+8
  4786                           
  4787                           	psect	idloc
  4788                           
  4789                           ;Config register IDLOC0 @ 0x200000
  4790                           ;	unspecified, using default values
  4791   200000                     	org	2097152
  4792   200000  FF                 	db	255
  4793                           
  4794                           ;Config register IDLOC1 @ 0x200001
  4795                           ;	unspecified, using default values
  4796   200001                     	org	2097153
  4797   200001  FF                 	db	255
  4798                           
  4799                           ;Config register IDLOC2 @ 0x200002
  4800                           ;	unspecified, using default values
  4801   200002                     	org	2097154
  4802   200002  FF                 	db	255
  4803                           
  4804                           ;Config register IDLOC3 @ 0x200003
  4805                           ;	unspecified, using default values
  4806   200003                     	org	2097155
  4807   200003  FF                 	db	255
  4808                           
  4809                           ;Config register IDLOC4 @ 0x200004
  4810                           ;	unspecified, using default values
  4811   200004                     	org	2097156
  4812   200004  FF                 	db	255
  4813                           
  4814                           ;Config register IDLOC5 @ 0x200005
  4815                           ;	unspecified, using default values
  4816   200005                     	org	2097157
  4817   200005  FF                 	db	255
  4818                           
  4819                           ;Config register IDLOC6 @ 0x200006
  4820                           ;	unspecified, using default values
  4821   200006                     	org	2097158
  4822   200006  FF                 	db	255
  4823                           
  4824                           ;Config register IDLOC7 @ 0x200007
  4825                           ;	unspecified, using default values
  4826   200007                     	org	2097159
  4827   200007  FF                 	db	255
  4828                           
  4829                           	psect	config
  4830                           
  4831                           ;Config register CONFIG1L @ 0x300000
  4832                           ;	unspecified, using default values
  4833                           ;	PLL Prescaler Selection bits
  4834                           ;	PLLDIV = 0x0, unprogrammed default
  4835                           ;	System Clock Postscaler Selection bits
  4836                           ;	CPUDIV = 0x0, unprogrammed default
  4837                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4838                           ;	USBDIV = 0x0, unprogrammed default
  4839   300000                     	org	3145728
  4840   300000  00                 	db	0
  4841                           
  4842                           ;Config register CONFIG1H @ 0x300001
  4843                           ;	Oscillator Selection bits
  4844                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4845                           ;	Fail-Safe Clock Monitor Enable bit
  4846                           ;	FCMEN = 0x0, unprogrammed default
  4847                           ;	Internal/External Oscillator Switchover bit
  4848                           ;	IESO = 0x0, unprogrammed default
  4849   300001                     	org	3145729
  4850   300001  09                 	db	9
  4851                           
  4852                           ;Config register CONFIG2L @ 0x300002
  4853                           ;	unspecified, using default values
  4854                           ;	Power-up Timer Enable bit
  4855                           ;	PWRT = 0x1, unprogrammed default
  4856                           ;	Brown-out Reset Enable bits
  4857                           ;	BOR = 0x3, unprogrammed default
  4858                           ;	Brown-out Reset Voltage bits
  4859                           ;	BORV = 0x3, unprogrammed default
  4860                           ;	USB Voltage Regulator Enable bit
  4861                           ;	VREGEN = 0x0, unprogrammed default
  4862   300002                     	org	3145730
  4863   300002  1F                 	db	31
  4864                           
  4865                           ;Config register CONFIG2H @ 0x300003
  4866                           ;	Watchdog Timer Enable bit
  4867                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4868                           ;	Watchdog Timer Postscale Select bits
  4869                           ;	WDTPS = 0xF, unprogrammed default
  4870   300003                     	org	3145731
  4871   300003  1E                 	db	30
  4872                           
  4873                           ; Padding undefined space
  4874   300004                     	org	3145732
  4875   300004  FF                 	db	255
  4876                           
  4877                           ;Config register CONFIG3H @ 0x300005
  4878                           ;	CCP2 MUX bit
  4879                           ;	CCP2MX = 0x1, unprogrammed default
  4880                           ;	PORTB A/D Enable bit
  4881                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4882                           ;	Low-Power Timer 1 Oscillator Enable bit
  4883                           ;	LPT1OSC = 0x0, unprogrammed default
  4884                           ;	MCLR Pin Enable bit
  4885                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4886   300005                     	org	3145733
  4887   300005  81                 	db	129
  4888                           
  4889                           ;Config register CONFIG4L @ 0x300006
  4890                           ;	Stack Full/Underflow Reset Enable bit
  4891                           ;	STVREN = 0x1, unprogrammed default
  4892                           ;	Single-Supply ICSP Enable bit
  4893                           ;	LVP = OFF, Single-Supply ICSP disabled
  4894                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4895                           ;	ICPRT = 0x0, unprogrammed default
  4896                           ;	Extended Instruction Set Enable bit
  4897                           ;	XINST = 0x0, unprogrammed default
  4898                           ;	Background Debugger Enable bit
  4899                           ;	DEBUG = 0x1, unprogrammed default
  4900   300006                     	org	3145734
  4901   300006  81                 	db	129
  4902                           
  4903                           ; Padding undefined space
  4904   300007                     	org	3145735
  4905   300007  FF                 	db	255
  4906                           
  4907                           ;Config register CONFIG5L @ 0x300008
  4908                           ;	unspecified, using default values
  4909                           ;	Code Protection bit
  4910                           ;	CP0 = 0x1, unprogrammed default
  4911                           ;	Code Protection bit
  4912                           ;	CP1 = 0x1, unprogrammed default
  4913                           ;	Code Protection bit
  4914                           ;	CP2 = 0x1, unprogrammed default
  4915                           ;	Code Protection bit
  4916                           ;	CP3 = 0x1, unprogrammed default
  4917   300008                     	org	3145736
  4918   300008  0F                 	db	15
  4919                           
  4920                           ;Config register CONFIG5H @ 0x300009
  4921                           ;	unspecified, using default values
  4922                           ;	Boot Block Code Protection bit
  4923                           ;	CPB = 0x1, unprogrammed default
  4924                           ;	Data EEPROM Code Protection bit
  4925                           ;	CPD = 0x1, unprogrammed default
  4926   300009                     	org	3145737
  4927   300009  C0                 	db	192
  4928                           
  4929                           ;Config register CONFIG6L @ 0x30000A
  4930                           ;	unspecified, using default values
  4931                           ;	Write Protection bit
  4932                           ;	WRT0 = 0x1, unprogrammed default
  4933                           ;	Write Protection bit
  4934                           ;	WRT1 = 0x1, unprogrammed default
  4935                           ;	Write Protection bit
  4936                           ;	WRT2 = 0x1, unprogrammed default
  4937                           ;	Write Protection bit
  4938                           ;	WRT3 = 0x1, unprogrammed default
  4939   30000A                     	org	3145738
  4940   30000A  0F                 	db	15
  4941                           
  4942                           ;Config register CONFIG6H @ 0x30000B
  4943                           ;	unspecified, using default values
  4944                           ;	Configuration Register Write Protection bit
  4945                           ;	WRTC = 0x1, unprogrammed default
  4946                           ;	Boot Block Write Protection bit
  4947                           ;	WRTB = 0x1, unprogrammed default
  4948                           ;	Data EEPROM Write Protection bit
  4949                           ;	WRTD = 0x1, unprogrammed default
  4950   30000B                     	org	3145739
  4951   30000B  E0                 	db	224
  4952                           
  4953                           ;Config register CONFIG7L @ 0x30000C
  4954                           ;	unspecified, using default values
  4955                           ;	Table Read Protection bit
  4956                           ;	EBTR0 = 0x1, unprogrammed default
  4957                           ;	Table Read Protection bit
  4958                           ;	EBTR1 = 0x1, unprogrammed default
  4959                           ;	Table Read Protection bit
  4960                           ;	EBTR2 = 0x1, unprogrammed default
  4961                           ;	Table Read Protection bit
  4962                           ;	EBTR3 = 0x1, unprogrammed default
  4963   30000C                     	org	3145740
  4964   30000C  0F                 	db	15
  4965                           
  4966                           ;Config register CONFIG7H @ 0x30000D
  4967                           ;	unspecified, using default values
  4968                           ;	Boot Block Table Read Protection bit
  4969                           ;	EBTRB = 0x1, unprogrammed default
  4970   30000D                     	org	3145741
  4971   30000D  40                 	db	64
  4972                           tosu	equ	0xFFF
  4973                           tosh	equ	0xFFE
  4974                           tosl	equ	0xFFD
  4975                           stkptr	equ	0xFFC
  4976                           pclatu	equ	0xFFB
  4977                           pclath	equ	0xFFA
  4978                           pcl	equ	0xFF9
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           prodh	equ	0xFF4
  4984                           prodl	equ	0xFF3
  4985                           indf0	equ	0xFEF
  4986                           postinc0	equ	0xFEE
  4987                           postdec0	equ	0xFED
  4988                           preinc0	equ	0xFEC
  4989                           plusw0	equ	0xFEB
  4990                           fsr0h	equ	0xFEA
  4991                           fsr0l	equ	0xFE9
  4992                           wreg	equ	0xFE8
  4993                           indf1	equ	0xFE7
  4994                           postinc1	equ	0xFE6
  4995                           postdec1	equ	0xFE5
  4996                           preinc1	equ	0xFE4
  4997                           plusw1	equ	0xFE3
  4998                           fsr1h	equ	0xFE2
  4999                           fsr1l	equ	0xFE1
  5000                           bsr	equ	0xFE0
  5001                           indf2	equ	0xFDF
  5002                           postinc2	equ	0xFDE
  5003                           postdec2	equ	0xFDD
  5004                           preinc2	equ	0xFDC
  5005                           plusw2	equ	0xFDB
  5006                           fsr2h	equ	0xFDA
  5007                           fsr2l	equ	0xFD9
  5008                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    0
    Data        4
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      80
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Imprimir_Resultado
    _factorial_function->___lmul
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _Imprimir_Resultado->___aldiv
    ___lwdiv->___wmul
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_Imprimir_Resultado

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   17888
                                             35 COMRAM     4     4      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                 _Imprimir_Resultado
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
                             ___lmul
                            ___lwdiv
                             ___wmul
                 _factorial_function
 ---------------------------------------------------------------------------------
 (1) _factorial_function                                   8     4      4    2265
                                             25 COMRAM     8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     310
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     155
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Resultado                                  19    15      4    9104
                                             27 COMRAM     8     4      4
                                              0 BANK0     11    11      0
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     772
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     781
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2076
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     613
                                             13 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             13 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1    1913
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     220
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0     124
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      31
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0     650
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Var                                     4     3      1     408
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Imprimir_Resultado
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
       _EscribeLCD_c
       _strlen
     ___aldiv
     ___almod
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
   ___lmul
   ___lwdiv
   ___wmul
   _factorial_function
     ___lmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_DireccionaLCD
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      50       1       85.1%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B      29        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 18 11:39:37 2023

                         _a 0036                           _b 0034                           _i 0040  
                         _m 0049                           _r 002C            i2DireccionaLCD@a 0005  
                        _PD 007E82                          _TO 007E83                          _n1 0044  
                        _n2 0042                  EnviaDato@a 0011                          _op 004F  
       ___wmul@multiplicand 0010               ??_LeerTeclado 000E               _InicializaLCD 1466  
                       l262 132A                         l264 1332                         l256 1322  
                       l281 1382                         l273 135E                         l291 13AE  
                       l283 138A                         l275 1366                         l179 08CC  
                       l268 1356                         l287 139E                         l279 137A  
                       l288 13B6                         l289 13A6                         l838 17D0  
                       l848 1942                         _GIE 007F97                         _RB4 007C0C  
                       _RB5 007C0D                         _RB6 007C0E                         _RB7 007C0F  
                       _ISR 0008                         _POR 007E81                         _n1c 004E  
                       _n2c 004D                         _res 0028                         wreg 000FE8  
                      ?_ISR 0001            ??i2_EscribeLCD_c 0005                        l3110 16E0  
                      l3112 16F0                        l3120 1716                        l3114 1702  
                      l3116 170C                        l3132 18B6                        l3220 1286  
                      l3212 1258                        l3230 12BA                        l3206 1240  
                      l2510 136E                        l3312 1938                        l3304 1918  
                      l3146 198C                        l3218 127A                        l3234 12C8  
                      l3250 13D6                        l3306 1920                        l3410 102A  
                      l3322 1478                        l2450 1318                        l3148 198E  
                      l3164 17E4                        l3172 1816                        l3260 1408  
                      l3332 1496                        l3238 12DE                        l3270 143E  
                      l3254 13EA                        l3190 1696                        l3430 1096  
                      l3422 106C                        l3342 14B4                        l3510 08DC  
                      l3600 0A38                        l3512 08F2                        l3274 1454  
                      l3266 1430                        l3258 13FC                        l3194 16AA  
                      l3426 1088                        l3362 14EC                        l2538 1392  
                      l2474 133A                        l3514 08F6                        l2580 15B8  
                      l2572 15A8                        l3284 179E                        l3452 11C8  
                      l3444 1172                        l3436 10D4                        l2574 15AC  
                      l2590 15C6                        l3286 17A6                        l3462 11F8  
                      l3454 11CE                        l3390 0F8E                        l3382 0F2A  
                      l2486 134C                        l2584 15BC                        l2576 15B0  
                      l2592 1608                        l3296 17C6                        l3800 0E32  
                      l3528 094A                        l2586 15C0                        l2578 15B4  
                      l3458 11DC                        l3474 1628                        l3810 0E52  
                      l3650 0B06                        l3626 0AA2                        l3554 09AE  
                      l3468 121A                        l3708 0BEC                        l3732 0C42  
                      l3628 0AA8                        l3548 0996                        l3564 09CC  
                      l3398 0FD0                        l3478 1664                        l3646 0AF4  
                      l3590 0A1A                        l3816 0EBA                        l3752 0CD0  
                      l3744 0C76                        l3770 0D68                        l3746 0C8E  
                      l3818 0EC0                        l3764 0D54                        l3756 0CEE  
                      l3748 0CC4                        l3684 0B8C                        l3676 0B74  
                      l3790 0DE2                        l3782 0DA0                        l3786 0DD4  
                      l3778 0D8A                        l3794 0DF4                        l3796 0E16  
                      l3798 0E1C                        STR_1 086D                        STR_2 0875  
                      STR_3 0810                        STR_4 0830                        STR_5 0850  
                      STR_6 0830                        STR_7 0801                        STR_8 0830  
                      STR_9 0845                        u2020 1A0E                        u2100 12FE  
                      _LATB 000F8A                        _LATC 000F8B                        u4000 0962  
                      _LATD 000F8C                        u4120 0A50                        u4060 09E4  
                      u3610 140C                        u3550 128A                        u4190 0A86  
                      u3800 0FFA                        u4600 0C34                        u3650 17AA  
                      u3810 100C                        u4290 0AE8                        u3820 103E  
                      u3830 1050                        u4390 0B56                        u3680 1924  
                      u3840 1062                        u3930 1674                        u4490 0BCE  
                      u3860 110A                        u3780 0FCE                        u4807 16E6  
                      u4817 16F2                        u3890 11BE                        u4827 16FA  
                      u4837 1704                        u4847 170E                        u4857 1A98  
                      u4777 08E6                        u4787 09A0                        u4797 0EC6  
                      _RBPU 007F8F                        _TMR0 000FD6              ??_EscribeLCD_c 0012  
                      _main 087C                        fsr1l 000FE1                        btemp 0051  
                      prodh 000FF4                        prodl 000FF3                        start 000E  
              ___param_bank 000000                       ??_ISR 000A             i2_DireccionaLCD 1A56  
            ?_InicializaLCD 0001             __end_of___aldiv 12F0             __end_of___almod 1466  
                     ?_main 0001                       STR_10 0830                       STR_11 082C  
                     STR_12 085A                       STR_13 0839                       STR_14 0864  
                     STR_15 081E               EscribeLCD_c@a 0012                       _T0CON 000FD5  
                     _LATE0 007C68                       _LATE1 007C69                       _LATE2 007C6A  
                     _LATC7 007C5F             __end_of___lwdiv 17DA             __end_of___lwmod 194C  
                     i2l324 157E                       i2l327 1580                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
       ___lmul@multiplicand 0012                       _Tecla 0048         __end_of_LeerTeclado 13BA  
                     _color 003E                 ?i2_BorraLCD 0001                       tablat 000FF5  
               _HabilitaLCD 1A94                       ttemp5 0052                       ttemp6 0055  
                     ttemp7 0059                       status 000FD8                       wtemp8 0052  
          __end_ofi2_strlen 19D6            __end_of_BorraLCD 1A80            __end_of_ColorRGB 160E  
           __initialization 194C                __end_of_main 0ED2            i2_MensajeLCD_Var 182C  
                    ??_main 0024        __end_of_ConfiguraLCD 1A14               __activetblptr 000002  
                i2strlen@cp 0003          _Imprimir_Resultado 0ED2                      _ADCON1 000FC1  
            DireccionaLCD@a 0012            _contador_digitos 003A                      i2l2150 1746  
                    i2l2152 1758                      i2l2154 1762                      i2l2148 1736  
                    i2l2158 176C                      i2l3082 152E                      i2l2188 18FC  
                    i2l2364 19B4                      i2l3084 1536                      i2l2366 19B6  
                    i2l3088 154A                      i2l2718 1836                      i2l2726 1868  
                    _OSCCON 000FD3                      _TMR0IE 007F95                      _TMR0IF 007F92  
                    _TMR0ON 007EAF         ?_Imprimir_Resultado 001C       __end_of_DireccionaLCD 1A40  
                _RetardoLCD 16DC     __end_ofi2_DireccionaLCD 1A6C                      ___lmul 1686  
                 ??___aldiv 0016                   ??___almod 0016                      ___wmul 19D6  
                 ??___lwdiv 0018                   ??___lwmod 0012             ??_InicializaLCD 0012  
                    clear_0 1972                      isa$std 000001        ??_Imprimir_Resultado 0020  
      __end_of_EscribeLCD_c 1A2A                      _strlen 1986                 _LeerTeclado 12F0  
              ?i2_EnviaDato 0001                __pdataCOMRAM 004D                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
__end_of_factorial_function 1686       __end_ofi2_HabilitaLCD 1AB0                  __accesstop 0060  
   __end_of__initialization 1978               ___rparam_used 000001              __pcstackCOMRAM 0001  
         __end_of_EnviaDato 18C4                   ?i2_strlen 0001                   ?_BorraLCD 0001  
                 ?_ColorRGB 0001              _MensajeLCD_Var 17DA             MensajeLCD_Var@a 0013  
           MensajeLCD_Var@i 0015      factorial_function@fact 001E                 ?_RetardoLCD 0001  
               RetardoLCD@a 000F            ?i2_DireccionaLCD 0001                     ?___lmul 000E  
                   ?___wmul 000E              ___lmul@product 0016                     ?_strlen 000E  
    __end_of_MensajeLCD_Var 182C                  ??i2_strlen 0003                ??i2_BorraLCD 0005  
                ??_BorraLCD 0012                  ??_ColorRGB 000E    __end_ofi2_MensajeLCD_Var 187E  
              ?_HabilitaLCD 0001                _ConfiguraLCD 19FC                     __Hparam 0000  
                   __Lparam 0000                     ___aldiv 1224                     ___almod 13BA  
                   ___lwdiv 1788                     ___lwmod 190A                __psmallconst 0800  
        __end_ofi2_BorraLCD 1A94         factorial_function@a 001A                     __pcinit 194C  
                   __ramtop 0800                     __ptext0 087C                     __ptext1 160E  
                   __ptext2 12F0                     __ptext3 1466                     __ptext4 1A6C  
                   __ptext5 0ED2                     __ptext6 19D6                     __ptext7 190A  
                   __ptext8 1788                     __ptext9 1686            ___aldiv@dividend 000E  
           ?_MensajeLCD_Var 0013              __pintcode_body 1502        end_of_initialization 1978  
             __Lmediumconst 0000                     int_func 1502                _EscribeLCD_c 1A14  
          ___aldiv@quotient 0018                     postdec1 000FE5                     postinc0 000FEE  
                   strlen@s 000E                ?_LeerTeclado 0001             i2EscribeLCD_c@a 0005  
             ?i2_RetardoLCD 0001          _factorial_function 160E              __end_of___lmul 16DC  
            __end_of___wmul 19FC               __pidataCOMRAM 1AB0         ?_factorial_function 001A  
     __end_of_InicializaLCD 1502                   _EnviaDato 187E              __end_of_strlen 19AE  
       start_initialization 194C                 __end_of_ISR 1594        ??_factorial_function 001E  
                 i2strlen@s 0001              ??i2_RetardoLCD 0001                ??_RetardoLCD 000E  
                  ??___lmul 0016                    ??___wmul 0012                    ??_strlen 0010  
                ?_EnviaDato 0001                 __pbssCOMRAM 0028          __end_of_RetardoLCD 1732  
             __pcstackBANK0 0060           ?i2_MensajeLCD_Var 0006          ??i2_MensajeLCD_Var 0007  
             _DireccionaLCD 1A2A              i2_EscribeLCD_c 1A40            ___lwdiv@dividend 0014  
                 _factorial 0046                   __pintcode 0008                    ?___aldiv 000E  
                  ?___almod 000E                    ?___lwdiv 0014                    ?___lwmod 000E  
          ___almod@dividend 000E            ??_MensajeLCD_Var 0014                 __smallconst 0800  
          ___lwdiv@quotient 0019             ___aldiv@divisor 0012             ___aldiv@counter 0016  
            ___wmul@product 0012               i2_HabilitaLCD 1AA2              ?_DireccionaLCD 0001  
    __end_ofi2_EscribeLCD_c 1A56                    i2u340_45 1542                    i2u343_40 1568  
                  i2u344_45 156A                    i2u339_40 1540                    i2u490_47 1764  
                  i2u491_47 1AA6                    i2u486_47 173C                    i2u487_47 1748  
                  i2u488_47 1750                    i2u489_47 175A      Imprimir_Resultado@flag 0060  
         ___wmul@multiplier 000E               ??i2_EnviaDato 0003        __end_ofi2_RetardoLCD 1788  
               ??_EnviaDato 0010                    i2_strlen 19AE                    _BorraLCD 1A6C  
                  _ColorRGB 1594           ___lmul@multiplier 000E                   copy_data0 1960  
            ?i2_HabilitaLCD 0001             ?i2_EscribeLCD_c 0001                    __Hrparam 0000  
                  __Lrparam 0000                i2EnviaDato@a 0004               ConfiguraLCD@a 000E  
                  _main$157 0026                    _main$158 0027           ??i2_DireccionaLCD 0005  
           ___lwdiv@divisor 0016             ___lwdiv@counter 0018                    __ptext10 13BA  
                  __ptext11 1224                    __ptext20 1594                    __ptext12 17DA  
                  __ptext13 1986                    __ptext22 182C                    __ptext14 1A14  
                  __ptext23 19AE                    __ptext15 1A2A                    __ptext24 1A40  
                  __ptext16 187E                    __ptext25 1A56                    __ptext17 16DC  
                  __ptext26 1A80                    __ptext18 1A94                    __ptext27 18C4  
                  __ptext19 19FC                    __ptext28 1732                    __ptext29 1AA2  
       __end_ofi2_EnviaDato 190A             ___almod@divisor 0012                    _contador 003C  
           ___almod@counter 0016             ??_DireccionaLCD 0012                    _interfaz 0050  
                  _partdecl 0030                    isa$xinst 000000                    _potencia 0047  
                  int$flags 0051  __end_of_Imprimir_Resultado 1224             ??i2_HabilitaLCD 0001  
                  intlevel2 0000               ??_HabilitaLCD 000E            ___lwmod@dividend 000E  
             ?_ConfiguraLCD 0001               i2RetardoLCD@a 0002                 i2_EnviaDato 18C4  
           ___lwmod@divisor 0010                    strlen@cp 0010             ___lwmod@counter 0012  
              ___aldiv@sign 0017         Imprimir_Resultado@i 0063         Imprimir_Resultado@j 0065  
       Imprimir_Resultado@k 0061         Imprimir_Resultado@r 001C                  i2_BorraLCD 1A80  
              ___almod@sign 0017              ??_ConfiguraLCD 000E  Imprimir_Resultado@potencia 0067  
             ?_EscribeLCD_c 0001                 _verificador 0038           i2MensajeLCD_Var@a 0006  
         i2MensajeLCD_Var@i 0008                i2_RetardoLCD 1732         __end_of_HabilitaLCD 1AA2  
