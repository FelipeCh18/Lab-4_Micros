

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 18 11:50:08 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Version 2.40
    50                           ; Generated 04/07/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   001A9A                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for _n2c
    90   001A9A  20                 	db	32
    91                           
    92                           ;initializer for _n1c
    93   001A9B  20                 	db	32
    94                           
    95                           ;initializer for _op
    96   001A9C  20                 	db	32
    97                           
    98                           ;initializer for _interfaz
    99   001A9D  08                 	db	8
   100   000000                     _LATC	set	3979
   101   000000                     _TRISC	set	3988
   102   000000                     _LATC7	set	31839
   103   000000                     _LATE2	set	31850
   104   000000                     _RB7	set	31759
   105   000000                     _RB6	set	31758
   106   000000                     _RB5	set	31757
   107   000000                     _POR	set	32385
   108   000000                     _PD	set	32386
   109   000000                     _TMR0ON	set	32431
   110   000000                     _GIE	set	32663
   111   000000                     _TMR0IE	set	32661
   112   000000                     _LATE1	set	31849
   113   000000                     _LATB	set	3978
   114   000000                     _LATD	set	3980
   115   000000                     _RB4	set	31756
   116   000000                     _TRISB	set	3987
   117   000000                     _TRISD	set	3989
   118   000000                     _ADCON1	set	4033
   119   000000                     _LATE0	set	31848
   120   000000                     _OSCCON	set	4051
   121   000000                     _T0CON	set	4053
   122   000000                     _TO	set	32387
   123   000000                     _RBPU	set	32655
   124   000000                     _TRISE	set	3990
   125   000000                     _TMR0IF	set	32658
   126   000000                     _TMR0	set	4054
   127                           
   128                           	psect	smallconst
   129   000800                     __psmallconst:
   130                           	callstack 0
   131   000800  00                 	db	0
   132   000801                     STR_7:
   133   000801  4D                 	db	77	;'M'
   134   000802  6F                 	db	111	;'o'
   135   000803  64                 	db	100	;'d'
   136   000804  6F                 	db	111	;'o'
   137   000805  20                 	db	32
   138   000806  46                 	db	70	;'F'
   139   000807  61                 	db	97	;'a'
   140   000808  63                 	db	99	;'c'
   141   000809  74                 	db	116	;'t'
   142   00080A  6F                 	db	111	;'o'
   143   00080B  72                 	db	114	;'r'
   144   00080C  69                 	db	105	;'i'
   145   00080D  61                 	db	97	;'a'
   146   00080E  6C                 	db	108	;'l'
   147   00080F  00                 	db	0
   148   000810                     STR_3:
   149   000810  4D                 	db	77	;'M'
   150   000811  6F                 	db	111	;'o'
   151   000812  64                 	db	100	;'d'
   152   000813  6F                 	db	111	;'o'
   153   000814  20                 	db	32
   154   000815  50                 	db	80	;'P'
   155   000816  6F                 	db	111	;'o'
   156   000817  74                 	db	116	;'t'
   157   000818  65                 	db	101	;'e'
   158   000819  6E                 	db	110	;'n'
   159   00081A  63                 	db	99	;'c'
   160   00081B  69                 	db	105	;'i'
   161   00081C  61                 	db	97	;'a'
   162   00081D  00                 	db	0
   163   00081E                     STR_13:
   164   00081E  49                 	db	73	;'I'
   165   00081F  6E                 	db	110	;'n'
   166   000820  64                 	db	100	;'d'
   167   000821  65                 	db	101	;'e'
   168   000822  74                 	db	116	;'t'
   169   000823  65                 	db	101	;'e'
   170   000824  72                 	db	114	;'r'
   171   000825  6D                 	db	109	;'m'
   172   000826  69                 	db	105	;'i'
   173   000827  6E                 	db	110	;'n'
   174   000828  61                 	db	97	;'a'
   175   000829  64                 	db	100	;'d'
   176   00082A  6F                 	db	111	;'o'
   177   00082B  00                 	db	0
   178   00082C                     STR_11:
   179   00082C  4C                 	db	76	;'L'
   180   00082D  56                 	db	86	;'V'
   181   00082E  50                 	db	80	;'P'
   182   00082F  20                 	db	32
   183   000830  41                 	db	65	;'A'
   184   000831  63                 	db	99	;'c'
   185   000832  74                 	db	116	;'t'
   186   000833  69                 	db	105	;'i'
   187   000834  76                 	db	118	;'v'
   188   000835  61                 	db	97	;'a'
   189   000836  64                 	db	100	;'d'
   190   000837  6F                 	db	111	;'o'
   191   000838  00                 	db	0
   192   000839                     STR_9:
   193   000839  4D                 	db	77	;'M'
   194   00083A  6F                 	db	111	;'o'
   195   00083B  64                 	db	100	;'d'
   196   00083C  6F                 	db	111	;'o'
   197   00083D  20                 	db	32
   198   00083E  52                 	db	82	;'R'
   199   00083F  65                 	db	101	;'e'
   200   000840  73                 	db	115	;'s'
   201   000841  74                 	db	116	;'t'
   202   000842  61                 	db	97	;'a'
   203   000843  00                 	db	0
   204   000844                     STR_5:
   205   000844  4D                 	db	77	;'M'
   206   000845  6F                 	db	111	;'o'
   207   000846  64                 	db	100	;'d'
   208   000847  6F                 	db	111	;'o'
   209   000848  20                 	db	32
   210   000849  53                 	db	83	;'S'
   211   00084A  75                 	db	117	;'u'
   212   00084B  6D                 	db	109	;'m'
   213   00084C  61                 	db	97	;'a'
   214   00084D  00                 	db	0
   215   00084E                     STR_12:
   216   00084E  49                 	db	73	;'I'
   217   00084F  6E                 	db	110	;'n'
   218   000850  66                 	db	102	;'f'
   219   000851  69                 	db	105	;'i'
   220   000852  6E                 	db	110	;'n'
   221   000853  69                 	db	105	;'i'
   222   000854  74                 	db	116	;'t'
   223   000855  6F                 	db	111	;'o'
   224   000856  00                 	db	0
   225   000857                     STR_1:
   226   000857  45                 	db	69	;'E'
   227   000858  6E                 	db	110	;'n'
   228   000859  65                 	db	101	;'e'
   229   00085A  72                 	db	114	;'r'
   230   00085B  67                 	db	103	;'g'
   231   00085C  69                 	db	105	;'i'
   232   00085D  61                 	db	97	;'a'
   233   00085E  00                 	db	0
   234   00085F                     STR_2:
   235   00085F  4D                 	db	77	;'M'
   236   000860  43                 	db	67	;'C'
   237   000861  4C                 	db	76	;'L'
   238   000862  52                 	db	82	;'R'
   239   000863  00                 	db	0
   240   000864  00                 	db	0	; dummy byte at the end
   241   000000                     
   242                           ; #config settings
   243                           
   244                           	psect	cinit
   245   001936                     __pcinit:
   246                           	callstack 0
   247   001936                     start_initialization:
   248                           	callstack 0
   249   001936                     __initialization:
   250                           	callstack 0
   251                           
   252                           ; Initialize objects allocated to COMRAM (4 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254   001936  0E9A               	movlw	low __pidataCOMRAM
   255   001938  6EF6               	movwf	tblptrl,c
   256   00193A  0E1A               	movlw	high __pidataCOMRAM
   257   00193C  6EF7               	movwf	tblptrh,c
   258   00193E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259   001940  6EF8               	movwf	tblptru,c
   260   001942  EE00  F04D         	lfsr	0,__pdataCOMRAM
   261   001946  EE10 F004          	lfsr	1,4
   262   00194A                     copy_data0:
   263   00194A  0009               	tblrd		*+
   264   00194C  CFF5 FFEE          	movff	tablat,postinc0
   265   001950  50E5               	movf	postdec1,w,c
   266   001952  50E1               	movf	fsr1l,w,c
   267   001954  E1FA               	bnz	copy_data0
   268                           
   269                           ; Clear objects allocated to COMRAM (37 bytes)
   270   001956  EE00  F028         	lfsr	0,__pbssCOMRAM
   271   00195A  0E25               	movlw	37
   272   00195C                     clear_0:
   273   00195C  6AEE               	clrf	postinc0,c
   274   00195E  06E8               	decf	wreg,f,c
   275   001960  E1FD               	bnz	clear_0
   276   001962                     end_of_initialization:
   277                           	callstack 0
   278   001962                     __end_of__initialization:
   279                           	callstack 0
   280   001962  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   281   001964  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   282   001966  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283   001968  6EF8               	movwf	tblptru,c
   284   00196A  0100               	movlb	0
   285   00196C  EF33  F004         	goto	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMRAM
   288   000028                     __pbssCOMRAM:
   289                           	callstack 0
   290   000028                     _res:
   291                           	callstack 0
   292   000028                     	ds	4
   293   00002C                     _r:
   294                           	callstack 0
   295   00002C                     	ds	4
   296   000030                     _partdecl:
   297                           	callstack 0
   298   000030                     	ds	4
   299   000034                     _b:
   300                           	callstack 0
   301   000034                     	ds	2
   302   000036                     _a:
   303                           	callstack 0
   304   000036                     	ds	2
   305   000038                     _verificador:
   306                           	callstack 0
   307   000038                     	ds	2
   308   00003A                     _contador_digitos:
   309                           	callstack 0
   310   00003A                     	ds	2
   311   00003C                     _contador:
   312                           	callstack 0
   313   00003C                     	ds	2
   314   00003E                     _color:
   315                           	callstack 0
   316   00003E                     	ds	2
   317   000040                     _i:
   318                           	callstack 0
   319   000040                     	ds	2
   320   000042                     _n2:
   321                           	callstack 0
   322   000042                     	ds	2
   323   000044                     _n1:
   324                           	callstack 0
   325   000044                     	ds	2
   326   000046                     _factorial:
   327                           	callstack 0
   328   000046                     	ds	1
   329   000047                     _potencia:
   330                           	callstack 0
   331   000047                     	ds	1
   332   000048                     _Tecla:
   333                           	callstack 0
   334   000048                     	ds	1
   335   000049                     _m:
   336                           	callstack 0
   337   000049                     	ds	4
   338                           
   339                           	psect	dataCOMRAM
   340   00004D                     __pdataCOMRAM:
   341                           	callstack 0
   342   00004D                     _n2c:
   343                           	callstack 0
   344   00004D                     	ds	1
   345   00004E                     _n1c:
   346                           	callstack 0
   347   00004E                     	ds	1
   348   00004F                     _op:
   349                           	callstack 0
   350   00004F                     	ds	1
   351   000050                     _interfaz:
   352                           	callstack 0
   353   000050                     	ds	1
   354                           
   355                           	psect	cstackBANK0
   356   000060                     __pcstackBANK0:
   357                           	callstack 0
   358   000060                     Imprimir_Resultado@flag:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x0
   362   000060                     	ds	1
   363   000061                     Imprimir_Resultado@k:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x1
   367   000061                     	ds	2
   368   000063                     Imprimir_Resultado@i:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x3
   372   000063                     	ds	2
   373   000065                     Imprimir_Resultado@j:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x5
   377   000065                     	ds	2
   378   000067                     Imprimir_Resultado@potencia:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x7
   382   000067                     	ds	4
   383                           
   384                           	psect	cstackCOMRAM
   385   000001                     __pcstackCOMRAM:
   386                           	callstack 0
   387   000001                     ??i2_RetardoLCD:
   388   000001                     ?i2_strlen:
   389                           	callstack 0
   390   000001                     i2strlen@s:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x0
   394   000001                     	ds	1
   395   000002                     i2RetardoLCD@a:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x1
   399   000002                     	ds	1
   400   000003                     ??i2_EnviaDato:
   401   000003                     i2strlen@cp:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x2
   405   000003                     	ds	1
   406   000004                     i2EnviaDato@a:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x3
   410   000004                     	ds	1
   411   000005                     i2EscribeLCD_c@a:
   412                           	callstack 0
   413   000005                     i2DireccionaLCD@a:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x4
   417   000005                     	ds	1
   418   000006                     i2MensajeLCD_Var@a:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x5
   422   000006                     	ds	1
   423   000007                     ??i2_MensajeLCD_Var:
   424                           
   425                           ; 1 bytes @ 0x6
   426   000007                     	ds	1
   427   000008                     i2MensajeLCD_Var@i:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x7
   431   000008                     	ds	2
   432   00000A                     ??_ISR:
   433                           
   434                           ; 1 bytes @ 0x9
   435   00000A                     	ds	4
   436   00000E                     ??_RetardoLCD:
   437   00000E                     ??_ColorRGB:
   438   00000E                     ?_strlen:
   439                           	callstack 0
   440   00000E                     ?___wmul:
   441                           	callstack 0
   442   00000E                     ?___lwmod:
   443                           	callstack 0
   444   00000E                     ?___lmul:
   445                           	callstack 0
   446   00000E                     ?___aldiv:
   447                           	callstack 0
   448   00000E                     ?___almod:
   449                           	callstack 0
   450   00000E                     ConfiguraLCD@a:
   451                           	callstack 0
   452   00000E                     strlen@s:
   453                           	callstack 0
   454   00000E                     ___wmul@multiplier:
   455                           	callstack 0
   456   00000E                     ___lwmod@dividend:
   457                           	callstack 0
   458   00000E                     ___lmul@multiplier:
   459                           	callstack 0
   460   00000E                     ___aldiv@dividend:
   461                           	callstack 0
   462   00000E                     ___almod@dividend:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0xD
   466   00000E                     	ds	1
   467   00000F                     RetardoLCD@a:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0xE
   471   00000F                     	ds	1
   472   000010                     ??_EnviaDato:
   473   000010                     strlen@cp:
   474                           	callstack 0
   475   000010                     ___wmul@multiplicand:
   476                           	callstack 0
   477   000010                     ___lwmod@divisor:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xF
   481   000010                     	ds	1
   482   000011                     EnviaDato@a:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x10
   486   000011                     	ds	1
   487   000012                     EscribeLCD_c@a:
   488                           	callstack 0
   489   000012                     DireccionaLCD@a:
   490                           	callstack 0
   491   000012                     ___lwmod@counter:
   492                           	callstack 0
   493   000012                     ___wmul@product:
   494                           	callstack 0
   495   000012                     ___lmul@multiplicand:
   496                           	callstack 0
   497   000012                     ___aldiv@divisor:
   498                           	callstack 0
   499   000012                     ___almod@divisor:
   500                           	callstack 0
   501                           
   502                           ; 4 bytes @ 0x11
   503   000012                     	ds	1
   504   000013                     MensajeLCD_Var@a:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x12
   508   000013                     	ds	1
   509   000014                     ??_MensajeLCD_Var:
   510   000014                     ?___lwdiv:
   511                           	callstack 0
   512   000014                     ___lwdiv@dividend:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x13
   516   000014                     	ds	1
   517   000015                     MensajeLCD_Var@i:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x14
   521   000015                     	ds	1
   522   000016                     ___aldiv@counter:
   523                           	callstack 0
   524   000016                     ___almod@counter:
   525                           	callstack 0
   526   000016                     ___lwdiv@divisor:
   527                           	callstack 0
   528   000016                     ___lmul@product:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x15
   532   000016                     	ds	1
   533   000017                     ___aldiv@sign:
   534                           	callstack 0
   535   000017                     ___almod@sign:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x16
   539   000017                     	ds	1
   540   000018                     ___lwdiv@counter:
   541                           	callstack 0
   542   000018                     ___aldiv@quotient:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x17
   546   000018                     	ds	1
   547   000019                     ___lwdiv@quotient:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x18
   551   000019                     	ds	1
   552   00001A                     ?_factorial_function:
   553                           	callstack 0
   554   00001A                     factorial_function@a:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x19
   558   00001A                     	ds	2
   559   00001C                     Imprimir_Resultado@r:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x1B
   563   00001C                     	ds	2
   564   00001E                     factorial_function@fact:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x1D
   568   00001E                     	ds	2
   569   000020                     ??_Imprimir_Resultado:
   570                           
   571                           ; 1 bytes @ 0x1F
   572   000020                     	ds	4
   573   000024                     ??_main:
   574                           
   575                           ; 1 bytes @ 0x23
   576   000024                     	ds	2
   577   000026                     _main$157:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x25
   581   000026                     	ds	1
   582   000027                     _main$158:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x26
   586   000027                     	ds	1
   587                           
   588 ;;
   589 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   590 ;;
   591 ;; *************** function _main *****************
   592 ;; Defined at:
   593 ;;		line 37 in file "Lab4.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   607 ;;      Params:         0       0       0       0       0       0       0       0       0
   608 ;;      Locals:         2       0       0       0       0       0       0       0       0
   609 ;;      Temps:          2       0       0       0       0       0       0       0       0
   610 ;;      Totals:         4       0       0       0       0       0       0       0       0
   611 ;;Total ram usage:        4 bytes
   612 ;; Hardware stack levels required when called: 10
   613 ;; This function calls:
   614 ;;		_BorraLCD
   615 ;;		_ColorRGB
   616 ;;		_ConfiguraLCD
   617 ;;		_DireccionaLCD
   618 ;;		_EscribeLCD_c
   619 ;;		_Imprimir_Resultado
   620 ;;		_InicializaLCD
   621 ;;		_LeerTeclado
   622 ;;		_MensajeLCD_Var
   623 ;;		___lmul
   624 ;;		___lwdiv
   625 ;;		___wmul
   626 ;;		_factorial_function
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text0
   633   000866                     __ptext0:
   634                           	callstack 0
   635   000866                     _main:
   636                           	callstack 21
   637                           
   638                           ;Lab4.c: 38: ADCON1=15;
   639                           
   640                           ;incstack = 0
   641   000866  0E0F               	movlw	15
   642   000868  6EC1               	movwf	193,c	;volatile
   643                           
   644                           ;Lab4.c: 39: TRISD=0;
   645   00086A  0E00               	movlw	0
   646   00086C  6E95               	movwf	149,c	;volatile
   647                           
   648                           ;Lab4.c: 40: TRISB=0b11110000;
   649   00086E  0EF0               	movlw	240
   650   000870  6E93               	movwf	147,c	;volatile
   651                           
   652                           ;Lab4.c: 41: TRISE=0;
   653   000872  0E00               	movlw	0
   654   000874  6E96               	movwf	150,c	;volatile
   655                           
   656                           ;Lab4.c: 42: TRISC=0;
   657   000876  0E00               	movlw	0
   658   000878  6E94               	movwf	148,c	;volatile
   659                           
   660                           ;Lab4.c: 43: RBPU=0;
   661   00087A  9EF1               	bcf	4081,7,c	;volatile
   662                           
   663                           ;Lab4.c: 44: ConfiguraLCD(4);
   664   00087C  0E04               	movlw	4
   665   00087E  ECF3  F00C         	call	_ConfiguraLCD
   666                           
   667                           ;Lab4.c: 45: InicializaLCD();
   668   000882  EC2A  F00A         	call	_InicializaLCD	;wreg free
   669                           
   670                           ;Lab4.c: 47: T0CON=0b10000010;
   671   000886  0E82               	movlw	130
   672   000888  6ED5               	movwf	213,c	;volatile
   673                           
   674                           ;Lab4.c: 48: TMR0IF=0;
   675   00088A  94F2               	bcf	4082,2,c	;volatile
   676                           
   677                           ;Lab4.c: 49: TMR0=49911;
   678   00088C  0EC2               	movlw	194
   679   00088E  6ED7               	movwf	215,c	;volatile
   680   000890  0EF7               	movlw	247
   681   000892  6ED6               	movwf	214,c	;volatile
   682                           
   683                           ;Lab4.c: 50: TMR0IE=1;
   684   000894  8AF2               	bsf	4082,5,c	;volatile
   685                           
   686                           ;Lab4.c: 51: GIE=1;
   687   000896  8EF2               	bsf	4082,7,c	;volatile
   688                           
   689                           ;Lab4.c: 52: TMR0ON=1;
   690   000898  8ED5               	bsf	4053,7,c	;volatile
   691                           
   692                           ;Lab4.c: 55: OSCCON = 0b11000100;
   693   00089A  0EC4               	movlw	196
   694   00089C  6ED3               	movwf	211,c	;volatile
   695                           
   696                           ;Lab4.c: 57: BorraLCD();
   697   00089E  EC2B  F00D         	call	_BorraLCD	;wreg free
   698                           
   699                           ;Lab4.c: 58: if(TO == 1 && PD == 1){
   700   0008A2  B6D0               	btfsc	4048,3,c	;volatile
   701   0008A4  A4D0               	btfss	4048,2,c	;volatile
   702   0008A6  D007               	goto	l179
   703                           
   704                           ;Lab4.c: 59: BorraLCD();
   705   0008A8  EC2B  F00D         	call	_BorraLCD	;wreg free
   706                           
   707                           ;Lab4.c: 60: MensajeLCD_Var("Energia");
   708   0008AC  0E57               	movlw	low STR_1
   709   0008AE  6E13               	movwf	MensajeLCD_Var@a^0,c
   710   0008B0  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
   711                           
   712                           ;Lab4.c: 61: }else{
   713   0008B4  D008               	goto	l3510
   714   0008B6                     l179:
   715                           
   716                           ;Lab4.c: 62: if(POR==0){
   717   0008B6  B2D0               	btfsc	4048,1,c	;volatile
   718   0008B8  D006               	goto	l3510
   719                           
   720                           ;Lab4.c: 63: BorraLCD();
   721   0008BA  EC2B  F00D         	call	_BorraLCD	;wreg free
   722                           
   723                           ;Lab4.c: 64: MensajeLCD_Var("MCLR");
   724   0008BE  0E5F               	movlw	low STR_2
   725   0008C0  6E13               	movwf	MensajeLCD_Var@a^0,c
   726   0008C2  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
   727   0008C6                     l3510:
   728                           
   729                           ;Lab4.c: 65: };Lab4.c: 66: };Lab4.c: 67: _delay((unsigned long)((2000)*(1000000/4000.0))
      +                          );
   730   0008C6  0E03               	movlw	3
   731   0008C8  6E25               	movwf	(??_main+1)^0,c
   732   0008CA  0E8A               	movlw	138
   733   0008CC  6E24               	movwf	??_main^0,c
   734   0008CE  0E56               	movlw	86
   735   0008D0                     u4777:
   736   0008D0  2EE8               	decfsz	wreg,f,c
   737   0008D2  D7FE               	bra	u4777
   738   0008D4  2E24               	decfsz	??_main^0,f,c
   739   0008D6  D7FC               	bra	u4777
   740   0008D8  2E25               	decfsz	(??_main+1)^0,f,c
   741   0008DA  D7FA               	bra	u4777
   742   0008DC                     l3512:
   743                           
   744                           ;Lab4.c: 68: BorraLCD();
   745   0008DC  EC2B  F00D         	call	_BorraLCD	;wreg free
   746   0008E0                     l3514:
   747                           
   748                           ;Lab4.c: 70: LATB=0b00000000;
   749   0008E0  0E00               	movlw	0
   750   0008E2  6E8A               	movwf	138,c	;volatile
   751                           
   752                           ;Lab4.c: 71: verificador = 0;
   753   0008E4  0E00               	movlw	0
   754   0008E6  6E39               	movwf	(_verificador+1)^0,c
   755   0008E8  0E00               	movlw	0
   756   0008EA  6E38               	movwf	_verificador^0,c
   757                           
   758                           ;Lab4.c: 72: Tecla = LeerTeclado();
   759   0008EC  EC6F  F009         	call	_LeerTeclado	;wreg free
   760   0008F0  6E48               	movwf	_Tecla^0,c
   761                           
   762                           ;Lab4.c: 73: ColorRGB();
   763   0008F2  ECBF  F00A         	call	_ColorRGB	;wreg free
   764                           
   765                           ;Lab4.c: 74: if(Tecla=='C'){
   766   0008F6  0E43               	movlw	67
   767   0008F8  1848               	xorwf	_Tecla^0,w,c
   768   0008FA  A4D8               	btfss	status,2,c
   769   0008FC  D01B               	goto	l3528
   770                           
   771                           ;Lab4.c: 76: op = ' ';
   772   0008FE  0E20               	movlw	32
   773   000900  6E4F               	movwf	_op^0,c
   774                           
   775                           ;Lab4.c: 77: n1c = ' ';
   776   000902  0E20               	movlw	32
   777   000904  6E4E               	movwf	_n1c^0,c
   778                           
   779                           ;Lab4.c: 78: n2c = ' ';
   780   000906  0E20               	movlw	32
   781   000908  6E4D               	movwf	_n2c^0,c
   782                           
   783                           ;Lab4.c: 79: n1 = 0;
   784   00090A  0E00               	movlw	0
   785   00090C  6E45               	movwf	(_n1+1)^0,c
   786   00090E  0E00               	movlw	0
   787   000910  6E44               	movwf	_n1^0,c
   788                           
   789                           ;Lab4.c: 80: n2 = 0;
   790   000912  0E00               	movlw	0
   791   000914  6E43               	movwf	(_n2+1)^0,c
   792   000916  0E00               	movlw	0
   793   000918  6E42               	movwf	_n2^0,c
   794                           
   795                           ;Lab4.c: 81: i = 0;
   796   00091A  0E00               	movlw	0
   797   00091C  6E41               	movwf	(_i+1)^0,c
   798   00091E  0E00               	movlw	0
   799   000920  6E40               	movwf	_i^0,c
   800                           
   801                           ;Lab4.c: 82: partdecl = 0;
   802   000922  0E00               	movlw	0
   803   000924  6E30               	movwf	_partdecl^0,c
   804   000926  0E00               	movlw	0
   805   000928  6E31               	movwf	(_partdecl+1)^0,c
   806   00092A  0E00               	movlw	0
   807   00092C  6E32               	movwf	(_partdecl+2)^0,c
   808   00092E  0E00               	movlw	0
   809   000930  6E33               	movwf	(_partdecl+3)^0,c
   810   000932  D7D4               	goto	l3512
   811   000934                     l3528:
   812   000934  0E20               	movlw	32
   813   000936  184F               	xorwf	_op^0,w,c
   814   000938  A4D8               	btfss	status,2,c
   815   00093A  D03D               	goto	l3564
   816   00093C  0E2B               	movlw	43
   817   00093E  1848               	xorwf	_Tecla^0,w,c
   818   000940  B4D8               	btfsc	status,2,c
   819   000942  D004               	goto	u4000
   820   000944  0E5E               	movlw	94
   821   000946  1848               	xorwf	_Tecla^0,w,c
   822   000948  A4D8               	btfss	status,2,c
   823   00094A  D035               	goto	l3564
   824   00094C                     u4000:
   825   00094C  0E20               	movlw	32
   826   00094E  184E               	xorwf	_n1c^0,w,c
   827   000950  A4D8               	btfss	status,2,c
   828   000952  D031               	goto	l3564
   829   000954  0E20               	movlw	32
   830   000956  184D               	xorwf	_n2c^0,w,c
   831   000958  A4D8               	btfss	status,2,c
   832   00095A  D02D               	goto	l3564
   833                           
   834                           ;Lab4.c: 85: potencia=~potencia;
   835   00095C  1E47               	comf	_potencia^0,f,c
   836                           
   837                           ;Lab4.c: 86: if(potencia){
   838   00095E  5047               	movf	_potencia^0,w,c
   839   000960  B4D8               	btfsc	status,2,c
   840   000962  D01A               	goto	l3554
   841                           
   842                           ;Lab4.c: 87: DireccionaLCD(0x80);
   843   000964  0E80               	movlw	128
   844   000966  EC0A  F00D         	call	_DireccionaLCD
   845                           
   846                           ;Lab4.c: 88: MensajeLCD_Var("Modo Potencia");
   847   00096A  0E10               	movlw	low STR_3
   848   00096C  6E13               	movwf	MensajeLCD_Var@a^0,c
   849   00096E  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
   850                           
   851                           ;Lab4.c: 89: DireccionaLCD(0xC0);
   852   000972  0EC0               	movlw	192
   853   000974  EC0A  F00D         	call	_DireccionaLCD
   854                           
   855                           ;Lab4.c: 90: MensajeLCD_Var("Activado");
   856   000978  0E30               	movlw	low (STR_11+4)
   857   00097A  6E13               	movwf	MensajeLCD_Var@a^0,c
   858   00097C  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
   859   000980                     l3548:
   860                           
   861                           ;Lab4.c: 91: _delay((unsigned long)((1000)*(1000000/4000.0)));
   862   000980  0E02               	movlw	2
   863   000982  6E25               	movwf	(??_main+1)^0,c
   864   000984  0E45               	movlw	69
   865   000986  6E24               	movwf	??_main^0,c
   866   000988  0EAA               	movlw	170
   867   00098A                     u4787:
   868   00098A  2EE8               	decfsz	wreg,f,c
   869   00098C  D7FE               	bra	u4787
   870   00098E  2E24               	decfsz	??_main^0,f,c
   871   000990  D7FC               	bra	u4787
   872   000992  2E25               	decfsz	(??_main+1)^0,f,c
   873   000994  D7FA               	bra	u4787
   874   000996  D7A2               	goto	l3512
   875   000998                     l3554:
   876                           
   877                           ;Lab4.c: 95: DireccionaLCD(0x80);
   878   000998  0E80               	movlw	128
   879   00099A  EC0A  F00D         	call	_DireccionaLCD
   880                           
   881                           ;Lab4.c: 96: MensajeLCD_Var("Modo Suma");
   882   00099E  0E44               	movlw	low STR_5
   883   0009A0  6E13               	movwf	MensajeLCD_Var@a^0,c
   884   0009A2  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
   885                           
   886                           ;Lab4.c: 97: DireccionaLCD(0xC0);
   887   0009A6  0EC0               	movlw	192
   888   0009A8  EC0A  F00D         	call	_DireccionaLCD
   889                           
   890                           ;Lab4.c: 98: MensajeLCD_Var("Activado");
   891   0009AC  0E30               	movlw	low (STR_11+4)
   892   0009AE  6E13               	movwf	MensajeLCD_Var@a^0,c
   893   0009B0  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
   894   0009B4  D7E5               	goto	l3548
   895   0009B6                     l3564:
   896   0009B6  0E20               	movlw	32
   897   0009B8  184F               	xorwf	_op^0,w,c
   898   0009BA  A4D8               	btfss	status,2,c
   899   0009BC  D032               	goto	l3600
   900   0009BE  0E2D               	movlw	45
   901   0009C0  1848               	xorwf	_Tecla^0,w,c
   902   0009C2  B4D8               	btfsc	status,2,c
   903   0009C4  D004               	goto	u4060
   904   0009C6  0E21               	movlw	33
   905   0009C8  1848               	xorwf	_Tecla^0,w,c
   906   0009CA  A4D8               	btfss	status,2,c
   907   0009CC  D02A               	goto	l3600
   908   0009CE                     u4060:
   909   0009CE  0E20               	movlw	32
   910   0009D0  184E               	xorwf	_n1c^0,w,c
   911   0009D2  A4D8               	btfss	status,2,c
   912   0009D4  D026               	goto	l3600
   913   0009D6  0E20               	movlw	32
   914   0009D8  184D               	xorwf	_n2c^0,w,c
   915   0009DA  A4D8               	btfss	status,2,c
   916   0009DC  D022               	goto	l3600
   917                           
   918                           ;Lab4.c: 104: factorial=~factorial;
   919   0009DE  1E46               	comf	_factorial^0,f,c
   920                           
   921                           ;Lab4.c: 105: if(factorial){
   922   0009E0  5046               	movf	_factorial^0,w,c
   923   0009E2  B4D8               	btfsc	status,2,c
   924   0009E4  D00F               	goto	l3590
   925                           
   926                           ;Lab4.c: 106: DireccionaLCD(0x80);
   927   0009E6  0E80               	movlw	128
   928   0009E8  EC0A  F00D         	call	_DireccionaLCD
   929                           
   930                           ;Lab4.c: 107: MensajeLCD_Var("Modo Factorial");
   931   0009EC  0E01               	movlw	low STR_7
   932   0009EE  6E13               	movwf	MensajeLCD_Var@a^0,c
   933   0009F0  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
   934                           
   935                           ;Lab4.c: 108: DireccionaLCD(0xC0);
   936   0009F4  0EC0               	movlw	192
   937   0009F6  EC0A  F00D         	call	_DireccionaLCD
   938                           
   939                           ;Lab4.c: 109: MensajeLCD_Var("Activado");
   940   0009FA  0E30               	movlw	low (STR_11+4)
   941   0009FC  6E13               	movwf	MensajeLCD_Var@a^0,c
   942   0009FE  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
   943   000A02  D7BE               	goto	l3548
   944   000A04                     l3590:
   945                           
   946                           ;Lab4.c: 114: DireccionaLCD(0x80);
   947   000A04  0E80               	movlw	128
   948   000A06  EC0A  F00D         	call	_DireccionaLCD
   949                           
   950                           ;Lab4.c: 115: MensajeLCD_Var("Modo Resta");
   951   000A0A  0E39               	movlw	low STR_9
   952   000A0C  6E13               	movwf	MensajeLCD_Var@a^0,c
   953   000A0E  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
   954                           
   955                           ;Lab4.c: 116: DireccionaLCD(0xC0);
   956   000A12  0EC0               	movlw	192
   957   000A14  EC0A  F00D         	call	_DireccionaLCD
   958                           
   959                           ;Lab4.c: 117: MensajeLCD_Var("Activado");
   960   000A18  0E30               	movlw	low (STR_11+4)
   961   000A1A  6E13               	movwf	MensajeLCD_Var@a^0,c
   962   000A1C  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
   963   000A20  D7AF               	goto	l3548
   964   000A22                     l3600:
   965                           
   966                           ;Lab4.c: 123: if((n1c==' '|n2c==' '|op==' ') & !factorial){
   967   000A22  0E20               	movlw	32
   968   000A24  184E               	xorwf	_n1c^0,w,c
   969   000A26  B4D8               	btfsc	status,2,c
   970   000A28  D008               	goto	u4120
   971   000A2A  0E20               	movlw	32
   972   000A2C  184D               	xorwf	_n2c^0,w,c
   973   000A2E  B4D8               	btfsc	status,2,c
   974   000A30  D004               	goto	u4120
   975   000A32  0E20               	movlw	32
   976   000A34  184F               	xorwf	_op^0,w,c
   977   000A36  A4D8               	btfss	status,2,c
   978   000A38  D092               	goto	l3676
   979   000A3A                     u4120:
   980   000A3A  5046               	movf	_factorial^0,w,c
   981   000A3C  A4D8               	btfss	status,2,c
   982   000A3E  D08F               	goto	l3676
   983                           
   984                           ;Lab4.c: 124: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='^') & n1
      +                          c != ' ' & n2c ==' '){
   985   000A40  0E20               	movlw	32
   986   000A42  184F               	xorwf	_op^0,w,c
   987   000A44  A4D8               	btfss	status,2,c
   988   000A46  D025               	goto	l3628
   989   000A48  0E2B               	movlw	43
   990   000A4A  1848               	xorwf	_Tecla^0,w,c
   991   000A4C  B4D8               	btfsc	status,2,c
   992   000A4E  D010               	goto	u4190
   993   000A50  0E2D               	movlw	45
   994   000A52  1848               	xorwf	_Tecla^0,w,c
   995   000A54  B4D8               	btfsc	status,2,c
   996   000A56  D00C               	goto	u4190
   997   000A58  0E2F               	movlw	47
   998   000A5A  1848               	xorwf	_Tecla^0,w,c
   999   000A5C  B4D8               	btfsc	status,2,c
  1000   000A5E  D008               	goto	u4190
  1001   000A60  0E78               	movlw	120
  1002   000A62  1848               	xorwf	_Tecla^0,w,c
  1003   000A64  B4D8               	btfsc	status,2,c
  1004   000A66  D004               	goto	u4190
  1005   000A68  0E5E               	movlw	94
  1006   000A6A  1848               	xorwf	_Tecla^0,w,c
  1007   000A6C  A4D8               	btfss	status,2,c
  1008   000A6E  D011               	goto	l3628
  1009   000A70                     u4190:
  1010   000A70  0E20               	movlw	32
  1011   000A72  184E               	xorwf	_n1c^0,w,c
  1012   000A74  B4D8               	btfsc	status,2,c
  1013   000A76  D00D               	goto	l3628
  1014   000A78  0E20               	movlw	32
  1015   000A7A  184D               	xorwf	_n2c^0,w,c
  1016   000A7C  A4D8               	btfss	status,2,c
  1017   000A7E  D009               	goto	l3628
  1018                           
  1019                           ;Lab4.c: 125: DireccionaLCD(0x81);
  1020   000A80  0E81               	movlw	129
  1021   000A82  EC0A  F00D         	call	_DireccionaLCD
  1022                           
  1023                           ;Lab4.c: 126: EscribeLCD_c(Tecla);
  1024   000A86  5048               	movf	_Tecla^0,w,c
  1025   000A88  ECFF  F00C         	call	_EscribeLCD_c
  1026   000A8C                     l3626:
  1027                           
  1028                           ;Lab4.c: 127: op = Tecla;
  1029   000A8C  C048  F04F         	movff	_Tecla,_op
  1030                           
  1031                           ;Lab4.c: 128: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|Tecla!=
      +                          '='|Tecla!='C'|Tecla!='^')){
  1032   000A90  D20C               	goto	l3818
  1033   000A92                     l3628:
  1034   000A92  0E20               	movlw	32
  1035   000A94  184E               	xorwf	_n1c^0,w,c
  1036   000A96  A4D8               	btfss	status,2,c
  1037   000A98  D02B               	goto	l3650
  1038   000A9A  0E2B               	movlw	43
  1039   000A9C  1848               	xorwf	_Tecla^0,w,c
  1040   000A9E  A4D8               	btfss	status,2,c
  1041   000AA0  D018               	goto	u4290
  1042   000AA2  0E2D               	movlw	45
  1043   000AA4  1848               	xorwf	_Tecla^0,w,c
  1044   000AA6  A4D8               	btfss	status,2,c
  1045   000AA8  D014               	goto	u4290
  1046   000AAA  0E2F               	movlw	47
  1047   000AAC  1848               	xorwf	_Tecla^0,w,c
  1048   000AAE  A4D8               	btfss	status,2,c
  1049   000AB0  D010               	goto	u4290
  1050   000AB2  0E78               	movlw	120
  1051   000AB4  1848               	xorwf	_Tecla^0,w,c
  1052   000AB6  A4D8               	btfss	status,2,c
  1053   000AB8  D00C               	goto	u4290
  1054   000ABA  0E3D               	movlw	61
  1055   000ABC  1848               	xorwf	_Tecla^0,w,c
  1056   000ABE  A4D8               	btfss	status,2,c
  1057   000AC0  D008               	goto	u4290
  1058   000AC2  0E43               	movlw	67
  1059   000AC4  1848               	xorwf	_Tecla^0,w,c
  1060   000AC6  A4D8               	btfss	status,2,c
  1061   000AC8  D004               	goto	u4290
  1062   000ACA  0E5E               	movlw	94
  1063   000ACC  1848               	xorwf	_Tecla^0,w,c
  1064   000ACE  B4D8               	btfsc	status,2,c
  1065   000AD0  D00F               	goto	l3650
  1066   000AD2                     u4290:
  1067                           
  1068                           ;Lab4.c: 129: DireccionaLCD(0x80);
  1069   000AD2  0E80               	movlw	128
  1070   000AD4  EC0A  F00D         	call	_DireccionaLCD
  1071                           
  1072                           ;Lab4.c: 130: EscribeLCD_c(Tecla);
  1073   000AD8  5048               	movf	_Tecla^0,w,c
  1074   000ADA  ECFF  F00C         	call	_EscribeLCD_c
  1075   000ADE                     l3646:
  1076                           
  1077                           ;Lab4.c: 131: n1c=Tecla;
  1078   000ADE  C048  F04E         	movff	_Tecla,_n1c
  1079                           
  1080                           ;Lab4.c: 132: n1 = Tecla-'0';
  1081   000AE2  0ED0               	movlw	208
  1082   000AE4  2448               	addwf	_Tecla^0,w,c
  1083   000AE6  6E44               	movwf	_n1^0,c
  1084   000AE8  6A45               	clrf	(_n1+1)^0,c
  1085   000AEA  0EFF               	movlw	255
  1086   000AEC  2245               	addwfc	(_n1+1)^0,f,c
  1087                           
  1088                           ;Lab4.c: 133: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='
      +                          /'|Tecla!='x'|Tecla!='='|Tecla!='C'|Tecla!='^')){
  1089   000AEE  D1DD               	goto	l3818
  1090   000AF0                     l3650:
  1091   000AF0  0E20               	movlw	32
  1092   000AF2  184D               	xorwf	_n2c^0,w,c
  1093   000AF4  A4D8               	btfss	status,2,c
  1094   000AF6  D1D9               	goto	l3818
  1095   000AF8  0E20               	movlw	32
  1096   000AFA  184F               	xorwf	_op^0,w,c
  1097   000AFC  B4D8               	btfsc	status,2,c
  1098   000AFE  D1D5               	goto	l3818
  1099   000B00  0E20               	movlw	32
  1100   000B02  184E               	xorwf	_n1c^0,w,c
  1101   000B04  B4D8               	btfsc	status,2,c
  1102   000B06  D1D1               	goto	l3818
  1103   000B08  0E2B               	movlw	43
  1104   000B0A  1848               	xorwf	_Tecla^0,w,c
  1105   000B0C  A4D8               	btfss	status,2,c
  1106   000B0E  D018               	goto	u4390
  1107   000B10  0E2D               	movlw	45
  1108   000B12  1848               	xorwf	_Tecla^0,w,c
  1109   000B14  A4D8               	btfss	status,2,c
  1110   000B16  D014               	goto	u4390
  1111   000B18  0E2F               	movlw	47
  1112   000B1A  1848               	xorwf	_Tecla^0,w,c
  1113   000B1C  A4D8               	btfss	status,2,c
  1114   000B1E  D010               	goto	u4390
  1115   000B20  0E78               	movlw	120
  1116   000B22  1848               	xorwf	_Tecla^0,w,c
  1117   000B24  A4D8               	btfss	status,2,c
  1118   000B26  D00C               	goto	u4390
  1119   000B28  0E3D               	movlw	61
  1120   000B2A  1848               	xorwf	_Tecla^0,w,c
  1121   000B2C  A4D8               	btfss	status,2,c
  1122   000B2E  D008               	goto	u4390
  1123   000B30  0E43               	movlw	67
  1124   000B32  1848               	xorwf	_Tecla^0,w,c
  1125   000B34  A4D8               	btfss	status,2,c
  1126   000B36  D004               	goto	u4390
  1127   000B38  0E5E               	movlw	94
  1128   000B3A  1848               	xorwf	_Tecla^0,w,c
  1129   000B3C  B4D8               	btfsc	status,2,c
  1130   000B3E  D1B5               	goto	l3818
  1131   000B40                     u4390:
  1132                           
  1133                           ;Lab4.c: 134: DireccionaLCD(0x82);
  1134   000B40  0E82               	movlw	130
  1135   000B42  EC0A  F00D         	call	_DireccionaLCD
  1136                           
  1137                           ;Lab4.c: 135: EscribeLCD_c(Tecla);
  1138   000B46  5048               	movf	_Tecla^0,w,c
  1139   000B48  ECFF  F00C         	call	_EscribeLCD_c
  1140                           
  1141                           ;Lab4.c: 136: n2c=Tecla;
  1142   000B4C  C048  F04D         	movff	_Tecla,_n2c
  1143                           
  1144                           ;Lab4.c: 137: n2 = Tecla-'0';
  1145   000B50  0ED0               	movlw	208
  1146   000B52  2448               	addwf	_Tecla^0,w,c
  1147   000B54  6E42               	movwf	_n2^0,c
  1148   000B56  6A43               	clrf	(_n2+1)^0,c
  1149   000B58  0EFF               	movlw	255
  1150   000B5A  2243               	addwfc	(_n2+1)^0,f,c
  1151                           
  1152                           ;Lab4.c: 138: };Lab4.c: 139: }else if ((n1c==' '|op==' ') & factorial){
  1153   000B5C  D1A6               	goto	l3818
  1154   000B5E                     l3676:
  1155   000B5E  0E01               	movlw	1
  1156   000B60  6E26               	movwf	_main$157^0,c
  1157   000B62  0E20               	movlw	32
  1158   000B64  184E               	xorwf	_n1c^0,w,c
  1159   000B66  B4D8               	btfsc	status,2,c
  1160   000B68  D006               	goto	l3684
  1161   000B6A  0E20               	movlw	32
  1162   000B6C  184F               	xorwf	_op^0,w,c
  1163   000B6E  B4D8               	btfsc	status,2,c
  1164   000B70  D002               	goto	l3684
  1165   000B72  0E00               	movlw	0
  1166   000B74  6E26               	movwf	_main$157^0,c
  1167   000B76                     l3684:
  1168   000B76  5026               	movf	_main$157^0,w,c
  1169   000B78  1446               	andwf	_factorial^0,w,c
  1170   000B7A  0900               	iorlw	0
  1171   000B7C  B4D8               	btfsc	status,2,c
  1172   000B7E  D056               	goto	l3732
  1173                           
  1174                           ;Lab4.c: 140: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='^'|Tecla
      +                          =='!') & n1c != ' ' & n2c ==' '){
  1175   000B80  0E20               	movlw	32
  1176   000B82  184F               	xorwf	_op^0,w,c
  1177   000B84  A4D8               	btfss	status,2,c
  1178   000B86  D027               	goto	l3708
  1179   000B88  0E2B               	movlw	43
  1180   000B8A  1848               	xorwf	_Tecla^0,w,c
  1181   000B8C  B4D8               	btfsc	status,2,c
  1182   000B8E  D014               	goto	u4490
  1183   000B90  0E2D               	movlw	45
  1184   000B92  1848               	xorwf	_Tecla^0,w,c
  1185   000B94  B4D8               	btfsc	status,2,c
  1186   000B96  D010               	goto	u4490
  1187   000B98  0E2F               	movlw	47
  1188   000B9A  1848               	xorwf	_Tecla^0,w,c
  1189   000B9C  B4D8               	btfsc	status,2,c
  1190   000B9E  D00C               	goto	u4490
  1191   000BA0  0E78               	movlw	120
  1192   000BA2  1848               	xorwf	_Tecla^0,w,c
  1193   000BA4  B4D8               	btfsc	status,2,c
  1194   000BA6  D008               	goto	u4490
  1195   000BA8  0E5E               	movlw	94
  1196   000BAA  1848               	xorwf	_Tecla^0,w,c
  1197   000BAC  B4D8               	btfsc	status,2,c
  1198   000BAE  D004               	goto	u4490
  1199   000BB0  0E21               	movlw	33
  1200   000BB2  1848               	xorwf	_Tecla^0,w,c
  1201   000BB4  A4D8               	btfss	status,2,c
  1202   000BB6  D00F               	goto	l3708
  1203   000BB8                     u4490:
  1204   000BB8  0E20               	movlw	32
  1205   000BBA  184E               	xorwf	_n1c^0,w,c
  1206   000BBC  B4D8               	btfsc	status,2,c
  1207   000BBE  D00B               	goto	l3708
  1208   000BC0  0E20               	movlw	32
  1209   000BC2  184D               	xorwf	_n2c^0,w,c
  1210   000BC4  A4D8               	btfss	status,2,c
  1211   000BC6  D007               	goto	l3708
  1212                           
  1213                           ;Lab4.c: 141: DireccionaLCD(0x81);
  1214   000BC8  0E81               	movlw	129
  1215   000BCA  EC0A  F00D         	call	_DireccionaLCD
  1216                           
  1217                           ;Lab4.c: 142: EscribeLCD_c(Tecla);
  1218   000BCE  5048               	movf	_Tecla^0,w,c
  1219   000BD0  ECFF  F00C         	call	_EscribeLCD_c
  1220   000BD4  D75B               	goto	l3626
  1221   000BD6                     l3708:
  1222   000BD6  0E20               	movlw	32
  1223   000BD8  184E               	xorwf	_n1c^0,w,c
  1224   000BDA  A4D8               	btfss	status,2,c
  1225   000BDC  D166               	goto	l3818
  1226   000BDE  0E2B               	movlw	43
  1227   000BE0  1848               	xorwf	_Tecla^0,w,c
  1228   000BE2  A4D8               	btfss	status,2,c
  1229   000BE4  D01C               	goto	u4600
  1230   000BE6  0E2D               	movlw	45
  1231   000BE8  1848               	xorwf	_Tecla^0,w,c
  1232   000BEA  A4D8               	btfss	status,2,c
  1233   000BEC  D018               	goto	u4600
  1234   000BEE  0E2F               	movlw	47
  1235   000BF0  1848               	xorwf	_Tecla^0,w,c
  1236   000BF2  A4D8               	btfss	status,2,c
  1237   000BF4  D014               	goto	u4600
  1238   000BF6  0E78               	movlw	120
  1239   000BF8  1848               	xorwf	_Tecla^0,w,c
  1240   000BFA  A4D8               	btfss	status,2,c
  1241   000BFC  D010               	goto	u4600
  1242   000BFE  0E3D               	movlw	61
  1243   000C00  1848               	xorwf	_Tecla^0,w,c
  1244   000C02  A4D8               	btfss	status,2,c
  1245   000C04  D00C               	goto	u4600
  1246   000C06  0E43               	movlw	67
  1247   000C08  1848               	xorwf	_Tecla^0,w,c
  1248   000C0A  A4D8               	btfss	status,2,c
  1249   000C0C  D008               	goto	u4600
  1250   000C0E  0E5E               	movlw	94
  1251   000C10  1848               	xorwf	_Tecla^0,w,c
  1252   000C12  A4D8               	btfss	status,2,c
  1253   000C14  D004               	goto	u4600
  1254   000C16  0E21               	movlw	33
  1255   000C18  1848               	xorwf	_Tecla^0,w,c
  1256   000C1A  B4D8               	btfsc	status,2,c
  1257   000C1C  D146               	goto	l3818
  1258   000C1E                     u4600:
  1259                           
  1260                           ;Lab4.c: 145: DireccionaLCD(0x80);
  1261   000C1E  0E80               	movlw	128
  1262   000C20  EC0A  F00D         	call	_DireccionaLCD
  1263                           
  1264                           ;Lab4.c: 146: EscribeLCD_c(Tecla);
  1265   000C24  5048               	movf	_Tecla^0,w,c
  1266   000C26  ECFF  F00C         	call	_EscribeLCD_c
  1267   000C2A  D759               	goto	l3646
  1268   000C2C                     l3732:
  1269   000C2C  0E3D               	movlw	61
  1270   000C2E  1848               	xorwf	_Tecla^0,w,c
  1271   000C30  A4D8               	btfss	status,2,c
  1272   000C32  D0F4               	goto	l3800
  1273   000C34  0E20               	movlw	32
  1274   000C36  184D               	xorwf	_n2c^0,w,c
  1275   000C38  B4D8               	btfsc	status,2,c
  1276   000C3A  D0F0               	goto	l3800
  1277   000C3C  0E20               	movlw	32
  1278   000C3E  184F               	xorwf	_op^0,w,c
  1279   000C40  B4D8               	btfsc	status,2,c
  1280   000C42  D0EC               	goto	l3800
  1281   000C44  0E20               	movlw	32
  1282   000C46  184E               	xorwf	_n1c^0,w,c
  1283   000C48  B4D8               	btfsc	status,2,c
  1284   000C4A  D0E8               	goto	l3800
  1285   000C4C  5046               	movf	_factorial^0,w,c
  1286   000C4E  A4D8               	btfss	status,2,c
  1287   000C50  D0E5               	goto	l3800
  1288                           
  1289                           ;Lab4.c: 151: DireccionaLCD(0x83);
  1290   000C52  0E83               	movlw	131
  1291   000C54  EC0A  F00D         	call	_DireccionaLCD
  1292                           
  1293                           ;Lab4.c: 152: EscribeLCD_c('=');
  1294   000C58  0E3D               	movlw	61
  1295   000C5A  ECFF  F00C         	call	_EscribeLCD_c
  1296                           
  1297                           ;Lab4.c: 153: switch(op){
  1298   000C5E  D0BF               	goto	l3794
  1299   000C60                     l3744:
  1300                           
  1301                           ;Lab4.c: 155: r = n1 + n2;
  1302   000C60  5042               	movf	_n2^0,w,c
  1303   000C62  2444               	addwf	_n1^0,w,c
  1304   000C64  6E24               	movwf	??_main^0,c
  1305   000C66  5043               	movf	(_n2+1)^0,w,c
  1306   000C68  2045               	addwfc	(_n1+1)^0,w,c
  1307   000C6A  6E25               	movwf	(??_main+1)^0,c
  1308   000C6C  C024  F02C         	movff	??_main,_r
  1309   000C70  C025  F02D         	movff	??_main+1,_r+1
  1310   000C74  6A2E               	clrf	(_r+2)^0,c
  1311   000C76  6A2F               	clrf	(_r+3)^0,c
  1312   000C78                     l3746:
  1313                           
  1314                           ;Lab4.c: 156: partdecl = r*100;
  1315   000C78  C02C  F00E         	movff	_r,___lmul@multiplier
  1316   000C7C  C02D  F00F         	movff	_r+1,___lmul@multiplier+1
  1317   000C80  C02E  F010         	movff	_r+2,___lmul@multiplier+2
  1318   000C84  C02F  F011         	movff	_r+3,___lmul@multiplier+3
  1319   000C88  0E64               	movlw	100
  1320   000C8A  6E12               	movwf	___lmul@multiplicand^0,c
  1321   000C8C  0E00               	movlw	0
  1322   000C8E  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1323   000C90  0E00               	movlw	0
  1324   000C92  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1325   000C94  0E00               	movlw	0
  1326   000C96  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1327   000C98  EC38  F00B         	call	___lmul	;wreg free
  1328   000C9C  C00E  F030         	movff	?___lmul,_partdecl
  1329   000CA0  C00F  F031         	movff	?___lmul+1,_partdecl+1
  1330   000CA4  C010  F032         	movff	?___lmul+2,_partdecl+2
  1331   000CA8  C011  F033         	movff	?___lmul+3,_partdecl+3
  1332                           
  1333                           ;Lab4.c: 157: break;
  1334   000CAC  D0A9               	goto	l3796
  1335   000CAE                     l3748:
  1336                           
  1337                           ;Lab4.c: 159: r = n1 - n2;
  1338   000CAE  5042               	movf	_n2^0,w,c
  1339   000CB0  5C44               	subwf	_n1^0,w,c
  1340   000CB2  6E24               	movwf	??_main^0,c
  1341   000CB4  5043               	movf	(_n2+1)^0,w,c
  1342   000CB6  5845               	subwfb	(_n1+1)^0,w,c
  1343   000CB8  D7D8               	goto	L1
  1344   000CBA                     l3752:
  1345                           
  1346                           ;Lab4.c: 163: r = n1*n2;
  1347   000CBA  C044  F00E         	movff	_n1,___wmul@multiplier
  1348   000CBE  C045  F00F         	movff	_n1+1,___wmul@multiplier+1
  1349   000CC2  C042  F010         	movff	_n2,___wmul@multiplicand
  1350   000CC6  C043  F011         	movff	_n2+1,___wmul@multiplicand+1
  1351   000CCA  ECE0  F00C         	call	___wmul	;wreg free
  1352   000CCE  C00E  F02C         	movff	?___wmul,_r
  1353   000CD2  C00F  F02D         	movff	?___wmul+1,_r+1
  1354   000CD6  D7CE               	goto	L2
  1355   000CD8                     l3756:
  1356                           
  1357                           ;Lab4.c: 167: if(n2!=0){
  1358   000CD8  5042               	movf	_n2^0,w,c
  1359   000CDA  1043               	iorwf	(_n2+1)^0,w,c
  1360   000CDC  B4D8               	btfsc	status,2,c
  1361   000CDE  D02F               	goto	l3764
  1362                           
  1363                           ;Lab4.c: 168: if(n1!=0){
  1364   000CE0  5044               	movf	_n1^0,w,c
  1365   000CE2  1045               	iorwf	(_n1+1)^0,w,c
  1366   000CE4  B4D8               	btfsc	status,2,c
  1367   000CE6  D08C               	goto	l3796
  1368                           
  1369                           ;Lab4.c: 169: r = n1/n2;
  1370   000CE8  C044  F014         	movff	_n1,___lwdiv@dividend
  1371   000CEC  C045  F015         	movff	_n1+1,___lwdiv@dividend+1
  1372   000CF0  C042  F016         	movff	_n2,___lwdiv@divisor
  1373   000CF4  C043  F017         	movff	_n2+1,___lwdiv@divisor+1
  1374   000CF8  ECB9  F00B         	call	___lwdiv	;wreg free
  1375   000CFC  C014  F02C         	movff	?___lwdiv,_r
  1376   000D00  C015  F02D         	movff	?___lwdiv+1,_r+1
  1377   000D04  6A2E               	clrf	(_r+2)^0,c
  1378   000D06  6A2F               	clrf	(_r+3)^0,c
  1379                           
  1380                           ;Lab4.c: 170: partdecl = (n1*100)/n2;
  1381   000D08  C044  F00E         	movff	_n1,___wmul@multiplier
  1382   000D0C  C045  F00F         	movff	_n1+1,___wmul@multiplier+1
  1383   000D10  0E00               	movlw	0
  1384   000D12  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1385   000D14  0E64               	movlw	100
  1386   000D16  6E10               	movwf	___wmul@multiplicand^0,c
  1387   000D18  ECE0  F00C         	call	___wmul	;wreg free
  1388   000D1C  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1389   000D20  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1390   000D24  C042  F016         	movff	_n2,___lwdiv@divisor
  1391   000D28  C043  F017         	movff	_n2+1,___lwdiv@divisor+1
  1392   000D2C  ECB9  F00B         	call	___lwdiv	;wreg free
  1393   000D30  C014  F030         	movff	?___lwdiv,_partdecl
  1394   000D34  C015  F031         	movff	?___lwdiv+1,_partdecl+1
  1395   000D38  6A32               	clrf	(_partdecl+2)^0,c
  1396   000D3A  6A33               	clrf	(_partdecl+3)^0,c
  1397   000D3C  D061               	goto	l3796
  1398   000D3E                     l3764:
  1399                           
  1400                           ;Lab4.c: 173: if(n1 != 0 & n2 == 0) r = 1000;
  1401   000D3E  5044               	movf	_n1^0,w,c
  1402   000D40  1045               	iorwf	(_n1+1)^0,w,c
  1403   000D42  B4D8               	btfsc	status,2,c
  1404   000D44  D006               	goto	l3770
  1405   000D46  5042               	movf	_n2^0,w,c
  1406   000D48  1043               	iorwf	(_n2+1)^0,w,c
  1407   000D4A  A4D8               	btfss	status,2,c
  1408   000D4C  D002               	goto	l3770
  1409   000D4E  0EE8               	movlw	232
  1410   000D50  D009               	goto	L3
  1411   000D52                     l3770:
  1412                           
  1413                           ;Lab4.c: 174: else if(n1 == 0 & n2 == 0) r = 1001;
  1414   000D52  5044               	movf	_n1^0,w,c
  1415   000D54  1045               	iorwf	(_n1+1)^0,w,c
  1416   000D56  A4D8               	btfss	status,2,c
  1417   000D58  D78F               	goto	l3746
  1418   000D5A  5042               	movf	_n2^0,w,c
  1419   000D5C  1043               	iorwf	(_n2+1)^0,w,c
  1420   000D5E  A4D8               	btfss	status,2,c
  1421   000D60  D78B               	goto	l3746
  1422   000D62  0EE9               	movlw	233
  1423   000D64                     L3:
  1424   000D64  6E2C               	movwf	_r^0,c
  1425   000D66  0E03               	movlw	3
  1426   000D68  6E2D               	movwf	(_r+1)^0,c
  1427   000D6A  0E00               	movlw	0
  1428   000D6C  6E2E               	movwf	(_r+2)^0,c
  1429   000D6E  0E00               	movlw	0
  1430   000D70  6E2F               	movwf	(_r+3)^0,c
  1431   000D72  D782               	goto	l3746
  1432   000D74                     l3778:
  1433                           
  1434                           ;Lab4.c: 179: r=n1;
  1435   000D74  C044  F02C         	movff	_n1,_r
  1436   000D78  C045  F02D         	movff	_n1+1,_r+1
  1437   000D7C  6A2E               	clrf	(_r+2)^0,c
  1438   000D7E  6A2F               	clrf	(_r+3)^0,c
  1439                           
  1440                           ;Lab4.c: 180: for(i=1;i<n2;i++){
  1441   000D80  0E00               	movlw	0
  1442   000D82  6E41               	movwf	(_i+1)^0,c
  1443   000D84  0E01               	movlw	1
  1444   000D86  6E40               	movwf	_i^0,c
  1445   000D88  D01A               	goto	l3786
  1446   000D8A                     l3782:
  1447                           
  1448                           ;Lab4.c: 181: r=r*n1;
  1449   000D8A  C044  F00E         	movff	_n1,___lmul@multiplier
  1450   000D8E  C045  F00F         	movff	_n1+1,___lmul@multiplier+1
  1451   000D92  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1452   000D94  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1453   000D96  C02C  F012         	movff	_r,___lmul@multiplicand
  1454   000D9A  C02D  F013         	movff	_r+1,___lmul@multiplicand+1
  1455   000D9E  C02E  F014         	movff	_r+2,___lmul@multiplicand+2
  1456   000DA2  C02F  F015         	movff	_r+3,___lmul@multiplicand+3
  1457   000DA6  EC38  F00B         	call	___lmul	;wreg free
  1458   000DAA  C00E  F02C         	movff	?___lmul,_r
  1459   000DAE  C00F  F02D         	movff	?___lmul+1,_r+1
  1460   000DB2  C010  F02E         	movff	?___lmul+2,_r+2
  1461   000DB6  C011  F02F         	movff	?___lmul+3,_r+3
  1462   000DBA  4A40               	infsnz	_i^0,f,c
  1463   000DBC  2A41               	incf	(_i+1)^0,f,c
  1464   000DBE                     l3786:
  1465   000DBE  5042               	movf	_n2^0,w,c
  1466   000DC0  5C40               	subwf	_i^0,w,c
  1467   000DC2  5043               	movf	(_n2+1)^0,w,c
  1468   000DC4  5841               	subwfb	(_i+1)^0,w,c
  1469   000DC6  B0D8               	btfsc	status,0,c
  1470   000DC8  D757               	goto	l3746
  1471   000DCA  D7DF               	goto	l3782
  1472   000DCC                     l3790:
  1473                           
  1474                           ;Lab4.c: 186: r = 0;
  1475   000DCC  0E00               	movlw	0
  1476   000DCE  6E2C               	movwf	_r^0,c
  1477   000DD0  0E00               	movlw	0
  1478   000DD2  6E2D               	movwf	(_r+1)^0,c
  1479   000DD4  0E00               	movlw	0
  1480   000DD6  6E2E               	movwf	(_r+2)^0,c
  1481   000DD8  0E00               	movlw	0
  1482   000DDA  6E2F               	movwf	(_r+3)^0,c
  1483                           
  1484                           ;Lab4.c: 187: break;
  1485   000DDC  D011               	goto	l3796
  1486   000DDE                     l3794:
  1487   000DDE  504F               	movf	_op^0,w,c
  1488                           
  1489                           ; Switch size 1, requested type "simple"
  1490                           ; Number of cases is 5, Range of values is 43 to 120
  1491                           ; switch strategies available:
  1492                           ; Name         Instructions Cycles
  1493                           ; simple_byte           16     9 (average)
  1494                           ;	Chosen strategy is simple_byte
  1495   000DE0  0A2B               	xorlw	43	; case 43
  1496   000DE2  B4D8               	btfsc	status,2,c
  1497   000DE4  D73D               	goto	l3744
  1498   000DE6  0A06               	xorlw	6	; case 45
  1499   000DE8  B4D8               	btfsc	status,2,c
  1500   000DEA  D761               	goto	l3748
  1501   000DEC  0A02               	xorlw	2	; case 47
  1502   000DEE  B4D8               	btfsc	status,2,c
  1503   000DF0  D773               	goto	l3756
  1504   000DF2  0A71               	xorlw	113	; case 94
  1505   000DF4  B4D8               	btfsc	status,2,c
  1506   000DF6  D7BE               	goto	l3778
  1507   000DF8  0A26               	xorlw	38	; case 120
  1508   000DFA  B4D8               	btfsc	status,2,c
  1509   000DFC  D75E               	goto	l3752
  1510   000DFE  D7E6               	goto	l3790
  1511   000E00                     l3796:
  1512                           
  1513                           ;Lab4.c: 189: DireccionaLCD(0x84);
  1514   000E00  0E84               	movlw	132
  1515   000E02  EC0A  F00D         	call	_DireccionaLCD
  1516   000E06                     l3798:
  1517                           
  1518                           ;Lab4.c: 190: Imprimir_Resultado(r);
  1519   000E06  C02C  F01C         	movff	_r,Imprimir_Resultado@r
  1520   000E0A  C02D  F01D         	movff	_r+1,Imprimir_Resultado@r+1
  1521   000E0E  C02E  F01E         	movff	_r+2,Imprimir_Resultado@r+2
  1522   000E12  C02F  F01F         	movff	_r+3,Imprimir_Resultado@r+3
  1523   000E16  EC5E  F007         	call	_Imprimir_Resultado	;wreg free
  1524                           
  1525                           ;Lab4.c: 191: }else if((Tecla=='=' & op=='!' & n1c != ' ') & factorial) {
  1526   000E1A  D047               	goto	l3818
  1527   000E1C                     l3800:
  1528   000E1C  0E00               	movlw	0
  1529   000E1E  6E27               	movwf	_main$158^0,c
  1530   000E20  0E3D               	movlw	61
  1531   000E22  1848               	xorwf	_Tecla^0,w,c
  1532   000E24  A4D8               	btfss	status,2,c
  1533   000E26  D00A               	goto	l3810
  1534   000E28  0E21               	movlw	33
  1535   000E2A  184F               	xorwf	_op^0,w,c
  1536   000E2C  A4D8               	btfss	status,2,c
  1537   000E2E  D006               	goto	l3810
  1538   000E30  0E20               	movlw	32
  1539   000E32  184E               	xorwf	_n1c^0,w,c
  1540   000E34  B4D8               	btfsc	status,2,c
  1541   000E36  D002               	goto	l3810
  1542   000E38  0E01               	movlw	1
  1543   000E3A  6E27               	movwf	_main$158^0,c
  1544   000E3C                     l3810:
  1545   000E3C  5027               	movf	_main$158^0,w,c
  1546   000E3E  1446               	andwf	_factorial^0,w,c
  1547   000E40  0900               	iorlw	0
  1548   000E42  B4D8               	btfsc	status,2,c
  1549   000E44  D02F               	goto	l3816
  1550                           
  1551                           ;Lab4.c: 192: DireccionaLCD(0x82);
  1552   000E46  0E82               	movlw	130
  1553   000E48  EC0A  F00D         	call	_DireccionaLCD
  1554                           
  1555                           ;Lab4.c: 193: EscribeLCD_c('=');
  1556   000E4C  0E3D               	movlw	61
  1557   000E4E  ECFF  F00C         	call	_EscribeLCD_c
  1558                           
  1559                           ;Lab4.c: 194: r=factorial_function(n1);
  1560   000E52  C044  F01A         	movff	_n1,factorial_function@a
  1561   000E56  C045  F01B         	movff	_n1+1,factorial_function@a+1
  1562   000E5A  ECFC  F00A         	call	_factorial_function	;wreg free
  1563   000E5E  C01A  F02C         	movff	?_factorial_function,_r
  1564   000E62  C01B  F02D         	movff	?_factorial_function+1,_r+1
  1565   000E66  C01C  F02E         	movff	?_factorial_function+2,_r+2
  1566   000E6A  C01D  F02F         	movff	?_factorial_function+3,_r+3
  1567                           
  1568                           ;Lab4.c: 195: partdecl = r*100;
  1569   000E6E  C02C  F00E         	movff	_r,___lmul@multiplier
  1570   000E72  C02D  F00F         	movff	_r+1,___lmul@multiplier+1
  1571   000E76  C02E  F010         	movff	_r+2,___lmul@multiplier+2
  1572   000E7A  C02F  F011         	movff	_r+3,___lmul@multiplier+3
  1573   000E7E  0E64               	movlw	100
  1574   000E80  6E12               	movwf	___lmul@multiplicand^0,c
  1575   000E82  0E00               	movlw	0
  1576   000E84  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1577   000E86  0E00               	movlw	0
  1578   000E88  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1579   000E8A  0E00               	movlw	0
  1580   000E8C  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1581   000E8E  EC38  F00B         	call	___lmul	;wreg free
  1582   000E92  C00E  F030         	movff	?___lmul,_partdecl
  1583   000E96  C00F  F031         	movff	?___lmul+1,_partdecl+1
  1584   000E9A  C010  F032         	movff	?___lmul+2,_partdecl+2
  1585   000E9E  C011  F033         	movff	?___lmul+3,_partdecl+3
  1586   000EA2  D7B1               	goto	l3798
  1587   000EA4                     l3816:
  1588                           
  1589                           ;Lab4.c: 198: EscribeLCD_c('W');
  1590   000EA4  0E57               	movlw	87
  1591   000EA6  ECFF  F00C         	call	_EscribeLCD_c
  1592   000EAA                     l3818:
  1593                           
  1594                           ;Lab4.c: 199: };Lab4.c: 200: _delay((unsigned long)((700)*(1000000/4000.0)));
  1595   000EAA  0EE4               	movlw	228
  1596   000EAC  6E24               	movwf	??_main^0,c
  1597   000EAE  0E44               	movlw	68
  1598   000EB0                     u4797:
  1599   000EB0  2EE8               	decfsz	wreg,f,c
  1600   000EB2  D7FE               	bra	u4797
  1601   000EB4  2E24               	decfsz	??_main^0,f,c
  1602   000EB6  D7FC               	bra	u4797
  1603   000EB8  D000               	nop2	
  1604   000EBA  D512               	goto	l3514
  1605   000EBC                     __end_of_main:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _factorial_function *****************
  1609 ;; Defined at:
  1610 ;;		line 277 in file "Lab4.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  a               2   25[COMRAM] int 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  fact            4   29[COMRAM] long 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  4   25[COMRAM] unsigned long 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1624 ;;      Params:         4       0       0       0       0       0       0       0       0
  1625 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1627 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1628 ;;Total ram usage:        8 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 6
  1631 ;; This function calls:
  1632 ;;		___lmul
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text1
  1639   0015F8                     __ptext1:
  1640                           	callstack 0
  1641   0015F8                     _factorial_function:
  1642                           	callstack 24
  1643                           
  1644                           ;Lab4.c: 278: long fact = 1;
  1645                           
  1646                           ;incstack = 0
  1647   0015F8  0E01               	movlw	1
  1648   0015FA  6E1E               	movwf	factorial_function@fact^0,c
  1649   0015FC  0E00               	movlw	0
  1650   0015FE  6E1F               	movwf	(factorial_function@fact+1)^0,c
  1651   001600  0E00               	movlw	0
  1652   001602  6E20               	movwf	(factorial_function@fact+2)^0,c
  1653   001604  0E00               	movlw	0
  1654   001606  6E21               	movwf	(factorial_function@fact+3)^0,c
  1655                           
  1656                           ;Lab4.c: 279: for (b = a; b > 1; b--){
  1657   001608  C01A  F034         	movff	factorial_function@a,_b
  1658   00160C  C01B  F035         	movff	factorial_function@a+1,_b+1
  1659   001610  D01E               	goto	l3478
  1660   001612                     l3474:
  1661                           
  1662                           ;Lab4.c: 280: fact = fact * b;
  1663   001612  C034  F00E         	movff	_b,___lmul@multiplier
  1664   001616  C035  F00F         	movff	_b+1,___lmul@multiplier+1
  1665   00161A  0E00               	movlw	0
  1666   00161C  BE0F               	btfsc	(___lmul@multiplier+1)^0,7,c
  1667   00161E  0EFF               	movlw	-1
  1668   001620  6E10               	movwf	(___lmul@multiplier+2)^0,c
  1669   001622  6E11               	movwf	(___lmul@multiplier+3)^0,c
  1670   001624  C01E  F012         	movff	factorial_function@fact,___lmul@multiplicand
  1671   001628  C01F  F013         	movff	factorial_function@fact+1,___lmul@multiplicand+1
  1672   00162C  C020  F014         	movff	factorial_function@fact+2,___lmul@multiplicand+2
  1673   001630  C021  F015         	movff	factorial_function@fact+3,___lmul@multiplicand+3
  1674   001634  EC38  F00B         	call	___lmul	;wreg free
  1675   001638  C00E  F01E         	movff	?___lmul,factorial_function@fact
  1676   00163C  C00F  F01F         	movff	?___lmul+1,factorial_function@fact+1
  1677   001640  C010  F020         	movff	?___lmul+2,factorial_function@fact+2
  1678   001644  C011  F021         	movff	?___lmul+3,factorial_function@fact+3
  1679   001648  0634               	decf	_b^0,f,c
  1680   00164A  A0D8               	btfss	status,0,c
  1681   00164C  0635               	decf	(_b+1)^0,f,c
  1682   00164E                     l3478:
  1683   00164E  BE35               	btfsc	(_b+1)^0,7,c
  1684   001650  D006               	goto	u3930
  1685   001652  5035               	movf	(_b+1)^0,w,c
  1686   001654  E1DE               	bnz	l3474
  1687   001656  0E02               	movlw	2
  1688   001658  5C34               	subwf	_b^0,w,c
  1689   00165A  B0D8               	btfsc	status,0,c
  1690   00165C  D7DA               	goto	l3474
  1691   00165E                     u3930:
  1692                           
  1693                           ;Lab4.c: 281: };Lab4.c: 283: return fact;
  1694   00165E  C01E  F01A         	movff	factorial_function@fact,?_factorial_function
  1695   001662  C01F  F01B         	movff	factorial_function@fact+1,?_factorial_function+1
  1696   001666  C020  F01C         	movff	factorial_function@fact+2,?_factorial_function+2
  1697   00166A  C021  F01D         	movff	factorial_function@fact+3,?_factorial_function+3
  1698   00166E  0012               	return		;funcret
  1699   001670                     __end_of_factorial_function:
  1700                           	callstack 0
  1701                           
  1702 ;; *************** function _LeerTeclado *****************
  1703 ;; Defined at:
  1704 ;;		line 206 in file "Lab4.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      unsigned char 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1721 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 5
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text2
  1733   0012DE                     __ptext2:
  1734                           	callstack 0
  1735   0012DE                     _LeerTeclado:
  1736                           	callstack 25
  1737                           
  1738                           ;Lab4.c: 207: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1739                           
  1740                           ;incstack = 0
  1741   0012DE  B881               	btfsc	3969,4,c	;volatile
  1742   0012E0  AA81               	btfss	3969,5,c	;volatile
  1743   0012E2  D004               	goto	u2100
  1744   0012E4  AC81               	btfss	3969,6,c	;volatile
  1745   0012E6  D002               	goto	u2100
  1746   0012E8  BE81               	btfsc	3969,7,c	;volatile
  1747   0012EA  D7F9               	goto	__ptext2
  1748   0012EC                     u2100:
  1749                           
  1750                           ;Lab4.c: 208: verificador = 1;
  1751   0012EC  0E00               	movlw	0
  1752   0012EE  6E39               	movwf	(_verificador+1)^0,c
  1753   0012F0  0E01               	movlw	1
  1754   0012F2  6E38               	movwf	_verificador^0,c
  1755                           
  1756                           ;Lab4.c: 209: LATB=0b11111110;
  1757   0012F4  0EFE               	movlw	254
  1758   0012F6  6E8A               	movwf	138,c	;volatile
  1759                           
  1760                           ;Lab4.c: 210: if(RB4==0){
  1761   0012F8  B881               	btfsc	3969,4,c	;volatile
  1762   0012FA  D00A               	goto	l256
  1763                           
  1764                           ;Lab4.c: 211: if(!potencia) return '+';
  1765   0012FC  5047               	movf	_potencia^0,w,c
  1766   0012FE  A4D8               	btfss	status,2,c
  1767   001300  D002               	goto	l2450
  1768   001302  0E2B               	movlw	43
  1769   001304  0012               	return	
  1770   001306                     l2450:
  1771                           
  1772                           ;Lab4.c: 212: else if(potencia) return '^';
  1773   001306  5047               	movf	_potencia^0,w,c
  1774   001308  B4D8               	btfsc	status,2,c
  1775   00130A  D04C               	goto	l288
  1776   00130C  0E5E               	movlw	94
  1777   00130E  0012               	return	
  1778   001310                     l256:
  1779                           
  1780                           ;Lab4.c: 214: else if(RB5==0) return '=';
  1781   001310  BA81               	btfsc	3969,5,c	;volatile
  1782   001312  D002               	goto	l262
  1783   001314  0E3D               	movlw	61
  1784   001316  0012               	return	
  1785   001318                     l262:
  1786                           
  1787                           ;Lab4.c: 215: else if(RB6==0) return '0';
  1788   001318  BC81               	btfsc	3969,6,c	;volatile
  1789   00131A  D002               	goto	l264
  1790   00131C  0E30               	movlw	48
  1791   00131E  0012               	return	
  1792   001320                     l264:
  1793                           
  1794                           ;Lab4.c: 216: else if(RB7==0) return 'C';
  1795   001320  BE81               	btfsc	3969,7,c	;volatile
  1796   001322  D002               	goto	l2474
  1797   001324  0E43               	movlw	67
  1798   001326  0012               	return	
  1799   001328                     l2474:
  1800                           
  1801                           ;Lab4.c: 217: else{;Lab4.c: 218: LATB=0b11111101;
  1802   001328  0EFD               	movlw	253
  1803   00132A  6E8A               	movwf	138,c	;volatile
  1804                           
  1805                           ;Lab4.c: 219: if(RB4==0){
  1806   00132C  B881               	btfsc	3969,4,c	;volatile
  1807   00132E  D00A               	goto	l268
  1808                           
  1809                           ;Lab4.c: 220: if(!factorial) return '-';
  1810   001330  5046               	movf	_factorial^0,w,c
  1811   001332  A4D8               	btfss	status,2,c
  1812   001334  D002               	goto	l2486
  1813   001336  0E2D               	movlw	45
  1814   001338  0012               	return	
  1815   00133A                     l2486:
  1816                           
  1817                           ;Lab4.c: 221: else if(factorial) return '!';
  1818   00133A  5046               	movf	_factorial^0,w,c
  1819   00133C  B4D8               	btfsc	status,2,c
  1820   00133E  D032               	goto	l288
  1821   001340  0E21               	movlw	33
  1822   001342  0012               	return	
  1823   001344                     l268:
  1824                           
  1825                           ;Lab4.c: 223: else if(RB5==0) return '9';
  1826   001344  BA81               	btfsc	3969,5,c	;volatile
  1827   001346  D002               	goto	l273
  1828   001348  0E39               	movlw	57
  1829   00134A  0012               	return	
  1830   00134C                     l273:
  1831                           
  1832                           ;Lab4.c: 224: else if(RB6==0) return '8';
  1833   00134C  BC81               	btfsc	3969,6,c	;volatile
  1834   00134E  D002               	goto	l275
  1835   001350  0E38               	movlw	56
  1836   001352  0012               	return	
  1837   001354                     l275:
  1838                           
  1839                           ;Lab4.c: 225: else if(RB7==0) return '7';
  1840   001354  BE81               	btfsc	3969,7,c	;volatile
  1841   001356  D002               	goto	l2510
  1842   001358  0E37               	movlw	55
  1843   00135A  0012               	return	
  1844   00135C                     l2510:
  1845                           
  1846                           ;Lab4.c: 226: else{;Lab4.c: 227: LATB=0b11111011;
  1847   00135C  0EFB               	movlw	251
  1848   00135E  6E8A               	movwf	138,c	;volatile
  1849                           
  1850                           ;Lab4.c: 228: if(RB4==0) return 'x';
  1851   001360  B881               	btfsc	3969,4,c	;volatile
  1852   001362  D002               	goto	l279
  1853   001364  0E78               	movlw	120
  1854   001366  0012               	return	
  1855   001368                     l279:
  1856                           
  1857                           ;Lab4.c: 229: else if(RB5==0) return '6';
  1858   001368  BA81               	btfsc	3969,5,c	;volatile
  1859   00136A  D002               	goto	l281
  1860   00136C  0E36               	movlw	54
  1861   00136E  0012               	return	
  1862   001370                     l281:
  1863                           
  1864                           ;Lab4.c: 230: else if(RB6==0) return '5';
  1865   001370  BC81               	btfsc	3969,6,c	;volatile
  1866   001372  D002               	goto	l283
  1867   001374  0E35               	movlw	53
  1868   001376  0012               	return	
  1869   001378                     l283:
  1870                           
  1871                           ;Lab4.c: 231: else if(RB7==0) return '4';
  1872   001378  BE81               	btfsc	3969,7,c	;volatile
  1873   00137A  D002               	goto	l2538
  1874   00137C  0E34               	movlw	52
  1875   00137E  0012               	return	
  1876   001380                     l2538:
  1877                           
  1878                           ;Lab4.c: 232: else{;Lab4.c: 233: LATB=0b11110111;
  1879   001380  0EF7               	movlw	247
  1880   001382  6E8A               	movwf	138,c	;volatile
  1881                           
  1882                           ;Lab4.c: 234: if(RB4==0) return '/';
  1883   001384  B881               	btfsc	3969,4,c	;volatile
  1884   001386  D002               	goto	l287
  1885   001388  0E2F               	movlw	47
  1886   00138A  0012               	return	
  1887   00138C                     l287:
  1888                           
  1889                           ;Lab4.c: 235: else if(RB5==0) return '3';
  1890   00138C  BA81               	btfsc	3969,5,c	;volatile
  1891   00138E  D002               	goto	l289
  1892   001390  0E33               	movlw	51
  1893   001392  0012               	return	
  1894   001394                     l289:
  1895                           
  1896                           ;Lab4.c: 236: else if(RB6==0) return '2';
  1897   001394  BC81               	btfsc	3969,6,c	;volatile
  1898   001396  D002               	goto	l291
  1899   001398  0E32               	movlw	50
  1900   00139A  0012               	return	
  1901   00139C                     l291:
  1902                           
  1903                           ;Lab4.c: 237: else if(RB7==0) return '1';
  1904   00139C  BE81               	btfsc	3969,7,c	;volatile
  1905   00139E  D002               	goto	l288
  1906   0013A0  0E31               	movlw	49
  1907   0013A2  0012               	return	
  1908   0013A4                     l288:
  1909                           
  1910                           ;Lab4.c: 238: };Lab4.c: 239: };Lab4.c: 240: };Lab4.c: 241: return '?';
  1911   0013A4  0E3F               	movlw	63
  1912   0013A6  0012               	return		;funcret
  1913   0013A8                     __end_of_LeerTeclado:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _InicializaLCD *****************
  1917 ;; Defined at:
  1918 ;;		line 62 in file "LibLCDXC8.h"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1932 ;;      Params:         0       0       0       0       0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1936 ;;Total ram usage:        0 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 8
  1939 ;; This function calls:
  1940 ;;		_BorraLCD
  1941 ;;		_EnviaDato
  1942 ;;		_HabilitaLCD
  1943 ;;		_RetardoLCD
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text3
  1950   001454                     __ptext3:
  1951                           	callstack 0
  1952   001454                     _InicializaLCD:
  1953                           	callstack 22
  1954                           
  1955                           ;LibLCDXC8.h: 64: LATE0=0;
  1956                           
  1957                           ;incstack = 0
  1958   001454  908D               	bcf	3981,0,c	;volatile
  1959                           
  1960                           ;LibLCDXC8.h: 65: if(interfaz==4)
  1961   001456  0E04               	movlw	4
  1962   001458  1850               	xorwf	_interfaz^0,w,c
  1963   00145A  A4D8               	btfss	status,2,c
  1964   00145C  D004               	goto	l3322
  1965                           
  1966                           ;LibLCDXC8.h: 66: LATD=(LATD & 0b00001111) | 0x30;
  1967   00145E  508C               	movf	140,w,c	;volatile
  1968   001460  0B0F               	andlw	15
  1969   001462  0930               	iorlw	48
  1970   001464  D001               	goto	L4
  1971   001466                     l3322:
  1972                           
  1973                           ;LibLCDXC8.h: 67: else;LibLCDXC8.h: 68: LATD=0x3F;
  1974   001466  0E3F               	movlw	63
  1975   001468                     L4:
  1976   001468  6E8C               	movwf	140,c	;volatile
  1977                           
  1978                           ;LibLCDXC8.h: 69: HabilitaLCD();
  1979   00146A  EC3F  F00D         	call	_HabilitaLCD	;wreg free
  1980                           
  1981                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  1982   00146E  0E01               	movlw	1
  1983   001470  EC63  F00B         	call	_RetardoLCD
  1984                           
  1985                           ;LibLCDXC8.h: 71: if(interfaz==4)
  1986   001474  0E04               	movlw	4
  1987   001476  1850               	xorwf	_interfaz^0,w,c
  1988   001478  A4D8               	btfss	status,2,c
  1989   00147A  D004               	goto	l3332
  1990                           
  1991                           ;LibLCDXC8.h: 72: LATD=(LATD & 0b00001111) | 0x30;
  1992   00147C  508C               	movf	140,w,c	;volatile
  1993   00147E  0B0F               	andlw	15
  1994   001480  0930               	iorlw	48
  1995   001482  D001               	goto	L5
  1996   001484                     l3332:
  1997                           
  1998                           ;LibLCDXC8.h: 73: else;LibLCDXC8.h: 74: LATD=0x3F;
  1999   001484  0E3F               	movlw	63
  2000   001486                     L5:
  2001   001486  6E8C               	movwf	140,c	;volatile
  2002                           
  2003                           ;LibLCDXC8.h: 75: HabilitaLCD();
  2004   001488  EC3F  F00D         	call	_HabilitaLCD	;wreg free
  2005                           
  2006                           ;LibLCDXC8.h: 76: RetardoLCD(3);
  2007   00148C  0E03               	movlw	3
  2008   00148E  EC63  F00B         	call	_RetardoLCD
  2009                           
  2010                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2011   001492  0E04               	movlw	4
  2012   001494  1850               	xorwf	_interfaz^0,w,c
  2013   001496  A4D8               	btfss	status,2,c
  2014   001498  D004               	goto	l3342
  2015                           
  2016                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2017   00149A  508C               	movf	140,w,c	;volatile
  2018   00149C  0B0F               	andlw	15
  2019   00149E  0930               	iorlw	48
  2020   0014A0  D001               	goto	L6
  2021   0014A2                     l3342:
  2022                           
  2023                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2024   0014A2  0E3F               	movlw	63
  2025   0014A4                     L6:
  2026   0014A4  6E8C               	movwf	140,c	;volatile
  2027                           
  2028                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2029   0014A6  EC3F  F00D         	call	_HabilitaLCD	;wreg free
  2030                           
  2031                           ;LibLCDXC8.h: 82: RetardoLCD(4);
  2032   0014AA  0E04               	movlw	4
  2033   0014AC  EC63  F00B         	call	_RetardoLCD
  2034                           
  2035                           ;LibLCDXC8.h: 83: if(interfaz==4){
  2036   0014B0  0E04               	movlw	4
  2037   0014B2  1850               	xorwf	_interfaz^0,w,c
  2038   0014B4  A4D8               	btfss	status,2,c
  2039   0014B6  D011               	goto	l3362
  2040                           
  2041                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x20;
  2042   0014B8  508C               	movf	140,w,c	;volatile
  2043   0014BA  0B0F               	andlw	15
  2044   0014BC  0920               	iorlw	32
  2045   0014BE  6E8C               	movwf	140,c	;volatile
  2046                           
  2047                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2048   0014C0  EC3F  F00D         	call	_HabilitaLCD	;wreg free
  2049                           
  2050                           ;LibLCDXC8.h: 86: RetardoLCD(4);
  2051   0014C4  0E04               	movlw	4
  2052   0014C6  EC63  F00B         	call	_RetardoLCD
  2053                           
  2054                           ;LibLCDXC8.h: 87: EnviaDato(0x2F);
  2055   0014CA  0E2F               	movlw	47
  2056   0014CC  EC34  F00C         	call	_EnviaDato
  2057                           
  2058                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2059   0014D0  EC3F  F00D         	call	_HabilitaLCD	;wreg free
  2060                           
  2061                           ;LibLCDXC8.h: 89: RetardoLCD(4);
  2062   0014D4  0E04               	movlw	4
  2063   0014D6  EC63  F00B         	call	_RetardoLCD
  2064   0014DA                     l3362:
  2065                           
  2066                           ;LibLCDXC8.h: 90: };LibLCDXC8.h: 91: BorraLCD();
  2067   0014DA  EC2B  F00D         	call	_BorraLCD	;wreg free
  2068                           
  2069                           ;LibLCDXC8.h: 92: EnviaDato(0xF);
  2070   0014DE  0E0F               	movlw	15
  2071   0014E0  EC34  F00C         	call	_EnviaDato
  2072                           
  2073                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2074   0014E4  EC3F  F00D         	call	_HabilitaLCD	;wreg free
  2075                           
  2076                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2077   0014E8  0E04               	movlw	4
  2078   0014EA  EC63  F00B         	call	_RetardoLCD
  2079   0014EE  0012               	return		;funcret
  2080   0014F0                     __end_of_InicializaLCD:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _BorraLCD *****************
  2084 ;; Defined at:
  2085 ;;		line 103 in file "LibLCDXC8.h"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2102 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 7
  2106 ;; This function calls:
  2107 ;;		_EnviaDato
  2108 ;;		_HabilitaLCD
  2109 ;;		_RetardoLCD
  2110 ;; This function is called by:
  2111 ;;		_InicializaLCD
  2112 ;;		_main
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text4
  2117   001A56                     __ptext4:
  2118                           	callstack 0
  2119   001A56                     _BorraLCD:
  2120                           	callstack 22
  2121                           
  2122                           ;LibLCDXC8.h: 105: LATE0=0;
  2123                           
  2124                           ;incstack = 0
  2125   001A56  908D               	bcf	3981,0,c	;volatile
  2126                           
  2127                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  2128   001A58  0E01               	movlw	1
  2129   001A5A  EC34  F00C         	call	_EnviaDato
  2130                           
  2131                           ;LibLCDXC8.h: 107: HabilitaLCD();
  2132   001A5E  EC3F  F00D         	call	_HabilitaLCD	;wreg free
  2133                           
  2134                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  2135   001A62  0E02               	movlw	2
  2136   001A64  EC63  F00B         	call	_RetardoLCD
  2137   001A68  0012               	return		;funcret
  2138   001A6A                     __end_of_BorraLCD:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _Imprimir_Resultado *****************
  2142 ;; Defined at:
  2143 ;;		line 308 in file "Lab4.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  r               4   27[COMRAM] long 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  k               2    1[BANK0 ] int 
  2148 ;;  j               2    5[BANK0 ] int 
  2149 ;;  i               2    3[BANK0 ] int 
  2150 ;;  potencia        4    7[BANK0 ] long 
  2151 ;;  flag            1    0[BANK0 ] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2161 ;;      Params:         4       0       0       0       0       0       0       0       0
  2162 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2163 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2164 ;;      Totals:         8      11       0       0       0       0       0       0       0
  2165 ;;Total ram usage:       19 bytes
  2166 ;; Hardware stack levels used: 1
  2167 ;; Hardware stack levels required when called: 9
  2168 ;; This function calls:
  2169 ;;		_DireccionaLCD
  2170 ;;		_EscribeLCD_c
  2171 ;;		_MensajeLCD_Var
  2172 ;;		___aldiv
  2173 ;;		___almod
  2174 ;;		___lmul
  2175 ;;		___lwdiv
  2176 ;;		___lwmod
  2177 ;;		___wmul
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text5
  2184   000EBC                     __ptext5:
  2185                           	callstack 0
  2186   000EBC                     _Imprimir_Resultado:
  2187                           	callstack 21
  2188                           
  2189                           ;Lab4.c: 310: bool flag=0;
  2190                           
  2191                           ;incstack = 0
  2192   000EBC  0E00               	movlw	0
  2193   000EBE  0100               	movlb	0	; () banked
  2194   000EC0  6F60               	movwf	Imprimir_Resultado@flag& (0+255),b
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;Lab4.c: 311: if ((partdecl-(r*100))>0 | (partdecl-(r*100))<0){
  2198   000EC2  C01C  F00E         	movff	Imprimir_Resultado@r,___lmul@multiplier
  2199   000EC6  C01D  F00F         	movff	Imprimir_Resultado@r+1,___lmul@multiplier+1
  2200   000ECA  C01E  F010         	movff	Imprimir_Resultado@r+2,___lmul@multiplier+2
  2201   000ECE  C01F  F011         	movff	Imprimir_Resultado@r+3,___lmul@multiplier+3
  2202   000ED2  0E9C               	movlw	156
  2203   000ED4  6E12               	movwf	___lmul@multiplicand^0,c
  2204   000ED6  0EFF               	movlw	255
  2205   000ED8  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2206   000EDA  0EFF               	movlw	255
  2207   000EDC  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2208   000EDE  0EFF               	movlw	255
  2209   000EE0  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2210   000EE2  EC38  F00B         	call	___lmul	;wreg free
  2211   000EE6  5030               	movf	_partdecl^0,w,c
  2212   000EE8  240E               	addwf	?___lmul^0,w,c
  2213   000EEA  6E20               	movwf	??_Imprimir_Resultado^0,c
  2214   000EEC  5031               	movf	(_partdecl+1)^0,w,c
  2215   000EEE  200F               	addwfc	(?___lmul+1)^0,w,c
  2216   000EF0  6E21               	movwf	(??_Imprimir_Resultado+1)^0,c
  2217   000EF2  5032               	movf	(_partdecl+2)^0,w,c
  2218   000EF4  2010               	addwfc	(?___lmul+2)^0,w,c
  2219   000EF6  6E22               	movwf	(??_Imprimir_Resultado+2)^0,c
  2220   000EF8  5033               	movf	(_partdecl+3)^0,w,c
  2221   000EFA  2011               	addwfc	(?___lmul+3)^0,w,c
  2222   000EFC  6E23               	movwf	(??_Imprimir_Resultado+3)^0,c
  2223   000EFE  5020               	movf	??_Imprimir_Resultado^0,w,c
  2224   000F00  1021               	iorwf	(??_Imprimir_Resultado+1)^0,w,c
  2225   000F02  1022               	iorwf	(??_Imprimir_Resultado+2)^0,w,c
  2226   000F04  1023               	iorwf	(??_Imprimir_Resultado+3)^0,w,c
  2227   000F06  B4D8               	btfsc	status,2,c
  2228   000F08  D058               	goto	l3398
  2229                           
  2230                           ;Lab4.c: 312: for (int i = 0; i < 3; i++) {
  2231   000F0A  0E00               	movlw	0
  2232   000F0C  0100               	movlb	0	; () banked
  2233   000F0E  6F64               	movwf	(Imprimir_Resultado@i+1)& (0+255),b
  2234   000F10  0E00               	movlw	0
  2235   000F12  6F63               	movwf	Imprimir_Resultado@i& (0+255),b
  2236   000F14                     l3382:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;Lab4.c: 313: r = n1 / n2;
  2240   000F14  C044  F014         	movff	_n1,___lwdiv@dividend
  2241   000F18  C045  F015         	movff	_n1+1,___lwdiv@dividend+1
  2242   000F1C  C042  F016         	movff	_n2,___lwdiv@divisor
  2243   000F20  C043  F017         	movff	_n2+1,___lwdiv@divisor+1
  2244   000F24  ECB9  F00B         	call	___lwdiv	;wreg free
  2245   000F28  C014  F01C         	movff	?___lwdiv,Imprimir_Resultado@r
  2246   000F2C  C015  F01D         	movff	?___lwdiv+1,Imprimir_Resultado@r+1
  2247   000F30  6A1E               	clrf	(Imprimir_Resultado@r+2)^0,c
  2248   000F32  6A1F               	clrf	(Imprimir_Resultado@r+3)^0,c
  2249                           
  2250                           ;Lab4.c: 314: m = n1 % n2;
  2251   000F34  C044  F00E         	movff	_n1,___lwmod@dividend
  2252   000F38  C045  F00F         	movff	_n1+1,___lwmod@dividend+1
  2253   000F3C  C042  F010         	movff	_n2,___lwmod@divisor
  2254   000F40  C043  F011         	movff	_n2+1,___lwmod@divisor+1
  2255   000F44  EC7A  F00C         	call	___lwmod	;wreg free
  2256   000F48  C00E  F049         	movff	?___lwmod,_m
  2257   000F4C  C00F  F04A         	movff	?___lwmod+1,_m+1
  2258   000F50  6A4B               	clrf	(_m+2)^0,c
  2259   000F52  6A4C               	clrf	(_m+3)^0,c
  2260                           
  2261                           ;Lab4.c: 315: EscribeLCD_c(r+'0');
  2262   000F54  501C               	movf	Imprimir_Resultado@r^0,w,c
  2263   000F56  0F30               	addlw	48
  2264   000F58  ECFF  F00C         	call	_EscribeLCD_c
  2265                           
  2266                           ;Lab4.c: 316: if(i == 0 && m != 0) {
  2267   000F5C  0100               	movlb	0	; () banked
  2268   000F5E  5163               	movf	Imprimir_Resultado@i& (0+255),w,b
  2269   000F60  1164               	iorwf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2270   000F62  A4D8               	btfss	status,2,c
  2271   000F64  D009               	goto	l3390
  2272                           
  2273                           ; BSR set to: 0
  2274   000F66  5049               	movf	_m^0,w,c
  2275   000F68  104A               	iorwf	(_m+1)^0,w,c
  2276   000F6A  104B               	iorwf	(_m+2)^0,w,c
  2277   000F6C  104C               	iorwf	(_m+3)^0,w,c
  2278   000F6E  B4D8               	btfsc	status,2,c
  2279   000F70  D003               	goto	l3390
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;Lab4.c: 317: EscribeLCD_c(',');
  2283   000F72  0E2C               	movlw	44
  2284   000F74  ECFF  F00C         	call	_EscribeLCD_c
  2285   000F78                     l3390:
  2286                           
  2287                           ;Lab4.c: 318: };Lab4.c: 320: if (m != 0) {
  2288   000F78  5049               	movf	_m^0,w,c
  2289   000F7A  104A               	iorwf	(_m+1)^0,w,c
  2290   000F7C  104B               	iorwf	(_m+2)^0,w,c
  2291   000F7E  104C               	iorwf	(_m+3)^0,w,c
  2292   000F80  B4D8               	btfsc	status,2,c
  2293   000F82  0012               	return	
  2294                           
  2295                           ;Lab4.c: 321: n1 = m * 10;
  2296   000F84  C049  F00E         	movff	_m,___wmul@multiplier
  2297   000F88  C04A  F00F         	movff	_m+1,___wmul@multiplier+1
  2298   000F8C  0E00               	movlw	0
  2299   000F8E  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  2300   000F90  0E0A               	movlw	10
  2301   000F92  6E10               	movwf	___wmul@multiplicand^0,c
  2302   000F94  ECE0  F00C         	call	___wmul	;wreg free
  2303   000F98  C00E  F044         	movff	?___wmul,_n1
  2304   000F9C  C00F  F045         	movff	?___wmul+1,_n1+1
  2305                           
  2306                           ;Lab4.c: 322: } else {
  2307   000FA0  0100               	movlb	0	; () banked
  2308   000FA2  4B63               	infsnz	Imprimir_Resultado@i& (0+255),f,b
  2309   000FA4  2B64               	incf	(Imprimir_Resultado@i+1)& (0+255),f,b
  2310                           
  2311                           ; BSR set to: 0
  2312   000FA6  BF64               	btfsc	(Imprimir_Resultado@i+1)& (0+255),7,b
  2313   000FA8  D7B5               	goto	l3382
  2314   000FAA  5164               	movf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2315   000FAC  E105               	bnz	u3780
  2316   000FAE  0E03               	movlw	3
  2317   000FB0  5D63               	subwf	Imprimir_Resultado@i& (0+255),w,b
  2318   000FB2  B0D8               	btfsc	status,0,c
  2319   000FB4  0012               	return	
  2320   000FB6  D7AE               	goto	l3382
  2321   000FB8                     u3780:
  2322   000FB8  0012               	return	
  2323   000FBA                     l3398:
  2324                           
  2325                           ;Lab4.c: 328: if(r>0x8000 & r!=1000 & r !=1001){
  2326   000FBA  BE1F               	btfsc	(Imprimir_Resultado@r+3)^0,7,c
  2327   000FBC  D02D               	goto	l3410
  2328   000FBE  501F               	movf	(Imprimir_Resultado@r+3)^0,w,c
  2329   000FC0  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2330   000FC2  E105               	bnz	u3790
  2331   000FC4  041C               	decf	Imprimir_Resultado@r^0,w,c
  2332   000FC6  0E80               	movlw	128
  2333   000FC8  581D               	subwfb	(Imprimir_Resultado@r+1)^0,w,c
  2334   000FCA  A0D8               	btfss	status,0,c
  2335   000FCC  D025               	goto	l3410
  2336   000FCE                     u3790:
  2337   000FCE  0EE8               	movlw	232
  2338   000FD0  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2339   000FD2  E106               	bnz	u3800
  2340   000FD4  0E03               	movlw	3
  2341   000FD6  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2342   000FD8  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2343   000FDA  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2344   000FDC  B4D8               	btfsc	status,2,c
  2345   000FDE  D01C               	goto	l3410
  2346   000FE0                     u3800:
  2347   000FE0  0EE9               	movlw	233
  2348   000FE2  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2349   000FE4  E106               	bnz	u3810
  2350   000FE6  0E03               	movlw	3
  2351   000FE8  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2352   000FEA  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2353   000FEC  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2354   000FEE  B4D8               	btfsc	status,2,c
  2355   000FF0  D013               	goto	l3410
  2356   000FF2                     u3810:
  2357                           
  2358                           ;Lab4.c: 329: EscribeLCD_c('-');
  2359   000FF2  0E2D               	movlw	45
  2360   000FF4  ECFF  F00C         	call	_EscribeLCD_c
  2361                           
  2362                           ;Lab4.c: 330: DireccionaLCD(0x85);
  2363   000FF8  0E85               	movlw	133
  2364   000FFA  EC0A  F00D         	call	_DireccionaLCD
  2365                           
  2366                           ;Lab4.c: 331: r = ~r+1;
  2367   000FFE  1E1F               	comf	(Imprimir_Resultado@r+3)^0,f,c
  2368   001000  1E1E               	comf	(Imprimir_Resultado@r+2)^0,f,c
  2369   001002  1E1D               	comf	(Imprimir_Resultado@r+1)^0,f,c
  2370   001004  6C1C               	negf	Imprimir_Resultado@r^0,c
  2371   001006  0E00               	movlw	0
  2372   001008  221D               	addwfc	(Imprimir_Resultado@r+1)^0,f,c
  2373   00100A  221E               	addwfc	(Imprimir_Resultado@r+2)^0,f,c
  2374   00100C  221F               	addwfc	(Imprimir_Resultado@r+3)^0,f,c
  2375                           
  2376                           ;Lab4.c: 332: EscribeLCD_c(r+'0');
  2377   00100E  501C               	movf	Imprimir_Resultado@r^0,w,c
  2378   001010  0F30               	addlw	48
  2379   001012  ECFF  F00C         	call	_EscribeLCD_c
  2380                           
  2381                           ;Lab4.c: 333: }else{
  2382   001016  0012               	return	
  2383   001018                     l3410:
  2384                           
  2385                           ;Lab4.c: 334: if(r>=0xA & r!=1000 & r !=1001){
  2386   001018  BE1F               	btfsc	(Imprimir_Resultado@r+3)^0,7,c
  2387   00101A  D0D7               	goto	l3458
  2388   00101C  501F               	movf	(Imprimir_Resultado@r+3)^0,w,c
  2389   00101E  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2390   001020  101D               	iorwf	(Imprimir_Resultado@r+1)^0,w,c
  2391   001022  E104               	bnz	u3820
  2392   001024  0E0A               	movlw	10
  2393   001026  5C1C               	subwf	Imprimir_Resultado@r^0,w,c
  2394   001028  A0D8               	btfss	status,0,c
  2395   00102A  D0CF               	goto	l3458
  2396   00102C                     u3820:
  2397   00102C  0EE8               	movlw	232
  2398   00102E  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2399   001030  E106               	bnz	u3830
  2400   001032  0E03               	movlw	3
  2401   001034  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2402   001036  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2403   001038  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2404   00103A  B4D8               	btfsc	status,2,c
  2405   00103C  D0C6               	goto	l3458
  2406   00103E                     u3830:
  2407   00103E  0EE9               	movlw	233
  2408   001040  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2409   001042  E106               	bnz	u3840
  2410   001044  0E03               	movlw	3
  2411   001046  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2412   001048  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2413   00104A  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2414   00104C  B4D8               	btfsc	status,2,c
  2415   00104E  D0BD               	goto	l3458
  2416   001050                     u3840:
  2417                           
  2418                           ;Lab4.c: 335: for(int j=9;j>=0;j--){
  2419   001050  0E00               	movlw	0
  2420   001052  0100               	movlb	0	; () banked
  2421   001054  6F66               	movwf	(Imprimir_Resultado@j+1)& (0+255),b
  2422   001056  0E09               	movlw	9
  2423   001058  6F65               	movwf	Imprimir_Resultado@j& (0+255),b
  2424   00105A                     l3422:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;Lab4.c: 336: potencia = 10;
  2428   00105A  0E0A               	movlw	10
  2429   00105C  6F67               	movwf	Imprimir_Resultado@potencia& (0+255),b
  2430   00105E  0E00               	movlw	0
  2431   001060  6F68               	movwf	(Imprimir_Resultado@potencia+1)& (0+255),b
  2432   001062  0E00               	movlw	0
  2433   001064  6F69               	movwf	(Imprimir_Resultado@potencia+2)& (0+255),b
  2434   001066  0E00               	movlw	0
  2435   001068  6F6A               	movwf	(Imprimir_Resultado@potencia+3)& (0+255),b
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;Lab4.c: 337: for(int k=j-1;k>0;k--){
  2439   00106A  0EFF               	movlw	255
  2440   00106C  2565               	addwf	Imprimir_Resultado@j& (0+255),w,b
  2441   00106E  6F61               	movwf	Imprimir_Resultado@k& (0+255),b
  2442   001070  0EFF               	movlw	255
  2443   001072  2166               	addwfc	(Imprimir_Resultado@j+1)& (0+255),w,b
  2444   001074  6F62               	movwf	(Imprimir_Resultado@k+1)& (0+255),b
  2445   001076                     l3426:
  2446                           
  2447                           ; BSR set to: 0
  2448   001076  BF62               	btfsc	(Imprimir_Resultado@k+1)& (0+255),7,b
  2449   001078  D024               	goto	l3436
  2450   00107A  5162               	movf	(Imprimir_Resultado@k+1)& (0+255),w,b
  2451   00107C  E103               	bnz	l3430
  2452   00107E  0561               	decf	Imprimir_Resultado@k& (0+255),w,b
  2453   001080  A0D8               	btfss	status,0,c
  2454   001082  D01F               	goto	l3436
  2455   001084                     l3430:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;Lab4.c: 338: potencia = potencia*10;
  2459   001084  C067  F00E         	movff	Imprimir_Resultado@potencia,___lmul@multiplier
  2460   001088  C068  F00F         	movff	Imprimir_Resultado@potencia+1,___lmul@multiplier+1
  2461   00108C  C069  F010         	movff	Imprimir_Resultado@potencia+2,___lmul@multiplier+2
  2462   001090  C06A  F011         	movff	Imprimir_Resultado@potencia+3,___lmul@multiplier+3
  2463   001094  0E0A               	movlw	10
  2464   001096  6E12               	movwf	___lmul@multiplicand^0,c
  2465   001098  0E00               	movlw	0
  2466   00109A  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2467   00109C  0E00               	movlw	0
  2468   00109E  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2469   0010A0  0E00               	movlw	0
  2470   0010A2  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2471   0010A4  EC38  F00B         	call	___lmul	;wreg free
  2472   0010A8  C00E  F067         	movff	?___lmul,Imprimir_Resultado@potencia
  2473   0010AC  C00F  F068         	movff	?___lmul+1,Imprimir_Resultado@potencia+1
  2474   0010B0  C010  F069         	movff	?___lmul+2,Imprimir_Resultado@potencia+2
  2475   0010B4  C011  F06A         	movff	?___lmul+3,Imprimir_Resultado@potencia+3
  2476   0010B8  0100               	movlb	0	; () banked
  2477   0010BA  0761               	decf	Imprimir_Resultado@k& (0+255),f,b
  2478   0010BC  A0D8               	btfss	status,0,c
  2479   0010BE  0762               	decf	(Imprimir_Resultado@k+1)& (0+255),f,b
  2480   0010C0  D7DA               	goto	l3426
  2481   0010C2                     l3436:
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;Lab4.c: 339: };Lab4.c: 340: if(r/potencia>0){
  2485   0010C2  C01C  F00E         	movff	Imprimir_Resultado@r,___aldiv@dividend
  2486   0010C6  C01D  F00F         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  2487   0010CA  C01E  F010         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  2488   0010CE  C01F  F011         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  2489   0010D2  C067  F012         	movff	Imprimir_Resultado@potencia,___aldiv@divisor
  2490   0010D6  C068  F013         	movff	Imprimir_Resultado@potencia+1,___aldiv@divisor+1
  2491   0010DA  C069  F014         	movff	Imprimir_Resultado@potencia+2,___aldiv@divisor+2
  2492   0010DE  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___aldiv@divisor+3
  2493   0010E2  EC09  F009         	call	___aldiv	;wreg free
  2494   0010E6  BE11               	btfsc	(?___aldiv+3)^0,7,c
  2495   0010E8  D03B               	goto	l3444
  2496   0010EA  5011               	movf	(?___aldiv+3)^0,w,c
  2497   0010EC  1010               	iorwf	(?___aldiv+2)^0,w,c
  2498   0010EE  100F               	iorwf	(?___aldiv+1)^0,w,c
  2499   0010F0  E103               	bnz	u3860
  2500   0010F2  040E               	decf	?___aldiv^0,w,c
  2501   0010F4  A0D8               	btfss	status,0,c
  2502   0010F6  D034               	goto	l3444
  2503   0010F8                     u3860:
  2504                           
  2505                           ;Lab4.c: 341: flag = 1;
  2506   0010F8  0E01               	movlw	1
  2507   0010FA  0100               	movlb	0	; () banked
  2508   0010FC  6F60               	movwf	Imprimir_Resultado@flag& (0+255),b
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;Lab4.c: 342: EscribeLCD_c(r/potencia+48);
  2512   0010FE  C01C  F00E         	movff	Imprimir_Resultado@r,___aldiv@dividend
  2513   001102  C01D  F00F         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  2514   001106  C01E  F010         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  2515   00110A  C01F  F011         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  2516   00110E  C067  F012         	movff	Imprimir_Resultado@potencia,___aldiv@divisor
  2517   001112  C068  F013         	movff	Imprimir_Resultado@potencia+1,___aldiv@divisor+1
  2518   001116  C069  F014         	movff	Imprimir_Resultado@potencia+2,___aldiv@divisor+2
  2519   00111A  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___aldiv@divisor+3
  2520   00111E  EC09  F009         	call	___aldiv	;wreg free
  2521   001122  500E               	movf	?___aldiv^0,w,c
  2522   001124  0F30               	addlw	48
  2523   001126  ECFF  F00C         	call	_EscribeLCD_c
  2524                           
  2525                           ;Lab4.c: 343: r=r%potencia;
  2526   00112A  C01C  F00E         	movff	Imprimir_Resultado@r,___almod@dividend
  2527   00112E  C01D  F00F         	movff	Imprimir_Resultado@r+1,___almod@dividend+1
  2528   001132  C01E  F010         	movff	Imprimir_Resultado@r+2,___almod@dividend+2
  2529   001136  C01F  F011         	movff	Imprimir_Resultado@r+3,___almod@dividend+3
  2530   00113A  C067  F012         	movff	Imprimir_Resultado@potencia,___almod@divisor
  2531   00113E  C068  F013         	movff	Imprimir_Resultado@potencia+1,___almod@divisor+1
  2532   001142  C069  F014         	movff	Imprimir_Resultado@potencia+2,___almod@divisor+2
  2533   001146  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___almod@divisor+3
  2534   00114A  ECD4  F009         	call	___almod	;wreg free
  2535   00114E  C00E  F01C         	movff	?___almod,Imprimir_Resultado@r
  2536   001152  C00F  F01D         	movff	?___almod+1,Imprimir_Resultado@r+1
  2537   001156  C010  F01E         	movff	?___almod+2,Imprimir_Resultado@r+2
  2538   00115A  C011  F01F         	movff	?___almod+3,Imprimir_Resultado@r+3
  2539                           
  2540                           ;Lab4.c: 344: }else if( (r/potencia)==0 && flag){
  2541   00115E  D02E               	goto	l3454
  2542   001160                     l3444:
  2543   001160  C01C  F00E         	movff	Imprimir_Resultado@r,___aldiv@dividend
  2544   001164  C01D  F00F         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  2545   001168  C01E  F010         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  2546   00116C  C01F  F011         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  2547   001170  C067  F012         	movff	Imprimir_Resultado@potencia,___aldiv@divisor
  2548   001174  C068  F013         	movff	Imprimir_Resultado@potencia+1,___aldiv@divisor+1
  2549   001178  C069  F014         	movff	Imprimir_Resultado@potencia+2,___aldiv@divisor+2
  2550   00117C  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___aldiv@divisor+3
  2551   001180  EC09  F009         	call	___aldiv	;wreg free
  2552   001184  500E               	movf	?___aldiv^0,w,c
  2553   001186  100F               	iorwf	(?___aldiv+1)^0,w,c
  2554   001188  1010               	iorwf	(?___aldiv+2)^0,w,c
  2555   00118A  1011               	iorwf	(?___aldiv+3)^0,w,c
  2556   00118C  A4D8               	btfss	status,2,c
  2557   00118E  D016               	goto	l3454
  2558   001190  0100               	movlb	0	; () banked
  2559   001192  5160               	movf	Imprimir_Resultado@flag& (0+255),w,b
  2560   001194  B4D8               	btfsc	status,2,c
  2561   001196  D012               	goto	l3454
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;Lab4.c: 345: if(r<10) EscribeLCD_c(r+48);
  2565   001198  BE1F               	btfsc	(Imprimir_Resultado@r+3)^0,7,c
  2566   00119A  D008               	goto	u3890
  2567   00119C  501F               	movf	(Imprimir_Resultado@r+3)^0,w,c
  2568   00119E  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2569   0011A0  101D               	iorwf	(Imprimir_Resultado@r+1)^0,w,c
  2570   0011A2  E109               	bnz	l3452
  2571   0011A4  0E0A               	movlw	10
  2572   0011A6  5C1C               	subwf	Imprimir_Resultado@r^0,w,c
  2573   0011A8  B0D8               	btfsc	status,0,c
  2574   0011AA  D005               	goto	l3452
  2575   0011AC                     u3890:
  2576                           
  2577                           ; BSR set to: 0
  2578   0011AC  501C               	movf	Imprimir_Resultado@r^0,w,c
  2579   0011AE  0F30               	addlw	48
  2580   0011B0  ECFF  F00C         	call	_EscribeLCD_c
  2581   0011B4  D003               	goto	l3454
  2582   0011B6                     l3452:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;Lab4.c: 346: else EscribeLCD_c(48);
  2586   0011B6  0E30               	movlw	48
  2587   0011B8  ECFF  F00C         	call	_EscribeLCD_c
  2588   0011BC                     l3454:
  2589   0011BC  0100               	movlb	0	; () banked
  2590   0011BE  0765               	decf	Imprimir_Resultado@j& (0+255),f,b
  2591   0011C0  A0D8               	btfss	status,0,c
  2592   0011C2  0766               	decf	(Imprimir_Resultado@j+1)& (0+255),f,b
  2593                           
  2594                           ; BSR set to: 0
  2595   0011C4  BF66               	btfsc	(Imprimir_Resultado@j+1)& (0+255),7,b
  2596   0011C6  0012               	return	
  2597   0011C8  D748               	goto	l3422
  2598   0011CA                     l3458:
  2599                           
  2600                           ;Lab4.c: 350: if(r==1000){
  2601   0011CA  0EE8               	movlw	232
  2602   0011CC  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2603   0011CE  E10B               	bnz	l3462
  2604   0011D0  0E03               	movlw	3
  2605   0011D2  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2606   0011D4  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2607   0011D6  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2608   0011D8  A4D8               	btfss	status,2,c
  2609   0011DA  D005               	goto	l3462
  2610                           
  2611                           ;Lab4.c: 351: MensajeLCD_Var("Infinito");
  2612   0011DC  0E4E               	movlw	low STR_12
  2613   0011DE  6E13               	movwf	MensajeLCD_Var@a^0,c
  2614   0011E0  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
  2615                           
  2616                           ;Lab4.c: 352: }else{
  2617   0011E4  0012               	return	
  2618   0011E6                     l3462:
  2619                           
  2620                           ;Lab4.c: 353: if(r==1001){
  2621   0011E6  0EE9               	movlw	233
  2622   0011E8  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2623   0011EA  E10E               	bnz	l3468
  2624   0011EC  0E03               	movlw	3
  2625   0011EE  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2626   0011F0  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2627   0011F2  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2628   0011F4  A4D8               	btfss	status,2,c
  2629   0011F6  D008               	goto	l3468
  2630                           
  2631                           ;Lab4.c: 354: DireccionaLCD(0xC1);
  2632   0011F8  0EC1               	movlw	193
  2633   0011FA  EC0A  F00D         	call	_DireccionaLCD
  2634                           
  2635                           ;Lab4.c: 355: MensajeLCD_Var("Indeterminado");
  2636   0011FE  0E1E               	movlw	low STR_13
  2637   001200  6E13               	movwf	MensajeLCD_Var@a^0,c
  2638   001202  ECE2  F00B         	call	_MensajeLCD_Var	;wreg free
  2639                           
  2640                           ;Lab4.c: 356: }else{
  2641   001206  0012               	return	
  2642   001208                     l3468:
  2643                           
  2644                           ;Lab4.c: 357: EscribeLCD_c(r+'0');
  2645   001208  501C               	movf	Imprimir_Resultado@r^0,w,c
  2646   00120A  0F30               	addlw	48
  2647   00120C  ECFF  F00C         	call	_EscribeLCD_c
  2648   001210  0012               	return		;funcret
  2649   001212                     __end_of_Imprimir_Resultado:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function ___wmul *****************
  2653 ;; Defined at:
  2654 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  multiplier      2   13[COMRAM] unsigned int 
  2657 ;;  multiplicand    2   15[COMRAM] unsigned int 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  product         2   17[COMRAM] unsigned int 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  2   13[COMRAM] unsigned int 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, prodl, prodh
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2669 ;;      Params:         4       0       0       0       0       0       0       0       0
  2670 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2672 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2673 ;;Total ram usage:        6 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 5
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;;		_Imprimir_Resultado
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text6
  2685   0019C0                     __ptext6:
  2686                           	callstack 0
  2687   0019C0                     ___wmul:
  2688                           	callstack 25
  2689                           
  2690                           ;incstack = 0
  2691   0019C0  500E               	movf	___wmul@multiplier^0,w,c
  2692   0019C2  0210               	mulwf	___wmul@multiplicand^0,c
  2693   0019C4  CFF3 F012          	movff	prodl,___wmul@product
  2694   0019C8  CFF4 F013          	movff	prodh,___wmul@product+1
  2695   0019CC  500E               	movf	___wmul@multiplier^0,w,c
  2696   0019CE  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  2697   0019D0  50F3               	movf	243,w,c
  2698   0019D2  2613               	addwf	(___wmul@product+1)^0,f,c
  2699   0019D4  500F               	movf	(___wmul@multiplier+1)^0,w,c
  2700   0019D6  0210               	mulwf	___wmul@multiplicand^0,c
  2701   0019D8  50F3               	movf	243,w,c
  2702   0019DA  2613               	addwf	(___wmul@product+1)^0,f,c
  2703   0019DC  C012  F00E         	movff	___wmul@product,?___wmul
  2704   0019E0  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  2705   0019E4  0012               	return		;funcret
  2706   0019E6                     __end_of___wmul:
  2707                           	callstack 0
  2708                           
  2709 ;; *************** function ___lwmod *****************
  2710 ;; Defined at:
  2711 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  dividend        2   13[COMRAM] unsigned int 
  2714 ;;  divisor         2   15[COMRAM] unsigned int 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  counter         1   17[COMRAM] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  2   13[COMRAM] unsigned int 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2726 ;;      Params:         4       0       0       0       0       0       0       0       0
  2727 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2729 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2730 ;;Total ram usage:        5 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 5
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_Imprimir_Resultado
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text7
  2741   0018F4                     __ptext7:
  2742                           	callstack 0
  2743   0018F4                     ___lwmod:
  2744                           	callstack 24
  2745                           
  2746                           ;incstack = 0
  2747   0018F4  5010               	movf	___lwmod@divisor^0,w,c
  2748   0018F6  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  2749   0018F8  B4D8               	btfsc	status,2,c
  2750   0018FA  D018               	goto	l848
  2751   0018FC  0E01               	movlw	1
  2752   0018FE  6E12               	movwf	___lwmod@counter^0,c
  2753   001900  D004               	goto	l3306
  2754   001902                     l3304:
  2755   001902  90D8               	bcf	status,0,c
  2756   001904  3610               	rlcf	___lwmod@divisor^0,f,c
  2757   001906  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  2758   001908  2A12               	incf	___lwmod@counter^0,f,c
  2759   00190A                     l3306:
  2760   00190A  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  2761   00190C  D7FA               	goto	l3304
  2762   00190E                     u3680:
  2763   00190E  5010               	movf	___lwmod@divisor^0,w,c
  2764   001910  5C0E               	subwf	___lwmod@dividend^0,w,c
  2765   001912  5011               	movf	(___lwmod@divisor+1)^0,w,c
  2766   001914  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  2767   001916  A0D8               	btfss	status,0,c
  2768   001918  D004               	goto	l3312
  2769   00191A  5010               	movf	___lwmod@divisor^0,w,c
  2770   00191C  5E0E               	subwf	___lwmod@dividend^0,f,c
  2771   00191E  5011               	movf	(___lwmod@divisor+1)^0,w,c
  2772   001920  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  2773   001922                     l3312:
  2774   001922  90D8               	bcf	status,0,c
  2775   001924  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  2776   001926  3210               	rrcf	___lwmod@divisor^0,f,c
  2777   001928  2E12               	decfsz	___lwmod@counter^0,f,c
  2778   00192A  D7F1               	goto	u3680
  2779   00192C                     l848:
  2780   00192C  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  2781   001930  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  2782   001934  0012               	return		;funcret
  2783   001936                     __end_of___lwmod:
  2784                           	callstack 0
  2785                           
  2786 ;; *************** function ___lwdiv *****************
  2787 ;; Defined at:
  2788 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  dividend        2   19[COMRAM] unsigned int 
  2791 ;;  divisor         2   21[COMRAM] unsigned int 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  quotient        2   24[COMRAM] unsigned int 
  2794 ;;  counter         1   23[COMRAM] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  2   19[COMRAM] unsigned int 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2, status,0
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2804 ;;      Params:         4       0       0       0       0       0       0       0       0
  2805 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2807 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2808 ;;Total ram usage:        7 bytes
  2809 ;; Hardware stack levels used: 1
  2810 ;; Hardware stack levels required when called: 5
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;;		_Imprimir_Resultado
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text8
  2820   001772                     __ptext8:
  2821                           	callstack 0
  2822   001772                     ___lwdiv:
  2823                           	callstack 25
  2824                           
  2825                           ;incstack = 0
  2826   001772  0E00               	movlw	0
  2827   001774  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  2828   001776  0E00               	movlw	0
  2829   001778  6E19               	movwf	___lwdiv@quotient^0,c
  2830   00177A  5016               	movf	___lwdiv@divisor^0,w,c
  2831   00177C  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2832   00177E  B4D8               	btfsc	status,2,c
  2833   001780  D01C               	goto	l838
  2834   001782  0E01               	movlw	1
  2835   001784  6E18               	movwf	___lwdiv@counter^0,c
  2836   001786  D004               	goto	l3286
  2837   001788                     l3284:
  2838   001788  90D8               	bcf	status,0,c
  2839   00178A  3616               	rlcf	___lwdiv@divisor^0,f,c
  2840   00178C  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2841   00178E  2A18               	incf	___lwdiv@counter^0,f,c
  2842   001790                     l3286:
  2843   001790  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  2844   001792  D7FA               	goto	l3284
  2845   001794                     u3650:
  2846   001794  90D8               	bcf	status,0,c
  2847   001796  3619               	rlcf	___lwdiv@quotient^0,f,c
  2848   001798  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2849   00179A  5016               	movf	___lwdiv@divisor^0,w,c
  2850   00179C  5C14               	subwf	___lwdiv@dividend^0,w,c
  2851   00179E  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2852   0017A0  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2853   0017A2  A0D8               	btfss	status,0,c
  2854   0017A4  D005               	goto	l3296
  2855   0017A6  5016               	movf	___lwdiv@divisor^0,w,c
  2856   0017A8  5E14               	subwf	___lwdiv@dividend^0,f,c
  2857   0017AA  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2858   0017AC  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2859   0017AE  8019               	bsf	___lwdiv@quotient^0,0,c
  2860   0017B0                     l3296:
  2861   0017B0  90D8               	bcf	status,0,c
  2862   0017B2  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2863   0017B4  3216               	rrcf	___lwdiv@divisor^0,f,c
  2864   0017B6  2E18               	decfsz	___lwdiv@counter^0,f,c
  2865   0017B8  D7ED               	goto	u3650
  2866   0017BA                     l838:
  2867   0017BA  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  2868   0017BE  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2869   0017C2  0012               	return		;funcret
  2870   0017C4                     __end_of___lwdiv:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function ___lmul *****************
  2874 ;; Defined at:
  2875 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  multiplier      4   13[COMRAM] unsigned long 
  2878 ;;  multiplicand    4   17[COMRAM] unsigned long 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  product         4   21[COMRAM] unsigned long 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  4   13[COMRAM] unsigned long 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2890 ;;      Params:         8       0       0       0       0       0       0       0       0
  2891 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2893 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2894 ;;Total ram usage:       12 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; Hardware stack levels required when called: 5
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;;		_factorial_function
  2902 ;;		_Imprimir_Resultado
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text9
  2907   001670                     __ptext9:
  2908                           	callstack 0
  2909   001670                     ___lmul:
  2910                           	callstack 24
  2911                           
  2912                           ;incstack = 0
  2913   001670  0E00               	movlw	0
  2914   001672  6E16               	movwf	___lmul@product^0,c
  2915   001674  0E00               	movlw	0
  2916   001676  6E17               	movwf	(___lmul@product+1)^0,c
  2917   001678  0E00               	movlw	0
  2918   00167A  6E18               	movwf	(___lmul@product+2)^0,c
  2919   00167C  0E00               	movlw	0
  2920   00167E  6E19               	movwf	(___lmul@product+3)^0,c
  2921   001680                     l3190:
  2922   001680  A00E               	btfss	___lmul@multiplier^0,0,c
  2923   001682  D008               	goto	l3194
  2924   001684  5012               	movf	___lmul@multiplicand^0,w,c
  2925   001686  2616               	addwf	___lmul@product^0,f,c
  2926   001688  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  2927   00168A  2217               	addwfc	(___lmul@product+1)^0,f,c
  2928   00168C  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  2929   00168E  2218               	addwfc	(___lmul@product+2)^0,f,c
  2930   001690  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  2931   001692  2219               	addwfc	(___lmul@product+3)^0,f,c
  2932   001694                     l3194:
  2933   001694  90D8               	bcf	status,0,c
  2934   001696  3612               	rlcf	___lmul@multiplicand^0,f,c
  2935   001698  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2936   00169A  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2937   00169C  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2938   00169E  90D8               	bcf	status,0,c
  2939   0016A0  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  2940   0016A2  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  2941   0016A4  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  2942   0016A6  320E               	rrcf	___lmul@multiplier^0,f,c
  2943   0016A8  500E               	movf	___lmul@multiplier^0,w,c
  2944   0016AA  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  2945   0016AC  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  2946   0016AE  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  2947   0016B0  A4D8               	btfss	status,2,c
  2948   0016B2  D7E6               	goto	l3190
  2949   0016B4  C016  F00E         	movff	___lmul@product,?___lmul
  2950   0016B8  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  2951   0016BC  C018  F010         	movff	___lmul@product+2,?___lmul+2
  2952   0016C0  C019  F011         	movff	___lmul@product+3,?___lmul+3
  2953   0016C4  0012               	return		;funcret
  2954   0016C6                     __end_of___lmul:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function ___almod *****************
  2958 ;; Defined at:
  2959 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  dividend        4   13[COMRAM] long 
  2962 ;;  divisor         4   17[COMRAM] long 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  sign            1   22[COMRAM] unsigned char 
  2965 ;;  counter         1   21[COMRAM] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  4   13[COMRAM] long 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2975 ;;      Params:         8       0       0       0       0       0       0       0       0
  2976 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2978 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2979 ;;Total ram usage:       10 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 5
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_Imprimir_Resultado
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text10
  2990   0013A8                     __ptext10:
  2991                           	callstack 0
  2992   0013A8                     ___almod:
  2993                           	callstack 24
  2994                           
  2995                           ;incstack = 0
  2996   0013A8  0E00               	movlw	0
  2997   0013AA  6E17               	movwf	___almod@sign^0,c
  2998   0013AC  AE11               	btfss	(___almod@dividend+3)^0,7,c
  2999   0013AE  D00A               	goto	l3250
  3000   0013B0  1E11               	comf	(___almod@dividend+3)^0,f,c
  3001   0013B2  1E10               	comf	(___almod@dividend+2)^0,f,c
  3002   0013B4  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3003   0013B6  6C0E               	negf	___almod@dividend^0,c
  3004   0013B8  0E00               	movlw	0
  3005   0013BA  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3006   0013BC  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3007   0013BE  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3008   0013C0  0E01               	movlw	1
  3009   0013C2  6E17               	movwf	___almod@sign^0,c
  3010   0013C4                     l3250:
  3011   0013C4  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3012   0013C6  D008               	goto	l3254
  3013   0013C8  1E15               	comf	(___almod@divisor+3)^0,f,c
  3014   0013CA  1E14               	comf	(___almod@divisor+2)^0,f,c
  3015   0013CC  1E13               	comf	(___almod@divisor+1)^0,f,c
  3016   0013CE  6C12               	negf	___almod@divisor^0,c
  3017   0013D0  0E00               	movlw	0
  3018   0013D2  2213               	addwfc	(___almod@divisor+1)^0,f,c
  3019   0013D4  2214               	addwfc	(___almod@divisor+2)^0,f,c
  3020   0013D6  2215               	addwfc	(___almod@divisor+3)^0,f,c
  3021   0013D8                     l3254:
  3022   0013D8  5012               	movf	___almod@divisor^0,w,c
  3023   0013DA  1013               	iorwf	(___almod@divisor+1)^0,w,c
  3024   0013DC  1014               	iorwf	(___almod@divisor+2)^0,w,c
  3025   0013DE  1015               	iorwf	(___almod@divisor+3)^0,w,c
  3026   0013E0  B4D8               	btfsc	status,2,c
  3027   0013E2  D024               	goto	l3270
  3028   0013E4  0E01               	movlw	1
  3029   0013E6  6E16               	movwf	___almod@counter^0,c
  3030   0013E8  D006               	goto	l3260
  3031   0013EA                     l3258:
  3032   0013EA  90D8               	bcf	status,0,c
  3033   0013EC  3612               	rlcf	___almod@divisor^0,f,c
  3034   0013EE  3613               	rlcf	(___almod@divisor+1)^0,f,c
  3035   0013F0  3614               	rlcf	(___almod@divisor+2)^0,f,c
  3036   0013F2  3615               	rlcf	(___almod@divisor+3)^0,f,c
  3037   0013F4  2A16               	incf	___almod@counter^0,f,c
  3038   0013F6                     l3260:
  3039   0013F6  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3040   0013F8  D7F8               	goto	l3258
  3041   0013FA                     u3610:
  3042   0013FA  5012               	movf	___almod@divisor^0,w,c
  3043   0013FC  5C0E               	subwf	___almod@dividend^0,w,c
  3044   0013FE  5013               	movf	(___almod@divisor+1)^0,w,c
  3045   001400  580F               	subwfb	(___almod@dividend+1)^0,w,c
  3046   001402  5014               	movf	(___almod@divisor+2)^0,w,c
  3047   001404  5810               	subwfb	(___almod@dividend+2)^0,w,c
  3048   001406  5015               	movf	(___almod@divisor+3)^0,w,c
  3049   001408  5811               	subwfb	(___almod@dividend+3)^0,w,c
  3050   00140A  A0D8               	btfss	status,0,c
  3051   00140C  D008               	goto	l3266
  3052   00140E  5012               	movf	___almod@divisor^0,w,c
  3053   001410  5E0E               	subwf	___almod@dividend^0,f,c
  3054   001412  5013               	movf	(___almod@divisor+1)^0,w,c
  3055   001414  5A0F               	subwfb	(___almod@dividend+1)^0,f,c
  3056   001416  5014               	movf	(___almod@divisor+2)^0,w,c
  3057   001418  5A10               	subwfb	(___almod@dividend+2)^0,f,c
  3058   00141A  5015               	movf	(___almod@divisor+3)^0,w,c
  3059   00141C  5A11               	subwfb	(___almod@dividend+3)^0,f,c
  3060   00141E                     l3266:
  3061   00141E  90D8               	bcf	status,0,c
  3062   001420  3215               	rrcf	(___almod@divisor+3)^0,f,c
  3063   001422  3214               	rrcf	(___almod@divisor+2)^0,f,c
  3064   001424  3213               	rrcf	(___almod@divisor+1)^0,f,c
  3065   001426  3212               	rrcf	___almod@divisor^0,f,c
  3066   001428  2E16               	decfsz	___almod@counter^0,f,c
  3067   00142A  D7E7               	goto	u3610
  3068   00142C                     l3270:
  3069   00142C  5017               	movf	___almod@sign^0,w,c
  3070   00142E  B4D8               	btfsc	status,2,c
  3071   001430  D008               	goto	l3274
  3072   001432  1E11               	comf	(___almod@dividend+3)^0,f,c
  3073   001434  1E10               	comf	(___almod@dividend+2)^0,f,c
  3074   001436  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3075   001438  6C0E               	negf	___almod@dividend^0,c
  3076   00143A  0E00               	movlw	0
  3077   00143C  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3078   00143E  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3079   001440  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3080   001442                     l3274:
  3081   001442  C00E  F00E         	movff	___almod@dividend,?___almod
  3082   001446  C00F  F00F         	movff	___almod@dividend+1,?___almod+1
  3083   00144A  C010  F010         	movff	___almod@dividend+2,?___almod+2
  3084   00144E  C011  F011         	movff	___almod@dividend+3,?___almod+3
  3085   001452  0012               	return		;funcret
  3086   001454                     __end_of___almod:
  3087                           	callstack 0
  3088                           
  3089 ;; *************** function ___aldiv *****************
  3090 ;; Defined at:
  3091 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  dividend        4   13[COMRAM] long 
  3094 ;;  divisor         4   17[COMRAM] long 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  quotient        4   23[COMRAM] long 
  3097 ;;  sign            1   22[COMRAM] unsigned char 
  3098 ;;  counter         1   21[COMRAM] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  4   13[COMRAM] long 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3108 ;;      Params:         8       0       0       0       0       0       0       0       0
  3109 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3111 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3112 ;;Total ram usage:       14 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 5
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_Imprimir_Resultado
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text11
  3123   001212                     __ptext11:
  3124                           	callstack 0
  3125   001212                     ___aldiv:
  3126                           	callstack 24
  3127                           
  3128                           ;incstack = 0
  3129   001212  0E00               	movlw	0
  3130   001214  6E17               	movwf	___aldiv@sign^0,c
  3131   001216  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3132   001218  D00A               	goto	l3206
  3133   00121A  1E15               	comf	(___aldiv@divisor+3)^0,f,c
  3134   00121C  1E14               	comf	(___aldiv@divisor+2)^0,f,c
  3135   00121E  1E13               	comf	(___aldiv@divisor+1)^0,f,c
  3136   001220  6C12               	negf	___aldiv@divisor^0,c
  3137   001222  0E00               	movlw	0
  3138   001224  2213               	addwfc	(___aldiv@divisor+1)^0,f,c
  3139   001226  2214               	addwfc	(___aldiv@divisor+2)^0,f,c
  3140   001228  2215               	addwfc	(___aldiv@divisor+3)^0,f,c
  3141   00122A  0E01               	movlw	1
  3142   00122C  6E17               	movwf	___aldiv@sign^0,c
  3143   00122E                     l3206:
  3144   00122E  AE11               	btfss	(___aldiv@dividend+3)^0,7,c
  3145   001230  D00A               	goto	l3212
  3146   001232  1E11               	comf	(___aldiv@dividend+3)^0,f,c
  3147   001234  1E10               	comf	(___aldiv@dividend+2)^0,f,c
  3148   001236  1E0F               	comf	(___aldiv@dividend+1)^0,f,c
  3149   001238  6C0E               	negf	___aldiv@dividend^0,c
  3150   00123A  0E00               	movlw	0
  3151   00123C  220F               	addwfc	(___aldiv@dividend+1)^0,f,c
  3152   00123E  2210               	addwfc	(___aldiv@dividend+2)^0,f,c
  3153   001240  2211               	addwfc	(___aldiv@dividend+3)^0,f,c
  3154   001242  0E01               	movlw	1
  3155   001244  1A17               	xorwf	___aldiv@sign^0,f,c
  3156   001246                     l3212:
  3157   001246  0E00               	movlw	0
  3158   001248  6E18               	movwf	___aldiv@quotient^0,c
  3159   00124A  0E00               	movlw	0
  3160   00124C  6E19               	movwf	(___aldiv@quotient+1)^0,c
  3161   00124E  0E00               	movlw	0
  3162   001250  6E1A               	movwf	(___aldiv@quotient+2)^0,c
  3163   001252  0E00               	movlw	0
  3164   001254  6E1B               	movwf	(___aldiv@quotient+3)^0,c
  3165   001256  5012               	movf	___aldiv@divisor^0,w,c
  3166   001258  1013               	iorwf	(___aldiv@divisor+1)^0,w,c
  3167   00125A  1014               	iorwf	(___aldiv@divisor+2)^0,w,c
  3168   00125C  1015               	iorwf	(___aldiv@divisor+3)^0,w,c
  3169   00125E  B4D8               	btfsc	status,2,c
  3170   001260  D02A               	goto	l3234
  3171   001262  0E01               	movlw	1
  3172   001264  6E16               	movwf	___aldiv@counter^0,c
  3173   001266  D006               	goto	l3220
  3174   001268                     l3218:
  3175   001268  90D8               	bcf	status,0,c
  3176   00126A  3612               	rlcf	___aldiv@divisor^0,f,c
  3177   00126C  3613               	rlcf	(___aldiv@divisor+1)^0,f,c
  3178   00126E  3614               	rlcf	(___aldiv@divisor+2)^0,f,c
  3179   001270  3615               	rlcf	(___aldiv@divisor+3)^0,f,c
  3180   001272  2A16               	incf	___aldiv@counter^0,f,c
  3181   001274                     l3220:
  3182   001274  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3183   001276  D7F8               	goto	l3218
  3184   001278                     u3550:
  3185   001278  90D8               	bcf	status,0,c
  3186   00127A  3618               	rlcf	___aldiv@quotient^0,f,c
  3187   00127C  3619               	rlcf	(___aldiv@quotient+1)^0,f,c
  3188   00127E  361A               	rlcf	(___aldiv@quotient+2)^0,f,c
  3189   001280  361B               	rlcf	(___aldiv@quotient+3)^0,f,c
  3190   001282  5012               	movf	___aldiv@divisor^0,w,c
  3191   001284  5C0E               	subwf	___aldiv@dividend^0,w,c
  3192   001286  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3193   001288  580F               	subwfb	(___aldiv@dividend+1)^0,w,c
  3194   00128A  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3195   00128C  5810               	subwfb	(___aldiv@dividend+2)^0,w,c
  3196   00128E  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3197   001290  5811               	subwfb	(___aldiv@dividend+3)^0,w,c
  3198   001292  A0D8               	btfss	status,0,c
  3199   001294  D009               	goto	l3230
  3200   001296  5012               	movf	___aldiv@divisor^0,w,c
  3201   001298  5E0E               	subwf	___aldiv@dividend^0,f,c
  3202   00129A  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3203   00129C  5A0F               	subwfb	(___aldiv@dividend+1)^0,f,c
  3204   00129E  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3205   0012A0  5A10               	subwfb	(___aldiv@dividend+2)^0,f,c
  3206   0012A2  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3207   0012A4  5A11               	subwfb	(___aldiv@dividend+3)^0,f,c
  3208   0012A6  8018               	bsf	___aldiv@quotient^0,0,c
  3209   0012A8                     l3230:
  3210   0012A8  90D8               	bcf	status,0,c
  3211   0012AA  3215               	rrcf	(___aldiv@divisor+3)^0,f,c
  3212   0012AC  3214               	rrcf	(___aldiv@divisor+2)^0,f,c
  3213   0012AE  3213               	rrcf	(___aldiv@divisor+1)^0,f,c
  3214   0012B0  3212               	rrcf	___aldiv@divisor^0,f,c
  3215   0012B2  2E16               	decfsz	___aldiv@counter^0,f,c
  3216   0012B4  D7E1               	goto	u3550
  3217   0012B6                     l3234:
  3218   0012B6  5017               	movf	___aldiv@sign^0,w,c
  3219   0012B8  B4D8               	btfsc	status,2,c
  3220   0012BA  D008               	goto	l3238
  3221   0012BC  1E1B               	comf	(___aldiv@quotient+3)^0,f,c
  3222   0012BE  1E1A               	comf	(___aldiv@quotient+2)^0,f,c
  3223   0012C0  1E19               	comf	(___aldiv@quotient+1)^0,f,c
  3224   0012C2  6C18               	negf	___aldiv@quotient^0,c
  3225   0012C4  0E00               	movlw	0
  3226   0012C6  2219               	addwfc	(___aldiv@quotient+1)^0,f,c
  3227   0012C8  221A               	addwfc	(___aldiv@quotient+2)^0,f,c
  3228   0012CA  221B               	addwfc	(___aldiv@quotient+3)^0,f,c
  3229   0012CC                     l3238:
  3230   0012CC  C018  F00E         	movff	___aldiv@quotient,?___aldiv
  3231   0012D0  C019  F00F         	movff	___aldiv@quotient+1,?___aldiv+1
  3232   0012D4  C01A  F010         	movff	___aldiv@quotient+2,?___aldiv+2
  3233   0012D8  C01B  F011         	movff	___aldiv@quotient+3,?___aldiv+3
  3234   0012DC  0012               	return		;funcret
  3235   0012DE                     __end_of___aldiv:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _MensajeLCD_Var *****************
  3239 ;; Defined at:
  3240 ;;		line 261 in file "LibLCDXC8.h"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  a               1   18[COMRAM] PTR unsigned char 
  3243 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3244 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3245 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3246 ;;		 -> STR_1(8), 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  i               2   20[COMRAM] int 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3258 ;;      Params:         1       0       0       0       0       0       0       0       0
  3259 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3260 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3261 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3262 ;;Total ram usage:        4 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 8
  3265 ;; This function calls:
  3266 ;;		_EscribeLCD_c
  3267 ;;		_strlen
  3268 ;; This function is called by:
  3269 ;;		_main
  3270 ;;		_Imprimir_Resultado
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text12
  3275   0017C4                     __ptext12:
  3276                           	callstack 0
  3277   0017C4                     _MensajeLCD_Var:
  3278                           	callstack 22
  3279                           
  3280                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  3281                           
  3282                           ;incstack = 0
  3283   0017C4  0E00               	movlw	0
  3284   0017C6  6E16               	movwf	(MensajeLCD_Var@i+1)^0,c
  3285   0017C8  0E00               	movlw	0
  3286   0017CA  6E15               	movwf	MensajeLCD_Var@i^0,c
  3287   0017CC  D019               	goto	l3172
  3288   0017CE                     l3164:
  3289                           
  3290                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  3291   0017CE  5013               	movf	MensajeLCD_Var@a^0,w,c
  3292   0017D0  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3293   0017D2  6E14               	movwf	??_MensajeLCD_Var^0,c
  3294   0017D4  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3295   0017D8                     	if	1	;There is more than 1 active tblptr byte
  3296   0017D8  0E08               	movlw	high __smallconst
  3297   0017DA  6EF7               	movwf	tblptrh,c
  3298   0017DC                     	endif
  3299   0017DC                     	if	0	;tblptru may be non-zero
  3300   0017DC                     	endif
  3301   0017DC                     	if	0	;tblptru may be non-zero
  3302   0017DC                     	endif
  3303   0017DC  0008               	tblrd		*
  3304   0017DE  50F5               	movf	tablat,w,c
  3305   0017E0  0900               	iorlw	0
  3306   0017E2  B4D8               	btfsc	status,2,c
  3307   0017E4  0012               	return	
  3308                           
  3309                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  3310   0017E6  5013               	movf	MensajeLCD_Var@a^0,w,c
  3311   0017E8  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3312   0017EA  6E14               	movwf	??_MensajeLCD_Var^0,c
  3313   0017EC  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3314   0017F0                     	if	1	;There is more than 1 active tblptr byte
  3315   0017F0  0E08               	movlw	high __smallconst
  3316   0017F2  6EF7               	movwf	tblptrh,c
  3317   0017F4                     	endif
  3318   0017F4                     	if	0	;tblptru may be non-zero
  3319   0017F4                     	endif
  3320   0017F4                     	if	0	;tblptru may be non-zero
  3321   0017F4                     	endif
  3322   0017F4  0008               	tblrd		*
  3323   0017F6  50F5               	movf	tablat,w,c
  3324   0017F8  ECFF  F00C         	call	_EscribeLCD_c
  3325   0017FC  4A15               	infsnz	MensajeLCD_Var@i^0,f,c
  3326   0017FE  2A16               	incf	(MensajeLCD_Var@i+1)^0,f,c
  3327   001800                     l3172:
  3328   001800  C013  F00E         	movff	MensajeLCD_Var@a,strlen@s
  3329   001804  ECB8  F00C         	call	_strlen	;wreg free
  3330   001808  500E               	movf	?_strlen^0,w,c
  3331   00180A  5C15               	subwf	MensajeLCD_Var@i^0,w,c
  3332   00180C  500F               	movf	(?_strlen+1)^0,w,c
  3333   00180E  5816               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  3334   001810  B0D8               	btfsc	status,0,c
  3335   001812  0012               	return	
  3336   001814  D7DC               	goto	l3164
  3337   001816                     __end_of_MensajeLCD_Var:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _strlen *****************
  3341 ;; Defined at:
  3342 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  s               1   13[COMRAM] PTR const unsigned char 
  3345 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3346 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3347 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3348 ;;		 -> STR_1(8), 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  cp              1   15[COMRAM] PTR const unsigned char 
  3351 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3352 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3353 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3354 ;;		 -> STR_1(8), 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  2   13[COMRAM] unsigned int 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3364 ;;      Params:         2       0       0       0       0       0       0       0       0
  3365 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3367 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3368 ;;Total ram usage:        3 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 5
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_MensajeLCD_Var
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text13
  3379   001970                     __ptext13:
  3380                           	callstack 0
  3381   001970                     _strlen:
  3382                           	callstack 24
  3383                           
  3384                           ;incstack = 0
  3385   001970  C00E  F010         	movff	strlen@s,strlen@cp
  3386   001974  D001               	goto	l3148
  3387   001976                     l3146:
  3388   001976  2A10               	incf	strlen@cp^0,f,c
  3389   001978                     l3148:
  3390   001978  C010  FFF6         	movff	strlen@cp,tblptrl
  3391   00197C                     	if	1	;There is more than 1 active tblptr byte
  3392   00197C  0E08               	movlw	high __smallconst
  3393   00197E  6EF7               	movwf	tblptrh,c
  3394   001980                     	endif
  3395   001980                     	if	0	;tblptru may be non-zero
  3396   001980                     	endif
  3397   001980                     	if	0	;tblptru may be non-zero
  3398   001980                     	endif
  3399   001980  0008               	tblrd		*
  3400   001982  50F5               	movf	tablat,w,c
  3401   001984  0900               	iorlw	0
  3402   001986  A4D8               	btfss	status,2,c
  3403   001988  D7F6               	goto	l3146
  3404   00198A  500E               	movf	strlen@s^0,w,c
  3405   00198C  5C10               	subwf	strlen@cp^0,w,c
  3406   00198E  6E0E               	movwf	?_strlen^0,c
  3407   001990  6A0F               	clrf	(?_strlen+1)^0,c
  3408   001992  BE0E               	btfsc	?_strlen^0,7,c
  3409   001994  060F               	decf	(?_strlen+1)^0,f,c
  3410   001996  0012               	return		;funcret
  3411   001998                     __end_of_strlen:
  3412                           	callstack 0
  3413                           
  3414 ;; *************** function _EscribeLCD_c *****************
  3415 ;; Defined at:
  3416 ;;		line 117 in file "LibLCDXC8.h"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  a               1    wreg     unsigned char 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  a               1   17[COMRAM] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3430 ;;      Params:         0       0       0       0       0       0       0       0       0
  3431 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3433 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3434 ;;Total ram usage:        1 bytes
  3435 ;; Hardware stack levels used: 1
  3436 ;; Hardware stack levels required when called: 7
  3437 ;; This function calls:
  3438 ;;		_EnviaDato
  3439 ;;		_HabilitaLCD
  3440 ;;		_RetardoLCD
  3441 ;; This function is called by:
  3442 ;;		_MensajeLCD_Var
  3443 ;;		_main
  3444 ;;		_Imprimir_Resultado
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text14
  3449   0019FE                     __ptext14:
  3450                           	callstack 0
  3451   0019FE                     _EscribeLCD_c:
  3452                           	callstack 22
  3453                           
  3454                           ;incstack = 0
  3455                           ;EscribeLCD_c@a stored from wreg
  3456   0019FE  6E12               	movwf	EscribeLCD_c@a^0,c
  3457                           
  3458                           ;LibLCDXC8.h: 121: LATE0=1;
  3459   001A00  808D               	bsf	3981,0,c	;volatile
  3460                           
  3461                           ;LibLCDXC8.h: 122: EnviaDato(a);
  3462   001A02  5012               	movf	EscribeLCD_c@a^0,w,c
  3463   001A04  EC34  F00C         	call	_EnviaDato
  3464                           
  3465                           ;LibLCDXC8.h: 123: HabilitaLCD();
  3466   001A08  EC3F  F00D         	call	_HabilitaLCD	;wreg free
  3467                           
  3468                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  3469   001A0C  0E04               	movlw	4
  3470   001A0E  EC63  F00B         	call	_RetardoLCD
  3471   001A12  0012               	return		;funcret
  3472   001A14                     __end_of_EscribeLCD_c:
  3473                           	callstack 0
  3474                           
  3475 ;; *************** function _DireccionaLCD *****************
  3476 ;; Defined at:
  3477 ;;		line 273 in file "LibLCDXC8.h"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  a               1    wreg     unsigned char 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  a               1   17[COMRAM] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0
  3492 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3494 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3495 ;;Total ram usage:        1 bytes
  3496 ;; Hardware stack levels used: 1
  3497 ;; Hardware stack levels required when called: 7
  3498 ;; This function calls:
  3499 ;;		_EnviaDato
  3500 ;;		_HabilitaLCD
  3501 ;;		_RetardoLCD
  3502 ;; This function is called by:
  3503 ;;		_main
  3504 ;;		_Imprimir_Resultado
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text15
  3509   001A14                     __ptext15:
  3510                           	callstack 0
  3511   001A14                     _DireccionaLCD:
  3512                           	callstack 22
  3513                           
  3514                           ;incstack = 0
  3515                           ;DireccionaLCD@a stored from wreg
  3516   001A14  6E12               	movwf	DireccionaLCD@a^0,c
  3517                           
  3518                           ;LibLCDXC8.h: 276: LATE0=0;
  3519   001A16  908D               	bcf	3981,0,c	;volatile
  3520                           
  3521                           ;LibLCDXC8.h: 277: EnviaDato(a);
  3522   001A18  5012               	movf	DireccionaLCD@a^0,w,c
  3523   001A1A  EC34  F00C         	call	_EnviaDato
  3524                           
  3525                           ;LibLCDXC8.h: 278: HabilitaLCD();
  3526   001A1E  EC3F  F00D         	call	_HabilitaLCD	;wreg free
  3527                           
  3528                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  3529   001A22  0E04               	movlw	4
  3530   001A24  EC63  F00B         	call	_RetardoLCD
  3531   001A28  0012               	return		;funcret
  3532   001A2A                     __end_of_DireccionaLCD:
  3533                           	callstack 0
  3534                           
  3535 ;; *************** function _EnviaDato *****************
  3536 ;; Defined at:
  3537 ;;		line 52 in file "LibLCDXC8.h"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  a               1    wreg     unsigned char 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  a               1   16[COMRAM] unsigned char 
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0, cstack
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3551 ;;      Params:         0       0       0       0       0       0       0       0       0
  3552 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3553 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3554 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3555 ;;Total ram usage:        2 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 6
  3558 ;; This function calls:
  3559 ;;		_HabilitaLCD
  3560 ;;		_RetardoLCD
  3561 ;; This function is called by:
  3562 ;;		_InicializaLCD
  3563 ;;		_BorraLCD
  3564 ;;		_EscribeLCD_c
  3565 ;;		_DireccionaLCD
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text16
  3570   001868                     __ptext16:
  3571                           	callstack 0
  3572   001868                     _EnviaDato:
  3573                           	callstack 22
  3574                           
  3575                           ;incstack = 0
  3576                           ;EnviaDato@a stored from wreg
  3577   001868  6E11               	movwf	EnviaDato@a^0,c
  3578                           
  3579                           ;LibLCDXC8.h: 53: if(interfaz==4){
  3580   00186A  0E04               	movlw	4
  3581   00186C  1850               	xorwf	_interfaz^0,w,c
  3582   00186E  A4D8               	btfss	status,2,c
  3583   001870  D017               	goto	l3132
  3584                           
  3585                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3586   001872  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3587   001876  0EF0               	movlw	240
  3588   001878  1610               	andwf	??_EnviaDato^0,f,c
  3589   00187A  508C               	movf	140,w,c	;volatile
  3590   00187C  0B0F               	andlw	15
  3591   00187E  1010               	iorwf	??_EnviaDato^0,w,c
  3592   001880  6E8C               	movwf	140,c	;volatile
  3593                           
  3594                           ;LibLCDXC8.h: 55: HabilitaLCD();
  3595   001882  EC3F  F00D         	call	_HabilitaLCD	;wreg free
  3596                           
  3597                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  3598   001886  0E01               	movlw	1
  3599   001888  EC63  F00B         	call	_RetardoLCD
  3600                           
  3601                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  3602   00188C  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3603   001890  3A10               	swapf	??_EnviaDato^0,f,c
  3604   001892  0EF0               	movlw	240
  3605   001894  1610               	andwf	??_EnviaDato^0,f,c
  3606   001896  508C               	movf	140,w,c	;volatile
  3607   001898  0B0F               	andlw	15
  3608   00189A  1010               	iorwf	??_EnviaDato^0,w,c
  3609   00189C  6E8C               	movwf	140,c	;volatile
  3610                           
  3611                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  3612   00189E  0012               	return	
  3613   0018A0                     l3132:
  3614   0018A0  0E08               	movlw	8
  3615   0018A2  1850               	xorwf	_interfaz^0,w,c
  3616   0018A4  A4D8               	btfss	status,2,c
  3617   0018A6  0012               	return	
  3618                           
  3619                           ;LibLCDXC8.h: 59: LATD=a;
  3620   0018A8  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  3621   0018AC  0012               	return		;funcret
  3622   0018AE                     __end_of_EnviaDato:
  3623                           	callstack 0
  3624                           
  3625 ;; *************** function _RetardoLCD *****************
  3626 ;; Defined at:
  3627 ;;		line 309 in file "LibLCDXC8.h"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  a               1    wreg     unsigned char 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  a               1   14[COMRAM] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0
  3642 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3643 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3644 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3645 ;;Total ram usage:        2 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; Hardware stack levels required when called: 5
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_EnviaDato
  3652 ;;		_InicializaLCD
  3653 ;;		_BorraLCD
  3654 ;;		_EscribeLCD_c
  3655 ;;		_DireccionaLCD
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text17
  3660   0016C6                     __ptext17:
  3661                           	callstack 0
  3662   0016C6                     _RetardoLCD:
  3663                           	callstack 23
  3664                           
  3665                           ;incstack = 0
  3666                           ;RetardoLCD@a stored from wreg
  3667   0016C6  6E0F               	movwf	RetardoLCD@a^0,c
  3668                           
  3669                           ;LibLCDXC8.h: 310: switch(a){
  3670   0016C8  D01B               	goto	l3120
  3671   0016CA                     l3110:
  3672   0016CA  0E05               	movlw	5
  3673   0016CC  6E0E               	movwf	??_RetardoLCD^0,c
  3674   0016CE  0EDE               	movlw	222
  3675   0016D0                     u4807:
  3676   0016D0  2EE8               	decfsz	wreg,f,c
  3677   0016D2  D7FE               	bra	u4807
  3678   0016D4  2E0E               	decfsz	??_RetardoLCD^0,f,c
  3679   0016D6  D7FC               	bra	u4807
  3680                           
  3681                           ;LibLCDXC8.h: 313: break;
  3682   0016D8  0012               	return	
  3683   0016DA                     l3112:
  3684   0016DA  0E53               	movlw	83
  3685   0016DC                     u4817:
  3686   0016DC  2EE8               	decfsz	wreg,f,c
  3687   0016DE  D7FE               	bra	u4817
  3688   0016E0  F000               	nop	
  3689                           
  3690                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3691   0016E2  0E35               	movlw	53
  3692   0016E4                     u4827:
  3693   0016E4  2EE8               	decfsz	wreg,f,c
  3694   0016E6  D7FE               	bra	u4827
  3695   0016E8  F000               	nop	
  3696                           
  3697                           ;LibLCDXC8.h: 317: break;
  3698   0016EA  0012               	return	
  3699   0016EC                     l3114:
  3700   0016EC  0E08               	movlw	8
  3701   0016EE                     u4837:
  3702   0016EE  2EE8               	decfsz	wreg,f,c
  3703   0016F0  D7FE               	bra	u4837
  3704   0016F2  F000               	nop	
  3705                           
  3706                           ;LibLCDXC8.h: 320: break;
  3707   0016F4  0012               	return	
  3708   0016F6                     l3116:
  3709   0016F6  0E03               	movlw	3
  3710   0016F8                     u4847:
  3711   0016F8  2EE8               	decfsz	wreg,f,c
  3712   0016FA  D7FE               	bra	u4847
  3713   0016FC  F000               	nop	
  3714                           
  3715                           ;LibLCDXC8.h: 323: break;
  3716   0016FE  0012               	return	
  3717   001700                     l3120:
  3718   001700  500F               	movf	RetardoLCD@a^0,w,c
  3719                           
  3720                           ; Switch size 1, requested type "simple"
  3721                           ; Number of cases is 4, Range of values is 1 to 4
  3722                           ; switch strategies available:
  3723                           ; Name         Instructions Cycles
  3724                           ; simple_byte           13     7 (average)
  3725                           ;	Chosen strategy is simple_byte
  3726   001702  0A01               	xorlw	1	; case 1
  3727   001704  B4D8               	btfsc	status,2,c
  3728   001706  D7E1               	goto	l3110
  3729   001708  0A03               	xorlw	3	; case 2
  3730   00170A  B4D8               	btfsc	status,2,c
  3731   00170C  D7E6               	goto	l3112
  3732   00170E  0A01               	xorlw	1	; case 3
  3733   001710  B4D8               	btfsc	status,2,c
  3734   001712  D7EC               	goto	l3114
  3735   001714  0A07               	xorlw	7	; case 4
  3736   001716  A4D8               	btfss	status,2,c
  3737   001718  0012               	return	
  3738   00171A  D7ED               	goto	l3116
  3739   00171C                     __end_of_RetardoLCD:
  3740                           	callstack 0
  3741                           
  3742 ;; *************** function _HabilitaLCD *****************
  3743 ;; Defined at:
  3744 ;;		line 96 in file "LibLCDXC8.h"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3761 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 5
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_EnviaDato
  3769 ;;		_InicializaLCD
  3770 ;;		_BorraLCD
  3771 ;;		_EscribeLCD_c
  3772 ;;		_DireccionaLCD
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text18
  3777   001A7E                     __ptext18:
  3778                           	callstack 0
  3779   001A7E                     _HabilitaLCD:
  3780                           	callstack 23
  3781                           
  3782                           ;LibLCDXC8.h: 98: LATE1=1;
  3783                           
  3784                           ;incstack = 0
  3785   001A7E  828D               	bsf	3981,1,c	;volatile
  3786                           
  3787                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3788   001A80  0E03               	movlw	3
  3789   001A82                     u4857:
  3790   001A82  2EE8               	decfsz	wreg,f,c
  3791   001A84  D7FE               	bra	u4857
  3792   001A86  F000               	nop	
  3793                           
  3794                           ;LibLCDXC8.h: 101: LATE1=0;
  3795   001A88  928D               	bcf	3981,1,c	;volatile
  3796   001A8A  0012               	return		;funcret
  3797   001A8C                     __end_of_HabilitaLCD:
  3798                           	callstack 0
  3799                           
  3800 ;; *************** function _ConfiguraLCD *****************
  3801 ;; Defined at:
  3802 ;;		line 48 in file "LibLCDXC8.h"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  a               1    wreg     unsigned char 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  a               1   13[COMRAM] unsigned char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3816 ;;      Params:         0       0       0       0       0       0       0       0       0
  3817 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3819 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3820 ;;Total ram usage:        1 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; Hardware stack levels required when called: 5
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text19
  3831   0019E6                     __ptext19:
  3832                           	callstack 0
  3833   0019E6                     _ConfiguraLCD:
  3834                           	callstack 25
  3835                           
  3836                           ;incstack = 0
  3837                           ;ConfiguraLCD@a stored from wreg
  3838   0019E6  6E0E               	movwf	ConfiguraLCD@a^0,c
  3839                           
  3840                           ;LibLCDXC8.h: 49: if(a==4 | a ==8)
  3841   0019E8  0E04               	movlw	4
  3842   0019EA  180E               	xorwf	ConfiguraLCD@a^0,w,c
  3843   0019EC  B4D8               	btfsc	status,2,c
  3844   0019EE  D004               	goto	u2020
  3845   0019F0  0E08               	movlw	8
  3846   0019F2  180E               	xorwf	ConfiguraLCD@a^0,w,c
  3847   0019F4  A4D8               	btfss	status,2,c
  3848   0019F6  0012               	return	
  3849   0019F8                     u2020:
  3850                           
  3851                           ;LibLCDXC8.h: 50: interfaz=a;
  3852   0019F8  C00E  F050         	movff	ConfiguraLCD@a,_interfaz
  3853   0019FC  0012               	return		;funcret
  3854   0019FE                     __end_of_ConfiguraLCD:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _ColorRGB *****************
  3858 ;; Defined at:
  3859 ;;		line 244 in file "Lab4.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3875 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3876 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3877 ;;Total ram usage:        2 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 5
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_main
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text20
  3888   00157E                     __ptext20:
  3889                           	callstack 0
  3890   00157E                     _ColorRGB:
  3891                           	callstack 25
  3892                           
  3893                           ;Lab4.c: 245: if(color==8) color = 0;
  3894                           
  3895                           ;incstack = 0
  3896   00157E  0E08               	movlw	8
  3897   001580  183E               	xorwf	_color^0,w,c
  3898   001582  103F               	iorwf	(_color+1)^0,w,c
  3899   001584  A4D8               	btfss	status,2,c
  3900   001586  D014               	goto	l2590
  3901   001588  0E00               	movlw	0
  3902   00158A  6E3F               	movwf	(_color+1)^0,c
  3903   00158C  0E00               	movlw	0
  3904   00158E  6E3E               	movwf	_color^0,c
  3905   001590  D00F               	goto	l2590
  3906   001592                     l2572:
  3907                           
  3908                           ;Lab4.c: 248: LATC = 0b00000000;
  3909   001592  0E00               	movlw	0
  3910   001594  D00B               	goto	L12
  3911   001596                     l2574:
  3912                           
  3913                           ;Lab4.c: 251: LATC = 0b00000101;
  3914   001596  0E05               	movlw	5
  3915   001598  D009               	goto	L12
  3916   00159A                     l2576:
  3917                           
  3918                           ;Lab4.c: 254: LATC = 0b00000110;
  3919   00159A  0E06               	movlw	6
  3920   00159C  D007               	goto	L12
  3921   00159E                     l2578:
  3922                           
  3923                           ;Lab4.c: 257: LATC = 0b00000011;
  3924   00159E  0E03               	movlw	3
  3925   0015A0  D005               	goto	L12
  3926   0015A2                     l2580:
  3927                           
  3928                           ;Lab4.c: 260: LATC = 0b00000010;
  3929   0015A2  0E02               	movlw	2
  3930   0015A4  D003               	goto	L12
  3931   0015A6                     l2584:
  3932                           
  3933                           ;Lab4.c: 266: LATC = 0b00000100;
  3934   0015A6  0E04               	movlw	4
  3935   0015A8  D001               	goto	L12
  3936   0015AA                     l2586:
  3937                           
  3938                           ;Lab4.c: 269: LATC = 0b00000111;
  3939   0015AA  0E07               	movlw	7
  3940   0015AC                     L12:
  3941   0015AC  6E8B               	movwf	139,c	;volatile
  3942                           
  3943                           ;Lab4.c: 270: break;
  3944   0015AE  D021               	goto	l2592
  3945   0015B0                     l2590:
  3946   0015B0  C03E  F00E         	movff	_color,??_ColorRGB
  3947   0015B4  C03F  F00F         	movff	_color+1,??_ColorRGB+1
  3948                           
  3949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3950                           ; Switch size 1, requested type "simple"
  3951                           ; Number of cases is 1, Range of values is 0 to 0
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte            4     3 (average)
  3955                           ;	Chosen strategy is simple_byte
  3956   0015B8  500F               	movf	(??_ColorRGB+1)^0,w,c
  3957   0015BA  0A00               	xorlw	0	; case 0
  3958   0015BC  A4D8               	btfss	status,2,c
  3959   0015BE  D019               	goto	l2592
  3960                           
  3961                           ; Switch size 1, requested type "simple"
  3962                           ; Number of cases is 8, Range of values is 0 to 7
  3963                           ; switch strategies available:
  3964                           ; Name         Instructions Cycles
  3965                           ; simple_byte           25    13 (average)
  3966                           ;	Chosen strategy is simple_byte
  3967   0015C0  500E               	movf	??_ColorRGB^0,w,c
  3968   0015C2  0A00               	xorlw	0	; case 0
  3969   0015C4  B4D8               	btfsc	status,2,c
  3970   0015C6  D7E5               	goto	l2572
  3971   0015C8  0A01               	xorlw	1	; case 1
  3972   0015CA  B4D8               	btfsc	status,2,c
  3973   0015CC  D7E4               	goto	l2574
  3974   0015CE  0A03               	xorlw	3	; case 2
  3975   0015D0  B4D8               	btfsc	status,2,c
  3976   0015D2  D7E3               	goto	l2576
  3977   0015D4  0A01               	xorlw	1	; case 3
  3978   0015D6  B4D8               	btfsc	status,2,c
  3979   0015D8  D7E2               	goto	l2578
  3980   0015DA  0A07               	xorlw	7	; case 4
  3981   0015DC  B4D8               	btfsc	status,2,c
  3982   0015DE  D7E1               	goto	l2580
  3983   0015E0  0A01               	xorlw	1	; case 5
  3984   0015E2  B4D8               	btfsc	status,2,c
  3985   0015E4  D7DA               	goto	l2576
  3986   0015E6  0A03               	xorlw	3	; case 6
  3987   0015E8  B4D8               	btfsc	status,2,c
  3988   0015EA  D7DD               	goto	l2584
  3989   0015EC  0A01               	xorlw	1	; case 7
  3990   0015EE  B4D8               	btfsc	status,2,c
  3991   0015F0  D7DC               	goto	l2586
  3992   0015F2                     l2592:
  3993                           
  3994                           ;Lab4.c: 274: color += 1;
  3995   0015F2  4A3E               	infsnz	_color^0,f,c
  3996   0015F4  2A3F               	incf	(_color+1)^0,f,c
  3997   0015F6  0012               	return		;funcret
  3998   0015F8                     __end_of_ColorRGB:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _ISR *****************
  4002 ;; Defined at:
  4003 ;;		line 286 in file "Lab4.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;		None
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4017 ;;      Params:         0       0       0       0       0       0       0       0       0
  4018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4019 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4020 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4021 ;;Total ram usage:        4 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 4
  4024 ;; This function calls:
  4025 ;;		i2_BorraLCD
  4026 ;;		i2_DireccionaLCD
  4027 ;;		i2_MensajeLCD_Var
  4028 ;; This function is called by:
  4029 ;;		Interrupt level 2
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	intcode
  4034   000008                     __pintcode:
  4035                           	callstack 0
  4036   000008                     _ISR:
  4037                           	callstack 21
  4038                           
  4039                           ;incstack = 0
  4040   000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4041   00000A  ED78  F00A         	call	int_func,f	;refresh shadow registers
  4042                           
  4043                           	psect	intcode_body
  4044   0014F0                     __pintcode_body:
  4045                           	callstack 21
  4046   0014F0                     int_func:
  4047                           	callstack 21
  4048   0014F0  0006               	pop		; remove dummy address from shadow register refresh
  4049   0014F2  CFF6 F00A          	movff	tblptrl,??_ISR
  4050   0014F6  CFF7 F00B          	movff	tblptrh,??_ISR+1
  4051   0014FA  CFF8 F00C          	movff	tblptru,??_ISR+2
  4052   0014FE  CFF5 F00D          	movff	tablat,??_ISR+3
  4053                           
  4054                           ;Lab4.c: 287: if(TMR0IF==1){
  4055   001502  A4F2               	btfss	4082,2,c	;volatile
  4056   001504  D019               	goto	i2l3088
  4057                           
  4058                           ;Lab4.c: 288: if(!verificador) contador = contador +1;
  4059   001506  5038               	movf	_verificador^0,w,c
  4060   001508  1039               	iorwf	(_verificador+1)^0,w,c
  4061   00150A  A4D8               	btfss	status,2,c
  4062   00150C  D007               	goto	i2l3082
  4063   00150E  0E01               	movlw	1
  4064   001510  243C               	addwf	_contador^0,w,c
  4065   001512  6E3C               	movwf	_contador^0,c
  4066   001514  0E00               	movlw	0
  4067   001516  203D               	addwfc	(_contador+1)^0,w,c
  4068   001518  6E3D               	movwf	(_contador+1)^0,c
  4069   00151A  D004               	goto	i2l3084
  4070   00151C                     i2l3082:
  4071                           
  4072                           ;Lab4.c: 289: else contador = 0;
  4073   00151C  0E00               	movlw	0
  4074   00151E  6E3D               	movwf	(_contador+1)^0,c
  4075   001520  0E00               	movlw	0
  4076   001522  6E3C               	movwf	_contador^0,c
  4077   001524                     i2l3084:
  4078                           
  4079                           ;Lab4.c: 290: TMR0IF=0;
  4080   001524  94F2               	bcf	4082,2,c	;volatile
  4081                           
  4082                           ;Lab4.c: 291: LATE2 = !LATE2;
  4083   001526  B48D               	btfsc	3981,2,c	;volatile
  4084   001528  D002               	goto	i2u339_40
  4085   00152A  848D               	bsf	3981,2,c	;volatile
  4086   00152C  D001               	goto	i2u340_45
  4087   00152E                     i2u339_40:
  4088   00152E  948D               	bcf	3981,2,c	;volatile
  4089   001530                     i2u340_45:
  4090                           
  4091                           ;Lab4.c: 292: TMR0 = 49911;
  4092   001530  0EC2               	movlw	194
  4093   001532  6ED7               	movwf	215,c	;volatile
  4094   001534  0EF7               	movlw	247
  4095   001536  6ED6               	movwf	214,c	;volatile
  4096   001538                     i2l3088:
  4097                           
  4098                           ;Lab4.c: 293: };Lab4.c: 295: if(contador == 20){
  4099   001538  0E14               	movlw	20
  4100   00153A  183C               	xorwf	_contador^0,w,c
  4101   00153C  103D               	iorwf	(_contador+1)^0,w,c
  4102   00153E  A4D8               	btfss	status,2,c
  4103   001540  D014               	goto	i2l327
  4104                           
  4105                           ;Lab4.c: 296: if(!verificador){
  4106   001542  5038               	movf	_verificador^0,w,c
  4107   001544  1039               	iorwf	(_verificador+1)^0,w,c
  4108   001546  A4D8               	btfss	status,2,c
  4109   001548  D010               	goto	i2l327
  4110                           
  4111                           ;Lab4.c: 297: LATC7 = !LATC7;
  4112   00154A  BE8B               	btfsc	3979,7,c	;volatile
  4113   00154C  D002               	goto	i2u343_40
  4114   00154E  8E8B               	bsf	3979,7,c	;volatile
  4115   001550  D001               	goto	i2u344_45
  4116   001552                     i2u343_40:
  4117   001552  9E8B               	bcf	3979,7,c	;volatile
  4118   001554                     i2u344_45:
  4119                           
  4120                           ;Lab4.c: 298: BorraLCD();
  4121   001554  EC35  F00D         	call	i2_BorraLCD	;wreg free
  4122                           
  4123                           ;Lab4.c: 299: DireccionaLCD(0x82);
  4124   001558  0E82               	movlw	130
  4125   00155A  EC20  F00D         	call	i2_DireccionaLCD
  4126                           
  4127                           ;Lab4.c: 300: MensajeLCD_Var("LVP Activado");
  4128   00155E  0E2C               	movlw	low STR_11
  4129   001560  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4130   001562  EC0B  F00C         	call	i2_MensajeLCD_Var	;wreg free
  4131   001566  0003               	sleep		;# 
  4132   001568                     i2l324:
  4133   001568  D7FF               	goto	i2l324
  4134   00156A                     i2l327:
  4135   00156A  C00D  FFF5         	movff	??_ISR+3,tablat
  4136   00156E  C00C  FFF8         	movff	??_ISR+2,tblptru
  4137   001572  C00B  FFF7         	movff	??_ISR+1,tblptrh
  4138   001576  C00A  FFF6         	movff	??_ISR,tblptrl
  4139   00157A  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4140   00157C  0011               	retfie		f
  4141   00157E                     __end_of_ISR:
  4142                           	callstack 0
  4143                           
  4144 ;; *************** function i2_MensajeLCD_Var *****************
  4145 ;; Defined at:
  4146 ;;		line 261 in file "LibLCDXC8.h"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  a               1    5[COMRAM] PTR unsigned char 
  4149 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4150 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4151 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4152 ;;		 -> STR_1(8), 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  i               2    7[COMRAM] int 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4164 ;;      Params:         1       0       0       0       0       0       0       0       0
  4165 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4166 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4167 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4168 ;;Total ram usage:        4 bytes
  4169 ;; Hardware stack levels used: 1
  4170 ;; Hardware stack levels required when called: 3
  4171 ;; This function calls:
  4172 ;;		i2_EscribeLCD_c
  4173 ;;		i2_strlen
  4174 ;; This function is called by:
  4175 ;;		_ISR
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text22
  4180   001816                     __ptext22:
  4181                           	callstack 0
  4182   001816                     i2_MensajeLCD_Var:
  4183                           	callstack 21
  4184                           
  4185                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  4186                           
  4187                           ;incstack = 0
  4188   001816  0E00               	movlw	0
  4189   001818  6E09               	movwf	(i2MensajeLCD_Var@i+1)^0,c
  4190   00181A  0E00               	movlw	0
  4191   00181C  6E08               	movwf	i2MensajeLCD_Var@i^0,c
  4192   00181E  D019               	goto	i2l2726
  4193   001820                     i2l2718:
  4194                           
  4195                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  4196   001820  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4197   001822  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4198   001824  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4199   001826  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4200   00182A                     	if	1	;There is more than 1 active tblptr byte
  4201   00182A  0E08               	movlw	high __smallconst
  4202   00182C  6EF7               	movwf	tblptrh,c
  4203   00182E                     	endif
  4204   00182E                     	if	0	;tblptru may be non-zero
  4205   00182E                     	endif
  4206   00182E                     	if	0	;tblptru may be non-zero
  4207   00182E                     	endif
  4208   00182E  0008               	tblrd		*
  4209   001830  50F5               	movf	tablat,w,c
  4210   001832  0900               	iorlw	0
  4211   001834  B4D8               	btfsc	status,2,c
  4212   001836  0012               	return	
  4213                           
  4214                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  4215   001838  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4216   00183A  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4217   00183C  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4218   00183E  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4219   001842                     	if	1	;There is more than 1 active tblptr byte
  4220   001842  0E08               	movlw	high __smallconst
  4221   001844  6EF7               	movwf	tblptrh,c
  4222   001846                     	endif
  4223   001846                     	if	0	;tblptru may be non-zero
  4224   001846                     	endif
  4225   001846                     	if	0	;tblptru may be non-zero
  4226   001846                     	endif
  4227   001846  0008               	tblrd		*
  4228   001848  50F5               	movf	tablat,w,c
  4229   00184A  EC15  F00D         	call	i2_EscribeLCD_c
  4230   00184E  4A08               	infsnz	i2MensajeLCD_Var@i^0,f,c
  4231   001850  2A09               	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  4232   001852                     i2l2726:
  4233   001852  C006  F001         	movff	i2MensajeLCD_Var@a,i2strlen@s
  4234   001856  ECCC  F00C         	call	i2_strlen	;wreg free
  4235   00185A  5001               	movf	?i2_strlen^0,w,c
  4236   00185C  5C08               	subwf	i2MensajeLCD_Var@i^0,w,c
  4237   00185E  5002               	movf	(?i2_strlen+1)^0,w,c
  4238   001860  5809               	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  4239   001862  B0D8               	btfsc	status,0,c
  4240   001864  0012               	return	
  4241   001866  D7DC               	goto	i2l2718
  4242   001868                     __end_ofi2_MensajeLCD_Var:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function i2_strlen *****************
  4246 ;; Defined at:
  4247 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  s               1    0[COMRAM] PTR const unsigned char 
  4250 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4251 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4252 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4253 ;;		 -> STR_1(8), 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  4256 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4257 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4258 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4259 ;;		 -> STR_1(8), 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  2    0[COMRAM] unsigned int 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4269 ;;      Params:         2       0       0       0       0       0       0       0       0
  4270 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4272 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4273 ;;Total ram usage:        3 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		i2_MensajeLCD_Var
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text23
  4283   001998                     __ptext23:
  4284                           	callstack 0
  4285   001998                     i2_strlen:
  4286                           	callstack 23
  4287                           
  4288                           ;incstack = 0
  4289   001998  C001  F003         	movff	i2strlen@s,i2strlen@cp
  4290   00199C  D001               	goto	i2l2366
  4291   00199E                     i2l2364:
  4292   00199E  2A03               	incf	i2strlen@cp^0,f,c
  4293   0019A0                     i2l2366:
  4294   0019A0  C003  FFF6         	movff	i2strlen@cp,tblptrl
  4295   0019A4                     	if	1	;There is more than 1 active tblptr byte
  4296   0019A4  0E08               	movlw	high __smallconst
  4297   0019A6  6EF7               	movwf	tblptrh,c
  4298   0019A8                     	endif
  4299   0019A8                     	if	0	;tblptru may be non-zero
  4300   0019A8                     	endif
  4301   0019A8                     	if	0	;tblptru may be non-zero
  4302   0019A8                     	endif
  4303   0019A8  0008               	tblrd		*
  4304   0019AA  50F5               	movf	tablat,w,c
  4305   0019AC  0900               	iorlw	0
  4306   0019AE  A4D8               	btfss	status,2,c
  4307   0019B0  D7F6               	goto	i2l2364
  4308   0019B2  5001               	movf	i2strlen@s^0,w,c
  4309   0019B4  5C03               	subwf	i2strlen@cp^0,w,c
  4310   0019B6  6E01               	movwf	?i2_strlen^0,c
  4311   0019B8  6A02               	clrf	(?i2_strlen+1)^0,c
  4312   0019BA  BE01               	btfsc	?i2_strlen^0,7,c
  4313   0019BC  0602               	decf	(?i2_strlen+1)^0,f,c
  4314   0019BE  0012               	return		;funcret
  4315   0019C0                     __end_ofi2_strlen:
  4316                           	callstack 0
  4317                           
  4318 ;; *************** function i2_EscribeLCD_c *****************
  4319 ;; Defined at:
  4320 ;;		line 117 in file "LibLCDXC8.h"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  a               1    wreg     unsigned char 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  a               1    4[COMRAM] unsigned char 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0
  4335 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4337 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4338 ;;Total ram usage:        1 bytes
  4339 ;; Hardware stack levels used: 1
  4340 ;; Hardware stack levels required when called: 2
  4341 ;; This function calls:
  4342 ;;		i2_EnviaDato
  4343 ;;		i2_HabilitaLCD
  4344 ;;		i2_RetardoLCD
  4345 ;; This function is called by:
  4346 ;;		i2_MensajeLCD_Var
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text24
  4351   001A2A                     __ptext24:
  4352                           	callstack 0
  4353   001A2A                     i2_EscribeLCD_c:
  4354                           	callstack 21
  4355                           
  4356                           ;incstack = 0
  4357                           ;i2EscribeLCD_c@a stored from wreg
  4358   001A2A  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4359                           
  4360                           ;LibLCDXC8.h: 121: LATE0=1;
  4361   001A2C  808D               	bsf	3981,0,c	;volatile
  4362                           
  4363                           ;LibLCDXC8.h: 122: EnviaDato(a);
  4364   001A2E  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4365   001A30  EC57  F00C         	call	i2_EnviaDato
  4366                           
  4367                           ;LibLCDXC8.h: 123: HabilitaLCD();
  4368   001A34  EC46  F00D         	call	i2_HabilitaLCD	;wreg free
  4369                           
  4370                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  4371   001A38  0E04               	movlw	4
  4372   001A3A  EC8E  F00B         	call	i2_RetardoLCD
  4373   001A3E  0012               	return		;funcret
  4374   001A40                     __end_ofi2_EscribeLCD_c:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function i2_DireccionaLCD *****************
  4378 ;; Defined at:
  4379 ;;		line 273 in file "LibLCDXC8.h"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  a               1    wreg     unsigned char 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  a               1    4[COMRAM] unsigned char 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4393 ;;      Params:         0       0       0       0       0       0       0       0       0
  4394 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4396 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4397 ;;Total ram usage:        1 bytes
  4398 ;; Hardware stack levels used: 1
  4399 ;; Hardware stack levels required when called: 2
  4400 ;; This function calls:
  4401 ;;		i2_EnviaDato
  4402 ;;		i2_HabilitaLCD
  4403 ;;		i2_RetardoLCD
  4404 ;; This function is called by:
  4405 ;;		_ISR
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text25
  4410   001A40                     __ptext25:
  4411                           	callstack 0
  4412   001A40                     i2_DireccionaLCD:
  4413                           	callstack 22
  4414                           
  4415                           ;incstack = 0
  4416                           ;i2DireccionaLCD@a stored from wreg
  4417   001A40  6E05               	movwf	i2DireccionaLCD@a^0,c
  4418                           
  4419                           ;LibLCDXC8.h: 276: LATE0=0;
  4420   001A42  908D               	bcf	3981,0,c	;volatile
  4421                           
  4422                           ;LibLCDXC8.h: 277: EnviaDato(a);
  4423   001A44  5005               	movf	i2DireccionaLCD@a^0,w,c
  4424   001A46  EC57  F00C         	call	i2_EnviaDato
  4425                           
  4426                           ;LibLCDXC8.h: 278: HabilitaLCD();
  4427   001A4A  EC46  F00D         	call	i2_HabilitaLCD	;wreg free
  4428                           
  4429                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  4430   001A4E  0E04               	movlw	4
  4431   001A50  EC8E  F00B         	call	i2_RetardoLCD
  4432   001A54  0012               	return		;funcret
  4433   001A56                     __end_ofi2_DireccionaLCD:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function i2_BorraLCD *****************
  4437 ;; Defined at:
  4438 ;;		line 103 in file "LibLCDXC8.h"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4455 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 2
  4459 ;; This function calls:
  4460 ;;		i2_EnviaDato
  4461 ;;		i2_HabilitaLCD
  4462 ;;		i2_RetardoLCD
  4463 ;; This function is called by:
  4464 ;;		_ISR
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text26
  4469   001A6A                     __ptext26:
  4470                           	callstack 0
  4471   001A6A                     i2_BorraLCD:
  4472                           	callstack 22
  4473                           
  4474                           ;LibLCDXC8.h: 105: LATE0=0;
  4475                           
  4476                           ;incstack = 0
  4477   001A6A  908D               	bcf	3981,0,c	;volatile
  4478                           
  4479                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  4480   001A6C  0E01               	movlw	1
  4481   001A6E  EC57  F00C         	call	i2_EnviaDato
  4482                           
  4483                           ;LibLCDXC8.h: 107: HabilitaLCD();
  4484   001A72  EC46  F00D         	call	i2_HabilitaLCD	;wreg free
  4485                           
  4486                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  4487   001A76  0E02               	movlw	2
  4488   001A78  EC8E  F00B         	call	i2_RetardoLCD
  4489   001A7C  0012               	return		;funcret
  4490   001A7E                     __end_ofi2_BorraLCD:
  4491                           	callstack 0
  4492                           
  4493 ;; *************** function i2_EnviaDato *****************
  4494 ;; Defined at:
  4495 ;;		line 52 in file "LibLCDXC8.h"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  a               1    wreg     unsigned char 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  a               1    3[COMRAM] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0
  4510 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4511 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4512 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4513 ;;Total ram usage:        2 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; Hardware stack levels required when called: 1
  4516 ;; This function calls:
  4517 ;;		i2_HabilitaLCD
  4518 ;;		i2_RetardoLCD
  4519 ;; This function is called by:
  4520 ;;		i2_BorraLCD
  4521 ;;		i2_EscribeLCD_c
  4522 ;;		i2_DireccionaLCD
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text27
  4527   0018AE                     __ptext27:
  4528                           	callstack 0
  4529   0018AE                     i2_EnviaDato:
  4530                           	callstack 21
  4531                           
  4532                           ;incstack = 0
  4533                           ;i2EnviaDato@a stored from wreg
  4534   0018AE  6E04               	movwf	i2EnviaDato@a^0,c
  4535                           
  4536                           ;LibLCDXC8.h: 53: if(interfaz==4){
  4537   0018B0  0E04               	movlw	4
  4538   0018B2  1850               	xorwf	_interfaz^0,w,c
  4539   0018B4  A4D8               	btfss	status,2,c
  4540   0018B6  D017               	goto	i2l2188
  4541                           
  4542                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4543   0018B8  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4544   0018BC  0EF0               	movlw	240
  4545   0018BE  1603               	andwf	??i2_EnviaDato^0,f,c
  4546   0018C0  508C               	movf	140,w,c	;volatile
  4547   0018C2  0B0F               	andlw	15
  4548   0018C4  1003               	iorwf	??i2_EnviaDato^0,w,c
  4549   0018C6  6E8C               	movwf	140,c	;volatile
  4550                           
  4551                           ;LibLCDXC8.h: 55: HabilitaLCD();
  4552   0018C8  EC46  F00D         	call	i2_HabilitaLCD	;wreg free
  4553                           
  4554                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  4555   0018CC  0E01               	movlw	1
  4556   0018CE  EC8E  F00B         	call	i2_RetardoLCD
  4557                           
  4558                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  4559   0018D2  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4560   0018D6  3A03               	swapf	??i2_EnviaDato^0,f,c
  4561   0018D8  0EF0               	movlw	240
  4562   0018DA  1603               	andwf	??i2_EnviaDato^0,f,c
  4563   0018DC  508C               	movf	140,w,c	;volatile
  4564   0018DE  0B0F               	andlw	15
  4565   0018E0  1003               	iorwf	??i2_EnviaDato^0,w,c
  4566   0018E2  6E8C               	movwf	140,c	;volatile
  4567                           
  4568                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  4569   0018E4  0012               	return	
  4570   0018E6                     i2l2188:
  4571   0018E6  0E08               	movlw	8
  4572   0018E8  1850               	xorwf	_interfaz^0,w,c
  4573   0018EA  A4D8               	btfss	status,2,c
  4574   0018EC  0012               	return	
  4575                           
  4576                           ;LibLCDXC8.h: 59: LATD=a;
  4577   0018EE  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4578   0018F2  0012               	return		;funcret
  4579   0018F4                     __end_ofi2_EnviaDato:
  4580                           	callstack 0
  4581                           
  4582 ;; *************** function i2_RetardoLCD *****************
  4583 ;; Defined at:
  4584 ;;		line 309 in file "LibLCDXC8.h"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  a               1    wreg     unsigned char 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  a               1    1[COMRAM] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4598 ;;      Params:         0       0       0       0       0       0       0       0       0
  4599 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4600 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4601 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4602 ;;Total ram usage:        2 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		i2_EnviaDato
  4608 ;;		i2_BorraLCD
  4609 ;;		i2_EscribeLCD_c
  4610 ;;		i2_DireccionaLCD
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text28
  4615   00171C                     __ptext28:
  4616                           	callstack 0
  4617   00171C                     i2_RetardoLCD:
  4618                           	callstack 22
  4619                           
  4620                           ;incstack = 0
  4621                           ;i2RetardoLCD@a stored from wreg
  4622   00171C  6E02               	movwf	i2RetardoLCD@a^0,c
  4623                           
  4624                           ;LibLCDXC8.h: 310: switch(a){
  4625   00171E  D01B               	goto	i2l2158
  4626   001720                     i2l2148:
  4627   001720  0E05               	movlw	5
  4628   001722  6E01               	movwf	??i2_RetardoLCD^0,c
  4629   001724  0EDE               	movlw	222
  4630   001726                     i2u486_47:
  4631   001726  2EE8               	decfsz	wreg,f,c
  4632   001728  D7FE               	bra	i2u486_47
  4633   00172A  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4634   00172C  D7FC               	bra	i2u486_47
  4635                           
  4636                           ;LibLCDXC8.h: 313: break;
  4637   00172E  0012               	return	
  4638   001730                     i2l2150:
  4639   001730  0E53               	movlw	83
  4640   001732                     i2u487_47:
  4641   001732  2EE8               	decfsz	wreg,f,c
  4642   001734  D7FE               	bra	i2u487_47
  4643   001736  F000               	nop	
  4644                           
  4645                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4646   001738  0E35               	movlw	53
  4647   00173A                     i2u488_47:
  4648   00173A  2EE8               	decfsz	wreg,f,c
  4649   00173C  D7FE               	bra	i2u488_47
  4650   00173E  F000               	nop	
  4651                           
  4652                           ;LibLCDXC8.h: 317: break;
  4653   001740  0012               	return	
  4654   001742                     i2l2152:
  4655   001742  0E08               	movlw	8
  4656   001744                     i2u489_47:
  4657   001744  2EE8               	decfsz	wreg,f,c
  4658   001746  D7FE               	bra	i2u489_47
  4659   001748  F000               	nop	
  4660                           
  4661                           ;LibLCDXC8.h: 320: break;
  4662   00174A  0012               	return	
  4663   00174C                     i2l2154:
  4664   00174C  0E03               	movlw	3
  4665   00174E                     i2u490_47:
  4666   00174E  2EE8               	decfsz	wreg,f,c
  4667   001750  D7FE               	bra	i2u490_47
  4668   001752  F000               	nop	
  4669                           
  4670                           ;LibLCDXC8.h: 323: break;
  4671   001754  0012               	return	
  4672   001756                     i2l2158:
  4673   001756  5002               	movf	i2RetardoLCD@a^0,w,c
  4674                           
  4675                           ; Switch size 1, requested type "simple"
  4676                           ; Number of cases is 4, Range of values is 1 to 4
  4677                           ; switch strategies available:
  4678                           ; Name         Instructions Cycles
  4679                           ; simple_byte           13     7 (average)
  4680                           ;	Chosen strategy is simple_byte
  4681   001758  0A01               	xorlw	1	; case 1
  4682   00175A  B4D8               	btfsc	status,2,c
  4683   00175C  D7E1               	goto	i2l2148
  4684   00175E  0A03               	xorlw	3	; case 2
  4685   001760  B4D8               	btfsc	status,2,c
  4686   001762  D7E6               	goto	i2l2150
  4687   001764  0A01               	xorlw	1	; case 3
  4688   001766  B4D8               	btfsc	status,2,c
  4689   001768  D7EC               	goto	i2l2152
  4690   00176A  0A07               	xorlw	7	; case 4
  4691   00176C  A4D8               	btfss	status,2,c
  4692   00176E  0012               	return	
  4693   001770  D7ED               	goto	i2l2154
  4694   001772                     __end_ofi2_RetardoLCD:
  4695                           	callstack 0
  4696                           
  4697 ;; *************** function i2_HabilitaLCD *****************
  4698 ;; Defined at:
  4699 ;;		line 96 in file "LibLCDXC8.h"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;		None
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;		None
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4713 ;;      Params:         0       0       0       0       0       0       0       0       0
  4714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4716 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4717 ;;Total ram usage:        0 bytes
  4718 ;; Hardware stack levels used: 1
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		i2_EnviaDato
  4723 ;;		i2_BorraLCD
  4724 ;;		i2_EscribeLCD_c
  4725 ;;		i2_DireccionaLCD
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text29
  4730   001A8C                     __ptext29:
  4731                           	callstack 0
  4732   001A8C                     i2_HabilitaLCD:
  4733                           	callstack 22
  4734                           
  4735                           ;LibLCDXC8.h: 98: LATE1=1;
  4736                           
  4737                           ;incstack = 0
  4738   001A8C  828D               	bsf	3981,1,c	;volatile
  4739                           
  4740                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4741   001A8E  0E03               	movlw	3
  4742   001A90                     i2u491_47:
  4743   001A90  2EE8               	decfsz	wreg,f,c
  4744   001A92  D7FE               	bra	i2u491_47
  4745   001A94  F000               	nop	
  4746                           
  4747                           ;LibLCDXC8.h: 101: LATE1=0;
  4748   001A96  928D               	bcf	3981,1,c	;volatile
  4749   001A98  0012               	return		;funcret
  4750   001A9A                     __end_ofi2_HabilitaLCD:
  4751                           	callstack 0
  4752                           
  4753                           	psect	rparam
  4754   000000                     
  4755                           	psect	temp
  4756   000051                     btemp:
  4757                           	callstack 0
  4758   000051                     	ds	1
  4759   000000                     int$flags	set	btemp
  4760   000000                     wtemp8	set	btemp+1
  4761   000000                     ttemp5	set	btemp+1
  4762   000000                     ttemp6	set	btemp+4
  4763   000000                     ttemp7	set	btemp+8
  4764                           
  4765                           	psect	idloc
  4766                           
  4767                           ;Config register IDLOC0 @ 0x200000
  4768                           ;	unspecified, using default values
  4769   200000                     	org	2097152
  4770   200000  FF                 	db	255
  4771                           
  4772                           ;Config register IDLOC1 @ 0x200001
  4773                           ;	unspecified, using default values
  4774   200001                     	org	2097153
  4775   200001  FF                 	db	255
  4776                           
  4777                           ;Config register IDLOC2 @ 0x200002
  4778                           ;	unspecified, using default values
  4779   200002                     	org	2097154
  4780   200002  FF                 	db	255
  4781                           
  4782                           ;Config register IDLOC3 @ 0x200003
  4783                           ;	unspecified, using default values
  4784   200003                     	org	2097155
  4785   200003  FF                 	db	255
  4786                           
  4787                           ;Config register IDLOC4 @ 0x200004
  4788                           ;	unspecified, using default values
  4789   200004                     	org	2097156
  4790   200004  FF                 	db	255
  4791                           
  4792                           ;Config register IDLOC5 @ 0x200005
  4793                           ;	unspecified, using default values
  4794   200005                     	org	2097157
  4795   200005  FF                 	db	255
  4796                           
  4797                           ;Config register IDLOC6 @ 0x200006
  4798                           ;	unspecified, using default values
  4799   200006                     	org	2097158
  4800   200006  FF                 	db	255
  4801                           
  4802                           ;Config register IDLOC7 @ 0x200007
  4803                           ;	unspecified, using default values
  4804   200007                     	org	2097159
  4805   200007  FF                 	db	255
  4806                           
  4807                           	psect	config
  4808                           
  4809                           ;Config register CONFIG1L @ 0x300000
  4810                           ;	unspecified, using default values
  4811                           ;	PLL Prescaler Selection bits
  4812                           ;	PLLDIV = 0x0, unprogrammed default
  4813                           ;	System Clock Postscaler Selection bits
  4814                           ;	CPUDIV = 0x0, unprogrammed default
  4815                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4816                           ;	USBDIV = 0x0, unprogrammed default
  4817   300000                     	org	3145728
  4818   300000  00                 	db	0
  4819                           
  4820                           ;Config register CONFIG1H @ 0x300001
  4821                           ;	Oscillator Selection bits
  4822                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4823                           ;	Fail-Safe Clock Monitor Enable bit
  4824                           ;	FCMEN = 0x0, unprogrammed default
  4825                           ;	Internal/External Oscillator Switchover bit
  4826                           ;	IESO = 0x0, unprogrammed default
  4827   300001                     	org	3145729
  4828   300001  09                 	db	9
  4829                           
  4830                           ;Config register CONFIG2L @ 0x300002
  4831                           ;	unspecified, using default values
  4832                           ;	Power-up Timer Enable bit
  4833                           ;	PWRT = 0x1, unprogrammed default
  4834                           ;	Brown-out Reset Enable bits
  4835                           ;	BOR = 0x3, unprogrammed default
  4836                           ;	Brown-out Reset Voltage bits
  4837                           ;	BORV = 0x3, unprogrammed default
  4838                           ;	USB Voltage Regulator Enable bit
  4839                           ;	VREGEN = 0x0, unprogrammed default
  4840   300002                     	org	3145730
  4841   300002  1F                 	db	31
  4842                           
  4843                           ;Config register CONFIG2H @ 0x300003
  4844                           ;	Watchdog Timer Enable bit
  4845                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4846                           ;	Watchdog Timer Postscale Select bits
  4847                           ;	WDTPS = 0xF, unprogrammed default
  4848   300003                     	org	3145731
  4849   300003  1E                 	db	30
  4850                           
  4851                           ; Padding undefined space
  4852   300004                     	org	3145732
  4853   300004  FF                 	db	255
  4854                           
  4855                           ;Config register CONFIG3H @ 0x300005
  4856                           ;	CCP2 MUX bit
  4857                           ;	CCP2MX = 0x1, unprogrammed default
  4858                           ;	PORTB A/D Enable bit
  4859                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4860                           ;	Low-Power Timer 1 Oscillator Enable bit
  4861                           ;	LPT1OSC = 0x0, unprogrammed default
  4862                           ;	MCLR Pin Enable bit
  4863                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4864   300005                     	org	3145733
  4865   300005  81                 	db	129
  4866                           
  4867                           ;Config register CONFIG4L @ 0x300006
  4868                           ;	Stack Full/Underflow Reset Enable bit
  4869                           ;	STVREN = 0x1, unprogrammed default
  4870                           ;	Single-Supply ICSP Enable bit
  4871                           ;	LVP = OFF, Single-Supply ICSP disabled
  4872                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4873                           ;	ICPRT = 0x0, unprogrammed default
  4874                           ;	Extended Instruction Set Enable bit
  4875                           ;	XINST = 0x0, unprogrammed default
  4876                           ;	Background Debugger Enable bit
  4877                           ;	DEBUG = 0x1, unprogrammed default
  4878   300006                     	org	3145734
  4879   300006  81                 	db	129
  4880                           
  4881                           ; Padding undefined space
  4882   300007                     	org	3145735
  4883   300007  FF                 	db	255
  4884                           
  4885                           ;Config register CONFIG5L @ 0x300008
  4886                           ;	unspecified, using default values
  4887                           ;	Code Protection bit
  4888                           ;	CP0 = 0x1, unprogrammed default
  4889                           ;	Code Protection bit
  4890                           ;	CP1 = 0x1, unprogrammed default
  4891                           ;	Code Protection bit
  4892                           ;	CP2 = 0x1, unprogrammed default
  4893                           ;	Code Protection bit
  4894                           ;	CP3 = 0x1, unprogrammed default
  4895   300008                     	org	3145736
  4896   300008  0F                 	db	15
  4897                           
  4898                           ;Config register CONFIG5H @ 0x300009
  4899                           ;	unspecified, using default values
  4900                           ;	Boot Block Code Protection bit
  4901                           ;	CPB = 0x1, unprogrammed default
  4902                           ;	Data EEPROM Code Protection bit
  4903                           ;	CPD = 0x1, unprogrammed default
  4904   300009                     	org	3145737
  4905   300009  C0                 	db	192
  4906                           
  4907                           ;Config register CONFIG6L @ 0x30000A
  4908                           ;	unspecified, using default values
  4909                           ;	Write Protection bit
  4910                           ;	WRT0 = 0x1, unprogrammed default
  4911                           ;	Write Protection bit
  4912                           ;	WRT1 = 0x1, unprogrammed default
  4913                           ;	Write Protection bit
  4914                           ;	WRT2 = 0x1, unprogrammed default
  4915                           ;	Write Protection bit
  4916                           ;	WRT3 = 0x1, unprogrammed default
  4917   30000A                     	org	3145738
  4918   30000A  0F                 	db	15
  4919                           
  4920                           ;Config register CONFIG6H @ 0x30000B
  4921                           ;	unspecified, using default values
  4922                           ;	Configuration Register Write Protection bit
  4923                           ;	WRTC = 0x1, unprogrammed default
  4924                           ;	Boot Block Write Protection bit
  4925                           ;	WRTB = 0x1, unprogrammed default
  4926                           ;	Data EEPROM Write Protection bit
  4927                           ;	WRTD = 0x1, unprogrammed default
  4928   30000B                     	org	3145739
  4929   30000B  E0                 	db	224
  4930                           
  4931                           ;Config register CONFIG7L @ 0x30000C
  4932                           ;	unspecified, using default values
  4933                           ;	Table Read Protection bit
  4934                           ;	EBTR0 = 0x1, unprogrammed default
  4935                           ;	Table Read Protection bit
  4936                           ;	EBTR1 = 0x1, unprogrammed default
  4937                           ;	Table Read Protection bit
  4938                           ;	EBTR2 = 0x1, unprogrammed default
  4939                           ;	Table Read Protection bit
  4940                           ;	EBTR3 = 0x1, unprogrammed default
  4941   30000C                     	org	3145740
  4942   30000C  0F                 	db	15
  4943                           
  4944                           ;Config register CONFIG7H @ 0x30000D
  4945                           ;	unspecified, using default values
  4946                           ;	Boot Block Table Read Protection bit
  4947                           ;	EBTRB = 0x1, unprogrammed default
  4948   30000D                     	org	3145741
  4949   30000D  40                 	db	64
  4950                           tosu	equ	0xFFF
  4951                           tosh	equ	0xFFE
  4952                           tosl	equ	0xFFD
  4953                           stkptr	equ	0xFFC
  4954                           pclatu	equ	0xFFB
  4955                           pclath	equ	0xFFA
  4956                           pcl	equ	0xFF9
  4957                           tblptru	equ	0xFF8
  4958                           tblptrh	equ	0xFF7
  4959                           tblptrl	equ	0xFF6
  4960                           tablat	equ	0xFF5
  4961                           prodh	equ	0xFF4
  4962                           prodl	equ	0xFF3
  4963                           indf0	equ	0xFEF
  4964                           postinc0	equ	0xFEE
  4965                           postdec0	equ	0xFED
  4966                           preinc0	equ	0xFEC
  4967                           plusw0	equ	0xFEB
  4968                           fsr0h	equ	0xFEA
  4969                           fsr0l	equ	0xFE9
  4970                           wreg	equ	0xFE8
  4971                           indf1	equ	0xFE7
  4972                           postinc1	equ	0xFE6
  4973                           postdec1	equ	0xFE5
  4974                           preinc1	equ	0xFE4
  4975                           plusw1	equ	0xFE3
  4976                           fsr1h	equ	0xFE2
  4977                           fsr1l	equ	0xFE1
  4978                           bsr	equ	0xFE0
  4979                           indf2	equ	0xFDF
  4980                           postinc2	equ	0xFDE
  4981                           postdec2	equ	0xFDD
  4982                           preinc2	equ	0xFDC
  4983                           plusw2	equ	0xFDB
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    0
    Data        4
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      80
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Imprimir_Resultado
    _factorial_function->___lmul
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _Imprimir_Resultado->___aldiv
    ___lwdiv->___wmul
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_Imprimir_Resultado

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   17593
                                             35 COMRAM     4     4      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                 _Imprimir_Resultado
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
                             ___lmul
                            ___lwdiv
                             ___wmul
                 _factorial_function
 ---------------------------------------------------------------------------------
 (1) _factorial_function                                   8     4      4    2265
                                             25 COMRAM     8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     310
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     155
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Resultado                                  19    15      4    8989
                                             27 COMRAM     8     4      4
                                              0 BANK0     11    11      0
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     772
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     781
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2076
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     613
                                             13 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             13 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1    1733
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     220
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0     124
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      31
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0     650
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Var                                     4     3      1     408
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Imprimir_Resultado
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
       _EscribeLCD_c
       _strlen
     ___aldiv
     ___almod
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
   ___lmul
   ___lwdiv
   ___wmul
   _factorial_function
     ___lmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_DireccionaLCD
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      50       1       85.1%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B      29        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 18 11:50:08 2023

                         _a 0036                           _b 0034                           _i 0040  
                         _m 0049                           _r 002C            i2DireccionaLCD@a 0005  
                        _PD 007E82                          _TO 007E83                          _n1 0044  
                        _n2 0042                  EnviaDato@a 0011                          _op 004F  
       ___wmul@multiplicand 0010               ??_LeerTeclado 000E               _InicializaLCD 1454  
                       l262 1318                         l264 1320                         l256 1310  
                       l281 1370                         l273 134C                         l291 139C  
                       l283 1378                         l275 1354                         l179 08B6  
                       l268 1344                         l287 138C                         l279 1368  
                       l288 13A4                         l289 1394                         l838 17BA  
                       l848 192C                         _GIE 007F97                         _RB4 007C0C  
                       _RB5 007C0D                         _RB6 007C0E                         _RB7 007C0F  
                       _ISR 0008                         _POR 007E81                         _n1c 004E  
                       _n2c 004D                         _res 0028                         wreg 000FE8  
                      ?_ISR 0001            ??i2_EscribeLCD_c 0005                        l3110 16CA  
                      l3112 16DA                        l3120 1700                        l3114 16EC  
                      l3116 16F6                        l3132 18A0                        l3220 1274  
                      l3212 1246                        l3230 12A8                        l3206 122E  
                      l2510 135C                        l3312 1922                        l3304 1902  
                      l3146 1976                        l3218 1268                        l3234 12B6  
                      l3250 13C4                        l3306 190A                        l3410 1018  
                      l3322 1466                        l2450 1306                        l3148 1978  
                      l3164 17CE                        l3172 1800                        l3260 13F6  
                      l3332 1484                        l3238 12CC                        l3270 142C  
                      l3254 13D8                        l3190 1680                        l3430 1084  
                      l3422 105A                        l3342 14A2                        l3510 08C6  
                      l3600 0A22                        l3512 08DC                        l3274 1442  
                      l3266 141E                        l3258 13EA                        l3194 1694  
                      l3426 1076                        l3362 14DA                        l2538 1380  
                      l2474 1328                        l3514 08E0                        l2580 15A2  
                      l2572 1592                        l3284 1788                        l3452 11B6  
                      l3444 1160                        l3436 10C2                        l2574 1596  
                      l2590 15B0                        l3286 1790                        l3462 11E6  
                      l3454 11BC                        l3390 0F78                        l3382 0F14  
                      l2486 133A                        l2584 15A6                        l2576 159A  
                      l2592 15F2                        l3296 17B0                        l3800 0E1C  
                      l3528 0934                        l2586 15AA                        l2578 159E  
                      l3458 11CA                        l3474 1612                        l3810 0E3C  
                      l3650 0AF0                        l3626 0A8C                        l3554 0998  
                      l3468 1208                        l3708 0BD6                        l3732 0C2C  
                      l3628 0A92                        l3548 0980                        l3564 09B6  
                      l3398 0FBA                        l3478 164E                        l3646 0ADE  
                      l3590 0A04                        l3816 0EA4                        l3752 0CBA  
                      l3744 0C60                        l3770 0D52                        l3746 0C78  
                      l3818 0EAA                        l3764 0D3E                        l3756 0CD8  
                      l3748 0CAE                        l3684 0B76                        l3676 0B5E  
                      l3790 0DCC                        l3782 0D8A                        l3786 0DBE  
                      l3778 0D74                        l3794 0DDE                        l3796 0E00  
                      l3798 0E06                        STR_1 0857                        STR_2 085F  
                      STR_3 0810                        STR_4 0830                        STR_5 0844  
                      STR_6 0830                        STR_7 0801                        STR_8 0830  
                      STR_9 0839                        u2020 19F8                        u2100 12EC  
                      _LATB 000F8A                        _LATC 000F8B                        u4000 094C  
                      _LATD 000F8C                        u4120 0A3A                        u4060 09CE  
                      u3610 13FA                        u3550 1278                        u4190 0A70  
                      u3800 0FE0                        u4600 0C1E                        u3650 1794  
                      u3810 0FF2                        u4290 0AD2                        u3820 102C  
                      u3830 103E                        u4390 0B40                        u3680 190E  
                      u3840 1050                        u3930 165E                        u4490 0BB8  
                      u3860 10F8                        u3780 0FB8                        u3790 0FCE  
                      u4807 16D0                        u4817 16DC                        u3890 11AC  
                      u4827 16E4                        u4837 16EE                        u4847 16F8  
                      u4857 1A82                        u4777 08D0                        u4787 098A  
                      u4797 0EB0                        _RBPU 007F8F                        _TMR0 000FD6  
            ??_EscribeLCD_c 0012                        _main 0866                        fsr1l 000FE1  
                      btemp 0051                        prodh 000FF4                        prodl 000FF3  
                      start 000E                ___param_bank 000000                       ??_ISR 000A  
           i2_DireccionaLCD 1A40              ?_InicializaLCD 0001             __end_of___aldiv 12DE  
           __end_of___almod 1454                       ?_main 0001                       STR_10 0830  
                     STR_11 082C                       STR_12 084E                       STR_13 081E  
             EscribeLCD_c@a 0012                       _T0CON 000FD5                       _LATE0 007C68  
                     _LATE1 007C69                       _LATE2 007C6A                       _LATC7 007C5F  
           __end_of___lwdiv 17C4             __end_of___lwmod 1936                       i2l324 1568  
                     i2l327 156A                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96         ___lmul@multiplicand 0012  
                     _Tecla 0048         __end_of_LeerTeclado 13A8                       _color 003E  
               ?i2_BorraLCD 0001                       tablat 000FF5                 _HabilitaLCD 1A7E  
                     ttemp5 0052                       ttemp6 0055                       ttemp7 0059  
                     status 000FD8                       wtemp8 0052            __end_ofi2_strlen 19C0  
          __end_of_BorraLCD 1A6A            __end_of_ColorRGB 15F8             __initialization 1936  
              __end_of_main 0EBC            i2_MensajeLCD_Var 1816                      ??_main 0024  
      __end_of_ConfiguraLCD 19FE               __activetblptr 000002                  i2strlen@cp 0003  
        _Imprimir_Resultado 0EBC                      _ADCON1 000FC1              DireccionaLCD@a 0012  
          _contador_digitos 003A                      i2l2150 1730                      i2l2152 1742  
                    i2l2154 174C                      i2l2148 1720                      i2l2158 1756  
                    i2l3082 151C                      i2l2188 18E6                      i2l2364 199E  
                    i2l3084 1524                      i2l2366 19A0                      i2l3088 1538  
                    i2l2718 1820                      i2l2726 1852                      _OSCCON 000FD3  
                    _TMR0IE 007F95                      _TMR0IF 007F92                      _TMR0ON 007EAF  
       ?_Imprimir_Resultado 001C       __end_of_DireccionaLCD 1A2A                  _RetardoLCD 16C6  
   __end_ofi2_DireccionaLCD 1A56                      ___lmul 1670                   ??___aldiv 0016  
                 ??___almod 0016                      ___wmul 19C0                   ??___lwdiv 0018  
                 ??___lwmod 0012             ??_InicializaLCD 0012                      clear_0 195C  
                    isa$std 000001        ??_Imprimir_Resultado 0020        __end_of_EscribeLCD_c 1A14  
                    _strlen 1970                 _LeerTeclado 12DE                ?i2_EnviaDato 0001  
              __pdataCOMRAM 004D                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8  __end_of_factorial_function 1670  
     __end_ofi2_HabilitaLCD 1A9A                  __accesstop 0060     __end_of__initialization 1962  
             ___rparam_used 000001              __pcstackCOMRAM 0001           __end_of_EnviaDato 18AE  
                 ?i2_strlen 0001                   ?_BorraLCD 0001                   ?_ColorRGB 0001  
            _MensajeLCD_Var 17C4             MensajeLCD_Var@a 0013             MensajeLCD_Var@i 0015  
    factorial_function@fact 001E                 ?_RetardoLCD 0001                 RetardoLCD@a 000F  
          ?i2_DireccionaLCD 0001                     ?___lmul 000E                     ?___wmul 000E  
            ___lmul@product 0016                     ?_strlen 000E      __end_of_MensajeLCD_Var 1816  
                ??i2_strlen 0003                ??i2_BorraLCD 0005                  ??_BorraLCD 0012  
                ??_ColorRGB 000E    __end_ofi2_MensajeLCD_Var 1868                ?_HabilitaLCD 0001  
              _ConfiguraLCD 19E6                     __Hparam 0000                     __Lparam 0000  
                   ___aldiv 1212                     ___almod 13A8                     ___lwdiv 1772  
                   ___lwmod 18F4                __psmallconst 0800          __end_ofi2_BorraLCD 1A7E  
       factorial_function@a 001A                     __pcinit 1936                     __ramtop 0800  
                   __ptext0 0866                     __ptext1 15F8                     __ptext2 12DE  
                   __ptext3 1454                     __ptext4 1A56                     __ptext5 0EBC  
                   __ptext6 19C0                     __ptext7 18F4                     __ptext8 1772  
                   __ptext9 1670            ___aldiv@dividend 000E             ?_MensajeLCD_Var 0013  
            __pintcode_body 14F0        end_of_initialization 1962               __Lmediumconst 0000  
                   int_func 14F0                _EscribeLCD_c 19FE            ___aldiv@quotient 0018  
                   postdec1 000FE5                     postinc0 000FEE                     strlen@s 000E  
              ?_LeerTeclado 0001             i2EscribeLCD_c@a 0005               ?i2_RetardoLCD 0001  
        _factorial_function 15F8              __end_of___lmul 16C6              __end_of___wmul 19E6  
             __pidataCOMRAM 1A9A         ?_factorial_function 001A       __end_of_InicializaLCD 14F0  
                 _EnviaDato 1868              __end_of_strlen 1998         start_initialization 1936  
               __end_of_ISR 157E        ??_factorial_function 001E                   i2strlen@s 0001  
            ??i2_RetardoLCD 0001                ??_RetardoLCD 000E                    ??___lmul 0016  
                  ??___wmul 0012                    ??_strlen 0010                  ?_EnviaDato 0001  
               __pbssCOMRAM 0028          __end_of_RetardoLCD 171C               __pcstackBANK0 0060  
         ?i2_MensajeLCD_Var 0006          ??i2_MensajeLCD_Var 0007               _DireccionaLCD 1A14  
            i2_EscribeLCD_c 1A2A            ___lwdiv@dividend 0014                   _factorial 0046  
                 __pintcode 0008                    ?___aldiv 000E                    ?___almod 000E  
                  ?___lwdiv 0014                    ?___lwmod 000E            ___almod@dividend 000E  
          ??_MensajeLCD_Var 0014                 __smallconst 0800            ___lwdiv@quotient 0019  
           ___aldiv@divisor 0012             ___aldiv@counter 0016              ___wmul@product 0012  
             i2_HabilitaLCD 1A8C              ?_DireccionaLCD 0001      __end_ofi2_EscribeLCD_c 1A40  
                  i2u340_45 1530                    i2u343_40 1552                    i2u344_45 1554  
                  i2u339_40 152E                    i2u490_47 174E                    i2u491_47 1A90  
                  i2u486_47 1726                    i2u487_47 1732                    i2u488_47 173A  
                  i2u489_47 1744      Imprimir_Resultado@flag 0060           ___wmul@multiplier 000E  
             ??i2_EnviaDato 0003        __end_ofi2_RetardoLCD 1772                 ??_EnviaDato 0010  
                  i2_strlen 1998                    _BorraLCD 1A56                    _ColorRGB 157E  
         ___lmul@multiplier 000E                   copy_data0 194A              ?i2_HabilitaLCD 0001  
           ?i2_EscribeLCD_c 0001                    __Hrparam 0000                    __Lrparam 0000  
              i2EnviaDato@a 0004               ConfiguraLCD@a 000E                    _main$157 0026  
                  _main$158 0027           ??i2_DireccionaLCD 0005             ___lwdiv@divisor 0016  
           ___lwdiv@counter 0018                    __ptext10 13A8                    __ptext11 1212  
                  __ptext20 157E                    __ptext12 17C4                    __ptext13 1970  
                  __ptext22 1816                    __ptext14 19FE                    __ptext23 1998  
                  __ptext15 1A14                    __ptext24 1A2A                    __ptext16 1868  
                  __ptext25 1A40                    __ptext17 16C6                    __ptext26 1A6A  
                  __ptext18 1A7E                    __ptext27 18AE                    __ptext19 19E6  
                  __ptext28 171C                    __ptext29 1A8C         __end_ofi2_EnviaDato 18F4  
           ___almod@divisor 0012                    _contador 003C             ___almod@counter 0016  
           ??_DireccionaLCD 0012                    _interfaz 0050                    _partdecl 0030  
                  isa$xinst 000000                    _potencia 0047                    int$flags 0051  
__end_of_Imprimir_Resultado 1212             ??i2_HabilitaLCD 0001                    intlevel2 0000  
             ??_HabilitaLCD 000E            ___lwmod@dividend 000E               ?_ConfiguraLCD 0001  
             i2RetardoLCD@a 0002                 i2_EnviaDato 18AE             ___lwmod@divisor 0010  
                  strlen@cp 0010             ___lwmod@counter 0012                ___aldiv@sign 0017  
       Imprimir_Resultado@i 0063         Imprimir_Resultado@j 0065         Imprimir_Resultado@k 0061  
       Imprimir_Resultado@r 001C                  i2_BorraLCD 1A6A                ___almod@sign 0017  
            ??_ConfiguraLCD 000E  Imprimir_Resultado@potencia 0067               ?_EscribeLCD_c 0001  
               _verificador 0038           i2MensajeLCD_Var@a 0006           i2MensajeLCD_Var@i 0008  
              i2_RetardoLCD 171C         __end_of_HabilitaLCD 1A8C  
