

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 18 10:47:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Version 2.40
    71                           ; Generated 04/07/2022 GMT
    72                           ; 
    73                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4550 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataCOMRAM
   107   00295B                     __pidataCOMRAM:
   108                           	callstack 0
   109                           
   110                           ;initializer for _interfaz
   111   00295B  08                 	db	8
   112                           
   113                           	psect	idataBANK0
   114   002958                     __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for _n2c
   118   002958  20                 	db	32
   119                           
   120                           ;initializer for _n1c
   121   002959  20                 	db	32
   122                           
   123                           ;initializer for _op
   124   00295A  20                 	db	32
   125                           
   126                           	psect	smallconst
   127   000800                     __psmallconst:
   128                           	callstack 0
   129   000800  00                 	db	0
   130   000801                     exp@coeff:
   131                           	callstack 0
   132   000801  00                 	db	0
   133   000802  80                 	db	128
   134   000803  3F                 	db	63
   135   000804  72                 	db	114
   136   000805  31                 	db	49
   137   000806  3F                 	db	63
   138   000807  FE                 	db	254
   139   000808  75                 	db	117
   140   000809  3E                 	db	62
   141   00080A  58                 	db	88
   142   00080B  63                 	db	99
   143   00080C  3D                 	db	61
   144   00080D  95                 	db	149
   145   00080E  1D                 	db	29
   146   00080F  3C                 	db	60
   147   000810  C5                 	db	197
   148   000811  AE                 	db	174
   149   000812  3A                 	db	58
   150   000813  79                 	db	121
   151   000814  21                 	db	33
   152   000815  39                 	db	57
   153   000816  94                 	db	148
   154   000817  80                 	db	128
   155   000818  37                 	db	55
   156   000819  93                 	db	147
   157   00081A  A7                 	db	167
   158   00081B  35                 	db	53
   159   00081C  56                 	db	86
   160   00081D  15                 	db	21
   161   00081E  34                 	db	52
   162   00081F                     __end_ofexp@coeff:
   163                           	callstack 0
   164   00081F                     log@coeff:
   165                           	callstack 0
   166   00081F  00                 	db	0
   167   000820  00                 	db	0
   168   000821  00                 	db	0
   169   000822  00                 	db	0
   170   000823  80                 	db	128
   171   000824  3F                 	db	63
   172   000825  F0                 	db	240
   173   000826  FF                 	db	255
   174   000827  BE                 	db	190
   175   000828  E2                 	db	226
   176   000829  A9                 	db	169
   177   00082A  3E                 	db	62
   178   00082B  83                 	db	131
   179   00082C  76                 	db	118
   180   00082D  BE                 	db	190
   181   00082E  AE                 	db	174
   182   00082F  2B                 	db	43
   183   000830  3E                 	db	62
   184   000831  3C                 	db	60
   185   000832  C3                 	db	195
   186   000833  BD                 	db	189
   187   000834  D2                 	db	210
   188   000835  13                 	db	19
   189   000836  3D                 	db	61
   190   000837  78                 	db	120
   191   000838  D3                 	db	211
   192   000839  BB                 	db	187
   193   00083A                     __end_oflog@coeff:
   194                           	callstack 0
   195   000000                     _LATC	set	3979
   196   000000                     _TRISC	set	3988
   197   000000                     _LATC7	set	31839
   198   000000                     _LATE2	set	31850
   199   000000                     _RB7	set	31759
   200   000000                     _RB6	set	31758
   201   000000                     _RB5	set	31757
   202   000000                     _POR	set	32385
   203   000000                     _PD	set	32386
   204   000000                     _TMR0ON	set	32431
   205   000000                     _GIE	set	32663
   206   000000                     _TMR0IE	set	32661
   207   000000                     _LATE1	set	31849
   208   000000                     _LATB	set	3978
   209   000000                     _LATD	set	3980
   210   000000                     _RB4	set	31756
   211   000000                     _TRISB	set	3987
   212   000000                     _TRISD	set	3989
   213   000000                     _ADCON1	set	4033
   214   000000                     _LATE0	set	31848
   215   000000                     _OSCCON	set	4051
   216   000000                     _T0CON	set	4053
   217   000000                     _TO	set	32387
   218   000000                     _RBPU	set	32655
   219   000000                     _TRISE	set	3990
   220   000000                     _TMR0IF	set	32658
   221   000000                     _TMR0	set	4054
   222   00083A                     STR_7:
   223   00083A  4D                 	db	77	;'M'
   224   00083B  6F                 	db	111	;'o'
   225   00083C  64                 	db	100	;'d'
   226   00083D  6F                 	db	111	;'o'
   227   00083E  20                 	db	32
   228   00083F  46                 	db	70	;'F'
   229   000840  61                 	db	97	;'a'
   230   000841  63                 	db	99	;'c'
   231   000842  74                 	db	116	;'t'
   232   000843  6F                 	db	111	;'o'
   233   000844  72                 	db	114	;'r'
   234   000845  69                 	db	105	;'i'
   235   000846  61                 	db	97	;'a'
   236   000847  6C                 	db	108	;'l'
   237   000848  00                 	db	0
   238   000849                     STR_3:
   239   000849  4D                 	db	77	;'M'
   240   00084A  6F                 	db	111	;'o'
   241   00084B  64                 	db	100	;'d'
   242   00084C  6F                 	db	111	;'o'
   243   00084D  20                 	db	32
   244   00084E  50                 	db	80	;'P'
   245   00084F  6F                 	db	111	;'o'
   246   000850  74                 	db	116	;'t'
   247   000851  65                 	db	101	;'e'
   248   000852  6E                 	db	110	;'n'
   249   000853  63                 	db	99	;'c'
   250   000854  69                 	db	105	;'i'
   251   000855  61                 	db	97	;'a'
   252   000856  00                 	db	0
   253   000857                     STR_15:
   254   000857  49                 	db	73	;'I'
   255   000858  6E                 	db	110	;'n'
   256   000859  64                 	db	100	;'d'
   257   00085A  65                 	db	101	;'e'
   258   00085B  74                 	db	116	;'t'
   259   00085C  65                 	db	101	;'e'
   260   00085D  72                 	db	114	;'r'
   261   00085E  6D                 	db	109	;'m'
   262   00085F  69                 	db	105	;'i'
   263   000860  6E                 	db	110	;'n'
   264   000861  61                 	db	97	;'a'
   265   000862  64                 	db	100	;'d'
   266   000863  6F                 	db	111	;'o'
   267   000864  00                 	db	0
   268   000865                     STR_11:
   269   000865  4C                 	db	76	;'L'
   270   000866  56                 	db	86	;'V'
   271   000867  50                 	db	80	;'P'
   272   000868  20                 	db	32
   273   000869  41                 	db	65	;'A'
   274   00086A  63                 	db	99	;'c'
   275   00086B  74                 	db	116	;'t'
   276   00086C  69                 	db	105	;'i'
   277   00086D  76                 	db	118	;'v'
   278   00086E  61                 	db	97	;'a'
   279   00086F  64                 	db	100	;'d'
   280   000870  6F                 	db	111	;'o'
   281   000871  00                 	db	0
   282   000872                     STR_13:
   283   000872  64                 	db	100	;'d'
   284   000873  65                 	db	101	;'e'
   285   000874  20                 	db	32
   286   000875  63                 	db	99	;'c'
   287   000876  61                 	db	97	;'a'
   288   000877  6C                 	db	108	;'l'
   289   000878  63                 	db	99	;'c'
   290   000879  75                 	db	117	;'u'
   291   00087A  6C                 	db	108	;'l'
   292   00087B  61                 	db	97	;'a'
   293   00087C  72                 	db	114	;'r'
   294   00087D  00                 	db	0
   295   00087E                     STR_9:
   296   00087E  4D                 	db	77	;'M'
   297   00087F  6F                 	db	111	;'o'
   298   000880  64                 	db	100	;'d'
   299   000881  6F                 	db	111	;'o'
   300   000882  20                 	db	32
   301   000883  52                 	db	82	;'R'
   302   000884  65                 	db	101	;'e'
   303   000885  73                 	db	115	;'s'
   304   000886  74                 	db	116	;'t'
   305   000887  61                 	db	97	;'a'
   306   000888  00                 	db	0
   307   000889                     STR_5:
   308   000889  4D                 	db	77	;'M'
   309   00088A  6F                 	db	111	;'o'
   310   00088B  64                 	db	100	;'d'
   311   00088C  6F                 	db	111	;'o'
   312   00088D  20                 	db	32
   313   00088E  53                 	db	83	;'S'
   314   00088F  75                 	db	117	;'u'
   315   000890  6D                 	db	109	;'m'
   316   000891  61                 	db	97	;'a'
   317   000892  00                 	db	0
   318   000893                     STR_12:
   319   000893  49                 	db	73	;'I'
   320   000894  6D                 	db	109	;'m'
   321   000895  70                 	db	112	;'p'
   322   000896  6F                 	db	111	;'o'
   323   000897  73                 	db	115	;'s'
   324   000898  69                 	db	105	;'i'
   325   000899  62                 	db	98	;'b'
   326   00089A  6C                 	db	108	;'l'
   327   00089B  65                 	db	101	;'e'
   328   00089C  00                 	db	0
   329   00089D                     STR_14:
   330   00089D  49                 	db	73	;'I'
   331   00089E  6E                 	db	110	;'n'
   332   00089F  66                 	db	102	;'f'
   333   0008A0  69                 	db	105	;'i'
   334   0008A1  6E                 	db	110	;'n'
   335   0008A2  69                 	db	105	;'i'
   336   0008A3  74                 	db	116	;'t'
   337   0008A4  6F                 	db	111	;'o'
   338   0008A5  00                 	db	0
   339   0008A6                     STR_1:
   340   0008A6  45                 	db	69	;'E'
   341   0008A7  6E                 	db	110	;'n'
   342   0008A8  65                 	db	101	;'e'
   343   0008A9  72                 	db	114	;'r'
   344   0008AA  67                 	db	103	;'g'
   345   0008AB  69                 	db	105	;'i'
   346   0008AC  61                 	db	97	;'a'
   347   0008AD  00                 	db	0
   348   0008AE                     STR_2:
   349   0008AE  4D                 	db	77	;'M'
   350   0008AF  43                 	db	67	;'C'
   351   0008B0  4C                 	db	76	;'L'
   352   0008B1  52                 	db	82	;'R'
   353   0008B2  00                 	db	0
   354   0008B3  00                 	db	0	; dummy byte at the end
   355   000000                     
   356                           ; #config settings
   357                           
   358                           	psect	cinit
   359   002476                     __pcinit:
   360                           	callstack 0
   361   002476                     start_initialization:
   362                           	callstack 0
   363   002476                     __initialization:
   364                           	callstack 0
   365                           
   366                           ; Initialize objects allocated to BANK0 (3 bytes)
   367                           ; load TBLPTR registers with __pidataBANK0
   368   002476  0E58               	movlw	low __pidataBANK0
   369   002478  6EF6               	movwf	tblptrl,c
   370   00247A  0E29               	movlw	high __pidataBANK0
   371   00247C  6EF7               	movwf	tblptrh,c
   372   00247E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   373   002480  6EF8               	movwf	tblptru,c
   374   002482  0009               	tblrd		*+	;fetch initializer
   375   002484  CFF5 F0BB          	movff	tablat,__pdataBANK0
   376   002488  0009               	tblrd		*+	;fetch initializer
   377   00248A  CFF5 F0BC          	movff	tablat,__pdataBANK0+1
   378   00248E  0009               	tblrd		*+	;fetch initializer
   379   002490  CFF5 F0BD          	movff	tablat,__pdataBANK0+2
   380                           
   381                           ; Initialize objects allocated to COMRAM (1 bytes)
   382                           ; load TBLPTR registers with __pidataCOMRAM
   383   002494  0E5B               	movlw	low __pidataCOMRAM
   384   002496  6EF6               	movwf	tblptrl,c
   385   002498  0E29               	movlw	high __pidataCOMRAM
   386   00249A  6EF7               	movwf	tblptrh,c
   387   00249C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   388   00249E  6EF8               	movwf	tblptru,c
   389   0024A0  0009               	tblrd		*+	;fetch initializer
   390   0024A2  CFF5 F050          	movff	tablat,__pdataCOMRAM
   391                           
   392                           ; Clear objects allocated to BANK0 (27 bytes)
   393   0024A6  EE00  F0A0         	lfsr	0,__pbssBANK0
   394   0024AA  0E1B               	movlw	27
   395   0024AC                     clear_0:
   396   0024AC  6AEE               	clrf	postinc0,c
   397   0024AE  06E8               	decf	wreg,f,c
   398   0024B0  E1FD               	bnz	clear_0
   399                           
   400                           ; Clear objects allocated to COMRAM (12 bytes)
   401   0024B2  EE00  F044         	lfsr	0,__pbssCOMRAM
   402   0024B6  0E0C               	movlw	12
   403   0024B8                     clear_1:
   404   0024B8  6AEE               	clrf	postinc0,c
   405   0024BA  06E8               	decf	wreg,f,c
   406   0024BC  E1FD               	bnz	clear_1
   407   0024BE                     end_of_initialization:
   408                           	callstack 0
   409   0024BE                     __end_of__initialization:
   410                           	callstack 0
   411   0024BE  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   412   0024C0  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   413   0024C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   414   0024C4  6EF8               	movwf	tblptru,c
   415   0024C6  0100               	movlb	0
   416   0024C8  EF5A  F004         	goto	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMRAM
   419   000044                     __pbssCOMRAM:
   420                           	callstack 0
   421   000044                     _b:
   422                           	callstack 0
   423   000044                     	ds	2
   424   000046                     _a:
   425                           	callstack 0
   426   000046                     	ds	2
   427   000048                     _verificador:
   428                           	callstack 0
   429   000048                     	ds	2
   430   00004A                     _contador_digitos:
   431                           	callstack 0
   432   00004A                     	ds	2
   433   00004C                     _contador:
   434                           	callstack 0
   435   00004C                     	ds	2
   436   00004E                     _color:
   437                           	callstack 0
   438   00004E                     	ds	2
   439                           
   440                           	psect	dataCOMRAM
   441   000050                     __pdataCOMRAM:
   442                           	callstack 0
   443   000050                     _interfaz:
   444                           	callstack 0
   445   000050                     	ds	1
   446                           
   447                           	psect	bssBANK0
   448   0000A0                     __pbssBANK0:
   449                           	callstack 0
   450   0000A0                     _res:
   451                           	callstack 0
   452   0000A0                     	ds	4
   453   0000A4                     _r:
   454                           	callstack 0
   455   0000A4                     	ds	4
   456   0000A8                     _partdecl:
   457                           	callstack 0
   458   0000A8                     	ds	4
   459   0000AC                     _errno:
   460                           	callstack 0
   461   0000AC                     	ds	2
   462   0000AE                     _i:
   463                           	callstack 0
   464   0000AE                     	ds	2
   465   0000B0                     _n2:
   466                           	callstack 0
   467   0000B0                     	ds	2
   468   0000B2                     _n1:
   469                           	callstack 0
   470   0000B2                     	ds	2
   471   0000B4                     _factorial:
   472                           	callstack 0
   473   0000B4                     	ds	1
   474   0000B5                     _potencia:
   475                           	callstack 0
   476   0000B5                     	ds	1
   477   0000B6                     _Tecla:
   478                           	callstack 0
   479   0000B6                     	ds	1
   480   0000B7                     _m:
   481                           	callstack 0
   482   0000B7                     	ds	4
   483                           
   484                           	psect	dataBANK0
   485   0000BB                     __pdataBANK0:
   486                           	callstack 0
   487   0000BB                     _n2c:
   488                           	callstack 0
   489   0000BB                     	ds	1
   490   0000BC                     _n1c:
   491                           	callstack 0
   492   0000BC                     	ds	1
   493   0000BD                     _op:
   494                           	callstack 0
   495   0000BD                     	ds	1
   496                           
   497                           	psect	cstackBANK0
   498   000060                     __pcstackBANK0:
   499                           	callstack 0
   500   000060                     ??_ldexp:
   501                           
   502                           ; 1 bytes @ 0x0
   503   000060                     	ds	2
   504   000062                     ?_exp:
   505                           	callstack 0
   506   000062                     exp@x:
   507                           	callstack 0
   508                           
   509                           ; 3 bytes @ 0x2
   510   000062                     	ds	3
   511   000065                     _exp$909:
   512                           	callstack 0
   513                           
   514                           ; 3 bytes @ 0x5
   515   000065                     	ds	3
   516   000068                     exp@exponent:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x8
   520   000068                     	ds	2
   521   00006A                     exp@sign:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0xA
   525   00006A                     	ds	1
   526   00006B                     ?_pow:
   527                           	callstack 0
   528   00006B                     pow@x:
   529                           	callstack 0
   530                           
   531                           ; 3 bytes @ 0xB
   532   00006B                     	ds	3
   533   00006E                     pow@y:
   534                           	callstack 0
   535                           
   536                           ; 3 bytes @ 0xE
   537   00006E                     	ds	3
   538   000071                     _pow$907:
   539                           	callstack 0
   540                           
   541                           ; 3 bytes @ 0x11
   542   000071                     	ds	3
   543   000074                     _pow$908:
   544                           	callstack 0
   545                           
   546                           ; 3 bytes @ 0x14
   547   000074                     	ds	3
   548   000077                     pow@sign:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x17
   552   000077                     	ds	1
   553   000078                     pow@yi:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x18
   557   000078                     	ds	4
   558   00007C                     ?___aldiv:
   559                           	callstack 0
   560   00007C                     ?___almod:
   561                           	callstack 0
   562   00007C                     ___aldiv@dividend:
   563                           	callstack 0
   564   00007C                     ___almod@dividend:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x1C
   568   00007C                     	ds	4
   569   000080                     ___aldiv@divisor:
   570                           	callstack 0
   571   000080                     ___almod@divisor:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x20
   575   000080                     	ds	4
   576   000084                     ___aldiv@counter:
   577                           	callstack 0
   578   000084                     ___almod@counter:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x24
   582   000084                     	ds	1
   583   000085                     ___aldiv@sign:
   584                           	callstack 0
   585   000085                     ___almod@sign:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x25
   589   000085                     	ds	1
   590   000086                     ___aldiv@quotient:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x26
   594   000086                     	ds	4
   595   00008A                     Imprimir_Resultado@r:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x2A
   599   00008A                     	ds	4
   600   00008E                     ??_Imprimir_Resultado:
   601                           
   602                           ; 1 bytes @ 0x2E
   603   00008E                     	ds	4
   604   000092                     Imprimir_Resultado@i:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x32
   608   000092                     	ds	2
   609   000094                     _Imprimir_Resultado$905:
   610                           	callstack 0
   611                           
   612                           ; 3 bytes @ 0x34
   613   000094                     	ds	3
   614   000097                     _Imprimir_Resultado$906:
   615                           	callstack 0
   616                           
   617                           ; 3 bytes @ 0x37
   618   000097                     	ds	3
   619   00009A                     Imprimir_Resultado@j:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x3A
   623   00009A                     	ds	2
   624   00009C                     ??_main:
   625                           
   626                           ; 1 bytes @ 0x3C
   627   00009C                     	ds	2
   628   00009E                     _main$163:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x3E
   632   00009E                     	ds	1
   633   00009F                     _main$164:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x3F
   637   00009F                     	ds	1
   638                           
   639                           	psect	cstackCOMRAM
   640   000001                     __pcstackCOMRAM:
   641                           	callstack 0
   642   000001                     ??i2_RetardoLCD:
   643   000001                     ?i2_strlen:
   644                           	callstack 0
   645   000001                     i2strlen@s:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x0
   649   000001                     	ds	1
   650   000002                     i2RetardoLCD@a:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x1
   654   000002                     	ds	1
   655   000003                     ??i2_EnviaDato:
   656   000003                     i2strlen@cp:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x2
   660   000003                     	ds	1
   661   000004                     i2EnviaDato@a:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x3
   665   000004                     	ds	1
   666   000005                     i2EscribeLCD_c@a:
   667                           	callstack 0
   668   000005                     i2DireccionaLCD@a:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x4
   672   000005                     	ds	1
   673   000006                     i2MensajeLCD_Var@a:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x5
   677   000006                     	ds	1
   678   000007                     ??i2_MensajeLCD_Var:
   679                           
   680                           ; 1 bytes @ 0x6
   681   000007                     	ds	1
   682   000008                     i2MensajeLCD_Var@i:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x7
   686   000008                     	ds	2
   687   00000A                     ??_ISR:
   688                           
   689                           ; 1 bytes @ 0x9
   690   00000A                     	ds	4
   691   00000E                     ??_RetardoLCD:
   692   00000E                     ??_ColorRGB:
   693   00000E                     ?_strlen:
   694                           	callstack 0
   695   00000E                     ?___wmul:
   696                           	callstack 0
   697   00000E                     ?___lwmod:
   698                           	callstack 0
   699   00000E                     ?___ftpack:
   700                           	callstack 0
   701   00000E                     ?_frexp:
   702                           	callstack 0
   703   00000E                     ?___ftneg:
   704                           	callstack 0
   705   00000E                     ?___lmul:
   706                           	callstack 0
   707   00000E                     ConfiguraLCD@a:
   708                           	callstack 0
   709   00000E                     strlen@s:
   710                           	callstack 0
   711   00000E                     ___wmul@multiplier:
   712                           	callstack 0
   713   00000E                     ___lwmod@dividend:
   714                           	callstack 0
   715   00000E                     ___ftpack@arg:
   716                           	callstack 0
   717   00000E                     ___ftge@ff1:
   718                           	callstack 0
   719   00000E                     ___ftneg@f1:
   720                           	callstack 0
   721   00000E                     frexp@value:
   722                           	callstack 0
   723   00000E                     ___lmul@multiplier:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0xD
   727   00000E                     	ds	1
   728   00000F                     RetardoLCD@a:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0xE
   732   00000F                     	ds	1
   733   000010                     ??_EnviaDato:
   734   000010                     strlen@cp:
   735                           	callstack 0
   736   000010                     ___wmul@multiplicand:
   737                           	callstack 0
   738   000010                     ___lwmod@divisor:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0xF
   742   000010                     	ds	1
   743   000011                     EnviaDato@a:
   744                           	callstack 0
   745   000011                     ___ftpack@exp:
   746                           	callstack 0
   747   000011                     frexp@eptr:
   748                           	callstack 0
   749   000011                     ___ftge@ff2:
   750                           	callstack 0
   751                           
   752                           ; 3 bytes @ 0x10
   753   000011                     	ds	1
   754   000012                     ??_frexp:
   755   000012                     EscribeLCD_c@a:
   756                           	callstack 0
   757   000012                     DireccionaLCD@a:
   758                           	callstack 0
   759   000012                     ___ftpack@sign:
   760                           	callstack 0
   761   000012                     ___lwmod@counter:
   762                           	callstack 0
   763   000012                     ___wmul@product:
   764                           	callstack 0
   765   000012                     ___lmul@multiplicand:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x11
   769   000012                     	ds	1
   770   000013                     ??___ftpack:
   771   000013                     MensajeLCD_Var@a:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x12
   775   000013                     	ds	1
   776   000014                     ??_MensajeLCD_Var:
   777   000014                     ??___ftge:
   778   000014                     ?___lwdiv:
   779                           	callstack 0
   780   000014                     ?_factorial_function:
   781                           	callstack 0
   782   000014                     factorial_function@a:
   783                           	callstack 0
   784   000014                     ___lwdiv@dividend:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x13
   788   000014                     	ds	1
   789   000015                     MensajeLCD_Var@i:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x14
   793   000015                     	ds	1
   794   000016                     ?___ftdiv:
   795                           	callstack 0
   796   000016                     ?___awtoft:
   797                           	callstack 0
   798   000016                     ?___lltoft:
   799                           	callstack 0
   800   000016                     ___awtoft@c:
   801                           	callstack 0
   802   000016                     ___lwdiv@divisor:
   803                           	callstack 0
   804   000016                     ___ftdiv@f1:
   805                           	callstack 0
   806   000016                     ___lmul@product:
   807                           	callstack 0
   808   000016                     ___lltoft@c:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x15
   812   000016                     	ds	2
   813   000018                     factorial_function@fact:
   814                           	callstack 0
   815   000018                     ___lwdiv@quotient:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x17
   819   000018                     	ds	1
   820   000019                     ___awtoft@sign:
   821                           	callstack 0
   822   000019                     ___ftdiv@f2:
   823                           	callstack 0
   824                           
   825                           ; 3 bytes @ 0x18
   826   000019                     	ds	1
   827   00001A                     ??___lltoft:
   828   00001A                     ?___ftmul:
   829                           	callstack 0
   830   00001A                     ?___fttol:
   831                           	callstack 0
   832   00001A                     ___lwdiv@counter:
   833                           	callstack 0
   834   00001A                     ___ftmul@f1:
   835                           	callstack 0
   836   00001A                     ___fttol@f1:
   837                           	callstack 0
   838                           
   839                           ; 3 bytes @ 0x19
   840   00001A                     	ds	2
   841   00001C                     ??___ftdiv:
   842                           
   843                           ; 1 bytes @ 0x1B
   844   00001C                     	ds	1
   845   00001D                     ___ftmul@f2:
   846                           	callstack 0
   847                           
   848                           ; 3 bytes @ 0x1C
   849   00001D                     	ds	1
   850   00001E                     ??___fttol:
   851   00001E                     ___lltoft@exp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x1D
   855   00001E                     	ds	1
   856   00001F                     ___ftdiv@cntr:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x1E
   860   00001F                     	ds	1
   861   000020                     ??___ftmul:
   862   000020                     ___ftdiv@f3:
   863                           	callstack 0
   864                           
   865                           ; 3 bytes @ 0x1F
   866   000020                     	ds	3
   867   000023                     ___ftdiv@exp:
   868                           	callstack 0
   869   000023                     ___ftmul@exp:
   870                           	callstack 0
   871   000023                     ___fttol@sign1:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x22
   875   000023                     	ds	1
   876   000024                     ___ftdiv@sign:
   877                           	callstack 0
   878   000024                     ___ftmul@f3_as_product:
   879                           	callstack 0
   880   000024                     ___fttol@lval:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x23
   884   000024                     	ds	3
   885   000027                     ___ftmul@cntr:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x26
   889   000027                     	ds	1
   890   000028                     ___ftmul@sign:
   891                           	callstack 0
   892   000028                     ___fttol@exp1:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x27
   896   000028                     	ds	1
   897   000029                     ?___ftadd:
   898                           	callstack 0
   899   000029                     ?___altoft:
   900                           	callstack 0
   901   000029                     ___ftadd@f1:
   902                           	callstack 0
   903   000029                     ___altoft@c:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x28
   907   000029                     	ds	3
   908   00002C                     ___ftadd@f2:
   909                           	callstack 0
   910                           
   911                           ; 3 bytes @ 0x2B
   912   00002C                     	ds	1
   913   00002D                     ??___altoft:
   914                           
   915                           ; 1 bytes @ 0x2C
   916   00002D                     	ds	2
   917   00002F                     ??___ftadd:
   918                           
   919                           ; 1 bytes @ 0x2E
   920   00002F                     	ds	2
   921   000031                     ___altoft@exp:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x30
   925   000031                     	ds	1
   926   000032                     ___altoft@sign:
   927                           	callstack 0
   928   000032                     ___ftadd@sign:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x31
   932   000032                     	ds	1
   933   000033                     ___ftadd@exp2:
   934                           	callstack 0
   935                           
   936                           ; 1 bytes @ 0x32
   937   000033                     	ds	1
   938   000034                     ___ftadd@exp1:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x33
   942   000034                     	ds	1
   943   000035                     ?___ftsub:
   944                           	callstack 0
   945   000035                     ?_floor:
   946                           	callstack 0
   947   000035                     ?_eval_poly:
   948                           	callstack 0
   949   000035                     ___ftsub@f1:
   950                           	callstack 0
   951   000035                     eval_poly@x:
   952                           	callstack 0
   953   000035                     floor@x:
   954                           	callstack 0
   955                           
   956                           ; 3 bytes @ 0x34
   957   000035                     	ds	3
   958   000038                     eval_poly@d:
   959                           	callstack 0
   960   000038                     ___ftsub@f2:
   961                           	callstack 0
   962   000038                     floor@i:
   963                           	callstack 0
   964                           
   965                           ; 3 bytes @ 0x37
   966   000038                     	ds	1
   967   000039                     eval_poly@n:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x38
   971   000039                     	ds	2
   972   00003B                     ??_eval_poly:
   973   00003B                     floor@expon:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x3A
   977   00003B                     	ds	1
   978   00003C                     eval_poly@res:
   979                           	callstack 0
   980                           
   981                           ; 3 bytes @ 0x3B
   982   00003C                     	ds	3
   983   00003F                     ?_log:
   984                           	callstack 0
   985   00003F                     ?_ldexp:
   986                           	callstack 0
   987   00003F                     ldexp@value:
   988                           	callstack 0
   989   00003F                     log@x:
   990                           	callstack 0
   991                           
   992                           ; 3 bytes @ 0x3E
   993   00003F                     	ds	3
   994   000042                     ldexp@newexp:
   995                           	callstack 0
   996   000042                     log@exponent:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x41
  1000   000042                     	ds	2
  1001   000044                     
  1002                           ; 1 bytes @ 0x43
  1003 ;;
  1004 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1005 ;;
  1006 ;; *************** function _main *****************
  1007 ;; Defined at:
  1008 ;;		line 37 in file "Lab4.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1022 ;;      Params:         0       0       0       0       0       0       0       0       0
  1023 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1024 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1025 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1026 ;;Total ram usage:        4 bytes
  1027 ;; Hardware stack levels required when called: 11
  1028 ;; This function calls:
  1029 ;;		_BorraLCD
  1030 ;;		_ColorRGB
  1031 ;;		_ConfiguraLCD
  1032 ;;		_DireccionaLCD
  1033 ;;		_EscribeLCD_c
  1034 ;;		_Imprimir_Resultado
  1035 ;;		_InicializaLCD
  1036 ;;		_LeerTeclado
  1037 ;;		_MensajeLCD_Var
  1038 ;;		___lmul
  1039 ;;		___lwdiv
  1040 ;;		___wmul
  1041 ;;		_factorial_function
  1042 ;; This function is called by:
  1043 ;;		Startup code after reset
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text0
  1048   0008B4                     __ptext0:
  1049                           	callstack 0
  1050   0008B4                     _main:
  1051                           	callstack 20
  1052                           
  1053                           ;Lab4.c: 38: ADCON1=15;
  1054                           
  1055                           ;incstack = 0
  1056   0008B4  0E0F               	movlw	15
  1057   0008B6  6EC1               	movwf	193,c	;volatile
  1058                           
  1059                           ;Lab4.c: 39: TRISD=0;
  1060   0008B8  0E00               	movlw	0
  1061   0008BA  6E95               	movwf	149,c	;volatile
  1062                           
  1063                           ;Lab4.c: 40: TRISB=0b11110000;
  1064   0008BC  0EF0               	movlw	240
  1065   0008BE  6E93               	movwf	147,c	;volatile
  1066                           
  1067                           ;Lab4.c: 41: TRISE=0;
  1068   0008C0  0E00               	movlw	0
  1069   0008C2  6E96               	movwf	150,c	;volatile
  1070                           
  1071                           ;Lab4.c: 42: TRISC=0;
  1072   0008C4  0E00               	movlw	0
  1073   0008C6  6E94               	movwf	148,c	;volatile
  1074                           
  1075                           ;Lab4.c: 43: RBPU=0;
  1076   0008C8  9EF1               	bcf	4081,7,c	;volatile
  1077                           
  1078                           ;Lab4.c: 44: ConfiguraLCD(4);
  1079   0008CA  0E04               	movlw	4
  1080   0008CC  EC52  F014         	call	_ConfiguraLCD
  1081                           
  1082                           ;Lab4.c: 45: InicializaLCD();
  1083   0008D0  EC56  F010         	call	_InicializaLCD	;wreg free
  1084                           
  1085                           ;Lab4.c: 47: T0CON=0b10000010;
  1086   0008D4  0E82               	movlw	130
  1087   0008D6  6ED5               	movwf	213,c	;volatile
  1088                           
  1089                           ;Lab4.c: 48: TMR0IF=0;
  1090   0008D8  94F2               	bcf	4082,2,c	;volatile
  1091                           
  1092                           ;Lab4.c: 49: TMR0=49911;
  1093   0008DA  0EC2               	movlw	194
  1094   0008DC  6ED7               	movwf	215,c	;volatile
  1095   0008DE  0EF7               	movlw	247
  1096   0008E0  6ED6               	movwf	214,c	;volatile
  1097                           
  1098                           ;Lab4.c: 50: TMR0IE=1;
  1099   0008E2  8AF2               	bsf	4082,5,c	;volatile
  1100                           
  1101                           ;Lab4.c: 51: GIE=1;
  1102   0008E4  8EF2               	bsf	4082,7,c	;volatile
  1103                           
  1104                           ;Lab4.c: 52: TMR0ON=1;
  1105   0008E6  8ED5               	bsf	4053,7,c	;volatile
  1106                           
  1107                           ;Lab4.c: 55: OSCCON = 0b11000100;
  1108   0008E8  0EC4               	movlw	196
  1109   0008EA  6ED3               	movwf	211,c	;volatile
  1110                           
  1111                           ;Lab4.c: 57: BorraLCD();
  1112   0008EC  EC8A  F014         	call	_BorraLCD	;wreg free
  1113                           
  1114                           ;Lab4.c: 58: if(TO == 1 && PD == 1){
  1115   0008F0  B6D0               	btfsc	4048,3,c	;volatile
  1116   0008F2  A4D0               	btfss	4048,2,c	;volatile
  1117   0008F4  D007               	goto	l181
  1118                           
  1119                           ;Lab4.c: 59: BorraLCD();
  1120   0008F6  EC8A  F014         	call	_BorraLCD	;wreg free
  1121                           
  1122                           ;Lab4.c: 60: MensajeLCD_Var("Energia");
  1123   0008FA  0EA6               	movlw	low STR_1
  1124   0008FC  6E13               	movwf	MensajeLCD_Var@a^0,c
  1125   0008FE  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  1126                           
  1127                           ;Lab4.c: 61: }else{
  1128   000902  D008               	goto	l4897
  1129   000904                     l181:
  1130                           
  1131                           ;Lab4.c: 62: if(POR==0){
  1132   000904  B2D0               	btfsc	4048,1,c	;volatile
  1133   000906  D006               	goto	l4897
  1134                           
  1135                           ;Lab4.c: 63: BorraLCD();
  1136   000908  EC8A  F014         	call	_BorraLCD	;wreg free
  1137                           
  1138                           ;Lab4.c: 64: MensajeLCD_Var("MCLR");
  1139   00090C  0EAE               	movlw	low STR_2
  1140   00090E  6E13               	movwf	MensajeLCD_Var@a^0,c
  1141   000910  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  1142   000914                     l4897:
  1143                           
  1144                           ;Lab4.c: 65: };Lab4.c: 66: };Lab4.c: 67: _delay((unsigned long)((2000)*(1000000/4000.0))
      +                          );
  1145   000914  0E03               	movlw	3
  1146   000916  0100               	movlb	0	; () banked
  1147   000918  6F9D               	movwf	(??_main+1)& (0+255),b
  1148   00091A  0E8A               	movlw	138
  1149   00091C  6F9C               	movwf	??_main& (0+255),b
  1150   00091E  0E55               	movlw	85
  1151   000920                     u6967:
  1152   000920  2EE8               	decfsz	wreg,f,c
  1153   000922  D7FE               	bra	u6967
  1154   000924  2F9C               	decfsz	??_main& (0+255),f,b
  1155   000926  D7FC               	bra	u6967
  1156   000928  2F9D               	decfsz	(??_main+1)& (0+255),f,b
  1157   00092A  D7FA               	bra	u6967
  1158   00092C  D000               	nop2	
  1159   00092E                     l4899:
  1160                           
  1161                           ;Lab4.c: 68: BorraLCD();
  1162   00092E  EC8A  F014         	call	_BorraLCD	;wreg free
  1163   000932                     l4901:
  1164                           
  1165                           ;Lab4.c: 70: LATB=0b00000000;
  1166   000932  0E00               	movlw	0
  1167   000934  6E8A               	movwf	138,c	;volatile
  1168                           
  1169                           ;Lab4.c: 71: verificador = 0;
  1170   000936  0E00               	movlw	0
  1171   000938  6E49               	movwf	(_verificador+1)^0,c
  1172   00093A  0E00               	movlw	0
  1173   00093C  6E48               	movwf	_verificador^0,c
  1174                           
  1175                           ;Lab4.c: 72: Tecla = LeerTeclado();
  1176   00093E  EC26  F00E         	call	_LeerTeclado	;wreg free
  1177   000942  0100               	movlb	0	; () banked
  1178   000944  6FB6               	movwf	_Tecla& (0+255),b
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;Lab4.c: 73: ColorRGB();
  1182   000946  EC2E  F011         	call	_ColorRGB	;wreg free
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;Lab4.c: 74: if(Tecla=='C'){
  1186   00094A  0E43               	movlw	67
  1187   00094C  19B6               	xorwf	_Tecla& (0+255),w,b
  1188   00094E  A4D8               	btfss	status,2,c
  1189   000950  D01B               	goto	l4915
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;Lab4.c: 76: op = ' ';
  1193   000952  0E20               	movlw	32
  1194   000954  6FBD               	movwf	_op& (0+255),b
  1195                           
  1196                           ;Lab4.c: 77: n1c = ' ';
  1197   000956  0E20               	movlw	32
  1198   000958  6FBC               	movwf	_n1c& (0+255),b
  1199                           
  1200                           ;Lab4.c: 78: n2c = ' ';
  1201   00095A  0E20               	movlw	32
  1202   00095C  6FBB               	movwf	_n2c& (0+255),b
  1203                           
  1204                           ;Lab4.c: 79: n1 = 0;
  1205   00095E  0E00               	movlw	0
  1206   000960  6FB3               	movwf	(_n1+1)& (0+255),b
  1207   000962  0E00               	movlw	0
  1208   000964  6FB2               	movwf	_n1& (0+255),b
  1209                           
  1210                           ;Lab4.c: 80: n2 = 0;
  1211   000966  0E00               	movlw	0
  1212   000968  6FB1               	movwf	(_n2+1)& (0+255),b
  1213   00096A  0E00               	movlw	0
  1214   00096C  6FB0               	movwf	_n2& (0+255),b
  1215                           
  1216                           ;Lab4.c: 81: i = 0;
  1217   00096E  0E00               	movlw	0
  1218   000970  6FAF               	movwf	(_i+1)& (0+255),b
  1219   000972  0E00               	movlw	0
  1220   000974  6FAE               	movwf	_i& (0+255),b
  1221                           
  1222                           ;Lab4.c: 82: partdecl = 0;
  1223   000976  0E00               	movlw	0
  1224   000978  6FA8               	movwf	_partdecl& (0+255),b
  1225   00097A  0E00               	movlw	0
  1226   00097C  6FA9               	movwf	(_partdecl+1)& (0+255),b
  1227   00097E  0E00               	movlw	0
  1228   000980  6FAA               	movwf	(_partdecl+2)& (0+255),b
  1229   000982  0E00               	movlw	0
  1230   000984  6FAB               	movwf	(_partdecl+3)& (0+255),b
  1231   000986  D7D3               	goto	l4899
  1232   000988                     l4915:
  1233                           
  1234                           ; BSR set to: 0
  1235   000988  0E20               	movlw	32
  1236   00098A  19BD               	xorwf	_op& (0+255),w,b
  1237   00098C  A4D8               	btfss	status,2,c
  1238   00098E  D03E               	goto	l4951
  1239                           
  1240                           ; BSR set to: 0
  1241   000990  0E2B               	movlw	43
  1242   000992  19B6               	xorwf	_Tecla& (0+255),w,b
  1243   000994  B4D8               	btfsc	status,2,c
  1244   000996  D004               	goto	u6190
  1245                           
  1246                           ; BSR set to: 0
  1247   000998  0E5E               	movlw	94
  1248   00099A  19B6               	xorwf	_Tecla& (0+255),w,b
  1249   00099C  A4D8               	btfss	status,2,c
  1250   00099E  D036               	goto	l4951
  1251   0009A0                     u6190:
  1252                           
  1253                           ; BSR set to: 0
  1254   0009A0  0E20               	movlw	32
  1255   0009A2  19BC               	xorwf	_n1c& (0+255),w,b
  1256   0009A4  A4D8               	btfss	status,2,c
  1257   0009A6  D032               	goto	l4951
  1258                           
  1259                           ; BSR set to: 0
  1260   0009A8  0E20               	movlw	32
  1261   0009AA  19BB               	xorwf	_n2c& (0+255),w,b
  1262   0009AC  A4D8               	btfss	status,2,c
  1263   0009AE  D02E               	goto	l4951
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;Lab4.c: 85: potencia=~potencia;
  1267   0009B0  1FB5               	comf	_potencia& (0+255),f,b
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;Lab4.c: 86: if(potencia){
  1271   0009B2  51B5               	movf	_potencia& (0+255),w,b
  1272   0009B4  B4D8               	btfsc	status,2,c
  1273   0009B6  D01B               	goto	l4941
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;Lab4.c: 87: DireccionaLCD(0x80);
  1277   0009B8  0E80               	movlw	128
  1278   0009BA  EC69  F014         	call	_DireccionaLCD
  1279                           
  1280                           ;Lab4.c: 88: MensajeLCD_Var("Modo Potencia");
  1281   0009BE  0E49               	movlw	low STR_3
  1282   0009C0  6E13               	movwf	MensajeLCD_Var@a^0,c
  1283   0009C2  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  1284                           
  1285                           ;Lab4.c: 89: DireccionaLCD(0xC0);
  1286   0009C6  0EC0               	movlw	192
  1287   0009C8  EC69  F014         	call	_DireccionaLCD
  1288                           
  1289                           ;Lab4.c: 90: MensajeLCD_Var("Activado");
  1290   0009CC  0E69               	movlw	low (STR_11+4)
  1291   0009CE  6E13               	movwf	MensajeLCD_Var@a^0,c
  1292   0009D0  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  1293   0009D4                     l4935:
  1294                           
  1295                           ;Lab4.c: 91: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1296   0009D4  0E02               	movlw	2
  1297   0009D6  0100               	movlb	0	; () banked
  1298   0009D8  6F9D               	movwf	(??_main+1)& (0+255),b
  1299   0009DA  0E45               	movlw	69
  1300   0009DC  6F9C               	movwf	??_main& (0+255),b
  1301   0009DE  0EA9               	movlw	169
  1302   0009E0                     u6977:
  1303   0009E0  2EE8               	decfsz	wreg,f,c
  1304   0009E2  D7FE               	bra	u6977
  1305   0009E4  2F9C               	decfsz	??_main& (0+255),f,b
  1306   0009E6  D7FC               	bra	u6977
  1307   0009E8  2F9D               	decfsz	(??_main+1)& (0+255),f,b
  1308   0009EA  D7FA               	bra	u6977
  1309   0009EC  D79F               	goto	L1
  1310   0009EE                     l4941:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;Lab4.c: 95: DireccionaLCD(0x80);
  1314   0009EE  0E80               	movlw	128
  1315   0009F0  EC69  F014         	call	_DireccionaLCD
  1316                           
  1317                           ;Lab4.c: 96: MensajeLCD_Var("Modo Suma");
  1318   0009F4  0E89               	movlw	low STR_5
  1319   0009F6  6E13               	movwf	MensajeLCD_Var@a^0,c
  1320   0009F8  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  1321                           
  1322                           ;Lab4.c: 97: DireccionaLCD(0xC0);
  1323   0009FC  0EC0               	movlw	192
  1324   0009FE  EC69  F014         	call	_DireccionaLCD
  1325                           
  1326                           ;Lab4.c: 98: MensajeLCD_Var("Activado");
  1327   000A02  0E69               	movlw	low (STR_11+4)
  1328   000A04  6E13               	movwf	MensajeLCD_Var@a^0,c
  1329   000A06  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  1330   000A0A  D7E4               	goto	l4935
  1331   000A0C                     l4951:
  1332                           
  1333                           ; BSR set to: 0
  1334   000A0C  0E20               	movlw	32
  1335   000A0E  19BD               	xorwf	_op& (0+255),w,b
  1336   000A10  A4D8               	btfss	status,2,c
  1337   000A12  D032               	goto	l4987
  1338                           
  1339                           ; BSR set to: 0
  1340   000A14  0E2D               	movlw	45
  1341   000A16  19B6               	xorwf	_Tecla& (0+255),w,b
  1342   000A18  B4D8               	btfsc	status,2,c
  1343   000A1A  D004               	goto	u6250
  1344                           
  1345                           ; BSR set to: 0
  1346   000A1C  0E21               	movlw	33
  1347   000A1E  19B6               	xorwf	_Tecla& (0+255),w,b
  1348   000A20  A4D8               	btfss	status,2,c
  1349   000A22  D02A               	goto	l4987
  1350   000A24                     u6250:
  1351                           
  1352                           ; BSR set to: 0
  1353   000A24  0E20               	movlw	32
  1354   000A26  19BC               	xorwf	_n1c& (0+255),w,b
  1355   000A28  A4D8               	btfss	status,2,c
  1356   000A2A  D026               	goto	l4987
  1357                           
  1358                           ; BSR set to: 0
  1359   000A2C  0E20               	movlw	32
  1360   000A2E  19BB               	xorwf	_n2c& (0+255),w,b
  1361   000A30  A4D8               	btfss	status,2,c
  1362   000A32  D022               	goto	l4987
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;Lab4.c: 104: factorial=~factorial;
  1366   000A34  1FB4               	comf	_factorial& (0+255),f,b
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;Lab4.c: 105: if(factorial){
  1370   000A36  51B4               	movf	_factorial& (0+255),w,b
  1371   000A38  B4D8               	btfsc	status,2,c
  1372   000A3A  D00F               	goto	l4977
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;Lab4.c: 106: DireccionaLCD(0x80);
  1376   000A3C  0E80               	movlw	128
  1377   000A3E  EC69  F014         	call	_DireccionaLCD
  1378                           
  1379                           ;Lab4.c: 107: MensajeLCD_Var("Modo Factorial");
  1380   000A42  0E3A               	movlw	low STR_7
  1381   000A44  6E13               	movwf	MensajeLCD_Var@a^0,c
  1382   000A46  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  1383                           
  1384                           ;Lab4.c: 108: DireccionaLCD(0xC0);
  1385   000A4A  0EC0               	movlw	192
  1386   000A4C  EC69  F014         	call	_DireccionaLCD
  1387                           
  1388                           ;Lab4.c: 109: MensajeLCD_Var("Activado");
  1389   000A50  0E69               	movlw	low (STR_11+4)
  1390   000A52  6E13               	movwf	MensajeLCD_Var@a^0,c
  1391   000A54  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  1392   000A58  D7BD               	goto	l4935
  1393   000A5A                     l4977:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;Lab4.c: 114: DireccionaLCD(0x80);
  1397   000A5A  0E80               	movlw	128
  1398   000A5C  EC69  F014         	call	_DireccionaLCD
  1399                           
  1400                           ;Lab4.c: 115: MensajeLCD_Var("Modo Resta");
  1401   000A60  0E7E               	movlw	low STR_9
  1402   000A62  6E13               	movwf	MensajeLCD_Var@a^0,c
  1403   000A64  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  1404                           
  1405                           ;Lab4.c: 116: DireccionaLCD(0xC0);
  1406   000A68  0EC0               	movlw	192
  1407   000A6A  EC69  F014         	call	_DireccionaLCD
  1408                           
  1409                           ;Lab4.c: 117: MensajeLCD_Var("Activado");
  1410   000A6E  0E69               	movlw	low (STR_11+4)
  1411   000A70  6E13               	movwf	MensajeLCD_Var@a^0,c
  1412   000A72  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  1413   000A76  D7AE               	goto	l4935
  1414   000A78                     l4987:
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;Lab4.c: 123: if((n1c==' '|n2c==' '|op==' ') & !factorial){
  1418   000A78  0E20               	movlw	32
  1419   000A7A  19BC               	xorwf	_n1c& (0+255),w,b
  1420   000A7C  B4D8               	btfsc	status,2,c
  1421   000A7E  D008               	goto	u6310
  1422                           
  1423                           ; BSR set to: 0
  1424   000A80  0E20               	movlw	32
  1425   000A82  19BB               	xorwf	_n2c& (0+255),w,b
  1426   000A84  B4D8               	btfsc	status,2,c
  1427   000A86  D004               	goto	u6310
  1428                           
  1429                           ; BSR set to: 0
  1430   000A88  0E20               	movlw	32
  1431   000A8A  19BD               	xorwf	_op& (0+255),w,b
  1432   000A8C  A4D8               	btfss	status,2,c
  1433   000A8E  D097               	goto	l5063
  1434   000A90                     u6310:
  1435                           
  1436                           ; BSR set to: 0
  1437   000A90  51B4               	movf	_factorial& (0+255),w,b
  1438   000A92  A4D8               	btfss	status,2,c
  1439   000A94  D094               	goto	l5063
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;Lab4.c: 124: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='^') & n1
      +                          c != ' ' & n2c ==' '){
  1443   000A96  0E20               	movlw	32
  1444   000A98  19BD               	xorwf	_op& (0+255),w,b
  1445   000A9A  A4D8               	btfss	status,2,c
  1446   000A9C  D026               	goto	l5015
  1447                           
  1448                           ; BSR set to: 0
  1449   000A9E  0E2B               	movlw	43
  1450   000AA0  19B6               	xorwf	_Tecla& (0+255),w,b
  1451   000AA2  B4D8               	btfsc	status,2,c
  1452   000AA4  D010               	goto	u6380
  1453                           
  1454                           ; BSR set to: 0
  1455   000AA6  0E2D               	movlw	45
  1456   000AA8  19B6               	xorwf	_Tecla& (0+255),w,b
  1457   000AAA  B4D8               	btfsc	status,2,c
  1458   000AAC  D00C               	goto	u6380
  1459                           
  1460                           ; BSR set to: 0
  1461   000AAE  0E2F               	movlw	47
  1462   000AB0  19B6               	xorwf	_Tecla& (0+255),w,b
  1463   000AB2  B4D8               	btfsc	status,2,c
  1464   000AB4  D008               	goto	u6380
  1465                           
  1466                           ; BSR set to: 0
  1467   000AB6  0E78               	movlw	120
  1468   000AB8  19B6               	xorwf	_Tecla& (0+255),w,b
  1469   000ABA  B4D8               	btfsc	status,2,c
  1470   000ABC  D004               	goto	u6380
  1471                           
  1472                           ; BSR set to: 0
  1473   000ABE  0E5E               	movlw	94
  1474   000AC0  19B6               	xorwf	_Tecla& (0+255),w,b
  1475   000AC2  A4D8               	btfss	status,2,c
  1476   000AC4  D012               	goto	l5015
  1477   000AC6                     u6380:
  1478                           
  1479                           ; BSR set to: 0
  1480   000AC6  0E20               	movlw	32
  1481   000AC8  19BC               	xorwf	_n1c& (0+255),w,b
  1482   000ACA  B4D8               	btfsc	status,2,c
  1483   000ACC  D00E               	goto	l5015
  1484                           
  1485                           ; BSR set to: 0
  1486   000ACE  0E20               	movlw	32
  1487   000AD0  19BB               	xorwf	_n2c& (0+255),w,b
  1488   000AD2  A4D8               	btfss	status,2,c
  1489   000AD4  D00A               	goto	l5015
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;Lab4.c: 125: DireccionaLCD(0x81);
  1493   000AD6  0E81               	movlw	129
  1494   000AD8  EC69  F014         	call	_DireccionaLCD
  1495                           
  1496                           ;Lab4.c: 126: EscribeLCD_c(Tecla);
  1497   000ADC  0100               	movlb	0	; () banked
  1498   000ADE  51B6               	movf	_Tecla& (0+255),w,b
  1499   000AE0  EC5E  F014         	call	_EscribeLCD_c
  1500   000AE4                     l5013:
  1501                           
  1502                           ;Lab4.c: 127: op = Tecla;
  1503   000AE4  C0B6  F0BD         	movff	_Tecla,_op
  1504                           
  1505                           ;Lab4.c: 128: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|Tecla!=
      +                          '='|Tecla!='C'|Tecla!='^')){
  1506   000AE8  D21A               	goto	l5211
  1507   000AEA                     l5015:
  1508                           
  1509                           ; BSR set to: 0
  1510   000AEA  0E20               	movlw	32
  1511   000AEC  19BC               	xorwf	_n1c& (0+255),w,b
  1512   000AEE  A4D8               	btfss	status,2,c
  1513   000AF0  D02D               	goto	l5037
  1514                           
  1515                           ; BSR set to: 0
  1516   000AF2  0E2B               	movlw	43
  1517   000AF4  19B6               	xorwf	_Tecla& (0+255),w,b
  1518   000AF6  A4D8               	btfss	status,2,c
  1519   000AF8  D018               	goto	u6480
  1520                           
  1521                           ; BSR set to: 0
  1522   000AFA  0E2D               	movlw	45
  1523   000AFC  19B6               	xorwf	_Tecla& (0+255),w,b
  1524   000AFE  A4D8               	btfss	status,2,c
  1525   000B00  D014               	goto	u6480
  1526                           
  1527                           ; BSR set to: 0
  1528   000B02  0E2F               	movlw	47
  1529   000B04  19B6               	xorwf	_Tecla& (0+255),w,b
  1530   000B06  A4D8               	btfss	status,2,c
  1531   000B08  D010               	goto	u6480
  1532                           
  1533                           ; BSR set to: 0
  1534   000B0A  0E78               	movlw	120
  1535   000B0C  19B6               	xorwf	_Tecla& (0+255),w,b
  1536   000B0E  A4D8               	btfss	status,2,c
  1537   000B10  D00C               	goto	u6480
  1538                           
  1539                           ; BSR set to: 0
  1540   000B12  0E3D               	movlw	61
  1541   000B14  19B6               	xorwf	_Tecla& (0+255),w,b
  1542   000B16  A4D8               	btfss	status,2,c
  1543   000B18  D008               	goto	u6480
  1544                           
  1545                           ; BSR set to: 0
  1546   000B1A  0E43               	movlw	67
  1547   000B1C  19B6               	xorwf	_Tecla& (0+255),w,b
  1548   000B1E  A4D8               	btfss	status,2,c
  1549   000B20  D004               	goto	u6480
  1550                           
  1551                           ; BSR set to: 0
  1552   000B22  0E5E               	movlw	94
  1553   000B24  19B6               	xorwf	_Tecla& (0+255),w,b
  1554   000B26  B4D8               	btfsc	status,2,c
  1555   000B28  D011               	goto	l5037
  1556   000B2A                     u6480:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;Lab4.c: 129: DireccionaLCD(0x80);
  1560   000B2A  0E80               	movlw	128
  1561   000B2C  EC69  F014         	call	_DireccionaLCD
  1562                           
  1563                           ;Lab4.c: 130: EscribeLCD_c(Tecla);
  1564   000B30  0100               	movlb	0	; () banked
  1565   000B32  51B6               	movf	_Tecla& (0+255),w,b
  1566   000B34  EC5E  F014         	call	_EscribeLCD_c
  1567   000B38                     l5033:
  1568                           
  1569                           ;Lab4.c: 131: n1c=Tecla;
  1570   000B38  C0B6  F0BC         	movff	_Tecla,_n1c
  1571                           
  1572                           ;Lab4.c: 132: n1 = Tecla-'0';
  1573   000B3C  0ED0               	movlw	208
  1574   000B3E  0100               	movlb	0	; () banked
  1575   000B40  25B6               	addwf	_Tecla& (0+255),w,b
  1576   000B42  6FB2               	movwf	_n1& (0+255),b
  1577   000B44  6BB3               	clrf	(_n1+1)& (0+255),b
  1578   000B46  0EFF               	movlw	255
  1579   000B48  23B3               	addwfc	(_n1+1)& (0+255),f,b
  1580                           
  1581                           ;Lab4.c: 133: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='
      +                          /'|Tecla!='x'|Tecla!='='|Tecla!='C'|Tecla!='^')){
  1582   000B4A  D1E9               	goto	l5211
  1583   000B4C                     l5037:
  1584                           
  1585                           ; BSR set to: 0
  1586   000B4C  0E20               	movlw	32
  1587   000B4E  19BB               	xorwf	_n2c& (0+255),w,b
  1588   000B50  A4D8               	btfss	status,2,c
  1589   000B52  D1E5               	goto	l5211
  1590                           
  1591                           ; BSR set to: 0
  1592   000B54  0E20               	movlw	32
  1593   000B56  19BD               	xorwf	_op& (0+255),w,b
  1594   000B58  B4D8               	btfsc	status,2,c
  1595   000B5A  D1E1               	goto	l5211
  1596                           
  1597                           ; BSR set to: 0
  1598   000B5C  0E20               	movlw	32
  1599   000B5E  19BC               	xorwf	_n1c& (0+255),w,b
  1600   000B60  B4D8               	btfsc	status,2,c
  1601   000B62  D1DD               	goto	l5211
  1602                           
  1603                           ; BSR set to: 0
  1604   000B64  0E2B               	movlw	43
  1605   000B66  19B6               	xorwf	_Tecla& (0+255),w,b
  1606   000B68  A4D8               	btfss	status,2,c
  1607   000B6A  D018               	goto	u6580
  1608                           
  1609                           ; BSR set to: 0
  1610   000B6C  0E2D               	movlw	45
  1611   000B6E  19B6               	xorwf	_Tecla& (0+255),w,b
  1612   000B70  A4D8               	btfss	status,2,c
  1613   000B72  D014               	goto	u6580
  1614                           
  1615                           ; BSR set to: 0
  1616   000B74  0E2F               	movlw	47
  1617   000B76  19B6               	xorwf	_Tecla& (0+255),w,b
  1618   000B78  A4D8               	btfss	status,2,c
  1619   000B7A  D010               	goto	u6580
  1620                           
  1621                           ; BSR set to: 0
  1622   000B7C  0E78               	movlw	120
  1623   000B7E  19B6               	xorwf	_Tecla& (0+255),w,b
  1624   000B80  A4D8               	btfss	status,2,c
  1625   000B82  D00C               	goto	u6580
  1626                           
  1627                           ; BSR set to: 0
  1628   000B84  0E3D               	movlw	61
  1629   000B86  19B6               	xorwf	_Tecla& (0+255),w,b
  1630   000B88  A4D8               	btfss	status,2,c
  1631   000B8A  D008               	goto	u6580
  1632                           
  1633                           ; BSR set to: 0
  1634   000B8C  0E43               	movlw	67
  1635   000B8E  19B6               	xorwf	_Tecla& (0+255),w,b
  1636   000B90  A4D8               	btfss	status,2,c
  1637   000B92  D004               	goto	u6580
  1638                           
  1639                           ; BSR set to: 0
  1640   000B94  0E5E               	movlw	94
  1641   000B96  19B6               	xorwf	_Tecla& (0+255),w,b
  1642   000B98  B4D8               	btfsc	status,2,c
  1643   000B9A  D1C1               	goto	l5211
  1644   000B9C                     u6580:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;Lab4.c: 134: DireccionaLCD(0x82);
  1648   000B9C  0E82               	movlw	130
  1649   000B9E  EC69  F014         	call	_DireccionaLCD
  1650                           
  1651                           ;Lab4.c: 135: EscribeLCD_c(Tecla);
  1652   000BA2  0100               	movlb	0	; () banked
  1653   000BA4  51B6               	movf	_Tecla& (0+255),w,b
  1654   000BA6  EC5E  F014         	call	_EscribeLCD_c
  1655                           
  1656                           ;Lab4.c: 136: n2c=Tecla;
  1657   000BAA  C0B6  F0BB         	movff	_Tecla,_n2c
  1658                           
  1659                           ;Lab4.c: 137: n2 = Tecla-'0';
  1660   000BAE  0ED0               	movlw	208
  1661   000BB0  0100               	movlb	0	; () banked
  1662   000BB2  25B6               	addwf	_Tecla& (0+255),w,b
  1663   000BB4  6FB0               	movwf	_n2& (0+255),b
  1664   000BB6  6BB1               	clrf	(_n2+1)& (0+255),b
  1665   000BB8  0EFF               	movlw	255
  1666   000BBA  23B1               	addwfc	(_n2+1)& (0+255),f,b
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;Lab4.c: 138: };Lab4.c: 139: }else if ((n1c==' '|op==' ') & factorial){
  1670   000BBC  D1B0               	goto	l5211
  1671   000BBE                     l5063:
  1672                           
  1673                           ; BSR set to: 0
  1674   000BBE  0E01               	movlw	1
  1675   000BC0  6F9E               	movwf	_main$163& (0+255),b
  1676                           
  1677                           ; BSR set to: 0
  1678   000BC2  0E20               	movlw	32
  1679   000BC4  19BC               	xorwf	_n1c& (0+255),w,b
  1680   000BC6  B4D8               	btfsc	status,2,c
  1681   000BC8  D006               	goto	l5071
  1682                           
  1683                           ; BSR set to: 0
  1684   000BCA  0E20               	movlw	32
  1685   000BCC  19BD               	xorwf	_op& (0+255),w,b
  1686   000BCE  B4D8               	btfsc	status,2,c
  1687   000BD0  D002               	goto	l5071
  1688                           
  1689                           ; BSR set to: 0
  1690   000BD2  0E00               	movlw	0
  1691   000BD4  6F9E               	movwf	_main$163& (0+255),b
  1692   000BD6                     l5071:
  1693                           
  1694                           ; BSR set to: 0
  1695   000BD6  519E               	movf	_main$163& (0+255),w,b
  1696   000BD8  15B4               	andwf	_factorial& (0+255),w,b
  1697   000BDA  0900               	iorlw	0
  1698   000BDC  B4D8               	btfsc	status,2,c
  1699   000BDE  D058               	goto	l5119
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;Lab4.c: 140: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='^'|Tecla
      +                          =='!') & n1c != ' ' & n2c ==' '){
  1703   000BE0  0E20               	movlw	32
  1704   000BE2  19BD               	xorwf	_op& (0+255),w,b
  1705   000BE4  A4D8               	btfss	status,2,c
  1706   000BE6  D028               	goto	l5095
  1707                           
  1708                           ; BSR set to: 0
  1709   000BE8  0E2B               	movlw	43
  1710   000BEA  19B6               	xorwf	_Tecla& (0+255),w,b
  1711   000BEC  B4D8               	btfsc	status,2,c
  1712   000BEE  D014               	goto	u6680
  1713                           
  1714                           ; BSR set to: 0
  1715   000BF0  0E2D               	movlw	45
  1716   000BF2  19B6               	xorwf	_Tecla& (0+255),w,b
  1717   000BF4  B4D8               	btfsc	status,2,c
  1718   000BF6  D010               	goto	u6680
  1719                           
  1720                           ; BSR set to: 0
  1721   000BF8  0E2F               	movlw	47
  1722   000BFA  19B6               	xorwf	_Tecla& (0+255),w,b
  1723   000BFC  B4D8               	btfsc	status,2,c
  1724   000BFE  D00C               	goto	u6680
  1725                           
  1726                           ; BSR set to: 0
  1727   000C00  0E78               	movlw	120
  1728   000C02  19B6               	xorwf	_Tecla& (0+255),w,b
  1729   000C04  B4D8               	btfsc	status,2,c
  1730   000C06  D008               	goto	u6680
  1731                           
  1732                           ; BSR set to: 0
  1733   000C08  0E5E               	movlw	94
  1734   000C0A  19B6               	xorwf	_Tecla& (0+255),w,b
  1735   000C0C  B4D8               	btfsc	status,2,c
  1736   000C0E  D004               	goto	u6680
  1737                           
  1738                           ; BSR set to: 0
  1739   000C10  0E21               	movlw	33
  1740   000C12  19B6               	xorwf	_Tecla& (0+255),w,b
  1741   000C14  A4D8               	btfss	status,2,c
  1742   000C16  D010               	goto	l5095
  1743   000C18                     u6680:
  1744                           
  1745                           ; BSR set to: 0
  1746   000C18  0E20               	movlw	32
  1747   000C1A  19BC               	xorwf	_n1c& (0+255),w,b
  1748   000C1C  B4D8               	btfsc	status,2,c
  1749   000C1E  D00C               	goto	l5095
  1750                           
  1751                           ; BSR set to: 0
  1752   000C20  0E20               	movlw	32
  1753   000C22  19BB               	xorwf	_n2c& (0+255),w,b
  1754   000C24  A4D8               	btfss	status,2,c
  1755   000C26  D008               	goto	l5095
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;Lab4.c: 141: DireccionaLCD(0x81);
  1759   000C28  0E81               	movlw	129
  1760   000C2A  EC69  F014         	call	_DireccionaLCD
  1761                           
  1762                           ;Lab4.c: 142: EscribeLCD_c(Tecla);
  1763   000C2E  0100               	movlb	0	; () banked
  1764   000C30  51B6               	movf	_Tecla& (0+255),w,b
  1765   000C32  EC5E  F014         	call	_EscribeLCD_c
  1766   000C36  D756               	goto	l5013
  1767   000C38                     l5095:
  1768                           
  1769                           ; BSR set to: 0
  1770   000C38  0E20               	movlw	32
  1771   000C3A  19BC               	xorwf	_n1c& (0+255),w,b
  1772   000C3C  A4D8               	btfss	status,2,c
  1773   000C3E  D16F               	goto	l5211
  1774                           
  1775                           ; BSR set to: 0
  1776   000C40  0E2B               	movlw	43
  1777   000C42  19B6               	xorwf	_Tecla& (0+255),w,b
  1778   000C44  A4D8               	btfss	status,2,c
  1779   000C46  D01C               	goto	u6790
  1780                           
  1781                           ; BSR set to: 0
  1782   000C48  0E2D               	movlw	45
  1783   000C4A  19B6               	xorwf	_Tecla& (0+255),w,b
  1784   000C4C  A4D8               	btfss	status,2,c
  1785   000C4E  D018               	goto	u6790
  1786                           
  1787                           ; BSR set to: 0
  1788   000C50  0E2F               	movlw	47
  1789   000C52  19B6               	xorwf	_Tecla& (0+255),w,b
  1790   000C54  A4D8               	btfss	status,2,c
  1791   000C56  D014               	goto	u6790
  1792                           
  1793                           ; BSR set to: 0
  1794   000C58  0E78               	movlw	120
  1795   000C5A  19B6               	xorwf	_Tecla& (0+255),w,b
  1796   000C5C  A4D8               	btfss	status,2,c
  1797   000C5E  D010               	goto	u6790
  1798                           
  1799                           ; BSR set to: 0
  1800   000C60  0E3D               	movlw	61
  1801   000C62  19B6               	xorwf	_Tecla& (0+255),w,b
  1802   000C64  A4D8               	btfss	status,2,c
  1803   000C66  D00C               	goto	u6790
  1804                           
  1805                           ; BSR set to: 0
  1806   000C68  0E43               	movlw	67
  1807   000C6A  19B6               	xorwf	_Tecla& (0+255),w,b
  1808   000C6C  A4D8               	btfss	status,2,c
  1809   000C6E  D008               	goto	u6790
  1810                           
  1811                           ; BSR set to: 0
  1812   000C70  0E5E               	movlw	94
  1813   000C72  19B6               	xorwf	_Tecla& (0+255),w,b
  1814   000C74  A4D8               	btfss	status,2,c
  1815   000C76  D004               	goto	u6790
  1816                           
  1817                           ; BSR set to: 0
  1818   000C78  0E21               	movlw	33
  1819   000C7A  19B6               	xorwf	_Tecla& (0+255),w,b
  1820   000C7C  B4D8               	btfsc	status,2,c
  1821   000C7E  D14F               	goto	l5211
  1822   000C80                     u6790:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;Lab4.c: 145: DireccionaLCD(0x80);
  1826   000C80  0E80               	movlw	128
  1827   000C82  EC69  F014         	call	_DireccionaLCD
  1828                           
  1829                           ;Lab4.c: 146: EscribeLCD_c(Tecla);
  1830   000C86  0100               	movlb	0	; () banked
  1831   000C88  51B6               	movf	_Tecla& (0+255),w,b
  1832   000C8A  EC5E  F014         	call	_EscribeLCD_c
  1833   000C8E  D754               	goto	l5033
  1834   000C90                     l5119:
  1835                           
  1836                           ; BSR set to: 0
  1837   000C90  0E3D               	movlw	61
  1838   000C92  19B6               	xorwf	_Tecla& (0+255),w,b
  1839   000C94  A4D8               	btfss	status,2,c
  1840   000C96  D0F9               	goto	l5187
  1841                           
  1842                           ; BSR set to: 0
  1843   000C98  0E20               	movlw	32
  1844   000C9A  19BB               	xorwf	_n2c& (0+255),w,b
  1845   000C9C  B4D8               	btfsc	status,2,c
  1846   000C9E  D0F5               	goto	l5187
  1847                           
  1848                           ; BSR set to: 0
  1849   000CA0  0E20               	movlw	32
  1850   000CA2  19BD               	xorwf	_op& (0+255),w,b
  1851   000CA4  B4D8               	btfsc	status,2,c
  1852   000CA6  D0F1               	goto	l5187
  1853                           
  1854                           ; BSR set to: 0
  1855   000CA8  0E20               	movlw	32
  1856   000CAA  19BC               	xorwf	_n1c& (0+255),w,b
  1857   000CAC  B4D8               	btfsc	status,2,c
  1858   000CAE  D0ED               	goto	l5187
  1859                           
  1860                           ; BSR set to: 0
  1861   000CB0  51B4               	movf	_factorial& (0+255),w,b
  1862   000CB2  A4D8               	btfss	status,2,c
  1863   000CB4  D0EA               	goto	l5187
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;Lab4.c: 151: DireccionaLCD(0x83);
  1867   000CB6  0E83               	movlw	131
  1868   000CB8  EC69  F014         	call	_DireccionaLCD
  1869                           
  1870                           ;Lab4.c: 152: EscribeLCD_c('=');
  1871   000CBC  0E3D               	movlw	61
  1872   000CBE  EC5E  F014         	call	_EscribeLCD_c
  1873                           
  1874                           ;Lab4.c: 153: switch(op){
  1875   000CC2  D0C3               	goto	l5181
  1876   000CC4                     l5131:
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;Lab4.c: 155: r = n1 + n2;
  1880   000CC4  51B0               	movf	_n2& (0+255),w,b
  1881   000CC6  25B2               	addwf	_n1& (0+255),w,b
  1882   000CC8  6F9C               	movwf	??_main& (0+255),b
  1883   000CCA  51B1               	movf	(_n2+1)& (0+255),w,b
  1884   000CCC  21B3               	addwfc	(_n1+1)& (0+255),w,b
  1885   000CCE  6F9D               	movwf	(??_main+1)& (0+255),b
  1886   000CD0  C09C  F0A4         	movff	??_main,_r
  1887   000CD4  C09D  F0A5         	movff	??_main+1,_r+1
  1888   000CD8  6BA6               	clrf	(_r+2)& (0+255),b
  1889   000CDA  6BA7               	clrf	(_r+3)& (0+255),b
  1890   000CDC                     l5133:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;Lab4.c: 156: partdecl = r*100;
  1894   000CDC  C0A4  F00E         	movff	_r,___lmul@multiplier
  1895   000CE0  C0A5  F00F         	movff	_r+1,___lmul@multiplier+1
  1896   000CE4  C0A6  F010         	movff	_r+2,___lmul@multiplier+2
  1897   000CE8  C0A7  F011         	movff	_r+3,___lmul@multiplier+3
  1898   000CEC  0E64               	movlw	100
  1899   000CEE  6E12               	movwf	___lmul@multiplicand^0,c
  1900   000CF0  0E00               	movlw	0
  1901   000CF2  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1902   000CF4  0E00               	movlw	0
  1903   000CF6  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1904   000CF8  0E00               	movlw	0
  1905   000CFA  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1906   000CFC  EC66  F012         	call	___lmul	;wreg free
  1907   000D00  C00E  F0A8         	movff	?___lmul,_partdecl
  1908   000D04  C00F  F0A9         	movff	?___lmul+1,_partdecl+1
  1909   000D08  C010  F0AA         	movff	?___lmul+2,_partdecl+2
  1910   000D0C  C011  F0AB         	movff	?___lmul+3,_partdecl+3
  1911                           
  1912                           ;Lab4.c: 157: break;
  1913   000D10  D0AE               	goto	l5183
  1914   000D12                     l5135:
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;Lab4.c: 159: r = n1 - n2;
  1918   000D12  51B0               	movf	_n2& (0+255),w,b
  1919   000D14  5DB2               	subwf	_n1& (0+255),w,b
  1920   000D16  6F9C               	movwf	??_main& (0+255),b
  1921   000D18  51B1               	movf	(_n2+1)& (0+255),w,b
  1922   000D1A  59B3               	subwfb	(_n1+1)& (0+255),w,b
  1923   000D1C  D7D8               	goto	L2
  1924   000D1E                     l5139:
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;Lab4.c: 163: r = n1*n2;
  1928   000D1E  C0B2  F00E         	movff	_n1,___wmul@multiplier
  1929   000D22  C0B3  F00F         	movff	_n1+1,___wmul@multiplier+1
  1930   000D26  C0B0  F010         	movff	_n2,___wmul@multiplicand
  1931   000D2A  C0B1  F011         	movff	_n2+1,___wmul@multiplicand+1
  1932   000D2E  EC2D  F014         	call	___wmul	;wreg free
  1933   000D32  C00E  F0A4         	movff	?___wmul,_r
  1934   000D36  C00F  F0A5         	movff	?___wmul+1,_r+1
  1935   000D3A  0100               	movlb	0	; () banked
  1936   000D3C  D7CD               	goto	L3
  1937   000D3E                     l5143:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;Lab4.c: 167: if(n2!=0){
  1941   000D3E  51B0               	movf	_n2& (0+255),w,b
  1942   000D40  11B1               	iorwf	(_n2+1)& (0+255),w,b
  1943   000D42  B4D8               	btfsc	status,2,c
  1944   000D44  D031               	goto	l5151
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;Lab4.c: 168: if(n1!=0){
  1948   000D46  51B2               	movf	_n1& (0+255),w,b
  1949   000D48  11B3               	iorwf	(_n1+1)& (0+255),w,b
  1950   000D4A  B4D8               	btfsc	status,2,c
  1951   000D4C  D090               	goto	l5183
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;Lab4.c: 169: r = n1/n2;
  1955   000D4E  C0B2  F014         	movff	_n1,___lwdiv@dividend
  1956   000D52  C0B3  F015         	movff	_n1+1,___lwdiv@dividend+1
  1957   000D56  C0B0  F016         	movff	_n2,___lwdiv@divisor
  1958   000D5A  C0B1  F017         	movff	_n2+1,___lwdiv@divisor+1
  1959   000D5E  ECE7  F012         	call	___lwdiv	;wreg free
  1960   000D62  C014  F0A4         	movff	?___lwdiv,_r
  1961   000D66  C015  F0A5         	movff	?___lwdiv+1,_r+1
  1962   000D6A  0100               	movlb	0	; () banked
  1963   000D6C  6BA6               	clrf	(_r+2)& (0+255),b
  1964   000D6E  6BA7               	clrf	(_r+3)& (0+255),b
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;Lab4.c: 170: partdecl = (n1*100)/n2;
  1968   000D70  C0B2  F00E         	movff	_n1,___wmul@multiplier
  1969   000D74  C0B3  F00F         	movff	_n1+1,___wmul@multiplier+1
  1970   000D78  0E00               	movlw	0
  1971   000D7A  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1972   000D7C  0E64               	movlw	100
  1973   000D7E  6E10               	movwf	___wmul@multiplicand^0,c
  1974   000D80  EC2D  F014         	call	___wmul	;wreg free
  1975   000D84  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1976   000D88  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1977   000D8C  C0B0  F016         	movff	_n2,___lwdiv@divisor
  1978   000D90  C0B1  F017         	movff	_n2+1,___lwdiv@divisor+1
  1979   000D94  ECE7  F012         	call	___lwdiv	;wreg free
  1980   000D98  C014  F0A8         	movff	?___lwdiv,_partdecl
  1981   000D9C  C015  F0A9         	movff	?___lwdiv+1,_partdecl+1
  1982   000DA0  0100               	movlb	0	; () banked
  1983   000DA2  6BAA               	clrf	(_partdecl+2)& (0+255),b
  1984   000DA4  6BAB               	clrf	(_partdecl+3)& (0+255),b
  1985   000DA6  D063               	goto	l5183
  1986   000DA8                     l5151:
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;Lab4.c: 173: if(n1 != 0 & n2 == 0) r = 1000;
  1990   000DA8  51B2               	movf	_n1& (0+255),w,b
  1991   000DAA  11B3               	iorwf	(_n1+1)& (0+255),w,b
  1992   000DAC  B4D8               	btfsc	status,2,c
  1993   000DAE  D006               	goto	l5157
  1994                           
  1995                           ; BSR set to: 0
  1996   000DB0  51B0               	movf	_n2& (0+255),w,b
  1997   000DB2  11B1               	iorwf	(_n2+1)& (0+255),w,b
  1998   000DB4  A4D8               	btfss	status,2,c
  1999   000DB6  D002               	goto	l5157
  2000                           
  2001                           ; BSR set to: 0
  2002   000DB8  0EE8               	movlw	232
  2003   000DBA  D009               	goto	L4
  2004   000DBC                     l5157:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;Lab4.c: 174: else if(n1 == 0 & n2 == 0) r = 1001;
  2008   000DBC  51B2               	movf	_n1& (0+255),w,b
  2009   000DBE  11B3               	iorwf	(_n1+1)& (0+255),w,b
  2010   000DC0  A4D8               	btfss	status,2,c
  2011   000DC2  D78C               	goto	l5133
  2012                           
  2013                           ; BSR set to: 0
  2014   000DC4  51B0               	movf	_n2& (0+255),w,b
  2015   000DC6  11B1               	iorwf	(_n2+1)& (0+255),w,b
  2016   000DC8  A4D8               	btfss	status,2,c
  2017   000DCA  D788               	goto	l5133
  2018                           
  2019                           ; BSR set to: 0
  2020   000DCC  0EE9               	movlw	233
  2021   000DCE                     L4:
  2022   000DCE  6FA4               	movwf	_r& (0+255),b
  2023   000DD0  0E03               	movlw	3
  2024   000DD2  6FA5               	movwf	(_r+1)& (0+255),b
  2025   000DD4  0E00               	movlw	0
  2026   000DD6  6FA6               	movwf	(_r+2)& (0+255),b
  2027   000DD8  0E00               	movlw	0
  2028   000DDA  6FA7               	movwf	(_r+3)& (0+255),b
  2029   000DDC  D77F               	goto	l5133
  2030   000DDE                     l5165:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;Lab4.c: 179: r=n1;
  2034   000DDE  C0B2  F0A4         	movff	_n1,_r
  2035   000DE2  C0B3  F0A5         	movff	_n1+1,_r+1
  2036   000DE6  6BA6               	clrf	(_r+2)& (0+255),b
  2037   000DE8  6BA7               	clrf	(_r+3)& (0+255),b
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;Lab4.c: 180: for(i=1;i<n2;i++){
  2041   000DEA  0E00               	movlw	0
  2042   000DEC  6FAF               	movwf	(_i+1)& (0+255),b
  2043   000DEE  0E01               	movlw	1
  2044   000DF0  6FAE               	movwf	_i& (0+255),b
  2045   000DF2  D01B               	goto	l5173
  2046   000DF4                     l5169:
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;Lab4.c: 181: r=r*n1;
  2050   000DF4  C0B2  F00E         	movff	_n1,___lmul@multiplier
  2051   000DF8  C0B3  F00F         	movff	_n1+1,___lmul@multiplier+1
  2052   000DFC  6A10               	clrf	(___lmul@multiplier+2)^0,c
  2053   000DFE  6A11               	clrf	(___lmul@multiplier+3)^0,c
  2054   000E00  C0A4  F012         	movff	_r,___lmul@multiplicand
  2055   000E04  C0A5  F013         	movff	_r+1,___lmul@multiplicand+1
  2056   000E08  C0A6  F014         	movff	_r+2,___lmul@multiplicand+2
  2057   000E0C  C0A7  F015         	movff	_r+3,___lmul@multiplicand+3
  2058   000E10  EC66  F012         	call	___lmul	;wreg free
  2059   000E14  C00E  F0A4         	movff	?___lmul,_r
  2060   000E18  C00F  F0A5         	movff	?___lmul+1,_r+1
  2061   000E1C  C010  F0A6         	movff	?___lmul+2,_r+2
  2062   000E20  C011  F0A7         	movff	?___lmul+3,_r+3
  2063   000E24  0100               	movlb	0	; () banked
  2064   000E26  4BAE               	infsnz	_i& (0+255),f,b
  2065   000E28  2BAF               	incf	(_i+1)& (0+255),f,b
  2066   000E2A                     l5173:
  2067                           
  2068                           ; BSR set to: 0
  2069   000E2A  51B0               	movf	_n2& (0+255),w,b
  2070   000E2C  5DAE               	subwf	_i& (0+255),w,b
  2071   000E2E  51B1               	movf	(_n2+1)& (0+255),w,b
  2072   000E30  59AF               	subwfb	(_i+1)& (0+255),w,b
  2073   000E32  B0D8               	btfsc	status,0,c
  2074   000E34  D753               	goto	l5133
  2075   000E36  D7DE               	goto	l5169
  2076   000E38                     l5177:
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;Lab4.c: 186: r = 0;
  2080   000E38  0E00               	movlw	0
  2081   000E3A  6FA4               	movwf	_r& (0+255),b
  2082   000E3C  0E00               	movlw	0
  2083   000E3E  6FA5               	movwf	(_r+1)& (0+255),b
  2084   000E40  0E00               	movlw	0
  2085   000E42  6FA6               	movwf	(_r+2)& (0+255),b
  2086   000E44  0E00               	movlw	0
  2087   000E46  6FA7               	movwf	(_r+3)& (0+255),b
  2088                           
  2089                           ;Lab4.c: 187: break;
  2090   000E48  D012               	goto	l5183
  2091   000E4A                     l5181:
  2092   000E4A  0100               	movlb	0	; () banked
  2093   000E4C  51BD               	movf	_op& (0+255),w,b
  2094                           
  2095                           ; Switch size 1, requested type "simple"
  2096                           ; Number of cases is 5, Range of values is 43 to 120
  2097                           ; switch strategies available:
  2098                           ; Name         Instructions Cycles
  2099                           ; simple_byte           16     9 (average)
  2100                           ;	Chosen strategy is simple_byte
  2101   000E4E  0A2B               	xorlw	43	; case 43
  2102   000E50  B4D8               	btfsc	status,2,c
  2103   000E52  D738               	goto	l5131
  2104   000E54  0A06               	xorlw	6	; case 45
  2105   000E56  B4D8               	btfsc	status,2,c
  2106   000E58  D75C               	goto	l5135
  2107   000E5A  0A02               	xorlw	2	; case 47
  2108   000E5C  B4D8               	btfsc	status,2,c
  2109   000E5E  D76F               	goto	l5143
  2110   000E60  0A71               	xorlw	113	; case 94
  2111   000E62  B4D8               	btfsc	status,2,c
  2112   000E64  D7BC               	goto	l5165
  2113   000E66  0A26               	xorlw	38	; case 120
  2114   000E68  B4D8               	btfsc	status,2,c
  2115   000E6A  D759               	goto	l5139
  2116   000E6C  D7E5               	goto	l5177
  2117   000E6E                     l5183:
  2118                           
  2119                           ;Lab4.c: 189: DireccionaLCD(0x84);
  2120   000E6E  0E84               	movlw	132
  2121   000E70  EC69  F014         	call	_DireccionaLCD
  2122   000E74                     l5185:
  2123                           
  2124                           ;Lab4.c: 190: Imprimir_Resultado(r);
  2125   000E74  C0A4  F08A         	movff	_r,Imprimir_Resultado@r
  2126   000E78  C0A5  F08B         	movff	_r+1,Imprimir_Resultado@r+1
  2127   000E7C  C0A6  F08C         	movff	_r+2,Imprimir_Resultado@r+2
  2128   000E80  C0A7  F08D         	movff	_r+3,Imprimir_Resultado@r+3
  2129   000E84  EC99  F007         	call	_Imprimir_Resultado	;wreg free
  2130                           
  2131                           ;Lab4.c: 191: }else if((Tecla=='=' & op=='!' & n1c != ' ') & factorial) {
  2132   000E88  D04A               	goto	l5211
  2133   000E8A                     l5187:
  2134                           
  2135                           ; BSR set to: 0
  2136   000E8A  0E00               	movlw	0
  2137   000E8C  6F9F               	movwf	_main$164& (0+255),b
  2138                           
  2139                           ; BSR set to: 0
  2140   000E8E  0E3D               	movlw	61
  2141   000E90  19B6               	xorwf	_Tecla& (0+255),w,b
  2142   000E92  A4D8               	btfss	status,2,c
  2143   000E94  D00A               	goto	l5197
  2144                           
  2145                           ; BSR set to: 0
  2146   000E96  0E21               	movlw	33
  2147   000E98  19BD               	xorwf	_op& (0+255),w,b
  2148   000E9A  A4D8               	btfss	status,2,c
  2149   000E9C  D006               	goto	l5197
  2150                           
  2151                           ; BSR set to: 0
  2152   000E9E  0E20               	movlw	32
  2153   000EA0  19BC               	xorwf	_n1c& (0+255),w,b
  2154   000EA2  B4D8               	btfsc	status,2,c
  2155   000EA4  D002               	goto	l5197
  2156                           
  2157                           ; BSR set to: 0
  2158   000EA6  0E01               	movlw	1
  2159   000EA8  6F9F               	movwf	_main$164& (0+255),b
  2160   000EAA                     l5197:
  2161                           
  2162                           ; BSR set to: 0
  2163   000EAA  519F               	movf	_main$164& (0+255),w,b
  2164   000EAC  15B4               	andwf	_factorial& (0+255),w,b
  2165   000EAE  0900               	iorlw	0
  2166   000EB0  B4D8               	btfsc	status,2,c
  2167   000EB2  D032               	goto	l5209
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;Lab4.c: 192: DireccionaLCD(0x82);
  2171   000EB4  0E82               	movlw	130
  2172   000EB6  EC69  F014         	call	_DireccionaLCD
  2173                           
  2174                           ;Lab4.c: 193: EscribeLCD_c('=');
  2175   000EBA  0E3D               	movlw	61
  2176   000EBC  EC5E  F014         	call	_EscribeLCD_c
  2177                           
  2178                           ;Lab4.c: 194: r=factorial_function(n1);
  2179   000EC0  C0B2  F014         	movff	_n1,factorial_function@a
  2180   000EC4  C0B3  F015         	movff	_n1+1,factorial_function@a+1
  2181   000EC8  EC0F  F012         	call	_factorial_function	;wreg free
  2182   000ECC  C014  F0A4         	movff	?_factorial_function,_r
  2183   000ED0  C015  F0A5         	movff	?_factorial_function+1,_r+1
  2184   000ED4  C016  F0A6         	movff	?_factorial_function+2,_r+2
  2185   000ED8  C017  F0A7         	movff	?_factorial_function+3,_r+3
  2186                           
  2187                           ;Lab4.c: 195: partdecl = r*100;
  2188   000EDC  C0A4  F00E         	movff	_r,___lmul@multiplier
  2189   000EE0  C0A5  F00F         	movff	_r+1,___lmul@multiplier+1
  2190   000EE4  C0A6  F010         	movff	_r+2,___lmul@multiplier+2
  2191   000EE8  C0A7  F011         	movff	_r+3,___lmul@multiplier+3
  2192   000EEC  0E64               	movlw	100
  2193   000EEE  6E12               	movwf	___lmul@multiplicand^0,c
  2194   000EF0  0E00               	movlw	0
  2195   000EF2  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2196   000EF4  0E00               	movlw	0
  2197   000EF6  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2198   000EF8  0E00               	movlw	0
  2199   000EFA  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2200   000EFC  EC66  F012         	call	___lmul	;wreg free
  2201   000F00  C00E  F0A8         	movff	?___lmul,_partdecl
  2202   000F04  C00F  F0A9         	movff	?___lmul+1,_partdecl+1
  2203   000F08  C010  F0AA         	movff	?___lmul+2,_partdecl+2
  2204   000F0C  C011  F0AB         	movff	?___lmul+3,_partdecl+3
  2205                           
  2206                           ;Lab4.c: 196: DireccionaLCD(0x83);
  2207   000F10  0E83               	movlw	131
  2208   000F12  EC69  F014         	call	_DireccionaLCD
  2209   000F16  D7AE               	goto	l5185
  2210   000F18                     l5209:
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;Lab4.c: 199: EscribeLCD_c('W');
  2214   000F18  0E57               	movlw	87
  2215   000F1A  EC5E  F014         	call	_EscribeLCD_c
  2216   000F1E                     l5211:
  2217                           
  2218                           ;Lab4.c: 200: };Lab4.c: 201: _delay((unsigned long)((700)*(1000000/4000.0)));
  2219   000F1E  0EE4               	movlw	228
  2220   000F20  0100               	movlb	0	; () banked
  2221   000F22  6F9C               	movwf	??_main& (0+255),b
  2222   000F24  0E44               	movlw	68
  2223   000F26                     u6987:
  2224   000F26  2EE8               	decfsz	wreg,f,c
  2225   000F28  D7FE               	bra	u6987
  2226   000F2A  2F9C               	decfsz	??_main& (0+255),f,b
  2227   000F2C  D7FC               	bra	u6987
  2228   000F2E  F000               	nop	
  2229   000F30  D500               	goto	l4901
  2230   000F32                     __end_of_main:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _factorial_function *****************
  2234 ;; Defined at:
  2235 ;;		line 278 in file "Lab4.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  a               2   19[COMRAM] int 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  fact            2   23[COMRAM] int 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  4   19[COMRAM] unsigned long 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2249 ;;      Params:         4       0       0       0       0       0       0       0       0
  2250 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2252 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2253 ;;Total ram usage:        6 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 6
  2256 ;; This function calls:
  2257 ;;		___wmul
  2258 ;; This function is called by:
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text1
  2264   00241E                     __ptext1:
  2265                           	callstack 0
  2266   00241E                     _factorial_function:
  2267                           	callstack 24
  2268                           
  2269                           ;Lab4.c: 279: int fact = 1;
  2270                           
  2271                           ;incstack = 0
  2272   00241E  0E00               	movlw	0
  2273   002420  6E19               	movwf	(factorial_function@fact+1)^0,c
  2274   002422  0E01               	movlw	1
  2275   002424  6E18               	movwf	factorial_function@fact^0,c
  2276                           
  2277                           ;Lab4.c: 280: for (b = a; b > 1; b--){
  2278   002426  C014  F044         	movff	factorial_function@a,_b
  2279   00242A  C015  F045         	movff	factorial_function@a+1,_b+1
  2280   00242E  D011               	goto	l3817
  2281   002430                     l3813:
  2282                           
  2283                           ;Lab4.c: 281: fact = fact * b;
  2284   002430  C018  F00E         	movff	factorial_function@fact,___wmul@multiplier
  2285   002434  C019  F00F         	movff	factorial_function@fact+1,___wmul@multiplier+1
  2286   002438  C044  F010         	movff	_b,___wmul@multiplicand
  2287   00243C  C045  F011         	movff	_b+1,___wmul@multiplicand+1
  2288   002440  EC2D  F014         	call	___wmul	;wreg free
  2289   002444  C00E  F018         	movff	?___wmul,factorial_function@fact
  2290   002448  C00F  F019         	movff	?___wmul+1,factorial_function@fact+1
  2291   00244C  0644               	decf	_b^0,f,c
  2292   00244E  A0D8               	btfss	status,0,c
  2293   002450  0645               	decf	(_b+1)^0,f,c
  2294   002452                     l3817:
  2295   002452  BE45               	btfsc	(_b+1)^0,7,c
  2296   002454  D006               	goto	u4130
  2297   002456  5045               	movf	(_b+1)^0,w,c
  2298   002458  E1EB               	bnz	l3813
  2299   00245A  0E02               	movlw	2
  2300   00245C  5C44               	subwf	_b^0,w,c
  2301   00245E  B0D8               	btfsc	status,0,c
  2302   002460  D7E7               	goto	l3813
  2303   002462                     u4130:
  2304                           
  2305                           ;Lab4.c: 282: };Lab4.c: 283: return fact;
  2306   002462  C018  F014         	movff	factorial_function@fact,?_factorial_function
  2307   002466  C019  F015         	movff	factorial_function@fact+1,?_factorial_function+1
  2308   00246A  0E00               	movlw	0
  2309   00246C  BE15               	btfsc	(?_factorial_function+1)^0,7,c
  2310   00246E  0EFF               	movlw	-1
  2311   002470  6E16               	movwf	(?_factorial_function+2)^0,c
  2312   002472  6E17               	movwf	(?_factorial_function+3)^0,c
  2313   002474  0012               	return		;funcret
  2314   002476                     __end_of_factorial_function:
  2315                           	callstack 0
  2316                           
  2317 ;; *************** function _LeerTeclado *****************
  2318 ;; Defined at:
  2319 ;;		line 207 in file "Lab4.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      unsigned char 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2333 ;;      Params:         0       0       0       0       0       0       0       0       0
  2334 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2336 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2337 ;;Total ram usage:        0 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 5
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text2
  2348   001C4C                     __ptext2:
  2349                           	callstack 0
  2350   001C4C                     _LeerTeclado:
  2351                           	callstack 25
  2352                           
  2353                           ;Lab4.c: 208: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2354                           
  2355                           ;incstack = 0
  2356   001C4C  B881               	btfsc	3969,4,c	;volatile
  2357   001C4E  AA81               	btfss	3969,5,c	;volatile
  2358   001C50  D004               	goto	u3760
  2359   001C52  AC81               	btfss	3969,6,c	;volatile
  2360   001C54  D002               	goto	u3760
  2361   001C56  BE81               	btfsc	3969,7,c	;volatile
  2362   001C58  D7F9               	goto	__ptext2
  2363   001C5A                     u3760:
  2364                           
  2365                           ;Lab4.c: 209: verificador = 1;
  2366   001C5A  0E00               	movlw	0
  2367   001C5C  6E49               	movwf	(_verificador+1)^0,c
  2368   001C5E  0E01               	movlw	1
  2369   001C60  6E48               	movwf	_verificador^0,c
  2370                           
  2371                           ;Lab4.c: 210: LATB=0b11111110;
  2372   001C62  0EFE               	movlw	254
  2373   001C64  6E8A               	movwf	138,c	;volatile
  2374                           
  2375                           ;Lab4.c: 211: if(RB4==0){
  2376   001C66  B881               	btfsc	3969,4,c	;volatile
  2377   001C68  D00B               	goto	l258
  2378                           
  2379                           ;Lab4.c: 212: if(!potencia) return '+';
  2380   001C6A  0100               	movlb	0	; () banked
  2381   001C6C  51B5               	movf	_potencia& (0+255),w,b
  2382   001C6E  A4D8               	btfss	status,2,c
  2383   001C70  D002               	goto	l3579
  2384                           
  2385                           ; BSR set to: 0
  2386   001C72  0E2B               	movlw	43
  2387   001C74  0012               	return	
  2388   001C76                     l3579:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;Lab4.c: 213: else if(potencia) return '^';
  2392   001C76  51B5               	movf	_potencia& (0+255),w,b
  2393   001C78  B4D8               	btfsc	status,2,c
  2394   001C7A  D04D               	goto	l290
  2395                           
  2396                           ; BSR set to: 0
  2397   001C7C  0E5E               	movlw	94
  2398   001C7E  0012               	return	
  2399   001C80                     l258:
  2400                           
  2401                           ;Lab4.c: 215: else if(RB5==0) return '=';
  2402   001C80  BA81               	btfsc	3969,5,c	;volatile
  2403   001C82  D002               	goto	l264
  2404   001C84  0E3D               	movlw	61
  2405   001C86  0012               	return	
  2406   001C88                     l264:
  2407                           
  2408                           ;Lab4.c: 216: else if(RB6==0) return '0';
  2409   001C88  BC81               	btfsc	3969,6,c	;volatile
  2410   001C8A  D002               	goto	l266
  2411   001C8C  0E30               	movlw	48
  2412   001C8E  0012               	return	
  2413   001C90                     l266:
  2414                           
  2415                           ;Lab4.c: 217: else if(RB7==0) return 'C';
  2416   001C90  BE81               	btfsc	3969,7,c	;volatile
  2417   001C92  D002               	goto	l3603
  2418   001C94  0E43               	movlw	67
  2419   001C96  0012               	return	
  2420   001C98                     l3603:
  2421                           
  2422                           ;Lab4.c: 218: else{;Lab4.c: 219: LATB=0b11111101;
  2423   001C98  0EFD               	movlw	253
  2424   001C9A  6E8A               	movwf	138,c	;volatile
  2425                           
  2426                           ;Lab4.c: 220: if(RB4==0){
  2427   001C9C  B881               	btfsc	3969,4,c	;volatile
  2428   001C9E  D00B               	goto	l270
  2429                           
  2430                           ;Lab4.c: 221: if(!factorial) return '-';
  2431   001CA0  0100               	movlb	0	; () banked
  2432   001CA2  51B4               	movf	_factorial& (0+255),w,b
  2433   001CA4  A4D8               	btfss	status,2,c
  2434   001CA6  D002               	goto	l3615
  2435                           
  2436                           ; BSR set to: 0
  2437   001CA8  0E2D               	movlw	45
  2438   001CAA  0012               	return	
  2439   001CAC                     l3615:
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;Lab4.c: 222: else if(factorial) return '!';
  2443   001CAC  51B4               	movf	_factorial& (0+255),w,b
  2444   001CAE  B4D8               	btfsc	status,2,c
  2445   001CB0  D032               	goto	l290
  2446                           
  2447                           ; BSR set to: 0
  2448   001CB2  0E21               	movlw	33
  2449   001CB4  0012               	return	
  2450   001CB6                     l270:
  2451                           
  2452                           ;Lab4.c: 224: else if(RB5==0) return '9';
  2453   001CB6  BA81               	btfsc	3969,5,c	;volatile
  2454   001CB8  D002               	goto	l275
  2455   001CBA  0E39               	movlw	57
  2456   001CBC  0012               	return	
  2457   001CBE                     l275:
  2458                           
  2459                           ;Lab4.c: 225: else if(RB6==0) return '8';
  2460   001CBE  BC81               	btfsc	3969,6,c	;volatile
  2461   001CC0  D002               	goto	l277
  2462   001CC2  0E38               	movlw	56
  2463   001CC4  0012               	return	
  2464   001CC6                     l277:
  2465                           
  2466                           ;Lab4.c: 226: else if(RB7==0) return '7';
  2467   001CC6  BE81               	btfsc	3969,7,c	;volatile
  2468   001CC8  D002               	goto	l3639
  2469   001CCA  0E37               	movlw	55
  2470   001CCC  0012               	return	
  2471   001CCE                     l3639:
  2472                           
  2473                           ;Lab4.c: 227: else{;Lab4.c: 228: LATB=0b11111011;
  2474   001CCE  0EFB               	movlw	251
  2475   001CD0  6E8A               	movwf	138,c	;volatile
  2476                           
  2477                           ;Lab4.c: 229: if(RB4==0) return 'x';
  2478   001CD2  B881               	btfsc	3969,4,c	;volatile
  2479   001CD4  D002               	goto	l281
  2480   001CD6  0E78               	movlw	120
  2481   001CD8  0012               	return	
  2482   001CDA                     l281:
  2483                           
  2484                           ;Lab4.c: 230: else if(RB5==0) return '6';
  2485   001CDA  BA81               	btfsc	3969,5,c	;volatile
  2486   001CDC  D002               	goto	l283
  2487   001CDE  0E36               	movlw	54
  2488   001CE0  0012               	return	
  2489   001CE2                     l283:
  2490                           
  2491                           ;Lab4.c: 231: else if(RB6==0) return '5';
  2492   001CE2  BC81               	btfsc	3969,6,c	;volatile
  2493   001CE4  D002               	goto	l285
  2494   001CE6  0E35               	movlw	53
  2495   001CE8  0012               	return	
  2496   001CEA                     l285:
  2497                           
  2498                           ;Lab4.c: 232: else if(RB7==0) return '4';
  2499   001CEA  BE81               	btfsc	3969,7,c	;volatile
  2500   001CEC  D002               	goto	l3667
  2501   001CEE  0E34               	movlw	52
  2502   001CF0  0012               	return	
  2503   001CF2                     l3667:
  2504                           
  2505                           ;Lab4.c: 233: else{;Lab4.c: 234: LATB=0b11110111;
  2506   001CF2  0EF7               	movlw	247
  2507   001CF4  6E8A               	movwf	138,c	;volatile
  2508                           
  2509                           ;Lab4.c: 235: if(RB4==0) return '/';
  2510   001CF6  B881               	btfsc	3969,4,c	;volatile
  2511   001CF8  D002               	goto	l289
  2512   001CFA  0E2F               	movlw	47
  2513   001CFC  0012               	return	
  2514   001CFE                     l289:
  2515                           
  2516                           ;Lab4.c: 236: else if(RB5==0) return '3';
  2517   001CFE  BA81               	btfsc	3969,5,c	;volatile
  2518   001D00  D002               	goto	l291
  2519   001D02  0E33               	movlw	51
  2520   001D04  0012               	return	
  2521   001D06                     l291:
  2522                           
  2523                           ;Lab4.c: 237: else if(RB6==0) return '2';
  2524   001D06  BC81               	btfsc	3969,6,c	;volatile
  2525   001D08  D002               	goto	l293
  2526   001D0A  0E32               	movlw	50
  2527   001D0C  0012               	return	
  2528   001D0E                     l293:
  2529                           
  2530                           ;Lab4.c: 238: else if(RB7==0) return '1';
  2531   001D0E  BE81               	btfsc	3969,7,c	;volatile
  2532   001D10  D002               	goto	l290
  2533   001D12  0E31               	movlw	49
  2534   001D14  0012               	return	
  2535   001D16                     l290:
  2536                           
  2537                           ;Lab4.c: 239: };Lab4.c: 240: };Lab4.c: 241: };Lab4.c: 242: return '?';
  2538   001D16  0E3F               	movlw	63
  2539   001D18  0012               	return		;funcret
  2540   001D1A                     __end_of_LeerTeclado:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _InicializaLCD *****************
  2544 ;; Defined at:
  2545 ;;		line 62 in file "LibLCDXC8.h"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2562 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 8
  2566 ;; This function calls:
  2567 ;;		_BorraLCD
  2568 ;;		_EnviaDato
  2569 ;;		_HabilitaLCD
  2570 ;;		_RetardoLCD
  2571 ;; This function is called by:
  2572 ;;		_main
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text3
  2577   0020AC                     __ptext3:
  2578                           	callstack 0
  2579   0020AC                     _InicializaLCD:
  2580                           	callstack 22
  2581                           
  2582                           ;LibLCDXC8.h: 64: LATE0=0;
  2583                           
  2584                           ;incstack = 0
  2585   0020AC  908D               	bcf	3981,0,c	;volatile
  2586                           
  2587                           ;LibLCDXC8.h: 65: if(interfaz==4)
  2588   0020AE  0E04               	movlw	4
  2589   0020B0  1850               	xorwf	_interfaz^0,w,c
  2590   0020B2  A4D8               	btfss	status,2,c
  2591   0020B4  D004               	goto	l3511
  2592                           
  2593                           ;LibLCDXC8.h: 66: LATD=(LATD & 0b00001111) | 0x30;
  2594   0020B6  508C               	movf	140,w,c	;volatile
  2595   0020B8  0B0F               	andlw	15
  2596   0020BA  0930               	iorlw	48
  2597   0020BC  D001               	goto	L5
  2598   0020BE                     l3511:
  2599                           
  2600                           ;LibLCDXC8.h: 67: else;LibLCDXC8.h: 68: LATD=0x3F;
  2601   0020BE  0E3F               	movlw	63
  2602   0020C0                     L5:
  2603   0020C0  6E8C               	movwf	140,c	;volatile
  2604                           
  2605                           ;LibLCDXC8.h: 69: HabilitaLCD();
  2606   0020C2  EC9E  F014         	call	_HabilitaLCD	;wreg free
  2607                           
  2608                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  2609   0020C6  0E01               	movlw	1
  2610   0020C8  EC91  F012         	call	_RetardoLCD
  2611                           
  2612                           ;LibLCDXC8.h: 71: if(interfaz==4)
  2613   0020CC  0E04               	movlw	4
  2614   0020CE  1850               	xorwf	_interfaz^0,w,c
  2615   0020D0  A4D8               	btfss	status,2,c
  2616   0020D2  D004               	goto	l3521
  2617                           
  2618                           ;LibLCDXC8.h: 72: LATD=(LATD & 0b00001111) | 0x30;
  2619   0020D4  508C               	movf	140,w,c	;volatile
  2620   0020D6  0B0F               	andlw	15
  2621   0020D8  0930               	iorlw	48
  2622   0020DA  D001               	goto	L6
  2623   0020DC                     l3521:
  2624                           
  2625                           ;LibLCDXC8.h: 73: else;LibLCDXC8.h: 74: LATD=0x3F;
  2626   0020DC  0E3F               	movlw	63
  2627   0020DE                     L6:
  2628   0020DE  6E8C               	movwf	140,c	;volatile
  2629                           
  2630                           ;LibLCDXC8.h: 75: HabilitaLCD();
  2631   0020E0  EC9E  F014         	call	_HabilitaLCD	;wreg free
  2632                           
  2633                           ;LibLCDXC8.h: 76: RetardoLCD(3);
  2634   0020E4  0E03               	movlw	3
  2635   0020E6  EC91  F012         	call	_RetardoLCD
  2636                           
  2637                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2638   0020EA  0E04               	movlw	4
  2639   0020EC  1850               	xorwf	_interfaz^0,w,c
  2640   0020EE  A4D8               	btfss	status,2,c
  2641   0020F0  D004               	goto	l3531
  2642                           
  2643                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2644   0020F2  508C               	movf	140,w,c	;volatile
  2645   0020F4  0B0F               	andlw	15
  2646   0020F6  0930               	iorlw	48
  2647   0020F8  D001               	goto	L7
  2648   0020FA                     l3531:
  2649                           
  2650                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2651   0020FA  0E3F               	movlw	63
  2652   0020FC                     L7:
  2653   0020FC  6E8C               	movwf	140,c	;volatile
  2654                           
  2655                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2656   0020FE  EC9E  F014         	call	_HabilitaLCD	;wreg free
  2657                           
  2658                           ;LibLCDXC8.h: 82: RetardoLCD(4);
  2659   002102  0E04               	movlw	4
  2660   002104  EC91  F012         	call	_RetardoLCD
  2661                           
  2662                           ;LibLCDXC8.h: 83: if(interfaz==4){
  2663   002108  0E04               	movlw	4
  2664   00210A  1850               	xorwf	_interfaz^0,w,c
  2665   00210C  A4D8               	btfss	status,2,c
  2666   00210E  D011               	goto	l3551
  2667                           
  2668                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x20;
  2669   002110  508C               	movf	140,w,c	;volatile
  2670   002112  0B0F               	andlw	15
  2671   002114  0920               	iorlw	32
  2672   002116  6E8C               	movwf	140,c	;volatile
  2673                           
  2674                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2675   002118  EC9E  F014         	call	_HabilitaLCD	;wreg free
  2676                           
  2677                           ;LibLCDXC8.h: 86: RetardoLCD(4);
  2678   00211C  0E04               	movlw	4
  2679   00211E  EC91  F012         	call	_RetardoLCD
  2680                           
  2681                           ;LibLCDXC8.h: 87: EnviaDato(0x2F);
  2682   002122  0E2F               	movlw	47
  2683   002124  EC62  F013         	call	_EnviaDato
  2684                           
  2685                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2686   002128  EC9E  F014         	call	_HabilitaLCD	;wreg free
  2687                           
  2688                           ;LibLCDXC8.h: 89: RetardoLCD(4);
  2689   00212C  0E04               	movlw	4
  2690   00212E  EC91  F012         	call	_RetardoLCD
  2691   002132                     l3551:
  2692                           
  2693                           ;LibLCDXC8.h: 90: };LibLCDXC8.h: 91: BorraLCD();
  2694   002132  EC8A  F014         	call	_BorraLCD	;wreg free
  2695                           
  2696                           ;LibLCDXC8.h: 92: EnviaDato(0xF);
  2697   002136  0E0F               	movlw	15
  2698   002138  EC62  F013         	call	_EnviaDato
  2699                           
  2700                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2701   00213C  EC9E  F014         	call	_HabilitaLCD	;wreg free
  2702                           
  2703                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2704   002140  0E04               	movlw	4
  2705   002142  EC91  F012         	call	_RetardoLCD
  2706   002146  0012               	return		;funcret
  2707   002148                     __end_of_InicializaLCD:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function _BorraLCD *****************
  2711 ;; Defined at:
  2712 ;;		line 103 in file "LibLCDXC8.h"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2726 ;;      Params:         0       0       0       0       0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2729 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2730 ;;Total ram usage:        0 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 7
  2733 ;; This function calls:
  2734 ;;		_EnviaDato
  2735 ;;		_HabilitaLCD
  2736 ;;		_RetardoLCD
  2737 ;; This function is called by:
  2738 ;;		_InicializaLCD
  2739 ;;		_main
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text4
  2744   002914                     __ptext4:
  2745                           	callstack 0
  2746   002914                     _BorraLCD:
  2747                           	callstack 22
  2748                           
  2749                           ;LibLCDXC8.h: 105: LATE0=0;
  2750                           
  2751                           ;incstack = 0
  2752   002914  908D               	bcf	3981,0,c	;volatile
  2753                           
  2754                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  2755   002916  0E01               	movlw	1
  2756   002918  EC62  F013         	call	_EnviaDato
  2757                           
  2758                           ;LibLCDXC8.h: 107: HabilitaLCD();
  2759   00291C  EC9E  F014         	call	_HabilitaLCD	;wreg free
  2760                           
  2761                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  2762   002920  0E02               	movlw	2
  2763   002922  EC91  F012         	call	_RetardoLCD
  2764   002926  0012               	return		;funcret
  2765   002928                     __end_of_BorraLCD:
  2766                           	callstack 0
  2767                           
  2768 ;; *************** function _Imprimir_Resultado *****************
  2769 ;; Defined at:
  2770 ;;		line 308 in file "Lab4.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  r               4   42[BANK0 ] long 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  j               2   58[BANK0 ] int 
  2775 ;;  i               2   50[BANK0 ] int 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2785 ;;      Params:         0       4       0       0       0       0       0       0       0
  2786 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2787 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2788 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2789 ;;Total ram usage:       18 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 10
  2792 ;; This function calls:
  2793 ;;		_DireccionaLCD
  2794 ;;		_EscribeLCD_c
  2795 ;;		_MensajeLCD_Var
  2796 ;;		___aldiv
  2797 ;;		___almod
  2798 ;;		___awtoft
  2799 ;;		___fttol
  2800 ;;		___lmul
  2801 ;;		___lwdiv
  2802 ;;		___lwmod
  2803 ;;		___wmul
  2804 ;;		_pow
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text5
  2811   000F32                     __ptext5:
  2812                           	callstack 0
  2813   000F32                     _Imprimir_Resultado:
  2814                           	callstack 20
  2815                           
  2816                           ;Lab4.c: 309: if ((partdecl-(r*100))>0 | (partdecl-(r*100))<0){
  2817                           
  2818                           ;incstack = 0
  2819   000F32  C08A  F00E         	movff	Imprimir_Resultado@r,___lmul@multiplier
  2820   000F36  C08B  F00F         	movff	Imprimir_Resultado@r+1,___lmul@multiplier+1
  2821   000F3A  C08C  F010         	movff	Imprimir_Resultado@r+2,___lmul@multiplier+2
  2822   000F3E  C08D  F011         	movff	Imprimir_Resultado@r+3,___lmul@multiplier+3
  2823   000F42  0E9C               	movlw	156
  2824   000F44  6E12               	movwf	___lmul@multiplicand^0,c
  2825   000F46  0EFF               	movlw	255
  2826   000F48  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2827   000F4A  0EFF               	movlw	255
  2828   000F4C  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2829   000F4E  0EFF               	movlw	255
  2830   000F50  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2831   000F52  EC66  F012         	call	___lmul	;wreg free
  2832   000F56  0100               	movlb	0	; () banked
  2833   000F58  51A8               	movf	_partdecl& (0+255),w,b
  2834   000F5A  240E               	addwf	?___lmul^0,w,c
  2835   000F5C  6F8E               	movwf	??_Imprimir_Resultado& (0+255),b
  2836   000F5E  51A9               	movf	(_partdecl+1)& (0+255),w,b
  2837   000F60  200F               	addwfc	(?___lmul+1)^0,w,c
  2838   000F62  6F8F               	movwf	(??_Imprimir_Resultado+1)& (0+255),b
  2839   000F64  51AA               	movf	(_partdecl+2)& (0+255),w,b
  2840   000F66  2010               	addwfc	(?___lmul+2)^0,w,c
  2841   000F68  6F90               	movwf	(??_Imprimir_Resultado+2)& (0+255),b
  2842   000F6A  51AB               	movf	(_partdecl+3)& (0+255),w,b
  2843   000F6C  2011               	addwfc	(?___lmul+3)^0,w,c
  2844   000F6E  6F91               	movwf	(??_Imprimir_Resultado+3)& (0+255),b
  2845   000F70  518E               	movf	??_Imprimir_Resultado& (0+255),w,b
  2846   000F72  118F               	iorwf	(??_Imprimir_Resultado+1)& (0+255),w,b
  2847   000F74  1190               	iorwf	(??_Imprimir_Resultado+2)& (0+255),w,b
  2848   000F76  1191               	iorwf	(??_Imprimir_Resultado+3)& (0+255),w,b
  2849   000F78  B4D8               	btfsc	status,2,c
  2850   000F7A  D059               	goto	l4811
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;Lab4.c: 310: for (int i = 0; i < 3; i++) {
  2854   000F7C  0E00               	movlw	0
  2855   000F7E  6F93               	movwf	(Imprimir_Resultado@i+1)& (0+255),b
  2856   000F80  0E00               	movlw	0
  2857   000F82  6F92               	movwf	Imprimir_Resultado@i& (0+255),b
  2858   000F84                     l4795:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;Lab4.c: 311: r = n1 / n2;
  2862   000F84  C0B2  F014         	movff	_n1,___lwdiv@dividend
  2863   000F88  C0B3  F015         	movff	_n1+1,___lwdiv@dividend+1
  2864   000F8C  C0B0  F016         	movff	_n2,___lwdiv@divisor
  2865   000F90  C0B1  F017         	movff	_n2+1,___lwdiv@divisor+1
  2866   000F94  ECE7  F012         	call	___lwdiv	;wreg free
  2867   000F98  C014  F08A         	movff	?___lwdiv,Imprimir_Resultado@r
  2868   000F9C  C015  F08B         	movff	?___lwdiv+1,Imprimir_Resultado@r+1
  2869   000FA0  0100               	movlb	0	; () banked
  2870   000FA2  6B8C               	clrf	(Imprimir_Resultado@r+2)& (0+255),b
  2871   000FA4  6B8D               	clrf	(Imprimir_Resultado@r+3)& (0+255),b
  2872                           
  2873                           ;Lab4.c: 312: m = n1 % n2;
  2874   000FA6  C0B2  F00E         	movff	_n1,___lwmod@dividend
  2875   000FAA  C0B3  F00F         	movff	_n1+1,___lwmod@dividend+1
  2876   000FAE  C0B0  F010         	movff	_n2,___lwmod@divisor
  2877   000FB2  C0B1  F011         	movff	_n2+1,___lwmod@divisor+1
  2878   000FB6  ECA8  F013         	call	___lwmod	;wreg free
  2879   000FBA  C00E  F0B7         	movff	?___lwmod,_m
  2880   000FBE  C00F  F0B8         	movff	?___lwmod+1,_m+1
  2881   000FC2  6BB9               	clrf	(_m+2)& (0+255),b
  2882   000FC4  6BBA               	clrf	(_m+3)& (0+255),b
  2883                           
  2884                           ;Lab4.c: 313: EscribeLCD_c(r+'0');
  2885   000FC6  518A               	movf	Imprimir_Resultado@r& (0+255),w,b
  2886   000FC8  0F30               	addlw	48
  2887   000FCA  EC5E  F014         	call	_EscribeLCD_c
  2888                           
  2889                           ;Lab4.c: 314: if(i == 0 && m != 0) {
  2890   000FCE  0100               	movlb	0	; () banked
  2891   000FD0  5192               	movf	Imprimir_Resultado@i& (0+255),w,b
  2892   000FD2  1193               	iorwf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2893   000FD4  A4D8               	btfss	status,2,c
  2894   000FD6  D009               	goto	l4803
  2895                           
  2896                           ; BSR set to: 0
  2897   000FD8  51B7               	movf	_m& (0+255),w,b
  2898   000FDA  11B8               	iorwf	(_m+1)& (0+255),w,b
  2899   000FDC  11B9               	iorwf	(_m+2)& (0+255),w,b
  2900   000FDE  11BA               	iorwf	(_m+3)& (0+255),w,b
  2901   000FE0  B4D8               	btfsc	status,2,c
  2902   000FE2  D003               	goto	l4803
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;Lab4.c: 315: EscribeLCD_c(',');
  2906   000FE4  0E2C               	movlw	44
  2907   000FE6  EC5E  F014         	call	_EscribeLCD_c
  2908   000FEA                     l4803:
  2909                           
  2910                           ;Lab4.c: 316: };Lab4.c: 318: if (m != 0) {
  2911   000FEA  0100               	movlb	0	; () banked
  2912   000FEC  51B7               	movf	_m& (0+255),w,b
  2913   000FEE  11B8               	iorwf	(_m+1)& (0+255),w,b
  2914   000FF0  11B9               	iorwf	(_m+2)& (0+255),w,b
  2915   000FF2  11BA               	iorwf	(_m+3)& (0+255),w,b
  2916   000FF4  B4D8               	btfsc	status,2,c
  2917   000FF6  0012               	return	
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;Lab4.c: 319: n1 = m * 10;
  2921   000FF8  C0B7  F00E         	movff	_m,___wmul@multiplier
  2922   000FFC  C0B8  F00F         	movff	_m+1,___wmul@multiplier+1
  2923   001000  0E00               	movlw	0
  2924   001002  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  2925   001004  0E0A               	movlw	10
  2926   001006  6E10               	movwf	___wmul@multiplicand^0,c
  2927   001008  EC2D  F014         	call	___wmul	;wreg free
  2928   00100C  C00E  F0B2         	movff	?___wmul,_n1
  2929   001010  C00F  F0B3         	movff	?___wmul+1,_n1+1
  2930                           
  2931                           ;Lab4.c: 320: } else {
  2932   001014  0100               	movlb	0	; () banked
  2933   001016  4B92               	infsnz	Imprimir_Resultado@i& (0+255),f,b
  2934   001018  2B93               	incf	(Imprimir_Resultado@i+1)& (0+255),f,b
  2935                           
  2936                           ; BSR set to: 0
  2937   00101A  BF93               	btfsc	(Imprimir_Resultado@i+1)& (0+255),7,b
  2938   00101C  D7B3               	goto	l4795
  2939   00101E  5193               	movf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2940   001020  E105               	bnz	u6020
  2941   001022  0E03               	movlw	3
  2942   001024  5D92               	subwf	Imprimir_Resultado@i& (0+255),w,b
  2943   001026  B0D8               	btfsc	status,0,c
  2944   001028  0012               	return	
  2945   00102A  D7AC               	goto	l4795
  2946   00102C                     u6020:
  2947   00102C  0012               	return	
  2948   00102E                     l4811:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;Lab4.c: 326: if(r>0x17179149 & r!=1000 & r !=1001){
  2952   00102E  BF8D               	btfsc	(Imprimir_Resultado@r+3)& (0+255),7,b
  2953   001030  D02B               	goto	l4823
  2954   001032  0E4A               	movlw	74
  2955   001034  5D8A               	subwf	Imprimir_Resultado@r& (0+255),w,b
  2956   001036  0E91               	movlw	145
  2957   001038  598B               	subwfb	(Imprimir_Resultado@r+1)& (0+255),w,b
  2958   00103A  0E17               	movlw	23
  2959   00103C  598C               	subwfb	(Imprimir_Resultado@r+2)& (0+255),w,b
  2960   00103E  0E17               	movlw	23
  2961   001040  598D               	subwfb	(Imprimir_Resultado@r+3)& (0+255),w,b
  2962   001042  A0D8               	btfss	status,0,c
  2963   001044  D021               	goto	l4823
  2964                           
  2965                           ; BSR set to: 0
  2966   001046  0EE8               	movlw	232
  2967   001048  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  2968   00104A  E106               	bnz	u6040
  2969   00104C  0E03               	movlw	3
  2970   00104E  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  2971   001050  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  2972   001052  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  2973   001054  B4D8               	btfsc	status,2,c
  2974   001056  D018               	goto	l4823
  2975   001058                     u6040:
  2976                           
  2977                           ; BSR set to: 0
  2978   001058  0EE9               	movlw	233
  2979   00105A  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  2980   00105C  E106               	bnz	u6050
  2981   00105E  0E03               	movlw	3
  2982   001060  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  2983   001062  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  2984   001064  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  2985   001066  B4D8               	btfsc	status,2,c
  2986   001068  D00F               	goto	l4823
  2987   00106A                     u6050:
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;Lab4.c: 327: DireccionaLCD(0x85);
  2991   00106A  0E85               	movlw	133
  2992   00106C  EC69  F014         	call	_DireccionaLCD
  2993                           
  2994                           ;Lab4.c: 328: MensajeLCD_Var("Imposible");
  2995   001070  0E93               	movlw	low STR_12
  2996   001072  6E13               	movwf	MensajeLCD_Var@a^0,c
  2997   001074  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  2998                           
  2999                           ;Lab4.c: 329: DireccionaLCD(0xC0);
  3000   001078  0EC0               	movlw	192
  3001   00107A  EC69  F014         	call	_DireccionaLCD
  3002                           
  3003                           ;Lab4.c: 330: MensajeLCD_Var("de calcular");
  3004   00107E  0E72               	movlw	low STR_13
  3005   001080  6E13               	movwf	MensajeLCD_Var@a^0,c
  3006   001082  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  3007                           
  3008                           ;Lab4.c: 331: }else{
  3009   001086  0012               	return	
  3010   001088                     l4823:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;Lab4.c: 332: if(r>=0xA & r!=1000 & r !=1001){
  3014   001088  BF8D               	btfsc	(Imprimir_Resultado@r+3)& (0+255),7,b
  3015   00108A  D0EA               	goto	l4855
  3016   00108C  518D               	movf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3017   00108E  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3018   001090  118B               	iorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3019   001092  E104               	bnz	u6060
  3020   001094  0E0A               	movlw	10
  3021   001096  5D8A               	subwf	Imprimir_Resultado@r& (0+255),w,b
  3022   001098  A0D8               	btfss	status,0,c
  3023   00109A  D0E2               	goto	l4855
  3024   00109C                     u6060:
  3025                           
  3026                           ; BSR set to: 0
  3027   00109C  0EE8               	movlw	232
  3028   00109E  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3029   0010A0  E106               	bnz	u6070
  3030   0010A2  0E03               	movlw	3
  3031   0010A4  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3032   0010A6  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3033   0010A8  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3034   0010AA  B4D8               	btfsc	status,2,c
  3035   0010AC  D0D9               	goto	l4855
  3036   0010AE                     u6070:
  3037                           
  3038                           ; BSR set to: 0
  3039   0010AE  0EE9               	movlw	233
  3040   0010B0  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3041   0010B2  E106               	bnz	u6080
  3042   0010B4  0E03               	movlw	3
  3043   0010B6  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3044   0010B8  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3045   0010BA  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3046   0010BC  B4D8               	btfsc	status,2,c
  3047   0010BE  D0D0               	goto	l4855
  3048   0010C0                     u6080:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;Lab4.c: 356: for(int j=9;j>=0;j--){
  3052   0010C0  0E00               	movlw	0
  3053   0010C2  6F9B               	movwf	(Imprimir_Resultado@j+1)& (0+255),b
  3054   0010C4  0E09               	movlw	9
  3055   0010C6  6F9A               	movwf	Imprimir_Resultado@j& (0+255),b
  3056   0010C8                     l4835:
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;Lab4.c: 357: if(r/(long)pow(10,j)>0){
  3060   0010C8  C09A  F016         	movff	Imprimir_Resultado@j,___awtoft@c
  3061   0010CC  C09B  F017         	movff	Imprimir_Resultado@j+1,___awtoft@c+1
  3062   0010D0  ECE9  F013         	call	___awtoft	;wreg free
  3063   0010D4  C016  F094         	movff	?___awtoft,_Imprimir_Resultado$905
  3064   0010D8  C017  F095         	movff	?___awtoft+1,_Imprimir_Resultado$905+1
  3065   0010DC  C018  F096         	movff	?___awtoft+2,_Imprimir_Resultado$905+2
  3066                           
  3067                           ;Lab4.c: 357: if(r/(long)pow(10,j)>0){
  3068   0010E0  C094  F06E         	movff	_Imprimir_Resultado$905,pow@y
  3069   0010E4  C095  F06F         	movff	_Imprimir_Resultado$905+1,pow@y+1
  3070   0010E8  C096  F070         	movff	_Imprimir_Resultado$905+2,pow@y+2
  3071   0010EC  0E00               	movlw	0
  3072   0010EE  0100               	movlb	0	; () banked
  3073   0010F0  6F6B               	movwf	pow@x& (0+255),b
  3074   0010F2  0E20               	movlw	32
  3075   0010F4  6F6C               	movwf	(pow@x+1)& (0+255),b
  3076   0010F6  0E41               	movlw	65
  3077   0010F8  6F6D               	movwf	(pow@x+2)& (0+255),b
  3078   0010FA  EC1D  F00B         	call	_pow	;wreg free
  3079   0010FE  C06B  F097         	movff	?_pow,_Imprimir_Resultado$906
  3080   001102  C06C  F098         	movff	?_pow+1,_Imprimir_Resultado$906+1
  3081   001106  C06D  F099         	movff	?_pow+2,_Imprimir_Resultado$906+2
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;Lab4.c: 357: if(r/(long)pow(10,j)>0){
  3085   00110A  C08A  F07C         	movff	Imprimir_Resultado@r,___aldiv@dividend
  3086   00110E  C08B  F07D         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  3087   001112  C08C  F07E         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  3088   001116  C08D  F07F         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  3089   00111A  C097  F01A         	movff	_Imprimir_Resultado$906,___fttol@f1
  3090   00111E  C098  F01B         	movff	_Imprimir_Resultado$906+1,___fttol@f1+1
  3091   001122  C099  F01C         	movff	_Imprimir_Resultado$906+2,___fttol@f1+2
  3092   001126  ECBD  F00D         	call	___fttol	;wreg free
  3093   00112A  C01A  F080         	movff	?___fttol,___aldiv@divisor
  3094   00112E  C01B  F081         	movff	?___fttol+1,___aldiv@divisor+1
  3095   001132  C01C  F082         	movff	?___fttol+2,___aldiv@divisor+2
  3096   001136  C01D  F083         	movff	?___fttol+3,___aldiv@divisor+3
  3097   00113A  EC8D  F00E         	call	___aldiv	;wreg free
  3098   00113E  BF7F               	btfsc	(?___aldiv+3)& (0+255),7,b
  3099   001140  D089               	goto	l4851
  3100   001142  517F               	movf	(?___aldiv+3)& (0+255),w,b
  3101   001144  117E               	iorwf	(?___aldiv+2)& (0+255),w,b
  3102   001146  117D               	iorwf	(?___aldiv+1)& (0+255),w,b
  3103   001148  E103               	bnz	u6090
  3104   00114A  057C               	decf	?___aldiv& (0+255),w,b
  3105   00114C  A0D8               	btfss	status,0,c
  3106   00114E  D082               	goto	l4851
  3107   001150                     u6090:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;Lab4.c: 358: EscribeLCD_c(r/(long)pow(10,j)+48);
  3111   001150  C09A  F016         	movff	Imprimir_Resultado@j,___awtoft@c
  3112   001154  C09B  F017         	movff	Imprimir_Resultado@j+1,___awtoft@c+1
  3113   001158  ECE9  F013         	call	___awtoft	;wreg free
  3114   00115C  C016  F094         	movff	?___awtoft,_Imprimir_Resultado$905
  3115   001160  C017  F095         	movff	?___awtoft+1,_Imprimir_Resultado$905+1
  3116   001164  C018  F096         	movff	?___awtoft+2,_Imprimir_Resultado$905+2
  3117                           
  3118                           ;Lab4.c: 358: EscribeLCD_c(r/(long)pow(10,j)+48);
  3119   001168  C094  F06E         	movff	_Imprimir_Resultado$905,pow@y
  3120   00116C  C095  F06F         	movff	_Imprimir_Resultado$905+1,pow@y+1
  3121   001170  C096  F070         	movff	_Imprimir_Resultado$905+2,pow@y+2
  3122   001174  0E00               	movlw	0
  3123   001176  0100               	movlb	0	; () banked
  3124   001178  6F6B               	movwf	pow@x& (0+255),b
  3125   00117A  0E20               	movlw	32
  3126   00117C  6F6C               	movwf	(pow@x+1)& (0+255),b
  3127   00117E  0E41               	movlw	65
  3128   001180  6F6D               	movwf	(pow@x+2)& (0+255),b
  3129   001182  EC1D  F00B         	call	_pow	;wreg free
  3130   001186  C06B  F097         	movff	?_pow,_Imprimir_Resultado$906
  3131   00118A  C06C  F098         	movff	?_pow+1,_Imprimir_Resultado$906+1
  3132   00118E  C06D  F099         	movff	?_pow+2,_Imprimir_Resultado$906+2
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;Lab4.c: 358: EscribeLCD_c(r/(long)pow(10,j)+48);
  3136   001192  C08A  F07C         	movff	Imprimir_Resultado@r,___aldiv@dividend
  3137   001196  C08B  F07D         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  3138   00119A  C08C  F07E         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  3139   00119E  C08D  F07F         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  3140   0011A2  C097  F01A         	movff	_Imprimir_Resultado$906,___fttol@f1
  3141   0011A6  C098  F01B         	movff	_Imprimir_Resultado$906+1,___fttol@f1+1
  3142   0011AA  C099  F01C         	movff	_Imprimir_Resultado$906+2,___fttol@f1+2
  3143   0011AE  ECBD  F00D         	call	___fttol	;wreg free
  3144   0011B2  C01A  F080         	movff	?___fttol,___aldiv@divisor
  3145   0011B6  C01B  F081         	movff	?___fttol+1,___aldiv@divisor+1
  3146   0011BA  C01C  F082         	movff	?___fttol+2,___aldiv@divisor+2
  3147   0011BE  C01D  F083         	movff	?___fttol+3,___aldiv@divisor+3
  3148   0011C2  EC8D  F00E         	call	___aldiv	;wreg free
  3149   0011C6  517C               	movf	?___aldiv& (0+255),w,b
  3150   0011C8  0F30               	addlw	48
  3151   0011CA  EC5E  F014         	call	_EscribeLCD_c
  3152                           
  3153                           ;Lab4.c: 359: r=r%(long)pow(10,j);
  3154   0011CE  C09A  F016         	movff	Imprimir_Resultado@j,___awtoft@c
  3155   0011D2  C09B  F017         	movff	Imprimir_Resultado@j+1,___awtoft@c+1
  3156   0011D6  ECE9  F013         	call	___awtoft	;wreg free
  3157   0011DA  C016  F094         	movff	?___awtoft,_Imprimir_Resultado$905
  3158   0011DE  C017  F095         	movff	?___awtoft+1,_Imprimir_Resultado$905+1
  3159   0011E2  C018  F096         	movff	?___awtoft+2,_Imprimir_Resultado$905+2
  3160                           
  3161                           ;Lab4.c: 359: r=r%(long)pow(10,j);
  3162   0011E6  C094  F06E         	movff	_Imprimir_Resultado$905,pow@y
  3163   0011EA  C095  F06F         	movff	_Imprimir_Resultado$905+1,pow@y+1
  3164   0011EE  C096  F070         	movff	_Imprimir_Resultado$905+2,pow@y+2
  3165   0011F2  0E00               	movlw	0
  3166   0011F4  0100               	movlb	0	; () banked
  3167   0011F6  6F6B               	movwf	pow@x& (0+255),b
  3168   0011F8  0E20               	movlw	32
  3169   0011FA  6F6C               	movwf	(pow@x+1)& (0+255),b
  3170   0011FC  0E41               	movlw	65
  3171   0011FE  6F6D               	movwf	(pow@x+2)& (0+255),b
  3172   001200  EC1D  F00B         	call	_pow	;wreg free
  3173   001204  C06B  F097         	movff	?_pow,_Imprimir_Resultado$906
  3174   001208  C06C  F098         	movff	?_pow+1,_Imprimir_Resultado$906+1
  3175   00120C  C06D  F099         	movff	?_pow+2,_Imprimir_Resultado$906+2
  3176                           
  3177                           ;Lab4.c: 359: r=r%(long)pow(10,j);
  3178   001210  C08A  F07C         	movff	Imprimir_Resultado@r,___almod@dividend
  3179   001214  C08B  F07D         	movff	Imprimir_Resultado@r+1,___almod@dividend+1
  3180   001218  C08C  F07E         	movff	Imprimir_Resultado@r+2,___almod@dividend+2
  3181   00121C  C08D  F07F         	movff	Imprimir_Resultado@r+3,___almod@dividend+3
  3182   001220  C097  F01A         	movff	_Imprimir_Resultado$906,___fttol@f1
  3183   001224  C098  F01B         	movff	_Imprimir_Resultado$906+1,___fttol@f1+1
  3184   001228  C099  F01C         	movff	_Imprimir_Resultado$906+2,___fttol@f1+2
  3185   00122C  ECBD  F00D         	call	___fttol	;wreg free
  3186   001230  C01A  F080         	movff	?___fttol,___almod@divisor
  3187   001234  C01B  F081         	movff	?___fttol+1,___almod@divisor+1
  3188   001238  C01C  F082         	movff	?___fttol+2,___almod@divisor+2
  3189   00123C  C01D  F083         	movff	?___fttol+3,___almod@divisor+3
  3190   001240  ECB0  F00F         	call	___almod	;wreg free
  3191   001244  C07C  F08A         	movff	?___almod,Imprimir_Resultado@r
  3192   001248  C07D  F08B         	movff	?___almod+1,Imprimir_Resultado@r+1
  3193   00124C  C07E  F08C         	movff	?___almod+2,Imprimir_Resultado@r+2
  3194   001250  C07F  F08D         	movff	?___almod+3,Imprimir_Resultado@r+3
  3195   001254                     l4851:
  3196                           
  3197                           ; BSR set to: 0
  3198   001254  079A               	decf	Imprimir_Resultado@j& (0+255),f,b
  3199   001256  A0D8               	btfss	status,0,c
  3200   001258  079B               	decf	(Imprimir_Resultado@j+1)& (0+255),f,b
  3201                           
  3202                           ; BSR set to: 0
  3203   00125A  BF9B               	btfsc	(Imprimir_Resultado@j+1)& (0+255),7,b
  3204   00125C  0012               	return	
  3205   00125E  D734               	goto	l4835
  3206   001260                     l4855:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;Lab4.c: 363: if(r==1000){
  3210   001260  0EE8               	movlw	232
  3211   001262  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3212   001264  E10B               	bnz	l4859
  3213   001266  0E03               	movlw	3
  3214   001268  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3215   00126A  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3216   00126C  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3217   00126E  A4D8               	btfss	status,2,c
  3218   001270  D005               	goto	l4859
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;Lab4.c: 364: MensajeLCD_Var("Infinito");
  3222   001272  0E9D               	movlw	low STR_14
  3223   001274  6E13               	movwf	MensajeLCD_Var@a^0,c
  3224   001276  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  3225                           
  3226                           ;Lab4.c: 365: }else{
  3227   00127A  0012               	return	
  3228   00127C                     l4859:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;Lab4.c: 366: if(r==1001){
  3232   00127C  0EE9               	movlw	233
  3233   00127E  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3234   001280  E10E               	bnz	l4865
  3235   001282  0E03               	movlw	3
  3236   001284  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3237   001286  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3238   001288  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3239   00128A  A4D8               	btfss	status,2,c
  3240   00128C  D008               	goto	l4865
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;Lab4.c: 367: DireccionaLCD(0xC1);
  3244   00128E  0EC1               	movlw	193
  3245   001290  EC69  F014         	call	_DireccionaLCD
  3246                           
  3247                           ;Lab4.c: 368: MensajeLCD_Var("Indeterminado");
  3248   001294  0E57               	movlw	low STR_15
  3249   001296  6E13               	movwf	MensajeLCD_Var@a^0,c
  3250   001298  EC10  F013         	call	_MensajeLCD_Var	;wreg free
  3251                           
  3252                           ;Lab4.c: 369: }else{
  3253   00129C  0012               	return	
  3254   00129E                     l4865:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;Lab4.c: 370: EscribeLCD_c(r+'0');
  3258   00129E  518A               	movf	Imprimir_Resultado@r& (0+255),w,b
  3259   0012A0  0F30               	addlw	48
  3260   0012A2  EC5E  F014         	call	_EscribeLCD_c
  3261   0012A6  0012               	return		;funcret
  3262   0012A8                     __end_of_Imprimir_Resultado:
  3263                           	callstack 0
  3264                           
  3265 ;; *************** function _pow *****************
  3266 ;; Defined at:
  3267 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\pow.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  x               3   11[BANK0 ] void 
  3270 ;;  y               3   14[BANK0 ] void 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  yi              4   24[BANK0 ] unsigned long 
  3273 ;;  sign            1   23[BANK0 ] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  3   11[BANK0 ] unsigned char 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 3F/0
  3280 ;;		On exit  : 3F/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3283 ;;      Params:         0       6       0       0       0       0       0       0       0
  3284 ;;      Locals:         0      11       0       0       0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3286 ;;      Totals:         0      17       0       0       0       0       0       0       0
  3287 ;;Total ram usage:       17 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; Hardware stack levels required when called: 9
  3290 ;; This function calls:
  3291 ;;		___ftge
  3292 ;;		___ftmul
  3293 ;;		___ftneg
  3294 ;;		___fttol
  3295 ;;		___lltoft
  3296 ;;		_exp
  3297 ;;		_log
  3298 ;; This function is called by:
  3299 ;;		_Imprimir_Resultado
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text6
  3304   00163A                     __ptext6:
  3305                           	callstack 0
  3306   00163A                     _pow:
  3307                           	callstack 20
  3308                           
  3309                           ; BSR set to: 0
  3310                           
  3311                           ;incstack = 0
  3312   00163A  0E00               	movlw	0
  3313   00163C  6F77               	movwf	pow@sign& (0+255),b
  3314                           
  3315                           ; BSR set to: 0
  3316   00163E  516B               	movf	pow@x& (0+255),w,b
  3317   001640  116C               	iorwf	(pow@x+1)& (0+255),w,b
  3318   001642  116D               	iorwf	(pow@x+2)& (0+255),w,b
  3319   001644  A4D8               	btfss	status,2,c
  3320   001646  D01D               	goto	l4719
  3321                           
  3322                           ; BSR set to: 0
  3323   001648  0E00               	movlw	0
  3324   00164A  6E0E               	movwf	___ftge@ff1^0,c
  3325   00164C  0E00               	movlw	0
  3326   00164E  6E0F               	movwf	(___ftge@ff1+1)^0,c
  3327   001650  0E00               	movlw	0
  3328   001652  6E10               	movwf	(___ftge@ff1+2)^0,c
  3329   001654  C06E  F011         	movff	pow@y,___ftge@ff2
  3330   001658  C06F  F012         	movff	pow@y+1,___ftge@ff2+1
  3331   00165C  C070  F013         	movff	pow@y+2,___ftge@ff2+2
  3332   001660  ECA7  F011         	call	___ftge	;wreg free
  3333   001664  A0D8               	btfss	status,0,c
  3334   001666  D005               	goto	l1024
  3335   001668  0E00               	movlw	0
  3336   00166A  0100               	movlb	0	; () banked
  3337   00166C  6FAD               	movwf	(_errno+1)& (0+255),b
  3338   00166E  0E21               	movlw	33
  3339   001670  6FAC               	movwf	_errno& (0+255),b
  3340   001672                     l1024:
  3341   001672  0E00               	movlw	0
  3342   001674  0100               	movlb	0	; () banked
  3343   001676  6F6B               	movwf	?_pow& (0+255),b
  3344   001678  0E00               	movlw	0
  3345   00167A  6F6C               	movwf	(?_pow+1)& (0+255),b
  3346   00167C  0E00               	movlw	0
  3347   00167E  6F6D               	movwf	(?_pow+2)& (0+255),b
  3348   001680  0012               	return	
  3349   001682                     l4719:
  3350                           
  3351                           ; BSR set to: 0
  3352   001682  516E               	movf	pow@y& (0+255),w,b
  3353   001684  116F               	iorwf	(pow@y+1)& (0+255),w,b
  3354   001686  1170               	iorwf	(pow@y+2)& (0+255),w,b
  3355   001688  A4D8               	btfss	status,2,c
  3356   00168A  D007               	goto	l4725
  3357                           
  3358                           ; BSR set to: 0
  3359   00168C  0E00               	movlw	0
  3360   00168E  6F6B               	movwf	?_pow& (0+255),b
  3361   001690  0E80               	movlw	128
  3362   001692  6F6C               	movwf	(?_pow+1)& (0+255),b
  3363   001694  0E3F               	movlw	63
  3364   001696  6F6D               	movwf	(?_pow+2)& (0+255),b
  3365   001698  0012               	return	
  3366   00169A                     l4725:
  3367                           
  3368                           ; BSR set to: 0
  3369   00169A  AF6D               	btfss	(pow@x+2)& (0+255),7,b
  3370   00169C  D041               	goto	l4737
  3371                           
  3372                           ; BSR set to: 0
  3373   00169E  C06E  F01A         	movff	pow@y,___fttol@f1
  3374   0016A2  C06F  F01B         	movff	pow@y+1,___fttol@f1+1
  3375   0016A6  C070  F01C         	movff	pow@y+2,___fttol@f1+2
  3376   0016AA  ECBD  F00D         	call	___fttol	;wreg free
  3377   0016AE  C01A  F078         	movff	?___fttol,pow@yi
  3378   0016B2  C01B  F079         	movff	?___fttol+1,pow@yi+1
  3379   0016B6  C01C  F07A         	movff	?___fttol+2,pow@yi+2
  3380   0016BA  C01D  F07B         	movff	?___fttol+3,pow@yi+3
  3381   0016BE  C078  F016         	movff	pow@yi,___lltoft@c
  3382   0016C2  C079  F017         	movff	pow@yi+1,___lltoft@c+1
  3383   0016C6  C07A  F018         	movff	pow@yi+2,___lltoft@c+2
  3384   0016CA  C07B  F019         	movff	pow@yi+3,___lltoft@c+3
  3385   0016CE  ECE1  F011         	call	___lltoft	;wreg free
  3386   0016D2  0100               	movlb	0	; () banked
  3387   0016D4  516E               	movf	pow@y& (0+255),w,b
  3388   0016D6  1816               	xorwf	?___lltoft^0,w,c
  3389   0016D8  E107               	bnz	u5900
  3390   0016DA  516F               	movf	(pow@y+1)& (0+255),w,b
  3391   0016DC  1817               	xorwf	(?___lltoft+1)^0,w,c
  3392   0016DE  E104               	bnz	u5900
  3393   0016E0  5170               	movf	(pow@y+2)& (0+255),w,b
  3394   0016E2  1818               	xorwf	(?___lltoft+2)^0,w,c
  3395   0016E4  B4D8               	btfsc	status,2,c
  3396   0016E6  D00B               	goto	l4733
  3397   0016E8                     u5900:
  3398                           
  3399                           ; BSR set to: 0
  3400   0016E8  0E00               	movlw	0
  3401   0016EA  6FAD               	movwf	(_errno+1)& (0+255),b
  3402   0016EC  0E21               	movlw	33
  3403   0016EE  6FAC               	movwf	_errno& (0+255),b
  3404   0016F0  0E00               	movlw	0
  3405   0016F2  6F6B               	movwf	?_pow& (0+255),b
  3406   0016F4  0E00               	movlw	0
  3407   0016F6  6F6C               	movwf	(?_pow+1)& (0+255),b
  3408   0016F8  0E00               	movlw	0
  3409   0016FA  6F6D               	movwf	(?_pow+2)& (0+255),b
  3410   0016FC  0012               	return	
  3411   0016FE                     l4733:
  3412                           
  3413                           ; BSR set to: 0
  3414   0016FE  5178               	movf	pow@yi& (0+255),w,b
  3415   001700  0B01               	andlw	1
  3416   001702  6F77               	movwf	pow@sign& (0+255),b
  3417                           
  3418                           ; BSR set to: 0
  3419   001704  C06B  F00E         	movff	pow@x,___ftneg@f1
  3420   001708  C06C  F00F         	movff	pow@x+1,___ftneg@f1+1
  3421   00170C  C06D  F010         	movff	pow@x+2,___ftneg@f1+2
  3422   001710  EC40  F014         	call	___ftneg	;wreg free
  3423   001714  C00E  F06B         	movff	?___ftneg,pow@x
  3424   001718  C00F  F06C         	movff	?___ftneg+1,pow@x+1
  3425   00171C  C010  F06D         	movff	?___ftneg+2,pow@x+2
  3426   001720                     l4737:
  3427                           
  3428                           ; BSR set to: 0
  3429   001720  C06B  F03F         	movff	pow@x,log@x
  3430   001724  C06C  F040         	movff	pow@x+1,log@x+1
  3431   001728  C06D  F041         	movff	pow@x+2,log@x+2
  3432   00172C  ECDA  F00B         	call	_log	;wreg free
  3433   001730  C03F  F071         	movff	?_log,_pow$907
  3434   001734  C040  F072         	movff	?_log+1,_pow$907+1
  3435   001738  C041  F073         	movff	?_log+2,_pow$907+2
  3436   00173C  C071  F01A         	movff	_pow$907,___ftmul@f1
  3437   001740  C072  F01B         	movff	_pow$907+1,___ftmul@f1+1
  3438   001744  C073  F01C         	movff	_pow$907+2,___ftmul@f1+2
  3439   001748  C06E  F01D         	movff	pow@y,___ftmul@f2
  3440   00174C  C06F  F01E         	movff	pow@y+1,___ftmul@f2+1
  3441   001750  C070  F01F         	movff	pow@y+2,___ftmul@f2+2
  3442   001754  EC63  F00C         	call	___ftmul	;wreg free
  3443   001758  C01A  F074         	movff	?___ftmul,_pow$908
  3444   00175C  C01B  F075         	movff	?___ftmul+1,_pow$908+1
  3445   001760  C01C  F076         	movff	?___ftmul+2,_pow$908+2
  3446   001764  C074  F062         	movff	_pow$908,exp@x
  3447   001768  C075  F063         	movff	_pow$908+1,exp@x+1
  3448   00176C  C076  F064         	movff	_pow$908+2,exp@x+2
  3449   001770  EC54  F009         	call	_exp	;wreg free
  3450   001774  C062  F06B         	movff	?_exp,pow@x
  3451   001778  C063  F06C         	movff	?_exp+1,pow@x+1
  3452   00177C  C064  F06D         	movff	?_exp+2,pow@x+2
  3453   001780  0100               	movlb	0	; () banked
  3454   001782  5177               	movf	pow@sign& (0+255),w,b
  3455   001784  B4D8               	btfsc	status,2,c
  3456   001786  D00F               	goto	l1029
  3457                           
  3458                           ; BSR set to: 0
  3459   001788  C06B  F00E         	movff	pow@x,___ftneg@f1
  3460   00178C  C06C  F00F         	movff	pow@x+1,___ftneg@f1+1
  3461   001790  C06D  F010         	movff	pow@x+2,___ftneg@f1+2
  3462   001794  EC40  F014         	call	___ftneg	;wreg free
  3463   001798  C00E  F06B         	movff	?___ftneg,?_pow
  3464   00179C  C00F  F06C         	movff	?___ftneg+1,?_pow+1
  3465   0017A0  C010  F06D         	movff	?___ftneg+2,?_pow+2
  3466   0017A4  0012               	return	
  3467   0017A6                     l1029:
  3468                           
  3469                           ; BSR set to: 0
  3470   0017A6  C06B  F06B         	movff	pow@x,?_pow
  3471   0017AA  C06C  F06C         	movff	pow@x+1,?_pow+1
  3472   0017AE  C06D  F06D         	movff	pow@x+2,?_pow+2
  3473                           
  3474                           ; BSR set to: 0
  3475   0017B2  0012               	return		;funcret
  3476   0017B4                     __end_of_pow:
  3477                           	callstack 0
  3478                           
  3479 ;; *************** function _log *****************
  3480 ;; Defined at:
  3481 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\log.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  x               3   62[COMRAM] unsigned char 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  exponent        2   65[COMRAM] int 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  3   62[COMRAM] int 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 3F/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3495 ;;      Params:         3       0       0       0       0       0       0       0       0
  3496 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3498 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3499 ;;Total ram usage:        5 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; Hardware stack levels required when called: 8
  3502 ;; This function calls:
  3503 ;;		___awtoft
  3504 ;;		___ftadd
  3505 ;;		___ftmul
  3506 ;;		_eval_poly
  3507 ;;		_frexp
  3508 ;; This function is called by:
  3509 ;;		_pow
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text7
  3514   0017B4                     __ptext7:
  3515                           	callstack 0
  3516   0017B4                     _log:
  3517                           	callstack 20
  3518                           
  3519                           ; BSR set to: 0
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;incstack = 0
  3523   0017B4  AE41               	btfss	(log@x+2)^0,7,c
  3524   0017B6  D00B               	goto	l4649
  3525                           
  3526                           ; BSR set to: 0
  3527   0017B8  0E00               	movlw	0
  3528   0017BA  6FAD               	movwf	(_errno+1)& (0+255),b
  3529   0017BC  0E21               	movlw	33
  3530   0017BE  6FAC               	movwf	_errno& (0+255),b
  3531   0017C0  0E00               	movlw	0
  3532   0017C2  6E3F               	movwf	?_log^0,c
  3533   0017C4  0E00               	movlw	0
  3534   0017C6  6E40               	movwf	(?_log+1)^0,c
  3535   0017C8  0E00               	movlw	0
  3536   0017CA  6E41               	movwf	(?_log+2)^0,c
  3537   0017CC  0012               	return	
  3538   0017CE                     l4649:
  3539                           
  3540                           ; BSR set to: 0
  3541   0017CE  503F               	movf	log@x^0,w,c
  3542   0017D0  1040               	iorwf	(log@x+1)^0,w,c
  3543   0017D2  1041               	iorwf	(log@x+2)^0,w,c
  3544   0017D4  A4D8               	btfss	status,2,c
  3545   0017D6  D00B               	goto	l4655
  3546                           
  3547                           ; BSR set to: 0
  3548   0017D8  0E00               	movlw	0
  3549   0017DA  6FAD               	movwf	(_errno+1)& (0+255),b
  3550   0017DC  0E22               	movlw	34
  3551   0017DE  6FAC               	movwf	_errno& (0+255),b
  3552   0017E0  0E00               	movlw	0
  3553   0017E2  6E3F               	movwf	?_log^0,c
  3554   0017E4  0E00               	movlw	0
  3555   0017E6  6E40               	movwf	(?_log+1)^0,c
  3556   0017E8  0E00               	movlw	0
  3557   0017EA  6E41               	movwf	(?_log+2)^0,c
  3558   0017EC  0012               	return	
  3559   0017EE                     l4655:
  3560                           
  3561                           ; BSR set to: 0
  3562   0017EE  0E00               	movlw	0
  3563   0017F0  6E1D               	movwf	___ftmul@f2^0,c
  3564   0017F2  0E00               	movlw	0
  3565   0017F4  6E1E               	movwf	(___ftmul@f2+1)^0,c
  3566   0017F6  0E40               	movlw	64
  3567   0017F8  6E1F               	movwf	(___ftmul@f2+2)^0,c
  3568   0017FA  0E42               	movlw	low log@exponent
  3569   0017FC  6E11               	movwf	frexp@eptr^0,c
  3570   0017FE  C03F  F00E         	movff	log@x,frexp@value
  3571   001802  C040  F00F         	movff	log@x+1,frexp@value+1
  3572   001806  C041  F010         	movff	log@x+2,frexp@value+2
  3573   00180A  ECED  F010         	call	_frexp	;wreg free
  3574   00180E  C00E  F01A         	movff	?_frexp,___ftmul@f1
  3575   001812  C00F  F01B         	movff	?_frexp+1,___ftmul@f1+1
  3576   001816  C010  F01C         	movff	?_frexp+2,___ftmul@f1+2
  3577   00181A  EC63  F00C         	call	___ftmul	;wreg free
  3578   00181E  C01A  F029         	movff	?___ftmul,___ftadd@f1
  3579   001822  C01B  F02A         	movff	?___ftmul+1,___ftadd@f1+1
  3580   001826  C01C  F02B         	movff	?___ftmul+2,___ftadd@f1+2
  3581   00182A  0E00               	movlw	0
  3582   00182C  6E2C               	movwf	___ftadd@f2^0,c
  3583   00182E  0E80               	movlw	128
  3584   001830  6E2D               	movwf	(___ftadd@f2+1)^0,c
  3585   001832  0EBF               	movlw	191
  3586   001834  6E2E               	movwf	(___ftadd@f2+2)^0,c
  3587   001836  EC49  F00A         	call	___ftadd	;wreg free
  3588   00183A  C029  F03F         	movff	?___ftadd,log@x
  3589   00183E  C02A  F040         	movff	?___ftadd+1,log@x+1
  3590   001842  C02B  F041         	movff	?___ftadd+2,log@x+2
  3591   001846  0642               	decf	log@exponent^0,f,c
  3592   001848  A0D8               	btfss	status,0,c
  3593   00184A  0643               	decf	(log@exponent+1)^0,f,c
  3594   00184C  C03F  F035         	movff	log@x,eval_poly@x
  3595   001850  C040  F036         	movff	log@x+1,eval_poly@x+1
  3596   001854  C041  F037         	movff	log@x+2,eval_poly@x+2
  3597   001858  0E1F               	movlw	low log@coeff
  3598   00185A  6E38               	movwf	eval_poly@d^0,c
  3599   00185C  0E00               	movlw	0
  3600   00185E  6E3A               	movwf	(eval_poly@n+1)^0,c
  3601   001860  0E08               	movlw	8
  3602   001862  6E39               	movwf	eval_poly@n^0,c
  3603   001864  EC07  F010         	call	_eval_poly	;wreg free
  3604   001868  C035  F03F         	movff	?_eval_poly,log@x
  3605   00186C  C036  F040         	movff	?_eval_poly+1,log@x+1
  3606   001870  C037  F041         	movff	?_eval_poly+2,log@x+2
  3607   001874  0E72               	movlw	114
  3608   001876  6E1D               	movwf	___ftmul@f2^0,c
  3609   001878  0E31               	movlw	49
  3610   00187A  6E1E               	movwf	(___ftmul@f2+1)^0,c
  3611   00187C  0E3F               	movlw	63
  3612   00187E  6E1F               	movwf	(___ftmul@f2+2)^0,c
  3613   001880  C042  F016         	movff	log@exponent,___awtoft@c
  3614   001884  C043  F017         	movff	log@exponent+1,___awtoft@c+1
  3615   001888  ECE9  F013         	call	___awtoft	;wreg free
  3616   00188C  C016  F01A         	movff	?___awtoft,___ftmul@f1
  3617   001890  C017  F01B         	movff	?___awtoft+1,___ftmul@f1+1
  3618   001894  C018  F01C         	movff	?___awtoft+2,___ftmul@f1+2
  3619   001898  EC63  F00C         	call	___ftmul	;wreg free
  3620   00189C  C01A  F029         	movff	?___ftmul,___ftadd@f1
  3621   0018A0  C01B  F02A         	movff	?___ftmul+1,___ftadd@f1+1
  3622   0018A4  C01C  F02B         	movff	?___ftmul+2,___ftadd@f1+2
  3623   0018A8  C03F  F02C         	movff	log@x,___ftadd@f2
  3624   0018AC  C040  F02D         	movff	log@x+1,___ftadd@f2+1
  3625   0018B0  C041  F02E         	movff	log@x+2,___ftadd@f2+2
  3626   0018B4  EC49  F00A         	call	___ftadd	;wreg free
  3627   0018B8  C029  F03F         	movff	?___ftadd,?_log
  3628   0018BC  C02A  F040         	movff	?___ftadd+1,?_log+1
  3629   0018C0  C02B  F041         	movff	?___ftadd+2,?_log+2
  3630   0018C4  0012               	return		;funcret
  3631   0018C6                     __end_of_log:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _exp *****************
  3635 ;; Defined at:
  3636 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\exp.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  x               3    2[BANK0 ] int 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  exponent        2    8[BANK0 ] int 
  3641 ;;  sign            1   10[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  3    2[BANK0 ] unsigned char 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3651 ;;      Params:         0       3       0       0       0       0       0       0       0
  3652 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3654 ;;      Totals:         0       9       0       0       0       0       0       0       0
  3655 ;;Total ram usage:        9 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 8
  3658 ;; This function calls:
  3659 ;;		___awtoft
  3660 ;;		___ftdiv
  3661 ;;		___ftge
  3662 ;;		___ftmul
  3663 ;;		___ftneg
  3664 ;;		___ftsub
  3665 ;;		___fttol
  3666 ;;		_eval_poly
  3667 ;;		_floor
  3668 ;;		_ldexp
  3669 ;; This function is called by:
  3670 ;;		_pow
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text8
  3675   0012A8                     __ptext8:
  3676                           	callstack 0
  3677   0012A8                     _exp:
  3678                           	callstack 20
  3679                           
  3680                           ;incstack = 0
  3681   0012A8  0100               	movlb	0	; () banked
  3682   0012AA  5162               	movf	exp@x& (0+255),w,b
  3683   0012AC  1163               	iorwf	(exp@x+1)& (0+255),w,b
  3684   0012AE  1164               	iorwf	(exp@x+2)& (0+255),w,b
  3685   0012B0  A4D8               	btfss	status,2,c
  3686   0012B2  D007               	goto	l4671
  3687                           
  3688                           ; BSR set to: 0
  3689   0012B4  0E00               	movlw	0
  3690   0012B6  6F62               	movwf	?_exp& (0+255),b
  3691   0012B8  0E80               	movlw	128
  3692   0012BA  6F63               	movwf	(?_exp+1)& (0+255),b
  3693   0012BC  0E3F               	movlw	63
  3694   0012BE  6F64               	movwf	(?_exp+2)& (0+255),b
  3695   0012C0  0012               	return	
  3696   0012C2                     l4671:
  3697                           
  3698                           ; BSR set to: 0
  3699   0012C2  0E72               	movlw	114
  3700   0012C4  6E0E               	movwf	___ftge@ff1^0,c
  3701   0012C6  0E31               	movlw	49
  3702   0012C8  6E0F               	movwf	(___ftge@ff1+1)^0,c
  3703   0012CA  0E44               	movlw	68
  3704   0012CC  6E10               	movwf	(___ftge@ff1+2)^0,c
  3705   0012CE  C062  F011         	movff	exp@x,___ftge@ff2
  3706   0012D2  C063  F012         	movff	exp@x+1,___ftge@ff2+1
  3707   0012D6  C064  F013         	movff	exp@x+2,___ftge@ff2+2
  3708   0012DA  ECA7  F011         	call	___ftge	;wreg free
  3709   0012DE  B0D8               	btfsc	status,0,c
  3710   0012E0  D00C               	goto	l4677
  3711   0012E2  0E00               	movlw	0
  3712   0012E4  0100               	movlb	0	; () banked
  3713   0012E6  6FAD               	movwf	(_errno+1)& (0+255),b
  3714   0012E8  0E22               	movlw	34
  3715   0012EA  6FAC               	movwf	_errno& (0+255),b
  3716   0012EC  0EFF               	movlw	255
  3717   0012EE  6F62               	movwf	?_exp& (0+255),b
  3718   0012F0  0E7F               	movlw	127
  3719   0012F2  6F63               	movwf	(?_exp+1)& (0+255),b
  3720   0012F4  0E7F               	movlw	127
  3721   0012F6  6F64               	movwf	(?_exp+2)& (0+255),b
  3722   0012F8  0012               	return	
  3723   0012FA                     l4677:
  3724   0012FA  C062  F00E         	movff	exp@x,___ftge@ff1
  3725   0012FE  C063  F00F         	movff	exp@x+1,___ftge@ff1+1
  3726   001302  C064  F010         	movff	exp@x+2,___ftge@ff1+2
  3727   001306  0E49               	movlw	73
  3728   001308  6E11               	movwf	___ftge@ff2^0,c
  3729   00130A  0E3A               	movlw	58
  3730   00130C  6E12               	movwf	(___ftge@ff2+1)^0,c
  3731   00130E  0EC4               	movlw	196
  3732   001310  6E13               	movwf	(___ftge@ff2+2)^0,c
  3733   001312  ECA7  F011         	call	___ftge	;wreg free
  3734   001316  B0D8               	btfsc	status,0,c
  3735   001318  D00C               	goto	l4683
  3736   00131A  0E00               	movlw	0
  3737   00131C  0100               	movlb	0	; () banked
  3738   00131E  6FAD               	movwf	(_errno+1)& (0+255),b
  3739   001320  0E22               	movlw	34
  3740   001322  6FAC               	movwf	_errno& (0+255),b
  3741   001324  0E00               	movlw	0
  3742   001326  6F62               	movwf	?_exp& (0+255),b
  3743   001328  0E00               	movlw	0
  3744   00132A  6F63               	movwf	(?_exp+1)& (0+255),b
  3745   00132C  0E00               	movlw	0
  3746   00132E  6F64               	movwf	(?_exp+2)& (0+255),b
  3747   001330  0012               	return	
  3748   001332                     l4683:
  3749   001332  0100               	movlb	0	; () banked
  3750   001334  AF64               	btfss	(exp@x+2)& (0+255),7,b
  3751   001336  D002               	goto	u5810
  3752   001338  0E01               	movlw	1
  3753   00133A  D001               	goto	u5820
  3754   00133C                     u5810:
  3755   00133C  0E00               	movlw	0
  3756   00133E                     u5820:
  3757   00133E  6F6A               	movwf	exp@sign& (0+255),b
  3758                           
  3759                           ; BSR set to: 0
  3760   001340  516A               	movf	exp@sign& (0+255),w,b
  3761   001342  B4D8               	btfsc	status,2,c
  3762   001344  D00E               	goto	l1048
  3763                           
  3764                           ; BSR set to: 0
  3765   001346  C062  F00E         	movff	exp@x,___ftneg@f1
  3766   00134A  C063  F00F         	movff	exp@x+1,___ftneg@f1+1
  3767   00134E  C064  F010         	movff	exp@x+2,___ftneg@f1+2
  3768   001352  EC40  F014         	call	___ftneg	;wreg free
  3769   001356  C00E  F062         	movff	?___ftneg,exp@x
  3770   00135A  C00F  F063         	movff	?___ftneg+1,exp@x+1
  3771   00135E  C010  F064         	movff	?___ftneg+2,exp@x+2
  3772   001362                     l1048:
  3773                           
  3774                           ; BSR set to: 0
  3775   001362  C062  F01A         	movff	exp@x,___ftmul@f1
  3776   001366  C063  F01B         	movff	exp@x+1,___ftmul@f1+1
  3777   00136A  C064  F01C         	movff	exp@x+2,___ftmul@f1+2
  3778   00136E  0EAA               	movlw	170
  3779   001370  6E1D               	movwf	___ftmul@f2^0,c
  3780   001372  0EB8               	movlw	184
  3781   001374  6E1E               	movwf	(___ftmul@f2+1)^0,c
  3782   001376  0E3F               	movlw	63
  3783   001378  6E1F               	movwf	(___ftmul@f2+2)^0,c
  3784   00137A  EC63  F00C         	call	___ftmul	;wreg free
  3785   00137E  C01A  F062         	movff	?___ftmul,exp@x
  3786   001382  C01B  F063         	movff	?___ftmul+1,exp@x+1
  3787   001386  C01C  F064         	movff	?___ftmul+2,exp@x+2
  3788   00138A  C062  F035         	movff	exp@x,floor@x
  3789   00138E  C063  F036         	movff	exp@x+1,floor@x+1
  3790   001392  C064  F037         	movff	exp@x+2,floor@x+2
  3791   001396  EC50  F00D         	call	_floor	;wreg free
  3792   00139A  C035  F065         	movff	?_floor,_exp$909
  3793   00139E  C036  F066         	movff	?_floor+1,_exp$909+1
  3794   0013A2  C037  F067         	movff	?_floor+2,_exp$909+2
  3795   0013A6  C065  F01A         	movff	_exp$909,___fttol@f1
  3796   0013AA  C066  F01B         	movff	_exp$909+1,___fttol@f1+1
  3797   0013AE  C067  F01C         	movff	_exp$909+2,___fttol@f1+2
  3798   0013B2  ECBD  F00D         	call	___fttol	;wreg free
  3799   0013B6  C01A  F068         	movff	?___fttol,exp@exponent
  3800   0013BA  C01B  F069         	movff	?___fttol+1,exp@exponent+1
  3801   0013BE  C062  F035         	movff	exp@x,___ftsub@f1
  3802   0013C2  C063  F036         	movff	exp@x+1,___ftsub@f1+1
  3803   0013C6  C064  F037         	movff	exp@x+2,___ftsub@f1+2
  3804   0013CA  C068  F016         	movff	exp@exponent,___awtoft@c
  3805   0013CE  C069  F017         	movff	exp@exponent+1,___awtoft@c+1
  3806   0013D2  ECE9  F013         	call	___awtoft	;wreg free
  3807   0013D6  C016  F038         	movff	?___awtoft,___ftsub@f2
  3808   0013DA  C017  F039         	movff	?___awtoft+1,___ftsub@f2+1
  3809   0013DE  C018  F03A         	movff	?___awtoft+2,___ftsub@f2+2
  3810   0013E2  ECC9  F013         	call	___ftsub	;wreg free
  3811   0013E6  C035  F062         	movff	?___ftsub,exp@x
  3812   0013EA  C036  F063         	movff	?___ftsub+1,exp@x+1
  3813   0013EE  C037  F064         	movff	?___ftsub+2,exp@x+2
  3814   0013F2  C062  F035         	movff	exp@x,eval_poly@x
  3815   0013F6  C063  F036         	movff	exp@x+1,eval_poly@x+1
  3816   0013FA  C064  F037         	movff	exp@x+2,eval_poly@x+2
  3817   0013FE  0E01               	movlw	low exp@coeff
  3818   001400  6E38               	movwf	eval_poly@d^0,c
  3819   001402  0E00               	movlw	0
  3820   001404  6E3A               	movwf	(eval_poly@n+1)^0,c
  3821   001406  0E09               	movlw	9
  3822   001408  6E39               	movwf	eval_poly@n^0,c
  3823   00140A  EC07  F010         	call	_eval_poly	;wreg free
  3824   00140E  C035  F03F         	movff	?_eval_poly,ldexp@value
  3825   001412  C036  F040         	movff	?_eval_poly+1,ldexp@value+1
  3826   001416  C037  F041         	movff	?_eval_poly+2,ldexp@value+2
  3827   00141A  C068  F042         	movff	exp@exponent,ldexp@newexp
  3828   00141E  C069  F043         	movff	exp@exponent+1,ldexp@newexp+1
  3829   001422  ECF4  F00E         	call	_ldexp	;wreg free
  3830   001426  C03F  F062         	movff	?_ldexp,exp@x
  3831   00142A  C040  F063         	movff	?_ldexp+1,exp@x+1
  3832   00142E  C041  F064         	movff	?_ldexp+2,exp@x+2
  3833   001432  0100               	movlb	0	; () banked
  3834   001434  516A               	movf	exp@sign& (0+255),w,b
  3835   001436  B4D8               	btfsc	status,2,c
  3836   001438  D025               	goto	l1049
  3837                           
  3838                           ; BSR set to: 0
  3839   00143A  2962               	incf	exp@x& (0+255),w,b
  3840   00143C  E10E               	bnz	l4705
  3841   00143E  0E7F               	movlw	127
  3842   001440  1963               	xorwf	(exp@x+1)& (0+255),w,b
  3843   001442  E10B               	bnz	l4705
  3844   001444  0E7F               	movlw	127
  3845   001446  1964               	xorwf	(exp@x+2)& (0+255),w,b
  3846   001448  A4D8               	btfss	status,2,c
  3847   00144A  D007               	goto	l4705
  3848                           
  3849                           ; BSR set to: 0
  3850   00144C  0E00               	movlw	0
  3851   00144E  6F62               	movwf	?_exp& (0+255),b
  3852   001450  0E00               	movlw	0
  3853   001452  6F63               	movwf	(?_exp+1)& (0+255),b
  3854   001454  0E00               	movlw	0
  3855   001456  6F64               	movwf	(?_exp+2)& (0+255),b
  3856   001458  0012               	return	
  3857   00145A                     l4705:
  3858                           
  3859                           ; BSR set to: 0
  3860   00145A  0E00               	movlw	0
  3861   00145C  6E16               	movwf	___ftdiv@f1^0,c
  3862   00145E  0E80               	movlw	128
  3863   001460  6E17               	movwf	(___ftdiv@f1+1)^0,c
  3864   001462  0E3F               	movlw	63
  3865   001464  6E18               	movwf	(___ftdiv@f1+2)^0,c
  3866   001466  C062  F019         	movff	exp@x,___ftdiv@f2
  3867   00146A  C063  F01A         	movff	exp@x+1,___ftdiv@f2+1
  3868   00146E  C064  F01B         	movff	exp@x+2,___ftdiv@f2+2
  3869   001472  ECDD  F00C         	call	___ftdiv	;wreg free
  3870   001476  C016  F062         	movff	?___ftdiv,?_exp
  3871   00147A  C017  F063         	movff	?___ftdiv+1,?_exp+1
  3872   00147E  C018  F064         	movff	?___ftdiv+2,?_exp+2
  3873   001482  0012               	return	
  3874   001484                     l1049:
  3875                           
  3876                           ; BSR set to: 0
  3877   001484  C062  F062         	movff	exp@x,?_exp
  3878   001488  C063  F063         	movff	exp@x+1,?_exp+1
  3879   00148C  C064  F064         	movff	exp@x+2,?_exp+2
  3880   001490  0012               	return		;funcret
  3881   001492                     __end_of_exp:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function _ldexp *****************
  3885 ;; Defined at:
  3886 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\frexp.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  value           3   62[COMRAM] unsigned char 
  3889 ;;  newexp          2   65[COMRAM] int 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  3   62[COMRAM] int 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3901 ;;      Params:         5       0       0       0       0       0       0       0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3903 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3904 ;;      Totals:         5       2       0       0       0       0       0       0       0
  3905 ;;Total ram usage:        7 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 5
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_exp
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text9
  3916   001DE8                     __ptext9:
  3917                           	callstack 0
  3918   001DE8                     _ldexp:
  3919                           	callstack 22
  3920                           
  3921                           ;incstack = 0
  3922   001DE8  503F               	movf	ldexp@value^0,w,c
  3923   001DEA  1040               	iorwf	(ldexp@value+1)^0,w,c
  3924   001DEC  1041               	iorwf	(ldexp@value+2)^0,w,c
  3925   001DEE  A4D8               	btfss	status,2,c
  3926   001DF0  D007               	goto	l4603
  3927   001DF2  0E00               	movlw	0
  3928   001DF4  6E3F               	movwf	?_ldexp^0,c
  3929   001DF6  0E00               	movlw	0
  3930   001DF8  6E40               	movwf	(?_ldexp+1)^0,c
  3931   001DFA  0E00               	movlw	0
  3932   001DFC  6E41               	movwf	(?_ldexp+2)^0,c
  3933   001DFE  0012               	return	
  3934   001E00                     l4603:
  3935   001E00  5041               	movf	(ldexp@value+2)^0,w,c
  3936   001E02  0B7F               	andlw	127
  3937   001E04  0100               	movlb	0	; () banked
  3938   001E06  6F60               	movwf	??_ldexp& (0+255),b
  3939   001E08  6B61               	clrf	(??_ldexp+1)& (0+255),b
  3940   001E0A  90D8               	bcf	status,0,c
  3941   001E0C  3760               	rlcf	??_ldexp& (0+255),f,b
  3942   001E0E  3761               	rlcf	(??_ldexp+1)& (0+255),f,b
  3943   001E10  5160               	movf	??_ldexp& (0+255),w,b
  3944   001E12  2642               	addwf	ldexp@newexp^0,f,c
  3945   001E14  5161               	movf	(??_ldexp+1)& (0+255),w,b
  3946   001E16  2243               	addwfc	(ldexp@newexp+1)^0,f,c
  3947   001E18  AE40               	btfss	(ldexp@value+1)^0,7,c
  3948   001E1A  D003               	goto	u5710
  3949   001E1C  6B60               	clrf	??_ldexp& (0+255),b
  3950   001E1E  2B60               	incf	??_ldexp& (0+255),f,b
  3951   001E20  D002               	goto	u5718
  3952   001E22                     u5710:
  3953   001E22  0100               	movlb	0	; () banked
  3954   001E24  6B60               	clrf	??_ldexp& (0+255),b
  3955   001E26                     u5718:
  3956   001E26  5160               	movf	??_ldexp& (0+255),w,b
  3957   001E28  2642               	addwf	ldexp@newexp^0,f,c
  3958   001E2A  0E00               	movlw	0
  3959   001E2C  2243               	addwfc	(ldexp@newexp+1)^0,f,c
  3960   001E2E  AE43               	btfss	(ldexp@newexp+1)^0,7,c
  3961   001E30  D00B               	goto	l4611
  3962                           
  3963                           ; BSR set to: 0
  3964   001E32  0E00               	movlw	0
  3965   001E34  6FAD               	movwf	(_errno+1)& (0+255),b
  3966   001E36  0E22               	movlw	34
  3967   001E38  6FAC               	movwf	_errno& (0+255),b
  3968   001E3A  0E00               	movlw	0
  3969   001E3C  6E3F               	movwf	?_ldexp^0,c
  3970   001E3E  0E00               	movlw	0
  3971   001E40  6E40               	movwf	(?_ldexp+1)^0,c
  3972   001E42  0E00               	movlw	0
  3973   001E44  6E41               	movwf	(?_ldexp+2)^0,c
  3974   001E46  0012               	return	
  3975   001E48                     l4611:
  3976                           
  3977                           ; BSR set to: 0
  3978   001E48  BE43               	btfsc	(ldexp@newexp+1)^0,7,c
  3979   001E4A  D017               	goto	l4627
  3980   001E4C  0443               	decf	(ldexp@newexp+1)^0,w,c
  3981   001E4E  A0D8               	btfss	status,0,c
  3982   001E50  D014               	goto	l4627
  3983                           
  3984                           ; BSR set to: 0
  3985   001E52  0E00               	movlw	0
  3986   001E54  6FAD               	movwf	(_errno+1)& (0+255),b
  3987   001E56  0E22               	movlw	34
  3988   001E58  6FAC               	movwf	_errno& (0+255),b
  3989                           
  3990                           ; BSR set to: 0
  3991   001E5A  AE41               	btfss	(ldexp@value+2)^0,7,c
  3992   001E5C  D007               	goto	l4623
  3993                           
  3994                           ; BSR set to: 0
  3995   001E5E  0EFF               	movlw	255
  3996   001E60  6E3F               	movwf	?_ldexp^0,c
  3997   001E62  0E7F               	movlw	127
  3998   001E64  6E40               	movwf	(?_ldexp+1)^0,c
  3999   001E66  0EFF               	movlw	255
  4000   001E68  6E41               	movwf	(?_ldexp+2)^0,c
  4001   001E6A  0012               	return	
  4002   001E6C                     l4623:
  4003                           
  4004                           ; BSR set to: 0
  4005   001E6C  0EFF               	movlw	255
  4006   001E6E  6E3F               	movwf	?_ldexp^0,c
  4007   001E70  0E7F               	movlw	127
  4008   001E72  6E40               	movwf	(?_ldexp+1)^0,c
  4009   001E74  0E7F               	movlw	127
  4010   001E76  6E41               	movwf	(?_ldexp+2)^0,c
  4011   001E78  0012               	return	
  4012   001E7A                     l4627:
  4013                           
  4014                           ; BSR set to: 0
  4015   001E7A  3443               	rlcf	(ldexp@newexp+1)^0,w,c
  4016   001E7C  3043               	rrcf	(ldexp@newexp+1)^0,w,c
  4017   001E7E  6F61               	movwf	(??_ldexp+1)& (0+255),b
  4018   001E80  3042               	rrcf	ldexp@newexp^0,w,c
  4019   001E82  6F60               	movwf	??_ldexp& (0+255),b
  4020   001E84  5041               	movf	(ldexp@value+2)^0,w,c
  4021   001E86  1960               	xorwf	??_ldexp& (0+255),w,b
  4022   001E88  0B80               	andlw	-128
  4023   001E8A  1960               	xorwf	??_ldexp& (0+255),w,b
  4024   001E8C  6E41               	movwf	(ldexp@value+2)^0,c
  4025   001E8E  C042  F060         	movff	ldexp@newexp,??_ldexp
  4026   001E92  0E01               	movlw	1
  4027   001E94  1760               	andwf	??_ldexp& (0+255),f,b
  4028   001E96  3360               	rrcf	??_ldexp& (0+255),f,b
  4029   001E98  3360               	rrcf	??_ldexp& (0+255),f,b
  4030   001E9A  5040               	movf	(ldexp@value+1)^0,w,c
  4031   001E9C  1960               	xorwf	??_ldexp& (0+255),w,b
  4032   001E9E  0B7F               	andlw	-129
  4033   001EA0  1960               	xorwf	??_ldexp& (0+255),w,b
  4034   001EA2  6E40               	movwf	(ldexp@value+1)^0,c
  4035                           
  4036                           ; BSR set to: 0
  4037   001EA4  C03F  F03F         	movff	ldexp@value,?_ldexp
  4038   001EA8  C040  F040         	movff	ldexp@value+1,?_ldexp+1
  4039   001EAC  C041  F041         	movff	ldexp@value+2,?_ldexp+2
  4040   001EB0  0012               	return		;funcret
  4041   001EB2                     __end_of_ldexp:
  4042                           	callstack 0
  4043                           
  4044 ;; *************** function _floor *****************
  4045 ;; Defined at:
  4046 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\floor.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  x               3   52[COMRAM] int 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  i               3   55[COMRAM] int 
  4051 ;;  expon           2   58[COMRAM] int 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  3   52[COMRAM] int 
  4054 ;; Registers used:
  4055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4061 ;;      Params:         3       0       0       0       0       0       0       0       0
  4062 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4064 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4065 ;;Total ram usage:        8 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 7
  4068 ;; This function calls:
  4069 ;;		___altoft
  4070 ;;		___ftadd
  4071 ;;		___ftge
  4072 ;;		___fttol
  4073 ;;		_frexp
  4074 ;; This function is called by:
  4075 ;;		_exp
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text10
  4080   001AA0                     __ptext10:
  4081                           	callstack 0
  4082   001AA0                     _floor:
  4083                           	callstack 20
  4084                           
  4085                           ;incstack = 0
  4086   001AA0  C035  F00E         	movff	floor@x,frexp@value
  4087   001AA4  C036  F00F         	movff	floor@x+1,frexp@value+1
  4088   001AA8  C037  F010         	movff	floor@x+2,frexp@value+2
  4089   001AAC  0E3B               	movlw	low floor@expon
  4090   001AAE  6E11               	movwf	frexp@eptr^0,c
  4091   001AB0  ECED  F010         	call	_frexp	;wreg free
  4092   001AB4  AE3C               	btfss	(floor@expon+1)^0,7,c
  4093   001AB6  D010               	goto	l4581
  4094   001AB8  AE37               	btfss	(floor@x+2)^0,7,c
  4095   001ABA  D007               	goto	l4577
  4096   001ABC  0E00               	movlw	0
  4097   001ABE  6E35               	movwf	?_floor^0,c
  4098   001AC0  0E80               	movlw	128
  4099   001AC2  6E36               	movwf	(?_floor+1)^0,c
  4100   001AC4  0EBF               	movlw	191
  4101   001AC6  6E37               	movwf	(?_floor+2)^0,c
  4102   001AC8  0012               	return	
  4103   001ACA                     l4577:
  4104   001ACA  0E00               	movlw	0
  4105   001ACC  6E35               	movwf	?_floor^0,c
  4106   001ACE  0E00               	movlw	0
  4107   001AD0  6E36               	movwf	(?_floor+1)^0,c
  4108   001AD2  0E00               	movlw	0
  4109   001AD4  6E37               	movwf	(?_floor+2)^0,c
  4110   001AD6  0012               	return	
  4111   001AD8                     l4581:
  4112   001AD8  503C               	movf	(floor@expon+1)^0,w,c
  4113   001ADA  E104               	bnz	u5670
  4114   001ADC  0E15               	movlw	21
  4115   001ADE  5C3B               	subwf	floor@expon^0,w,c
  4116   001AE0  A0D8               	btfss	status,0,c
  4117   001AE2  D007               	goto	l4585
  4118   001AE4                     u5670:
  4119   001AE4  C035  F035         	movff	floor@x,?_floor
  4120   001AE8  C036  F036         	movff	floor@x+1,?_floor+1
  4121   001AEC  C037  F037         	movff	floor@x+2,?_floor+2
  4122   001AF0  0012               	return	
  4123   001AF2                     l4585:
  4124   001AF2  C035  F01A         	movff	floor@x,___fttol@f1
  4125   001AF6  C036  F01B         	movff	floor@x+1,___fttol@f1+1
  4126   001AFA  C037  F01C         	movff	floor@x+2,___fttol@f1+2
  4127   001AFE  ECBD  F00D         	call	___fttol	;wreg free
  4128   001B02  C01A  F029         	movff	?___fttol,___altoft@c
  4129   001B06  C01B  F02A         	movff	?___fttol+1,___altoft@c+1
  4130   001B0A  C01C  F02B         	movff	?___fttol+2,___altoft@c+2
  4131   001B0E  C01D  F02C         	movff	?___fttol+3,___altoft@c+3
  4132   001B12  EC6B  F011         	call	___altoft	;wreg free
  4133   001B16  C029  F038         	movff	?___altoft,floor@i
  4134   001B1A  C02A  F039         	movff	?___altoft+1,floor@i+1
  4135   001B1E  C02B  F03A         	movff	?___altoft+2,floor@i+2
  4136   001B22  C035  F00E         	movff	floor@x,___ftge@ff1
  4137   001B26  C036  F00F         	movff	floor@x+1,___ftge@ff1+1
  4138   001B2A  C037  F010         	movff	floor@x+2,___ftge@ff1+2
  4139   001B2E  C038  F011         	movff	floor@i,___ftge@ff2
  4140   001B32  C039  F012         	movff	floor@i+1,___ftge@ff2+1
  4141   001B36  C03A  F013         	movff	floor@i+2,___ftge@ff2+2
  4142   001B3A  ECA7  F011         	call	___ftge	;wreg free
  4143   001B3E  B0D8               	btfsc	status,0,c
  4144   001B40  D015               	goto	l1065
  4145   001B42  C038  F029         	movff	floor@i,___ftadd@f1
  4146   001B46  C039  F02A         	movff	floor@i+1,___ftadd@f1+1
  4147   001B4A  C03A  F02B         	movff	floor@i+2,___ftadd@f1+2
  4148   001B4E  0E00               	movlw	0
  4149   001B50  6E2C               	movwf	___ftadd@f2^0,c
  4150   001B52  0E80               	movlw	128
  4151   001B54  6E2D               	movwf	(___ftadd@f2+1)^0,c
  4152   001B56  0EBF               	movlw	191
  4153   001B58  6E2E               	movwf	(___ftadd@f2+2)^0,c
  4154   001B5A  EC49  F00A         	call	___ftadd	;wreg free
  4155   001B5E  C029  F035         	movff	?___ftadd,?_floor
  4156   001B62  C02A  F036         	movff	?___ftadd+1,?_floor+1
  4157   001B66  C02B  F037         	movff	?___ftadd+2,?_floor+2
  4158   001B6A  0012               	return	
  4159   001B6C                     l1065:
  4160   001B6C  C038  F035         	movff	floor@i,?_floor
  4161   001B70  C039  F036         	movff	floor@i+1,?_floor+1
  4162   001B74  C03A  F037         	movff	floor@i+2,?_floor+2
  4163   001B78  0012               	return		;funcret
  4164   001B7A                     __end_of_floor:
  4165                           	callstack 0
  4166                           
  4167 ;; *************** function _frexp *****************
  4168 ;; Defined at:
  4169 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\frexp.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  value           3   13[COMRAM] int 
  4172 ;;  eptr            1   16[COMRAM] PTR int 
  4173 ;;		 -> log@exponent(2), floor@expon(2), 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  3   13[COMRAM] PTR int 
  4178 ;; Registers used:
  4179 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4185 ;;      Params:         4       0       0       0       0       0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4187 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4188 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4189 ;;Total ram usage:        6 bytes
  4190 ;; Hardware stack levels used: 1
  4191 ;; Hardware stack levels required when called: 5
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_floor
  4196 ;;		_log
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text11
  4201   0021DA                     __ptext11:
  4202                           	callstack 0
  4203   0021DA                     _frexp:
  4204                           	callstack 22
  4205                           
  4206                           ;incstack = 0
  4207   0021DA  500E               	movf	frexp@value^0,w,c
  4208   0021DC  100F               	iorwf	(frexp@value+1)^0,w,c
  4209   0021DE  1010               	iorwf	(frexp@value+2)^0,w,c
  4210   0021E0  A4D8               	btfss	status,2,c
  4211   0021E2  D00E               	goto	l4485
  4212   0021E4  5011               	movf	frexp@eptr^0,w,c
  4213   0021E6  6ED9               	movwf	fsr2l,c
  4214   0021E8  6ADA               	clrf	fsr2h,c
  4215   0021EA  0E00               	movlw	0
  4216   0021EC  6EDE               	movwf	postinc2,c
  4217   0021EE  0E00               	movlw	0
  4218   0021F0  6EDD               	movwf	postdec2,c
  4219   0021F2  0E00               	movlw	0
  4220   0021F4  6E0E               	movwf	?_frexp^0,c
  4221   0021F6  0E00               	movlw	0
  4222   0021F8  6E0F               	movwf	(?_frexp+1)^0,c
  4223   0021FA  0E00               	movlw	0
  4224   0021FC  6E10               	movwf	(?_frexp+2)^0,c
  4225   0021FE  0012               	return	
  4226   002200                     l4485:
  4227   002200  5010               	movf	(frexp@value+2)^0,w,c
  4228   002202  0B7F               	andlw	127
  4229   002204  6E12               	movwf	??_frexp^0,c
  4230   002206  6A13               	clrf	(??_frexp+1)^0,c
  4231   002208  90D8               	bcf	status,0,c
  4232   00220A  3612               	rlcf	??_frexp^0,f,c
  4233   00220C  3613               	rlcf	(??_frexp+1)^0,f,c
  4234   00220E  5011               	movf	frexp@eptr^0,w,c
  4235   002210  6ED9               	movwf	fsr2l,c
  4236   002212  6ADA               	clrf	fsr2h,c
  4237   002214  C012  FFDE         	movff	??_frexp,postinc2
  4238   002218  C013  FFDD         	movff	??_frexp+1,postdec2
  4239   00221C  5011               	movf	frexp@eptr^0,w,c
  4240   00221E  6ED9               	movwf	fsr2l,c
  4241   002220  6ADA               	clrf	fsr2h,c
  4242   002222  AE0F               	btfss	(frexp@value+1)^0,7,c
  4243   002224  D003               	goto	u5560
  4244   002226  6A12               	clrf	??_frexp^0,c
  4245   002228  2A12               	incf	??_frexp^0,f,c
  4246   00222A  D001               	goto	u5568
  4247   00222C                     u5560:
  4248   00222C  6A12               	clrf	??_frexp^0,c
  4249   00222E                     u5568:
  4250   00222E  5012               	movf	??_frexp^0,w,c
  4251   002230  12DE               	iorwf	postinc2,f,c
  4252   002232  0E00               	movlw	0
  4253   002234  12DD               	iorwf	postdec2,f,c
  4254   002236  5011               	movf	frexp@eptr^0,w,c
  4255   002238  6ED9               	movwf	fsr2l,c
  4256   00223A  6ADA               	clrf	fsr2h,c
  4257   00223C  0E82               	movlw	130
  4258   00223E  26DE               	addwf	postinc2,f,c
  4259   002240  0EFF               	movlw	255
  4260   002242  22DD               	addwfc	postdec2,f,c
  4261   002244  5010               	movf	(frexp@value+2)^0,w,c
  4262   002246  0B80               	andlw	-128
  4263   002248  093F               	iorlw	63
  4264   00224A  6E10               	movwf	(frexp@value+2)^0,c
  4265   00224C  9E0F               	bcf	(frexp@value+1)^0,7,c
  4266   00224E  C00E  F00E         	movff	frexp@value,?_frexp
  4267   002252  C00F  F00F         	movff	frexp@value+1,?_frexp+1
  4268   002256  C010  F010         	movff	frexp@value+2,?_frexp+2
  4269   00225A  0012               	return		;funcret
  4270   00225C                     __end_of_frexp:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function ___fttol *****************
  4274 ;; Defined at:
  4275 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fttol.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  f1              3   25[COMRAM] float 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  lval            4   35[COMRAM] unsigned long 
  4280 ;;  exp1            1   39[COMRAM] unsigned char 
  4281 ;;  sign1           1   34[COMRAM] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  4   25[COMRAM] long 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4291 ;;      Params:         4       0       0       0       0       0       0       0       0
  4292 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4293 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4294 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4295 ;;Total ram usage:       15 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 5
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_Imprimir_Resultado
  4302 ;;		_pow
  4303 ;;		_exp
  4304 ;;		_floor
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text12
  4309   001B7A                     __ptext12:
  4310                           	callstack 0
  4311   001B7A                     ___fttol:
  4312                           	callstack 21
  4313                           
  4314                           ;incstack = 0
  4315   001B7A  C01C  F01E         	movff	___fttol@f1+2,??___fttol
  4316   001B7E  6A1F               	clrf	(??___fttol+1)^0,c
  4317   001B80  6A20               	clrf	(??___fttol+2)^0,c
  4318   001B82  341B               	rlcf	(___fttol@f1+1)^0,w,c
  4319   001B84  361E               	rlcf	??___fttol^0,f,c
  4320   001B86  E301               	bnc	u5471
  4321   001B88  801F               	bsf	(??___fttol+1)^0,0,c
  4322   001B8A                     u5471:
  4323   001B8A  501E               	movf	??___fttol^0,w,c
  4324   001B8C  6E28               	movwf	___fttol@exp1^0,c
  4325   001B8E  5028               	movf	___fttol@exp1^0,w,c
  4326   001B90  A4D8               	btfss	status,2,c
  4327   001B92  D009               	goto	l4437
  4328   001B94                     u5480:
  4329   001B94  0E00               	movlw	0
  4330   001B96  6E1A               	movwf	?___fttol^0,c
  4331   001B98  0E00               	movlw	0
  4332   001B9A  6E1B               	movwf	(?___fttol+1)^0,c
  4333   001B9C  0E00               	movlw	0
  4334   001B9E  6E1C               	movwf	(?___fttol+2)^0,c
  4335   001BA0  0E00               	movlw	0
  4336   001BA2  6E1D               	movwf	(?___fttol+3)^0,c
  4337   001BA4  0012               	return	
  4338   001BA6                     l4437:
  4339   001BA6  0E17               	movlw	23
  4340   001BA8  6E1E               	movwf	??___fttol^0,c
  4341   001BAA  C01A  F01F         	movff	___fttol@f1,??___fttol+1
  4342   001BAE  C01B  F020         	movff	___fttol@f1+1,??___fttol+2
  4343   001BB2  C01C  F021         	movff	___fttol@f1+2,??___fttol+3
  4344   001BB6  281E               	incf	??___fttol^0,w,c
  4345   001BB8  6E22               	movwf	(??___fttol+4)^0,c
  4346   001BBA  D004               	goto	u5490
  4347   001BBC                     u5495:
  4348   001BBC  90D8               	bcf	status,0,c
  4349   001BBE  3221               	rrcf	(??___fttol+3)^0,f,c
  4350   001BC0  3220               	rrcf	(??___fttol+2)^0,f,c
  4351   001BC2  321F               	rrcf	(??___fttol+1)^0,f,c
  4352   001BC4                     u5490:
  4353   001BC4  2E22               	decfsz	(??___fttol+4)^0,f,c
  4354   001BC6  D7FA               	goto	u5495
  4355   001BC8  501F               	movf	(??___fttol+1)^0,w,c
  4356   001BCA  6E23               	movwf	___fttol@sign1^0,c
  4357   001BCC  8E1B               	bsf	(___fttol@f1+1)^0,7,c
  4358   001BCE  0EFF               	movlw	255
  4359   001BD0  161A               	andwf	___fttol@f1^0,f,c
  4360   001BD2  0EFF               	movlw	255
  4361   001BD4  161B               	andwf	(___fttol@f1+1)^0,f,c
  4362   001BD6  0E00               	movlw	0
  4363   001BD8  161C               	andwf	(___fttol@f1+2)^0,f,c
  4364   001BDA  501A               	movf	___fttol@f1^0,w,c
  4365   001BDC  6E24               	movwf	___fttol@lval^0,c
  4366   001BDE  501B               	movf	(___fttol@f1+1)^0,w,c
  4367   001BE0  6E25               	movwf	(___fttol@lval+1)^0,c
  4368   001BE2  501C               	movf	(___fttol@f1+2)^0,w,c
  4369   001BE4  6E26               	movwf	(___fttol@lval+2)^0,c
  4370   001BE6  6A27               	clrf	(___fttol@lval+3)^0,c
  4371   001BE8  0E8E               	movlw	142
  4372   001BEA  5E28               	subwf	___fttol@exp1^0,f,c
  4373   001BEC  AE28               	btfss	___fttol@exp1^0,7,c
  4374   001BEE  D00D               	goto	l4459
  4375   001BF0  5028               	movf	___fttol@exp1^0,w,c
  4376   001BF2  0A80               	xorlw	128
  4377   001BF4  0F8F               	addlw	143
  4378   001BF6  A0D8               	btfss	status,0,c
  4379   001BF8  D7CD               	goto	u5480
  4380   001BFA                     l4455:
  4381   001BFA  90D8               	bcf	status,0,c
  4382   001BFC  3227               	rrcf	(___fttol@lval+3)^0,f,c
  4383   001BFE  3226               	rrcf	(___fttol@lval+2)^0,f,c
  4384   001C00  3225               	rrcf	(___fttol@lval+1)^0,f,c
  4385   001C02  3224               	rrcf	___fttol@lval^0,f,c
  4386   001C04  3E28               	incfsz	___fttol@exp1^0,f,c
  4387   001C06  D7F9               	goto	l4455
  4388   001C08  D00D               	goto	u5530
  4389   001C0A                     l4459:
  4390   001C0A  0E17               	movlw	23
  4391   001C0C  6428               	cpfsgt	___fttol@exp1^0,c
  4392   001C0E  D007               	goto	l4467
  4393   001C10  D7C1               	goto	u5480
  4394   001C12                     l4465:
  4395   001C12  90D8               	bcf	status,0,c
  4396   001C14  3624               	rlcf	___fttol@lval^0,f,c
  4397   001C16  3625               	rlcf	(___fttol@lval+1)^0,f,c
  4398   001C18  3626               	rlcf	(___fttol@lval+2)^0,f,c
  4399   001C1A  3627               	rlcf	(___fttol@lval+3)^0,f,c
  4400   001C1C  0628               	decf	___fttol@exp1^0,f,c
  4401   001C1E                     l4467:
  4402   001C1E  5028               	movf	___fttol@exp1^0,w,c
  4403   001C20  A4D8               	btfss	status,2,c
  4404   001C22  D7F7               	goto	l4465
  4405   001C24                     u5530:
  4406   001C24  5023               	movf	___fttol@sign1^0,w,c
  4407   001C26  B4D8               	btfsc	status,2,c
  4408   001C28  D008               	goto	l4473
  4409   001C2A  1E27               	comf	(___fttol@lval+3)^0,f,c
  4410   001C2C  1E26               	comf	(___fttol@lval+2)^0,f,c
  4411   001C2E  1E25               	comf	(___fttol@lval+1)^0,f,c
  4412   001C30  6C24               	negf	___fttol@lval^0,c
  4413   001C32  0E00               	movlw	0
  4414   001C34  2225               	addwfc	(___fttol@lval+1)^0,f,c
  4415   001C36  2226               	addwfc	(___fttol@lval+2)^0,f,c
  4416   001C38  2227               	addwfc	(___fttol@lval+3)^0,f,c
  4417   001C3A                     l4473:
  4418   001C3A  C024  F01A         	movff	___fttol@lval,?___fttol
  4419   001C3E  C025  F01B         	movff	___fttol@lval+1,?___fttol+1
  4420   001C42  C026  F01C         	movff	___fttol@lval+2,?___fttol+2
  4421   001C46  C027  F01D         	movff	___fttol@lval+3,?___fttol+3
  4422   001C4A  0012               	return		;funcret
  4423   001C4C                     __end_of___fttol:
  4424                           	callstack 0
  4425                           
  4426 ;; *************** function ___ftge *****************
  4427 ;; Defined at:
  4428 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftge.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  ff1             3   13[COMRAM] float 
  4431 ;;  ff2             3   16[COMRAM] float 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;		None               void
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4443 ;;      Params:         6       0       0       0       0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4445 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4446 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4447 ;;Total ram usage:        9 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 5
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_pow
  4454 ;;		_exp
  4455 ;;		_floor
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text13
  4460   00234E                     __ptext13:
  4461                           	callstack 0
  4462   00234E                     ___ftge:
  4463                           	callstack 21
  4464                           
  4465                           ;incstack = 0
  4466   00234E  AE10               	btfss	(___ftge@ff1+2)^0,7,c
  4467   002350  D00F               	goto	l4417
  4468   002352  0E00               	movlw	0
  4469   002354  6E14               	movwf	??___ftge^0,c
  4470   002356  0E00               	movlw	0
  4471   002358  6E15               	movwf	(??___ftge+1)^0,c
  4472   00235A  0E80               	movlw	128
  4473   00235C  6E16               	movwf	(??___ftge+2)^0,c
  4474   00235E  500E               	movf	___ftge@ff1^0,w,c
  4475   002360  5C14               	subwf	??___ftge^0,w,c
  4476   002362  6E0E               	movwf	___ftge@ff1^0,c
  4477   002364  500F               	movf	(___ftge@ff1+1)^0,w,c
  4478   002366  5815               	subwfb	(??___ftge+1)^0,w,c
  4479   002368  6E0F               	movwf	(___ftge@ff1+1)^0,c
  4480   00236A  5010               	movf	(___ftge@ff1+2)^0,w,c
  4481   00236C  5816               	subwfb	(??___ftge+2)^0,w,c
  4482   00236E  6E10               	movwf	(___ftge@ff1+2)^0,c
  4483   002370                     l4417:
  4484   002370  AE13               	btfss	(___ftge@ff2+2)^0,7,c
  4485   002372  D00F               	goto	l4421
  4486   002374  0E00               	movlw	0
  4487   002376  6E14               	movwf	??___ftge^0,c
  4488   002378  0E00               	movlw	0
  4489   00237A  6E15               	movwf	(??___ftge+1)^0,c
  4490   00237C  0E80               	movlw	128
  4491   00237E  6E16               	movwf	(??___ftge+2)^0,c
  4492   002380  5011               	movf	___ftge@ff2^0,w,c
  4493   002382  5C14               	subwf	??___ftge^0,w,c
  4494   002384  6E11               	movwf	___ftge@ff2^0,c
  4495   002386  5012               	movf	(___ftge@ff2+1)^0,w,c
  4496   002388  5815               	subwfb	(??___ftge+1)^0,w,c
  4497   00238A  6E12               	movwf	(___ftge@ff2+1)^0,c
  4498   00238C  5013               	movf	(___ftge@ff2+2)^0,w,c
  4499   00238E  5816               	subwfb	(??___ftge+2)^0,w,c
  4500   002390  6E13               	movwf	(___ftge@ff2+2)^0,c
  4501   002392                     l4421:
  4502   002392  0E00               	movlw	0
  4503   002394  1A0E               	xorwf	___ftge@ff1^0,f,c
  4504   002396  0E00               	movlw	0
  4505   002398  1A0F               	xorwf	(___ftge@ff1+1)^0,f,c
  4506   00239A  0E80               	movlw	128
  4507   00239C  1A10               	xorwf	(___ftge@ff1+2)^0,f,c
  4508   00239E  0E00               	movlw	0
  4509   0023A0  1A11               	xorwf	___ftge@ff2^0,f,c
  4510   0023A2  0E00               	movlw	0
  4511   0023A4  1A12               	xorwf	(___ftge@ff2+1)^0,f,c
  4512   0023A6  0E80               	movlw	128
  4513   0023A8  1A13               	xorwf	(___ftge@ff2+2)^0,f,c
  4514   0023AA  5011               	movf	___ftge@ff2^0,w,c
  4515   0023AC  5C0E               	subwf	___ftge@ff1^0,w,c
  4516   0023AE  5012               	movf	(___ftge@ff2+1)^0,w,c
  4517   0023B0  580F               	subwfb	(___ftge@ff1+1)^0,w,c
  4518   0023B2  5013               	movf	(___ftge@ff2+2)^0,w,c
  4519   0023B4  5810               	subwfb	(___ftge@ff1+2)^0,w,c
  4520   0023B6  B0D8               	btfsc	status,0,c
  4521   0023B8  D002               	goto	l4427
  4522   0023BA  90D8               	bcf	status,0,c
  4523   0023BC  0012               	return	
  4524   0023BE                     l4427:
  4525   0023BE  80D8               	bsf	status,0,c
  4526   0023C0  0012               	return		;funcret
  4527   0023C2                     __end_of___ftge:
  4528                           	callstack 0
  4529                           
  4530 ;; *************** function ___altoft *****************
  4531 ;; Defined at:
  4532 ;;		line 42 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\altoft.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  c               4   40[COMRAM] long 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  sign            1   49[COMRAM] unsigned char 
  4537 ;;  exp             1   48[COMRAM] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  3   40[COMRAM] float 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4547 ;;      Params:         4       0       0       0       0       0       0       0       0
  4548 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4549 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4550 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4551 ;;Total ram usage:       10 bytes
  4552 ;; Hardware stack levels used: 1
  4553 ;; Hardware stack levels required when called: 6
  4554 ;; This function calls:
  4555 ;;		___ftpack
  4556 ;; This function is called by:
  4557 ;;		_floor
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text14
  4562   0022D6                     __ptext14:
  4563                           	callstack 0
  4564   0022D6                     ___altoft:
  4565                           	callstack 20
  4566                           
  4567                           ;incstack = 0
  4568   0022D6  0E00               	movlw	0
  4569   0022D8  6E32               	movwf	___altoft@sign^0,c
  4570   0022DA  0E8E               	movlw	142
  4571   0022DC  6E31               	movwf	___altoft@exp^0,c
  4572   0022DE  AE2C               	btfss	(___altoft@c+3)^0,7,c
  4573   0022E0  D011               	goto	l4289
  4574   0022E2  1E2C               	comf	(___altoft@c+3)^0,f,c
  4575   0022E4  1E2B               	comf	(___altoft@c+2)^0,f,c
  4576   0022E6  1E2A               	comf	(___altoft@c+1)^0,f,c
  4577   0022E8  6C29               	negf	___altoft@c^0,c
  4578   0022EA  0E00               	movlw	0
  4579   0022EC  222A               	addwfc	(___altoft@c+1)^0,f,c
  4580   0022EE  222B               	addwfc	(___altoft@c+2)^0,f,c
  4581   0022F0  222C               	addwfc	(___altoft@c+3)^0,f,c
  4582   0022F2  0E01               	movlw	1
  4583   0022F4  6E32               	movwf	___altoft@sign^0,c
  4584   0022F6  D006               	goto	l4289
  4585   0022F8                     l4287:
  4586   0022F8  90D8               	bcf	status,0,c
  4587   0022FA  322C               	rrcf	(___altoft@c+3)^0,f,c
  4588   0022FC  322B               	rrcf	(___altoft@c+2)^0,f,c
  4589   0022FE  322A               	rrcf	(___altoft@c+1)^0,f,c
  4590   002300  3229               	rrcf	___altoft@c^0,f,c
  4591   002302  2A31               	incf	___altoft@exp^0,f,c
  4592   002304                     l4289:
  4593   002304  0E00               	movlw	0
  4594   002306  1429               	andwf	___altoft@c^0,w,c
  4595   002308  6E2D               	movwf	??___altoft^0,c
  4596   00230A  0E00               	movlw	0
  4597   00230C  142A               	andwf	(___altoft@c+1)^0,w,c
  4598   00230E  6E2E               	movwf	(??___altoft+1)^0,c
  4599   002310  0E00               	movlw	0
  4600   002312  142B               	andwf	(___altoft@c+2)^0,w,c
  4601   002314  6E2F               	movwf	(??___altoft+2)^0,c
  4602   002316  0EFF               	movlw	255
  4603   002318  142C               	andwf	(___altoft@c+3)^0,w,c
  4604   00231A  6E30               	movwf	(??___altoft+3)^0,c
  4605   00231C  502D               	movf	??___altoft^0,w,c
  4606   00231E  102E               	iorwf	(??___altoft+1)^0,w,c
  4607   002320  102F               	iorwf	(??___altoft+2)^0,w,c
  4608   002322  1030               	iorwf	(??___altoft+3)^0,w,c
  4609   002324  A4D8               	btfss	status,2,c
  4610   002326  D7E8               	goto	l4287
  4611   002328  C029  F00E         	movff	___altoft@c,___ftpack@arg
  4612   00232C  C02A  F00F         	movff	___altoft@c+1,___ftpack@arg+1
  4613   002330  C02B  F010         	movff	___altoft@c+2,___ftpack@arg+2
  4614   002334  C031  F011         	movff	___altoft@exp,___ftpack@exp
  4615   002338  C032  F012         	movff	___altoft@sign,___ftpack@sign
  4616   00233C  EC59  F00F         	call	___ftpack	;wreg free
  4617   002340  C00E  F029         	movff	?___ftpack,?___altoft
  4618   002344  C00F  F02A         	movff	?___ftpack+1,?___altoft+1
  4619   002348  C010  F02B         	movff	?___ftpack+2,?___altoft+2
  4620   00234C  0012               	return		;funcret
  4621   00234E                     __end_of___altoft:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _eval_poly *****************
  4625 ;; Defined at:
  4626 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\evalpoly.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  x               3   52[COMRAM] float 
  4629 ;;  d               1   55[COMRAM] PTR const 
  4630 ;;		 -> log@coeff(27), exp@coeff(30), 
  4631 ;;  n               2   56[COMRAM] int 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  res             3   59[COMRAM] int 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  3   52[COMRAM] int 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4643 ;;      Params:         6       0       0       0       0       0       0       0       0
  4644 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4645 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4646 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4647 ;;Total ram usage:       10 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; Hardware stack levels required when called: 7
  4650 ;; This function calls:
  4651 ;;		___ftadd
  4652 ;;		___ftmul
  4653 ;; This function is called by:
  4654 ;;		_exp
  4655 ;;		_log
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text15
  4660   00200E                     __ptext15:
  4661                           	callstack 0
  4662   00200E                     _eval_poly:
  4663                           	callstack 20
  4664                           
  4665                           ;incstack = 0
  4666   00200E  5039               	movf	eval_poly@n^0,w,c
  4667   002010  0D03               	mullw	3
  4668   002012  5038               	movf	eval_poly@d^0,w,c
  4669   002014  24F3               	addwf	243,w,c
  4670   002016  6E3B               	movwf	??_eval_poly^0,c
  4671   002018  C03B  FFF6         	movff	??_eval_poly,tblptrl
  4672   00201C                     	if	1	;There is more than 1 active tblptr byte
  4673   00201C  0E08               	movlw	high __smallconst
  4674   00201E  6EF7               	movwf	tblptrh,c
  4675   002020                     	endif
  4676   002020                     	if	0	;tblptru may be non-zero
  4677   002020                     	endif
  4678   002020                     	if	0	;tblptru may be non-zero
  4679   002020                     	endif
  4680   002020  0009               	tblrd		*+
  4681   002022  CFF5 F03C          	movff	tablat,eval_poly@res
  4682   002026  0009               	tblrd		*+
  4683   002028  CFF5 F03D          	movff	tablat,eval_poly@res+1
  4684   00202C  000A               	tblrd		*-
  4685   00202E  CFF5 F03E          	movff	tablat,eval_poly@res+2
  4686   002032  D031               	goto	l4595
  4687   002034                     l4593:
  4688   002034  C03C  F01D         	movff	eval_poly@res,___ftmul@f2
  4689   002038  C03D  F01E         	movff	eval_poly@res+1,___ftmul@f2+1
  4690   00203C  C03E  F01F         	movff	eval_poly@res+2,___ftmul@f2+2
  4691   002040  C035  F01A         	movff	eval_poly@x,___ftmul@f1
  4692   002044  C036  F01B         	movff	eval_poly@x+1,___ftmul@f1+1
  4693   002048  C037  F01C         	movff	eval_poly@x+2,___ftmul@f1+2
  4694   00204C  EC63  F00C         	call	___ftmul	;wreg free
  4695   002050  C01A  F029         	movff	?___ftmul,___ftadd@f1
  4696   002054  C01B  F02A         	movff	?___ftmul+1,___ftadd@f1+1
  4697   002058  C01C  F02B         	movff	?___ftmul+2,___ftadd@f1+2
  4698   00205C  0639               	decf	eval_poly@n^0,f,c
  4699   00205E  A0D8               	btfss	status,0,c
  4700   002060  063A               	decf	(eval_poly@n+1)^0,f,c
  4701   002062  5039               	movf	eval_poly@n^0,w,c
  4702   002064  0D03               	mullw	3
  4703   002066  5038               	movf	eval_poly@d^0,w,c
  4704   002068  24F3               	addwf	243,w,c
  4705   00206A  6E3B               	movwf	??_eval_poly^0,c
  4706   00206C  C03B  FFF6         	movff	??_eval_poly,tblptrl
  4707   002070                     	if	1	;There is more than 1 active tblptr byte
  4708   002070  0E08               	movlw	high __smallconst
  4709   002072  6EF7               	movwf	tblptrh,c
  4710   002074                     	endif
  4711   002074                     	if	0	;tblptru may be non-zero
  4712   002074                     	endif
  4713   002074                     	if	0	;tblptru may be non-zero
  4714   002074                     	endif
  4715   002074  0009               	tblrd		*+
  4716   002076  CFF5 F02C          	movff	tablat,___ftadd@f2
  4717   00207A  0009               	tblrd		*+
  4718   00207C  CFF5 F02D          	movff	tablat,___ftadd@f2+1
  4719   002080  000A               	tblrd		*-
  4720   002082  CFF5 F02E          	movff	tablat,___ftadd@f2+2
  4721   002086  EC49  F00A         	call	___ftadd	;wreg free
  4722   00208A  C029  F03C         	movff	?___ftadd,eval_poly@res
  4723   00208E  C02A  F03D         	movff	?___ftadd+1,eval_poly@res+1
  4724   002092  C02B  F03E         	movff	?___ftadd+2,eval_poly@res+2
  4725   002096                     l4595:
  4726   002096  5039               	movf	eval_poly@n^0,w,c
  4727   002098  103A               	iorwf	(eval_poly@n+1)^0,w,c
  4728   00209A  A4D8               	btfss	status,2,c
  4729   00209C  D7CB               	goto	l4593
  4730   00209E  C03C  F035         	movff	eval_poly@res,?_eval_poly
  4731   0020A2  C03D  F036         	movff	eval_poly@res+1,?_eval_poly+1
  4732   0020A6  C03E  F037         	movff	eval_poly@res+2,?_eval_poly+2
  4733   0020AA  0012               	return		;funcret
  4734   0020AC                     __end_of_eval_poly:
  4735                           	callstack 0
  4736                           
  4737 ;; *************** function ___ftmul *****************
  4738 ;; Defined at:
  4739 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftmul.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  f1              3   25[COMRAM] float 
  4742 ;;  f2              3   28[COMRAM] float 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  f3_as_produc    3   35[COMRAM] unsigned um
  4745 ;;  sign            1   39[COMRAM] unsigned char 
  4746 ;;  cntr            1   38[COMRAM] unsigned char 
  4747 ;;  exp             1   34[COMRAM] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  3   25[COMRAM] float 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4757 ;;      Params:         6       0       0       0       0       0       0       0       0
  4758 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4759 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4760 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4761 ;;Total ram usage:       15 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; Hardware stack levels required when called: 6
  4764 ;; This function calls:
  4765 ;;		___ftpack
  4766 ;; This function is called by:
  4767 ;;		_pow
  4768 ;;		_exp
  4769 ;;		_eval_poly
  4770 ;;		_log
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text16
  4775   0018C6                     __ptext16:
  4776                           	callstack 0
  4777   0018C6                     ___ftmul:
  4778                           	callstack 20
  4779                           
  4780                           ;incstack = 0
  4781   0018C6  C01C  F020         	movff	___ftmul@f1+2,??___ftmul
  4782   0018CA  6A21               	clrf	(??___ftmul+1)^0,c
  4783   0018CC  6A22               	clrf	(??___ftmul+2)^0,c
  4784   0018CE  341B               	rlcf	(___ftmul@f1+1)^0,w,c
  4785   0018D0  3620               	rlcf	??___ftmul^0,f,c
  4786   0018D2  E301               	bnc	u5381
  4787   0018D4  8021               	bsf	(??___ftmul+1)^0,0,c
  4788   0018D6                     u5381:
  4789   0018D6  5020               	movf	??___ftmul^0,w,c
  4790   0018D8  6E23               	movwf	___ftmul@exp^0,c
  4791   0018DA  5023               	movf	___ftmul@exp^0,w,c
  4792   0018DC  A4D8               	btfss	status,2,c
  4793   0018DE  D007               	goto	l4371
  4794   0018E0  0E00               	movlw	0
  4795   0018E2  6E1A               	movwf	?___ftmul^0,c
  4796   0018E4  0E00               	movlw	0
  4797   0018E6  6E1B               	movwf	(?___ftmul+1)^0,c
  4798   0018E8  0E00               	movlw	0
  4799   0018EA  6E1C               	movwf	(?___ftmul+2)^0,c
  4800   0018EC  0012               	return	
  4801   0018EE                     l4371:
  4802   0018EE  C01F  F020         	movff	___ftmul@f2+2,??___ftmul
  4803   0018F2  6A21               	clrf	(??___ftmul+1)^0,c
  4804   0018F4  6A22               	clrf	(??___ftmul+2)^0,c
  4805   0018F6  341E               	rlcf	(___ftmul@f2+1)^0,w,c
  4806   0018F8  3620               	rlcf	??___ftmul^0,f,c
  4807   0018FA  E301               	bnc	u5401
  4808   0018FC  8021               	bsf	(??___ftmul+1)^0,0,c
  4809   0018FE                     u5401:
  4810   0018FE  5020               	movf	??___ftmul^0,w,c
  4811   001900  6E28               	movwf	___ftmul@sign^0,c
  4812   001902  5028               	movf	___ftmul@sign^0,w,c
  4813   001904  A4D8               	btfss	status,2,c
  4814   001906  D007               	goto	l4377
  4815   001908  0E00               	movlw	0
  4816   00190A  6E1A               	movwf	?___ftmul^0,c
  4817   00190C  0E00               	movlw	0
  4818   00190E  6E1B               	movwf	(?___ftmul+1)^0,c
  4819   001910  0E00               	movlw	0
  4820   001912  6E1C               	movwf	(?___ftmul+2)^0,c
  4821   001914  0012               	return	
  4822   001916                     l4377:
  4823   001916  5028               	movf	___ftmul@sign^0,w,c
  4824   001918  0F7B               	addlw	123
  4825   00191A  2623               	addwf	___ftmul@exp^0,f,c
  4826   00191C  C01C  F028         	movff	___ftmul@f1+2,___ftmul@sign
  4827   001920  501F               	movf	(___ftmul@f2+2)^0,w,c
  4828   001922  1A28               	xorwf	___ftmul@sign^0,f,c
  4829   001924  0E80               	movlw	128
  4830   001926  1628               	andwf	___ftmul@sign^0,f,c
  4831   001928  8E1B               	bsf	(___ftmul@f1+1)^0,7,c
  4832   00192A  8E1E               	bsf	(___ftmul@f2+1)^0,7,c
  4833   00192C  0EFF               	movlw	255
  4834   00192E  161D               	andwf	___ftmul@f2^0,f,c
  4835   001930  0EFF               	movlw	255
  4836   001932  161E               	andwf	(___ftmul@f2+1)^0,f,c
  4837   001934  0E00               	movlw	0
  4838   001936  161F               	andwf	(___ftmul@f2+2)^0,f,c
  4839   001938  0E00               	movlw	0
  4840   00193A  6E24               	movwf	___ftmul@f3_as_product^0,c
  4841   00193C  0E00               	movlw	0
  4842   00193E  6E25               	movwf	(___ftmul@f3_as_product+1)^0,c
  4843   001940  0E00               	movlw	0
  4844   001942  6E26               	movwf	(___ftmul@f3_as_product+2)^0,c
  4845   001944  0E07               	movlw	7
  4846   001946  6E27               	movwf	___ftmul@cntr^0,c
  4847   001948                     l4391:
  4848   001948  A01A               	btfss	___ftmul@f1^0,0,c
  4849   00194A  D006               	goto	l4395
  4850   00194C  501D               	movf	___ftmul@f2^0,w,c
  4851   00194E  2624               	addwf	___ftmul@f3_as_product^0,f,c
  4852   001950  501E               	movf	(___ftmul@f2+1)^0,w,c
  4853   001952  2225               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4854   001954  501F               	movf	(___ftmul@f2+2)^0,w,c
  4855   001956  2226               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4856   001958                     l4395:
  4857   001958  90D8               	bcf	status,0,c
  4858   00195A  321C               	rrcf	(___ftmul@f1+2)^0,f,c
  4859   00195C  321B               	rrcf	(___ftmul@f1+1)^0,f,c
  4860   00195E  321A               	rrcf	___ftmul@f1^0,f,c
  4861   001960  90D8               	bcf	status,0,c
  4862   001962  361D               	rlcf	___ftmul@f2^0,f,c
  4863   001964  361E               	rlcf	(___ftmul@f2+1)^0,f,c
  4864   001966  361F               	rlcf	(___ftmul@f2+2)^0,f,c
  4865   001968  2E27               	decfsz	___ftmul@cntr^0,f,c
  4866   00196A  D7EE               	goto	l4391
  4867   00196C  0E09               	movlw	9
  4868   00196E  6E27               	movwf	___ftmul@cntr^0,c
  4869   001970                     l4401:
  4870   001970  A01A               	btfss	___ftmul@f1^0,0,c
  4871   001972  D006               	goto	l4405
  4872   001974  501D               	movf	___ftmul@f2^0,w,c
  4873   001976  2624               	addwf	___ftmul@f3_as_product^0,f,c
  4874   001978  501E               	movf	(___ftmul@f2+1)^0,w,c
  4875   00197A  2225               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4876   00197C  501F               	movf	(___ftmul@f2+2)^0,w,c
  4877   00197E  2226               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4878   001980                     l4405:
  4879   001980  90D8               	bcf	status,0,c
  4880   001982  321C               	rrcf	(___ftmul@f1+2)^0,f,c
  4881   001984  321B               	rrcf	(___ftmul@f1+1)^0,f,c
  4882   001986  321A               	rrcf	___ftmul@f1^0,f,c
  4883   001988  90D8               	bcf	status,0,c
  4884   00198A  3226               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  4885   00198C  3225               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  4886   00198E  3224               	rrcf	___ftmul@f3_as_product^0,f,c
  4887   001990  2E27               	decfsz	___ftmul@cntr^0,f,c
  4888   001992  D7EE               	goto	l4401
  4889   001994  C024  F00E         	movff	___ftmul@f3_as_product,___ftpack@arg
  4890   001998  C025  F00F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4891   00199C  C026  F010         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4892   0019A0  C023  F011         	movff	___ftmul@exp,___ftpack@exp
  4893   0019A4  C028  F012         	movff	___ftmul@sign,___ftpack@sign
  4894   0019A8  EC59  F00F         	call	___ftpack	;wreg free
  4895   0019AC  C00E  F01A         	movff	?___ftpack,?___ftmul
  4896   0019B0  C00F  F01B         	movff	?___ftpack+1,?___ftmul+1
  4897   0019B4  C010  F01C         	movff	?___ftpack+2,?___ftmul+2
  4898   0019B8  0012               	return		;funcret
  4899   0019BA                     __end_of___ftmul:
  4900                           	callstack 0
  4901                           
  4902 ;; *************** function ___ftsub *****************
  4903 ;; Defined at:
  4904 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftsub.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  f1              3   52[COMRAM] float 
  4907 ;;  f2              3   55[COMRAM] float 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  3   52[COMRAM] float 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4919 ;;      Params:         6       0       0       0       0       0       0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4922 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4923 ;;Total ram usage:        6 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; Hardware stack levels required when called: 7
  4926 ;; This function calls:
  4927 ;;		___ftadd
  4928 ;; This function is called by:
  4929 ;;		_exp
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text17
  4934   002792                     __ptext17:
  4935                           	callstack 0
  4936   002792                     ___ftsub:
  4937                           	callstack 20
  4938                           
  4939                           ;incstack = 0
  4940   002792  5038               	movf	___ftsub@f2^0,w,c
  4941   002794  1039               	iorwf	(___ftsub@f2+1)^0,w,c
  4942   002796  103A               	iorwf	(___ftsub@f2+2)^0,w,c
  4943   002798  B4D8               	btfsc	status,2,c
  4944   00279A  D006               	goto	l4547
  4945   00279C  0E00               	movlw	0
  4946   00279E  1A38               	xorwf	___ftsub@f2^0,f,c
  4947   0027A0  0E00               	movlw	0
  4948   0027A2  1A39               	xorwf	(___ftsub@f2+1)^0,f,c
  4949   0027A4  0E80               	movlw	128
  4950   0027A6  1A3A               	xorwf	(___ftsub@f2+2)^0,f,c
  4951   0027A8                     l4547:
  4952   0027A8  C035  F029         	movff	___ftsub@f1,___ftadd@f1
  4953   0027AC  C036  F02A         	movff	___ftsub@f1+1,___ftadd@f1+1
  4954   0027B0  C037  F02B         	movff	___ftsub@f1+2,___ftadd@f1+2
  4955   0027B4  C038  F02C         	movff	___ftsub@f2,___ftadd@f2
  4956   0027B8  C039  F02D         	movff	___ftsub@f2+1,___ftadd@f2+1
  4957   0027BC  C03A  F02E         	movff	___ftsub@f2+2,___ftadd@f2+2
  4958   0027C0  EC49  F00A         	call	___ftadd	;wreg free
  4959   0027C4  C029  F035         	movff	?___ftadd,?___ftsub
  4960   0027C8  C02A  F036         	movff	?___ftadd+1,?___ftsub+1
  4961   0027CC  C02B  F037         	movff	?___ftadd+2,?___ftsub+2
  4962   0027D0  0012               	return		;funcret
  4963   0027D2                     __end_of___ftsub:
  4964                           	callstack 0
  4965                           
  4966 ;; *************** function ___ftadd *****************
  4967 ;; Defined at:
  4968 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftadd.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  f1              3   40[COMRAM] float 
  4971 ;;  f2              3   43[COMRAM] float 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  exp1            1   51[COMRAM] unsigned char 
  4974 ;;  exp2            1   50[COMRAM] unsigned char 
  4975 ;;  sign            1   49[COMRAM] unsigned char 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  3   40[COMRAM] float 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4985 ;;      Params:         6       0       0       0       0       0       0       0       0
  4986 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4987 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4988 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4989 ;;Total ram usage:       12 bytes
  4990 ;; Hardware stack levels used: 1
  4991 ;; Hardware stack levels required when called: 6
  4992 ;; This function calls:
  4993 ;;		___ftpack
  4994 ;; This function is called by:
  4995 ;;		___ftsub
  4996 ;;		_eval_poly
  4997 ;;		_floor
  4998 ;;		_log
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text18
  5003   001492                     __ptext18:
  5004                           	callstack 0
  5005   001492                     ___ftadd:
  5006                           	callstack 20
  5007                           
  5008                           ;incstack = 0
  5009   001492  C02B  F02F         	movff	___ftadd@f1+2,??___ftadd
  5010   001496  6A30               	clrf	(??___ftadd+1)^0,c
  5011   001498  6A31               	clrf	(??___ftadd+2)^0,c
  5012   00149A  342A               	rlcf	(___ftadd@f1+1)^0,w,c
  5013   00149C  362F               	rlcf	??___ftadd^0,f,c
  5014   00149E  E301               	bnc	u5171
  5015   0014A0  8030               	bsf	(??___ftadd+1)^0,0,c
  5016   0014A2                     u5171:
  5017   0014A2  502F               	movf	??___ftadd^0,w,c
  5018   0014A4  6E34               	movwf	___ftadd@exp1^0,c
  5019   0014A6  C02E  F02F         	movff	___ftadd@f2+2,??___ftadd
  5020   0014AA  6A30               	clrf	(??___ftadd+1)^0,c
  5021   0014AC  6A31               	clrf	(??___ftadd+2)^0,c
  5022   0014AE  342D               	rlcf	(___ftadd@f2+1)^0,w,c
  5023   0014B0  362F               	rlcf	??___ftadd^0,f,c
  5024   0014B2  E301               	bnc	u5181
  5025   0014B4  8030               	bsf	(??___ftadd+1)^0,0,c
  5026   0014B6                     u5181:
  5027   0014B6  502F               	movf	??___ftadd^0,w,c
  5028   0014B8  6E33               	movwf	___ftadd@exp2^0,c
  5029   0014BA  5034               	movf	___ftadd@exp1^0,w,c
  5030   0014BC  B4D8               	btfsc	status,2,c
  5031   0014BE  D00A               	goto	u5210
  5032   0014C0  5033               	movf	___ftadd@exp2^0,w,c
  5033   0014C2  5C34               	subwf	___ftadd@exp1^0,w,c
  5034   0014C4  B0D8               	btfsc	status,0,c
  5035   0014C6  D00D               	goto	l4303
  5036   0014C8  5034               	movf	___ftadd@exp1^0,w,c
  5037   0014CA  5C33               	subwf	___ftadd@exp2^0,w,c
  5038   0014CC  6E2F               	movwf	??___ftadd^0,c
  5039   0014CE  0E18               	movlw	24
  5040   0014D0  642F               	cpfsgt	??___ftadd^0,c
  5041   0014D2  D007               	goto	l4303
  5042   0014D4                     u5210:
  5043   0014D4  C02C  F029         	movff	___ftadd@f2,?___ftadd
  5044   0014D8  C02D  F02A         	movff	___ftadd@f2+1,?___ftadd+1
  5045   0014DC  C02E  F02B         	movff	___ftadd@f2+2,?___ftadd+2
  5046   0014E0  0012               	return	
  5047   0014E2                     l4303:
  5048   0014E2  5033               	movf	___ftadd@exp2^0,w,c
  5049   0014E4  B4D8               	btfsc	status,2,c
  5050   0014E6  D00A               	goto	u5240
  5051   0014E8  5034               	movf	___ftadd@exp1^0,w,c
  5052   0014EA  5C33               	subwf	___ftadd@exp2^0,w,c
  5053   0014EC  B0D8               	btfsc	status,0,c
  5054   0014EE  D00D               	goto	l4309
  5055   0014F0  5033               	movf	___ftadd@exp2^0,w,c
  5056   0014F2  5C34               	subwf	___ftadd@exp1^0,w,c
  5057   0014F4  6E2F               	movwf	??___ftadd^0,c
  5058   0014F6  0E18               	movlw	24
  5059   0014F8  642F               	cpfsgt	??___ftadd^0,c
  5060   0014FA  D007               	goto	l4309
  5061   0014FC                     u5240:
  5062   0014FC  C029  F029         	movff	___ftadd@f1,?___ftadd
  5063   001500  C02A  F02A         	movff	___ftadd@f1+1,?___ftadd+1
  5064   001504  C02B  F02B         	movff	___ftadd@f1+2,?___ftadd+2
  5065   001508  0012               	return	
  5066   00150A                     l4309:
  5067   00150A  0E06               	movlw	6
  5068   00150C  6E32               	movwf	___ftadd@sign^0,c
  5069   00150E  BE2B               	btfsc	(___ftadd@f1+2)^0,7,c
  5070   001510  8E32               	bsf	___ftadd@sign^0,7,c
  5071   001512  BE2E               	btfsc	(___ftadd@f2+2)^0,7,c
  5072   001514  8C32               	bsf	___ftadd@sign^0,6,c
  5073   001516  8E2A               	bsf	(___ftadd@f1+1)^0,7,c
  5074   001518  0EFF               	movlw	255
  5075   00151A  1629               	andwf	___ftadd@f1^0,f,c
  5076   00151C  0EFF               	movlw	255
  5077   00151E  162A               	andwf	(___ftadd@f1+1)^0,f,c
  5078   001520  0E00               	movlw	0
  5079   001522  162B               	andwf	(___ftadd@f1+2)^0,f,c
  5080   001524  8E2D               	bsf	(___ftadd@f2+1)^0,7,c
  5081   001526  0EFF               	movlw	255
  5082   001528  162C               	andwf	___ftadd@f2^0,f,c
  5083   00152A  0EFF               	movlw	255
  5084   00152C  162D               	andwf	(___ftadd@f2+1)^0,f,c
  5085   00152E  0E00               	movlw	0
  5086   001530  162E               	andwf	(___ftadd@f2+2)^0,f,c
  5087   001532  5033               	movf	___ftadd@exp2^0,w,c
  5088   001534  5C34               	subwf	___ftadd@exp1^0,w,c
  5089   001536  B0D8               	btfsc	status,0,c
  5090   001538  D01B               	goto	l4335
  5091   00153A                     u5270:
  5092   00153A  90D8               	bcf	status,0,c
  5093   00153C  362C               	rlcf	___ftadd@f2^0,f,c
  5094   00153E  362D               	rlcf	(___ftadd@f2+1)^0,f,c
  5095   001540  362E               	rlcf	(___ftadd@f2+2)^0,f,c
  5096   001542  0633               	decf	___ftadd@exp2^0,f,c
  5097   001544  5034               	movf	___ftadd@exp1^0,w,c
  5098   001546  1833               	xorwf	___ftadd@exp2^0,w,c
  5099   001548  B4D8               	btfsc	status,2,c
  5100   00154A  D00D               	goto	l4333
  5101   00154C  0632               	decf	___ftadd@sign^0,f,c
  5102   00154E  C032  F02F         	movff	___ftadd@sign,??___ftadd
  5103   001552  0E07               	movlw	7
  5104   001554  162F               	andwf	??___ftadd^0,f,c
  5105   001556  B4D8               	btfsc	status,2,c
  5106   001558  D006               	goto	l4333
  5107   00155A  D7EF               	goto	u5270
  5108   00155C                     l4331:
  5109   00155C  90D8               	bcf	status,0,c
  5110   00155E  322B               	rrcf	(___ftadd@f1+2)^0,f,c
  5111   001560  322A               	rrcf	(___ftadd@f1+1)^0,f,c
  5112   001562  3229               	rrcf	___ftadd@f1^0,f,c
  5113   001564  2A34               	incf	___ftadd@exp1^0,f,c
  5114   001566                     l4333:
  5115   001566  5033               	movf	___ftadd@exp2^0,w,c
  5116   001568  1834               	xorwf	___ftadd@exp1^0,w,c
  5117   00156A  B4D8               	btfsc	status,2,c
  5118   00156C  D01F               	goto	u5340
  5119   00156E  D7F6               	goto	l4331
  5120   001570                     l4335:
  5121   001570  5034               	movf	___ftadd@exp1^0,w,c
  5122   001572  5C33               	subwf	___ftadd@exp2^0,w,c
  5123   001574  B0D8               	btfsc	status,0,c
  5124   001576  D01A               	goto	u5340
  5125   001578                     u5310:
  5126   001578  90D8               	bcf	status,0,c
  5127   00157A  3629               	rlcf	___ftadd@f1^0,f,c
  5128   00157C  362A               	rlcf	(___ftadd@f1+1)^0,f,c
  5129   00157E  362B               	rlcf	(___ftadd@f1+2)^0,f,c
  5130   001580  0634               	decf	___ftadd@exp1^0,f,c
  5131   001582  5034               	movf	___ftadd@exp1^0,w,c
  5132   001584  1833               	xorwf	___ftadd@exp2^0,w,c
  5133   001586  B4D8               	btfsc	status,2,c
  5134   001588  D00D               	goto	l4345
  5135   00158A  0632               	decf	___ftadd@sign^0,f,c
  5136   00158C  C032  F02F         	movff	___ftadd@sign,??___ftadd
  5137   001590  0E07               	movlw	7
  5138   001592  162F               	andwf	??___ftadd^0,f,c
  5139   001594  B4D8               	btfsc	status,2,c
  5140   001596  D006               	goto	l4345
  5141   001598  D7EF               	goto	u5310
  5142   00159A                     l4343:
  5143   00159A  90D8               	bcf	status,0,c
  5144   00159C  322E               	rrcf	(___ftadd@f2+2)^0,f,c
  5145   00159E  322D               	rrcf	(___ftadd@f2+1)^0,f,c
  5146   0015A0  322C               	rrcf	___ftadd@f2^0,f,c
  5147   0015A2  2A33               	incf	___ftadd@exp2^0,f,c
  5148   0015A4                     l4345:
  5149   0015A4  5033               	movf	___ftadd@exp2^0,w,c
  5150   0015A6  1834               	xorwf	___ftadd@exp1^0,w,c
  5151   0015A8  A4D8               	btfss	status,2,c
  5152   0015AA  D7F7               	goto	l4343
  5153   0015AC                     u5340:
  5154   0015AC  AE32               	btfss	___ftadd@sign^0,7,c
  5155   0015AE  D00C               	goto	l685
  5156   0015B0  0EFF               	movlw	255
  5157   0015B2  1A29               	xorwf	___ftadd@f1^0,f,c
  5158   0015B4  0EFF               	movlw	255
  5159   0015B6  1A2A               	xorwf	(___ftadd@f1+1)^0,f,c
  5160   0015B8  0EFF               	movlw	255
  5161   0015BA  1A2B               	xorwf	(___ftadd@f1+2)^0,f,c
  5162   0015BC  0E01               	movlw	1
  5163   0015BE  2629               	addwf	___ftadd@f1^0,f,c
  5164   0015C0  0E00               	movlw	0
  5165   0015C2  222A               	addwfc	(___ftadd@f1+1)^0,f,c
  5166   0015C4  0E00               	movlw	0
  5167   0015C6  222B               	addwfc	(___ftadd@f1+2)^0,f,c
  5168   0015C8                     l685:
  5169   0015C8  AC32               	btfss	___ftadd@sign^0,6,c
  5170   0015CA  D00C               	goto	l4351
  5171   0015CC  0EFF               	movlw	255
  5172   0015CE  1A2C               	xorwf	___ftadd@f2^0,f,c
  5173   0015D0  0EFF               	movlw	255
  5174   0015D2  1A2D               	xorwf	(___ftadd@f2+1)^0,f,c
  5175   0015D4  0EFF               	movlw	255
  5176   0015D6  1A2E               	xorwf	(___ftadd@f2+2)^0,f,c
  5177   0015D8  0E01               	movlw	1
  5178   0015DA  262C               	addwf	___ftadd@f2^0,f,c
  5179   0015DC  0E00               	movlw	0
  5180   0015DE  222D               	addwfc	(___ftadd@f2+1)^0,f,c
  5181   0015E0  0E00               	movlw	0
  5182   0015E2  222E               	addwfc	(___ftadd@f2+2)^0,f,c
  5183   0015E4                     l4351:
  5184   0015E4  0E00               	movlw	0
  5185   0015E6  6E32               	movwf	___ftadd@sign^0,c
  5186   0015E8  5029               	movf	___ftadd@f1^0,w,c
  5187   0015EA  262C               	addwf	___ftadd@f2^0,f,c
  5188   0015EC  502A               	movf	(___ftadd@f1+1)^0,w,c
  5189   0015EE  222D               	addwfc	(___ftadd@f2+1)^0,f,c
  5190   0015F0  502B               	movf	(___ftadd@f1+2)^0,w,c
  5191   0015F2  222E               	addwfc	(___ftadd@f2+2)^0,f,c
  5192   0015F4  AE2E               	btfss	(___ftadd@f2+2)^0,7,c
  5193   0015F6  D00E               	goto	l4361
  5194   0015F8  0EFF               	movlw	255
  5195   0015FA  1A2C               	xorwf	___ftadd@f2^0,f,c
  5196   0015FC  0EFF               	movlw	255
  5197   0015FE  1A2D               	xorwf	(___ftadd@f2+1)^0,f,c
  5198   001600  0EFF               	movlw	255
  5199   001602  1A2E               	xorwf	(___ftadd@f2+2)^0,f,c
  5200   001604  0E01               	movlw	1
  5201   001606  262C               	addwf	___ftadd@f2^0,f,c
  5202   001608  0E00               	movlw	0
  5203   00160A  222D               	addwfc	(___ftadd@f2+1)^0,f,c
  5204   00160C  0E00               	movlw	0
  5205   00160E  222E               	addwfc	(___ftadd@f2+2)^0,f,c
  5206   001610  0E01               	movlw	1
  5207   001612  6E32               	movwf	___ftadd@sign^0,c
  5208   001614                     l4361:
  5209   001614  C02C  F00E         	movff	___ftadd@f2,___ftpack@arg
  5210   001618  C02D  F00F         	movff	___ftadd@f2+1,___ftpack@arg+1
  5211   00161C  C02E  F010         	movff	___ftadd@f2+2,___ftpack@arg+2
  5212   001620  C034  F011         	movff	___ftadd@exp1,___ftpack@exp
  5213   001624  C032  F012         	movff	___ftadd@sign,___ftpack@sign
  5214   001628  EC59  F00F         	call	___ftpack	;wreg free
  5215   00162C  C00E  F029         	movff	?___ftpack,?___ftadd
  5216   001630  C00F  F02A         	movff	?___ftpack+1,?___ftadd+1
  5217   001634  C010  F02B         	movff	?___ftpack+2,?___ftadd+2
  5218   001638  0012               	return		;funcret
  5219   00163A                     __end_of___ftadd:
  5220                           	callstack 0
  5221                           
  5222 ;; *************** function ___ftneg *****************
  5223 ;; Defined at:
  5224 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftneg.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  f1              3   13[COMRAM] float 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;		None
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  3   13[COMRAM] float 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 3F/0
  5235 ;;		On exit  : 3F/0
  5236 ;;		Unchanged: 3F/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5238 ;;      Params:         3       0       0       0       0       0       0       0       0
  5239 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5241 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5242 ;;Total ram usage:        3 bytes
  5243 ;; Hardware stack levels used: 1
  5244 ;; Hardware stack levels required when called: 5
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_pow
  5249 ;;		_exp
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text19
  5254   002880                     __ptext19:
  5255                           	callstack 0
  5256   002880                     ___ftneg:
  5257                           	callstack 22
  5258                           
  5259                           ; BSR set to: 0
  5260                           
  5261                           ;incstack = 0
  5262   002880  500E               	movf	___ftneg@f1^0,w,c
  5263   002882  100F               	iorwf	(___ftneg@f1+1)^0,w,c
  5264   002884  1010               	iorwf	(___ftneg@f1+2)^0,w,c
  5265   002886  B4D8               	btfsc	status,2,c
  5266   002888  D006               	goto	l718
  5267                           
  5268                           ; BSR set to: 0
  5269   00288A  0E00               	movlw	0
  5270   00288C  1A0E               	xorwf	___ftneg@f1^0,f,c
  5271   00288E  0E00               	movlw	0
  5272   002890  1A0F               	xorwf	(___ftneg@f1+1)^0,f,c
  5273   002892  0E80               	movlw	128
  5274   002894  1A10               	xorwf	(___ftneg@f1+2)^0,f,c
  5275   002896                     l718:
  5276                           
  5277                           ; BSR set to: 0
  5278   002896  C00E  F00E         	movff	___ftneg@f1,?___ftneg
  5279   00289A  C00F  F00F         	movff	___ftneg@f1+1,?___ftneg+1
  5280   00289E  C010  F010         	movff	___ftneg@f1+2,?___ftneg+2
  5281                           
  5282                           ; BSR set to: 0
  5283   0028A2  0012               	return		;funcret
  5284   0028A4                     __end_of___ftneg:
  5285                           	callstack 0
  5286                           
  5287 ;; *************** function ___ftdiv *****************
  5288 ;; Defined at:
  5289 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdiv.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  f1              3   21[COMRAM] float 
  5292 ;;  f2              3   24[COMRAM] float 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  f3              3   31[COMRAM] float 
  5295 ;;  sign            1   35[COMRAM] unsigned char 
  5296 ;;  exp             1   34[COMRAM] unsigned char 
  5297 ;;  cntr            1   30[COMRAM] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  3   21[COMRAM] float 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 3F/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5307 ;;      Params:         6       0       0       0       0       0       0       0       0
  5308 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5309 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5310 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5311 ;;Total ram usage:       15 bytes
  5312 ;; Hardware stack levels used: 1
  5313 ;; Hardware stack levels required when called: 6
  5314 ;; This function calls:
  5315 ;;		___ftpack
  5316 ;; This function is called by:
  5317 ;;		_exp
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text20
  5322   0019BA                     __ptext20:
  5323                           	callstack 0
  5324   0019BA                     ___ftdiv:
  5325                           	callstack 21
  5326                           
  5327                           ; BSR set to: 0
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;incstack = 0
  5331   0019BA  C018  F01C         	movff	___ftdiv@f1+2,??___ftdiv
  5332   0019BE  6A1D               	clrf	(??___ftdiv+1)^0,c
  5333   0019C0  6A1E               	clrf	(??___ftdiv+2)^0,c
  5334   0019C2  3417               	rlcf	(___ftdiv@f1+1)^0,w,c
  5335   0019C4  361C               	rlcf	??___ftdiv^0,f,c
  5336   0019C6  E301               	bnc	u5571
  5337   0019C8  801D               	bsf	(??___ftdiv+1)^0,0,c
  5338   0019CA                     u5571:
  5339   0019CA  501C               	movf	??___ftdiv^0,w,c
  5340   0019CC  6E23               	movwf	___ftdiv@exp^0,c
  5341   0019CE  5023               	movf	___ftdiv@exp^0,w,c
  5342   0019D0  A4D8               	btfss	status,2,c
  5343   0019D2  D007               	goto	l4503
  5344                           
  5345                           ; BSR set to: 0
  5346   0019D4  0E00               	movlw	0
  5347   0019D6  6E16               	movwf	?___ftdiv^0,c
  5348   0019D8  0E00               	movlw	0
  5349   0019DA  6E17               	movwf	(?___ftdiv+1)^0,c
  5350   0019DC  0E00               	movlw	0
  5351   0019DE  6E18               	movwf	(?___ftdiv+2)^0,c
  5352   0019E0  0012               	return	
  5353   0019E2                     l4503:
  5354                           
  5355                           ; BSR set to: 0
  5356   0019E2  C01B  F01C         	movff	___ftdiv@f2+2,??___ftdiv
  5357   0019E6  6A1D               	clrf	(??___ftdiv+1)^0,c
  5358   0019E8  6A1E               	clrf	(??___ftdiv+2)^0,c
  5359   0019EA  341A               	rlcf	(___ftdiv@f2+1)^0,w,c
  5360   0019EC  361C               	rlcf	??___ftdiv^0,f,c
  5361   0019EE  E301               	bnc	u5591
  5362   0019F0  801D               	bsf	(??___ftdiv+1)^0,0,c
  5363   0019F2                     u5591:
  5364   0019F2  501C               	movf	??___ftdiv^0,w,c
  5365   0019F4  6E24               	movwf	___ftdiv@sign^0,c
  5366   0019F6  5024               	movf	___ftdiv@sign^0,w,c
  5367   0019F8  A4D8               	btfss	status,2,c
  5368   0019FA  D007               	goto	l4509
  5369                           
  5370                           ; BSR set to: 0
  5371   0019FC  0E00               	movlw	0
  5372   0019FE  6E16               	movwf	?___ftdiv^0,c
  5373   001A00  0E00               	movlw	0
  5374   001A02  6E17               	movwf	(?___ftdiv+1)^0,c
  5375   001A04  0E00               	movlw	0
  5376   001A06  6E18               	movwf	(?___ftdiv+2)^0,c
  5377   001A08  0012               	return	
  5378   001A0A                     l4509:
  5379                           
  5380                           ; BSR set to: 0
  5381   001A0A  0E00               	movlw	0
  5382   001A0C  6E20               	movwf	___ftdiv@f3^0,c
  5383   001A0E  0E00               	movlw	0
  5384   001A10  6E21               	movwf	(___ftdiv@f3+1)^0,c
  5385   001A12  0E00               	movlw	0
  5386   001A14  6E22               	movwf	(___ftdiv@f3+2)^0,c
  5387                           
  5388                           ; BSR set to: 0
  5389   001A16  5024               	movf	___ftdiv@sign^0,w,c
  5390   001A18  0F89               	addlw	137
  5391   001A1A  5E23               	subwf	___ftdiv@exp^0,f,c
  5392                           
  5393                           ; BSR set to: 0
  5394   001A1C  C018  F024         	movff	___ftdiv@f1+2,___ftdiv@sign
  5395                           
  5396                           ; BSR set to: 0
  5397   001A20  501B               	movf	(___ftdiv@f2+2)^0,w,c
  5398   001A22  1A24               	xorwf	___ftdiv@sign^0,f,c
  5399                           
  5400                           ; BSR set to: 0
  5401   001A24  0E80               	movlw	128
  5402   001A26  1624               	andwf	___ftdiv@sign^0,f,c
  5403                           
  5404                           ; BSR set to: 0
  5405   001A28  8E17               	bsf	(___ftdiv@f1+1)^0,7,c
  5406                           
  5407                           ; BSR set to: 0
  5408   001A2A  0EFF               	movlw	255
  5409   001A2C  1616               	andwf	___ftdiv@f1^0,f,c
  5410   001A2E  0EFF               	movlw	255
  5411   001A30  1617               	andwf	(___ftdiv@f1+1)^0,f,c
  5412   001A32  0E00               	movlw	0
  5413   001A34  1618               	andwf	(___ftdiv@f1+2)^0,f,c
  5414                           
  5415                           ; BSR set to: 0
  5416   001A36  8E1A               	bsf	(___ftdiv@f2+1)^0,7,c
  5417                           
  5418                           ; BSR set to: 0
  5419   001A38  0EFF               	movlw	255
  5420   001A3A  1619               	andwf	___ftdiv@f2^0,f,c
  5421   001A3C  0EFF               	movlw	255
  5422   001A3E  161A               	andwf	(___ftdiv@f2+1)^0,f,c
  5423   001A40  0E00               	movlw	0
  5424   001A42  161B               	andwf	(___ftdiv@f2+2)^0,f,c
  5425                           
  5426                           ; BSR set to: 0
  5427   001A44  0E18               	movlw	24
  5428   001A46  6E1F               	movwf	___ftdiv@cntr^0,c
  5429   001A48                     l4529:
  5430                           
  5431                           ; BSR set to: 0
  5432   001A48  90D8               	bcf	status,0,c
  5433   001A4A  3620               	rlcf	___ftdiv@f3^0,f,c
  5434   001A4C  3621               	rlcf	(___ftdiv@f3+1)^0,f,c
  5435   001A4E  3622               	rlcf	(___ftdiv@f3+2)^0,f,c
  5436                           
  5437                           ; BSR set to: 0
  5438   001A50  5019               	movf	___ftdiv@f2^0,w,c
  5439   001A52  5C16               	subwf	___ftdiv@f1^0,w,c
  5440   001A54  501A               	movf	(___ftdiv@f2+1)^0,w,c
  5441   001A56  5817               	subwfb	(___ftdiv@f1+1)^0,w,c
  5442   001A58  501B               	movf	(___ftdiv@f2+2)^0,w,c
  5443   001A5A  5818               	subwfb	(___ftdiv@f1+2)^0,w,c
  5444   001A5C  A0D8               	btfss	status,0,c
  5445   001A5E  D007               	goto	l696
  5446                           
  5447                           ; BSR set to: 0
  5448   001A60  5019               	movf	___ftdiv@f2^0,w,c
  5449   001A62  5E16               	subwf	___ftdiv@f1^0,f,c
  5450   001A64  501A               	movf	(___ftdiv@f2+1)^0,w,c
  5451   001A66  5A17               	subwfb	(___ftdiv@f1+1)^0,f,c
  5452   001A68  501B               	movf	(___ftdiv@f2+2)^0,w,c
  5453   001A6A  5A18               	subwfb	(___ftdiv@f1+2)^0,f,c
  5454                           
  5455                           ; BSR set to: 0
  5456   001A6C  8020               	bsf	___ftdiv@f3^0,0,c
  5457   001A6E                     l696:
  5458                           
  5459                           ; BSR set to: 0
  5460   001A6E  90D8               	bcf	status,0,c
  5461   001A70  3616               	rlcf	___ftdiv@f1^0,f,c
  5462   001A72  3617               	rlcf	(___ftdiv@f1+1)^0,f,c
  5463   001A74  3618               	rlcf	(___ftdiv@f1+2)^0,f,c
  5464                           
  5465                           ; BSR set to: 0
  5466   001A76  2E1F               	decfsz	___ftdiv@cntr^0,f,c
  5467   001A78  D7E7               	goto	l4529
  5468                           
  5469                           ; BSR set to: 0
  5470   001A7A  C020  F00E         	movff	___ftdiv@f3,___ftpack@arg
  5471   001A7E  C021  F00F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5472   001A82  C022  F010         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5473   001A86  C023  F011         	movff	___ftdiv@exp,___ftpack@exp
  5474   001A8A  C024  F012         	movff	___ftdiv@sign,___ftpack@sign
  5475   001A8E  EC59  F00F         	call	___ftpack	;wreg free
  5476   001A92  C00E  F016         	movff	?___ftpack,?___ftdiv
  5477   001A96  C00F  F017         	movff	?___ftpack+1,?___ftdiv+1
  5478   001A9A  C010  F018         	movff	?___ftpack+2,?___ftdiv+2
  5479   001A9E  0012               	return		;funcret
  5480   001AA0                     __end_of___ftdiv:
  5481                           	callstack 0
  5482                           
  5483 ;; *************** function ___awtoft *****************
  5484 ;; Defined at:
  5485 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awtoft.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  c               2   21[COMRAM] int 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  sign            1   24[COMRAM] unsigned char 
  5490 ;; Return value:  Size  Location     Type
  5491 ;;                  3   21[COMRAM] float 
  5492 ;; Registers used:
  5493 ;;		wreg, status,2, status,0, cstack
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5499 ;;      Params:         3       0       0       0       0       0       0       0       0
  5500 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5502 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5503 ;;Total ram usage:        4 bytes
  5504 ;; Hardware stack levels used: 1
  5505 ;; Hardware stack levels required when called: 6
  5506 ;; This function calls:
  5507 ;;		___ftpack
  5508 ;; This function is called by:
  5509 ;;		_Imprimir_Resultado
  5510 ;;		_exp
  5511 ;;		_log
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text21
  5516   0027D2                     __ptext21:
  5517                           	callstack 0
  5518   0027D2                     ___awtoft:
  5519                           	callstack 21
  5520                           
  5521                           ;incstack = 0
  5522   0027D2  0E00               	movlw	0
  5523   0027D4  6E19               	movwf	___awtoft@sign^0,c
  5524   0027D6  AE17               	btfss	(___awtoft@c+1)^0,7,c
  5525   0027D8  D006               	goto	l4559
  5526   0027DA  6C16               	negf	___awtoft@c^0,c
  5527   0027DC  1E17               	comf	(___awtoft@c+1)^0,f,c
  5528   0027DE  B0D8               	btfsc	status,0,c
  5529   0027E0  2A17               	incf	(___awtoft@c+1)^0,f,c
  5530   0027E2  0E01               	movlw	1
  5531   0027E4  6E19               	movwf	___awtoft@sign^0,c
  5532   0027E6                     l4559:
  5533   0027E6  C016  F00E         	movff	___awtoft@c,___ftpack@arg
  5534   0027EA  C017  F00F         	movff	___awtoft@c+1,___ftpack@arg+1
  5535   0027EE  6A10               	clrf	(___ftpack@arg+2)^0,c
  5536   0027F0  0E8E               	movlw	142
  5537   0027F2  6E11               	movwf	___ftpack@exp^0,c
  5538   0027F4  C019  F012         	movff	___awtoft@sign,___ftpack@sign
  5539   0027F8  EC59  F00F         	call	___ftpack	;wreg free
  5540   0027FC  C00E  F016         	movff	?___ftpack,?___awtoft
  5541   002800  C00F  F017         	movff	?___ftpack+1,?___awtoft+1
  5542   002804  C010  F018         	movff	?___ftpack+2,?___awtoft+2
  5543   002808  0012               	return		;funcret
  5544   00280A                     __end_of___awtoft:
  5545                           	callstack 0
  5546                           
  5547 ;; *************** function ___lltoft *****************
  5548 ;; Defined at:
  5549 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lltoft.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  c               4   21[COMRAM] unsigned long 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  exp             1   29[COMRAM] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  3   21[COMRAM] float 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5563 ;;      Params:         4       0       0       0       0       0       0       0       0
  5564 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5565 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5566 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5567 ;;Total ram usage:        9 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 6
  5570 ;; This function calls:
  5571 ;;		___ftpack
  5572 ;; This function is called by:
  5573 ;;		_pow
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text22
  5578   0023C2                     __ptext22:
  5579                           	callstack 0
  5580   0023C2                     ___lltoft:
  5581                           	callstack 22
  5582                           
  5583                           ;incstack = 0
  5584   0023C2  0E8E               	movlw	142
  5585   0023C4  6E1E               	movwf	___lltoft@exp^0,c
  5586   0023C6  D006               	goto	l4637
  5587   0023C8                     l4635:
  5588   0023C8  90D8               	bcf	status,0,c
  5589   0023CA  3219               	rrcf	(___lltoft@c+3)^0,f,c
  5590   0023CC  3218               	rrcf	(___lltoft@c+2)^0,f,c
  5591   0023CE  3217               	rrcf	(___lltoft@c+1)^0,f,c
  5592   0023D0  3216               	rrcf	___lltoft@c^0,f,c
  5593   0023D2  2A1E               	incf	___lltoft@exp^0,f,c
  5594   0023D4                     l4637:
  5595   0023D4  0E00               	movlw	0
  5596   0023D6  1416               	andwf	___lltoft@c^0,w,c
  5597   0023D8  6E1A               	movwf	??___lltoft^0,c
  5598   0023DA  0E00               	movlw	0
  5599   0023DC  1417               	andwf	(___lltoft@c+1)^0,w,c
  5600   0023DE  6E1B               	movwf	(??___lltoft+1)^0,c
  5601   0023E0  0E00               	movlw	0
  5602   0023E2  1418               	andwf	(___lltoft@c+2)^0,w,c
  5603   0023E4  6E1C               	movwf	(??___lltoft+2)^0,c
  5604   0023E6  0EFF               	movlw	255
  5605   0023E8  1419               	andwf	(___lltoft@c+3)^0,w,c
  5606   0023EA  6E1D               	movwf	(??___lltoft+3)^0,c
  5607   0023EC  501A               	movf	??___lltoft^0,w,c
  5608   0023EE  101B               	iorwf	(??___lltoft+1)^0,w,c
  5609   0023F0  101C               	iorwf	(??___lltoft+2)^0,w,c
  5610   0023F2  101D               	iorwf	(??___lltoft+3)^0,w,c
  5611   0023F4  A4D8               	btfss	status,2,c
  5612   0023F6  D7E8               	goto	l4635
  5613   0023F8  C016  F00E         	movff	___lltoft@c,___ftpack@arg
  5614   0023FC  C017  F00F         	movff	___lltoft@c+1,___ftpack@arg+1
  5615   002400  C018  F010         	movff	___lltoft@c+2,___ftpack@arg+2
  5616   002404  C01E  F011         	movff	___lltoft@exp,___ftpack@exp
  5617   002408  0E00               	movlw	0
  5618   00240A  6E12               	movwf	___ftpack@sign^0,c
  5619   00240C  EC59  F00F         	call	___ftpack	;wreg free
  5620   002410  C00E  F016         	movff	?___ftpack,?___lltoft
  5621   002414  C00F  F017         	movff	?___ftpack+1,?___lltoft+1
  5622   002418  C010  F018         	movff	?___ftpack+2,?___lltoft+2
  5623   00241C  0012               	return		;funcret
  5624   00241E                     __end_of___lltoft:
  5625                           	callstack 0
  5626                           
  5627 ;; *************** function ___ftpack *****************
  5628 ;; Defined at:
  5629 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\float.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  arg             3   13[COMRAM] unsigned um
  5632 ;;  exp             1   16[COMRAM] unsigned char 
  5633 ;;  sign            1   17[COMRAM] unsigned char 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;		None
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  3   13[COMRAM] float 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5645 ;;      Params:         5       0       0       0       0       0       0       0       0
  5646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5647 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5648 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5649 ;;Total ram usage:        8 bytes
  5650 ;; Hardware stack levels used: 1
  5651 ;; Hardware stack levels required when called: 5
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		___altoft
  5656 ;;		___awtoft
  5657 ;;		___ftadd
  5658 ;;		___ftdiv
  5659 ;;		___ftmul
  5660 ;;		___lltoft
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text23
  5665   001EB2                     __ptext23:
  5666                           	callstack 0
  5667   001EB2                     ___ftpack:
  5668                           	callstack 20
  5669                           
  5670                           ;incstack = 0
  5671   001EB2  5011               	movf	___ftpack@exp^0,w,c
  5672   001EB4  B4D8               	btfsc	status,2,c
  5673   001EB6  D005               	goto	u5080
  5674   001EB8  500E               	movf	___ftpack@arg^0,w,c
  5675   001EBA  100F               	iorwf	(___ftpack@arg+1)^0,w,c
  5676   001EBC  1010               	iorwf	(___ftpack@arg+2)^0,w,c
  5677   001EBE  A4D8               	btfss	status,2,c
  5678   001EC0  D00C               	goto	l4253
  5679   001EC2                     u5080:
  5680   001EC2  0E00               	movlw	0
  5681   001EC4  6E0E               	movwf	?___ftpack^0,c
  5682   001EC6  0E00               	movlw	0
  5683   001EC8  6E0F               	movwf	(?___ftpack+1)^0,c
  5684   001ECA  0E00               	movlw	0
  5685   001ECC  6E10               	movwf	(?___ftpack+2)^0,c
  5686   001ECE  0012               	return	
  5687   001ED0                     l4251:
  5688   001ED0  2A11               	incf	___ftpack@exp^0,f,c
  5689   001ED2  90D8               	bcf	status,0,c
  5690   001ED4  3210               	rrcf	(___ftpack@arg+2)^0,f,c
  5691   001ED6  320F               	rrcf	(___ftpack@arg+1)^0,f,c
  5692   001ED8  320E               	rrcf	___ftpack@arg^0,f,c
  5693   001EDA                     l4253:
  5694   001EDA  0E00               	movlw	0
  5695   001EDC  140E               	andwf	___ftpack@arg^0,w,c
  5696   001EDE  6E13               	movwf	??___ftpack^0,c
  5697   001EE0  0E00               	movlw	0
  5698   001EE2  140F               	andwf	(___ftpack@arg+1)^0,w,c
  5699   001EE4  6E14               	movwf	(??___ftpack+1)^0,c
  5700   001EE6  0EFE               	movlw	254
  5701   001EE8  1410               	andwf	(___ftpack@arg+2)^0,w,c
  5702   001EEA  6E15               	movwf	(??___ftpack+2)^0,c
  5703   001EEC  5013               	movf	??___ftpack^0,w,c
  5704   001EEE  1014               	iorwf	(??___ftpack+1)^0,w,c
  5705   001EF0  1015               	iorwf	(??___ftpack+2)^0,w,c
  5706   001EF2  B4D8               	btfsc	status,2,c
  5707   001EF4  D00C               	goto	l4259
  5708   001EF6  D7EC               	goto	l4251
  5709   001EF8                     l4255:
  5710   001EF8  2A11               	incf	___ftpack@exp^0,f,c
  5711   001EFA  0E01               	movlw	1
  5712   001EFC  260E               	addwf	___ftpack@arg^0,f,c
  5713   001EFE  0E00               	movlw	0
  5714   001F00  220F               	addwfc	(___ftpack@arg+1)^0,f,c
  5715   001F02  0E00               	movlw	0
  5716   001F04  2210               	addwfc	(___ftpack@arg+2)^0,f,c
  5717   001F06  90D8               	bcf	status,0,c
  5718   001F08  3210               	rrcf	(___ftpack@arg+2)^0,f,c
  5719   001F0A  320F               	rrcf	(___ftpack@arg+1)^0,f,c
  5720   001F0C  320E               	rrcf	___ftpack@arg^0,f,c
  5721   001F0E                     l4259:
  5722   001F0E  0E00               	movlw	0
  5723   001F10  140E               	andwf	___ftpack@arg^0,w,c
  5724   001F12  6E13               	movwf	??___ftpack^0,c
  5725   001F14  0E00               	movlw	0
  5726   001F16  140F               	andwf	(___ftpack@arg+1)^0,w,c
  5727   001F18  6E14               	movwf	(??___ftpack+1)^0,c
  5728   001F1A  0EFF               	movlw	255
  5729   001F1C  1410               	andwf	(___ftpack@arg+2)^0,w,c
  5730   001F1E  6E15               	movwf	(??___ftpack+2)^0,c
  5731   001F20  5013               	movf	??___ftpack^0,w,c
  5732   001F22  1014               	iorwf	(??___ftpack+1)^0,w,c
  5733   001F24  1015               	iorwf	(??___ftpack+2)^0,w,c
  5734   001F26  B4D8               	btfsc	status,2,c
  5735   001F28  D006               	goto	l4263
  5736   001F2A  D7E6               	goto	l4255
  5737   001F2C                     l4261:
  5738   001F2C  0611               	decf	___ftpack@exp^0,f,c
  5739   001F2E  90D8               	bcf	status,0,c
  5740   001F30  360E               	rlcf	___ftpack@arg^0,f,c
  5741   001F32  360F               	rlcf	(___ftpack@arg+1)^0,f,c
  5742   001F34  3610               	rlcf	(___ftpack@arg+2)^0,f,c
  5743   001F36                     l4263:
  5744   001F36  BE0F               	btfsc	(___ftpack@arg+1)^0,7,c
  5745   001F38  D003               	goto	u5120
  5746   001F3A  0E02               	movlw	2
  5747   001F3C  6011               	cpfslt	___ftpack@exp^0,c
  5748   001F3E  D7F6               	goto	l4261
  5749   001F40                     u5120:
  5750   001F40  A011               	btfss	___ftpack@exp^0,0,c
  5751   001F42  9E0F               	bcf	(___ftpack@arg+1)^0,7,c
  5752   001F44  90D8               	bcf	status,0,c
  5753   001F46  3211               	rrcf	___ftpack@exp^0,f,c
  5754   001F48  5011               	movf	___ftpack@exp^0,w,c
  5755   001F4A  1210               	iorwf	(___ftpack@arg+2)^0,f,c
  5756   001F4C  5012               	movf	___ftpack@sign^0,w,c
  5757   001F4E  A4D8               	btfss	status,2,c
  5758   001F50  8E10               	bsf	(___ftpack@arg+2)^0,7,c
  5759   001F52  C00E  F00E         	movff	___ftpack@arg,?___ftpack
  5760   001F56  C00F  F00F         	movff	___ftpack@arg+1,?___ftpack+1
  5761   001F5A  C010  F010         	movff	___ftpack@arg+2,?___ftpack+2
  5762   001F5E  0012               	return		;funcret
  5763   001F60                     __end_of___ftpack:
  5764                           	callstack 0
  5765                           
  5766 ;; *************** function ___wmul *****************
  5767 ;; Defined at:
  5768 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  multiplier      2   13[COMRAM] unsigned int 
  5771 ;;  multiplicand    2   15[COMRAM] unsigned int 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  product         2   17[COMRAM] unsigned int 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  2   13[COMRAM] unsigned int 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0, prodl, prodh
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5783 ;;      Params:         4       0       0       0       0       0       0       0       0
  5784 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5786 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5787 ;;Total ram usage:        6 bytes
  5788 ;; Hardware stack levels used: 1
  5789 ;; Hardware stack levels required when called: 5
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_main
  5794 ;;		_factorial_function
  5795 ;;		_Imprimir_Resultado
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text24
  5800   00285A                     __ptext24:
  5801                           	callstack 0
  5802   00285A                     ___wmul:
  5803                           	callstack 24
  5804                           
  5805                           ;incstack = 0
  5806   00285A  500E               	movf	___wmul@multiplier^0,w,c
  5807   00285C  0210               	mulwf	___wmul@multiplicand^0,c
  5808   00285E  CFF3 F012          	movff	prodl,___wmul@product
  5809   002862  CFF4 F013          	movff	prodh,___wmul@product+1
  5810   002866  500E               	movf	___wmul@multiplier^0,w,c
  5811   002868  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  5812   00286A  50F3               	movf	243,w,c
  5813   00286C  2613               	addwf	(___wmul@product+1)^0,f,c
  5814   00286E  500F               	movf	(___wmul@multiplier+1)^0,w,c
  5815   002870  0210               	mulwf	___wmul@multiplicand^0,c
  5816   002872  50F3               	movf	243,w,c
  5817   002874  2613               	addwf	(___wmul@product+1)^0,f,c
  5818   002876  C012  F00E         	movff	___wmul@product,?___wmul
  5819   00287A  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  5820   00287E  0012               	return		;funcret
  5821   002880                     __end_of___wmul:
  5822                           	callstack 0
  5823                           
  5824 ;; *************** function ___lwmod *****************
  5825 ;; Defined at:
  5826 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  dividend        2   13[COMRAM] unsigned int 
  5829 ;;  divisor         2   15[COMRAM] unsigned int 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  counter         1   17[COMRAM] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  2   13[COMRAM] unsigned int 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 3F/0
  5838 ;;		On exit  : 3F/0
  5839 ;;		Unchanged: 3F/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5841 ;;      Params:         4       0       0       0       0       0       0       0       0
  5842 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5844 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5845 ;;Total ram usage:        5 bytes
  5846 ;; Hardware stack levels used: 1
  5847 ;; Hardware stack levels required when called: 5
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_Imprimir_Resultado
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text25
  5856   002750                     __ptext25:
  5857                           	callstack 0
  5858   002750                     ___lwmod:
  5859                           	callstack 24
  5860                           
  5861                           ; BSR set to: 0
  5862                           
  5863                           ;incstack = 0
  5864   002750  5010               	movf	___lwmod@divisor^0,w,c
  5865   002752  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  5866   002754  B4D8               	btfsc	status,2,c
  5867   002756  D018               	goto	l844
  5868                           
  5869                           ; BSR set to: 0
  5870   002758  0E01               	movlw	1
  5871   00275A  6E12               	movwf	___lwmod@counter^0,c
  5872   00275C  D004               	goto	l3473
  5873   00275E                     l3471:
  5874                           
  5875                           ; BSR set to: 0
  5876   00275E  90D8               	bcf	status,0,c
  5877   002760  3610               	rlcf	___lwmod@divisor^0,f,c
  5878   002762  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  5879   002764  2A12               	incf	___lwmod@counter^0,f,c
  5880   002766                     l3473:
  5881                           
  5882                           ; BSR set to: 0
  5883   002766  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  5884   002768  D7FA               	goto	l3471
  5885   00276A                     u3640:
  5886                           
  5887                           ; BSR set to: 0
  5888   00276A  5010               	movf	___lwmod@divisor^0,w,c
  5889   00276C  5C0E               	subwf	___lwmod@dividend^0,w,c
  5890   00276E  5011               	movf	(___lwmod@divisor+1)^0,w,c
  5891   002770  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  5892   002772  A0D8               	btfss	status,0,c
  5893   002774  D004               	goto	l3479
  5894                           
  5895                           ; BSR set to: 0
  5896   002776  5010               	movf	___lwmod@divisor^0,w,c
  5897   002778  5E0E               	subwf	___lwmod@dividend^0,f,c
  5898   00277A  5011               	movf	(___lwmod@divisor+1)^0,w,c
  5899   00277C  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  5900   00277E                     l3479:
  5901                           
  5902                           ; BSR set to: 0
  5903   00277E  90D8               	bcf	status,0,c
  5904   002780  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  5905   002782  3210               	rrcf	___lwmod@divisor^0,f,c
  5906                           
  5907                           ; BSR set to: 0
  5908   002784  2E12               	decfsz	___lwmod@counter^0,f,c
  5909   002786  D7F1               	goto	u3640
  5910   002788                     l844:
  5911                           
  5912                           ; BSR set to: 0
  5913   002788  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  5914   00278C  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  5915                           
  5916                           ; BSR set to: 0
  5917   002790  0012               	return		;funcret
  5918   002792                     __end_of___lwmod:
  5919                           	callstack 0
  5920                           
  5921 ;; *************** function ___lwdiv *****************
  5922 ;; Defined at:
  5923 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  dividend        2   19[COMRAM] unsigned int 
  5926 ;;  divisor         2   21[COMRAM] unsigned int 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  quotient        2   23[COMRAM] unsigned int 
  5929 ;;  counter         1   25[COMRAM] unsigned char 
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  2   19[COMRAM] unsigned int 
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5939 ;;      Params:         4       0       0       0       0       0       0       0       0
  5940 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5942 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5943 ;;Total ram usage:        7 bytes
  5944 ;; Hardware stack levels used: 1
  5945 ;; Hardware stack levels required when called: 5
  5946 ;; This function calls:
  5947 ;;		Nothing
  5948 ;; This function is called by:
  5949 ;;		_main
  5950 ;;		_Imprimir_Resultado
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text26
  5955   0025CE                     __ptext26:
  5956                           	callstack 0
  5957   0025CE                     ___lwdiv:
  5958                           	callstack 25
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;incstack = 0
  5962   0025CE  0E00               	movlw	0
  5963   0025D0  6E19               	movwf	(___lwdiv@quotient+1)^0,c
  5964   0025D2  0E00               	movlw	0
  5965   0025D4  6E18               	movwf	___lwdiv@quotient^0,c
  5966   0025D6  5016               	movf	___lwdiv@divisor^0,w,c
  5967   0025D8  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5968   0025DA  B4D8               	btfsc	status,2,c
  5969   0025DC  D01C               	goto	l834
  5970   0025DE  0E01               	movlw	1
  5971   0025E0  6E1A               	movwf	___lwdiv@counter^0,c
  5972   0025E2  D004               	goto	l3453
  5973   0025E4                     l3451:
  5974   0025E4  90D8               	bcf	status,0,c
  5975   0025E6  3616               	rlcf	___lwdiv@divisor^0,f,c
  5976   0025E8  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5977   0025EA  2A1A               	incf	___lwdiv@counter^0,f,c
  5978   0025EC                     l3453:
  5979   0025EC  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  5980   0025EE  D7FA               	goto	l3451
  5981   0025F0                     u3610:
  5982   0025F0  90D8               	bcf	status,0,c
  5983   0025F2  3618               	rlcf	___lwdiv@quotient^0,f,c
  5984   0025F4  3619               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5985   0025F6  5016               	movf	___lwdiv@divisor^0,w,c
  5986   0025F8  5C14               	subwf	___lwdiv@dividend^0,w,c
  5987   0025FA  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  5988   0025FC  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5989   0025FE  A0D8               	btfss	status,0,c
  5990   002600  D005               	goto	l3463
  5991   002602  5016               	movf	___lwdiv@divisor^0,w,c
  5992   002604  5E14               	subwf	___lwdiv@dividend^0,f,c
  5993   002606  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  5994   002608  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5995   00260A  8018               	bsf	___lwdiv@quotient^0,0,c
  5996   00260C                     l3463:
  5997   00260C  90D8               	bcf	status,0,c
  5998   00260E  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5999   002610  3216               	rrcf	___lwdiv@divisor^0,f,c
  6000   002612  2E1A               	decfsz	___lwdiv@counter^0,f,c
  6001   002614  D7ED               	goto	u3610
  6002   002616                     l834:
  6003   002616  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  6004   00261A  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6005   00261E  0012               	return		;funcret
  6006   002620                     __end_of___lwdiv:
  6007                           	callstack 0
  6008                           
  6009 ;; *************** function ___lmul *****************
  6010 ;; Defined at:
  6011 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  multiplier      4   13[COMRAM] unsigned long 
  6014 ;;  multiplicand    4   17[COMRAM] unsigned long 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  product         4   21[COMRAM] unsigned long 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  4   13[COMRAM] unsigned long 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6026 ;;      Params:         8       0       0       0       0       0       0       0       0
  6027 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6029 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6030 ;;Total ram usage:       12 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 5
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_main
  6037 ;;		_Imprimir_Resultado
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text27
  6042   0024CC                     __ptext27:
  6043                           	callstack 0
  6044   0024CC                     ___lmul:
  6045                           	callstack 25
  6046                           
  6047                           ;incstack = 0
  6048   0024CC  0E00               	movlw	0
  6049   0024CE  6E16               	movwf	___lmul@product^0,c
  6050   0024D0  0E00               	movlw	0
  6051   0024D2  6E17               	movwf	(___lmul@product+1)^0,c
  6052   0024D4  0E00               	movlw	0
  6053   0024D6  6E18               	movwf	(___lmul@product+2)^0,c
  6054   0024D8  0E00               	movlw	0
  6055   0024DA  6E19               	movwf	(___lmul@product+3)^0,c
  6056   0024DC                     l3357:
  6057   0024DC  A00E               	btfss	___lmul@multiplier^0,0,c
  6058   0024DE  D008               	goto	l3361
  6059   0024E0  5012               	movf	___lmul@multiplicand^0,w,c
  6060   0024E2  2616               	addwf	___lmul@product^0,f,c
  6061   0024E4  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  6062   0024E6  2217               	addwfc	(___lmul@product+1)^0,f,c
  6063   0024E8  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  6064   0024EA  2218               	addwfc	(___lmul@product+2)^0,f,c
  6065   0024EC  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  6066   0024EE  2219               	addwfc	(___lmul@product+3)^0,f,c
  6067   0024F0                     l3361:
  6068   0024F0  90D8               	bcf	status,0,c
  6069   0024F2  3612               	rlcf	___lmul@multiplicand^0,f,c
  6070   0024F4  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6071   0024F6  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6072   0024F8  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6073   0024FA  90D8               	bcf	status,0,c
  6074   0024FC  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  6075   0024FE  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  6076   002500  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  6077   002502  320E               	rrcf	___lmul@multiplier^0,f,c
  6078   002504  500E               	movf	___lmul@multiplier^0,w,c
  6079   002506  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  6080   002508  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  6081   00250A  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  6082   00250C  A4D8               	btfss	status,2,c
  6083   00250E  D7E6               	goto	l3357
  6084   002510  C016  F00E         	movff	___lmul@product,?___lmul
  6085   002514  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  6086   002518  C018  F010         	movff	___lmul@product+2,?___lmul+2
  6087   00251C  C019  F011         	movff	___lmul@product+3,?___lmul+3
  6088   002520  0012               	return		;funcret
  6089   002522                     __end_of___lmul:
  6090                           	callstack 0
  6091                           
  6092 ;; *************** function ___almod *****************
  6093 ;; Defined at:
  6094 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  dividend        4   28[BANK0 ] long 
  6097 ;;  divisor         4   32[BANK0 ] long 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  sign            1   37[BANK0 ] unsigned char 
  6100 ;;  counter         1   36[BANK0 ] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  4   28[BANK0 ] long 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 3F/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6110 ;;      Params:         0       8       0       0       0       0       0       0       0
  6111 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6113 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6114 ;;Total ram usage:       10 bytes
  6115 ;; Hardware stack levels used: 1
  6116 ;; Hardware stack levels required when called: 5
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_Imprimir_Resultado
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text28
  6125   001F60                     __ptext28:
  6126                           	callstack 0
  6127   001F60                     ___almod:
  6128                           	callstack 24
  6129                           
  6130                           ;incstack = 0
  6131   001F60  0E00               	movlw	0
  6132   001F62  0100               	movlb	0	; () banked
  6133   001F64  6F85               	movwf	___almod@sign& (0+255),b
  6134                           
  6135                           ; BSR set to: 0
  6136   001F66  AF7F               	btfss	(___almod@dividend+3)& (0+255),7,b
  6137   001F68  D00A               	goto	l4757
  6138                           
  6139                           ; BSR set to: 0
  6140   001F6A  1F7F               	comf	(___almod@dividend+3)& (0+255),f,b
  6141   001F6C  1F7E               	comf	(___almod@dividend+2)& (0+255),f,b
  6142   001F6E  1F7D               	comf	(___almod@dividend+1)& (0+255),f,b
  6143   001F70  6D7C               	negf	___almod@dividend& (0+255),b
  6144   001F72  0E00               	movlw	0
  6145   001F74  237D               	addwfc	(___almod@dividend+1)& (0+255),f,b
  6146   001F76  237E               	addwfc	(___almod@dividend+2)& (0+255),f,b
  6147   001F78  237F               	addwfc	(___almod@dividend+3)& (0+255),f,b
  6148                           
  6149                           ; BSR set to: 0
  6150   001F7A  0E01               	movlw	1
  6151   001F7C  6F85               	movwf	___almod@sign& (0+255),b
  6152   001F7E                     l4757:
  6153                           
  6154                           ; BSR set to: 0
  6155   001F7E  AF83               	btfss	(___almod@divisor+3)& (0+255),7,b
  6156   001F80  D008               	goto	l4761
  6157                           
  6158                           ; BSR set to: 0
  6159   001F82  1F83               	comf	(___almod@divisor+3)& (0+255),f,b
  6160   001F84  1F82               	comf	(___almod@divisor+2)& (0+255),f,b
  6161   001F86  1F81               	comf	(___almod@divisor+1)& (0+255),f,b
  6162   001F88  6D80               	negf	___almod@divisor& (0+255),b
  6163   001F8A  0E00               	movlw	0
  6164   001F8C  2381               	addwfc	(___almod@divisor+1)& (0+255),f,b
  6165   001F8E  2382               	addwfc	(___almod@divisor+2)& (0+255),f,b
  6166   001F90  2383               	addwfc	(___almod@divisor+3)& (0+255),f,b
  6167   001F92                     l4761:
  6168                           
  6169                           ; BSR set to: 0
  6170   001F92  5180               	movf	___almod@divisor& (0+255),w,b
  6171   001F94  1181               	iorwf	(___almod@divisor+1)& (0+255),w,b
  6172   001F96  1182               	iorwf	(___almod@divisor+2)& (0+255),w,b
  6173   001F98  1183               	iorwf	(___almod@divisor+3)& (0+255),w,b
  6174   001F9A  B4D8               	btfsc	status,2,c
  6175   001F9C  D024               	goto	l4777
  6176                           
  6177                           ; BSR set to: 0
  6178   001F9E  0E01               	movlw	1
  6179   001FA0  6F84               	movwf	___almod@counter& (0+255),b
  6180   001FA2  D006               	goto	l4767
  6181   001FA4                     l4765:
  6182                           
  6183                           ; BSR set to: 0
  6184   001FA4  90D8               	bcf	status,0,c
  6185   001FA6  3780               	rlcf	___almod@divisor& (0+255),f,b
  6186   001FA8  3781               	rlcf	(___almod@divisor+1)& (0+255),f,b
  6187   001FAA  3782               	rlcf	(___almod@divisor+2)& (0+255),f,b
  6188   001FAC  3783               	rlcf	(___almod@divisor+3)& (0+255),f,b
  6189   001FAE  2B84               	incf	___almod@counter& (0+255),f,b
  6190   001FB0                     l4767:
  6191                           
  6192                           ; BSR set to: 0
  6193   001FB0  AF83               	btfss	(___almod@divisor+3)& (0+255),7,b
  6194   001FB2  D7F8               	goto	l4765
  6195   001FB4                     u5950:
  6196                           
  6197                           ; BSR set to: 0
  6198   001FB4  5180               	movf	___almod@divisor& (0+255),w,b
  6199   001FB6  5D7C               	subwf	___almod@dividend& (0+255),w,b
  6200   001FB8  5181               	movf	(___almod@divisor+1)& (0+255),w,b
  6201   001FBA  597D               	subwfb	(___almod@dividend+1)& (0+255),w,b
  6202   001FBC  5182               	movf	(___almod@divisor+2)& (0+255),w,b
  6203   001FBE  597E               	subwfb	(___almod@dividend+2)& (0+255),w,b
  6204   001FC0  5183               	movf	(___almod@divisor+3)& (0+255),w,b
  6205   001FC2  597F               	subwfb	(___almod@dividend+3)& (0+255),w,b
  6206   001FC4  A0D8               	btfss	status,0,c
  6207   001FC6  D008               	goto	l4773
  6208                           
  6209                           ; BSR set to: 0
  6210   001FC8  5180               	movf	___almod@divisor& (0+255),w,b
  6211   001FCA  5F7C               	subwf	___almod@dividend& (0+255),f,b
  6212   001FCC  5181               	movf	(___almod@divisor+1)& (0+255),w,b
  6213   001FCE  5B7D               	subwfb	(___almod@dividend+1)& (0+255),f,b
  6214   001FD0  5182               	movf	(___almod@divisor+2)& (0+255),w,b
  6215   001FD2  5B7E               	subwfb	(___almod@dividend+2)& (0+255),f,b
  6216   001FD4  5183               	movf	(___almod@divisor+3)& (0+255),w,b
  6217   001FD6  5B7F               	subwfb	(___almod@dividend+3)& (0+255),f,b
  6218   001FD8                     l4773:
  6219                           
  6220                           ; BSR set to: 0
  6221   001FD8  90D8               	bcf	status,0,c
  6222   001FDA  3383               	rrcf	(___almod@divisor+3)& (0+255),f,b
  6223   001FDC  3382               	rrcf	(___almod@divisor+2)& (0+255),f,b
  6224   001FDE  3381               	rrcf	(___almod@divisor+1)& (0+255),f,b
  6225   001FE0  3380               	rrcf	___almod@divisor& (0+255),f,b
  6226                           
  6227                           ; BSR set to: 0
  6228   001FE2  2F84               	decfsz	___almod@counter& (0+255),f,b
  6229   001FE4  D7E7               	goto	u5950
  6230   001FE6                     l4777:
  6231                           
  6232                           ; BSR set to: 0
  6233   001FE6  5185               	movf	___almod@sign& (0+255),w,b
  6234   001FE8  B4D8               	btfsc	status,2,c
  6235   001FEA  D008               	goto	l4781
  6236                           
  6237                           ; BSR set to: 0
  6238   001FEC  1F7F               	comf	(___almod@dividend+3)& (0+255),f,b
  6239   001FEE  1F7E               	comf	(___almod@dividend+2)& (0+255),f,b
  6240   001FF0  1F7D               	comf	(___almod@dividend+1)& (0+255),f,b
  6241   001FF2  6D7C               	negf	___almod@dividend& (0+255),b
  6242   001FF4  0E00               	movlw	0
  6243   001FF6  237D               	addwfc	(___almod@dividend+1)& (0+255),f,b
  6244   001FF8  237E               	addwfc	(___almod@dividend+2)& (0+255),f,b
  6245   001FFA  237F               	addwfc	(___almod@dividend+3)& (0+255),f,b
  6246   001FFC                     l4781:
  6247                           
  6248                           ; BSR set to: 0
  6249   001FFC  C07C  F07C         	movff	___almod@dividend,?___almod
  6250   002000  C07D  F07D         	movff	___almod@dividend+1,?___almod+1
  6251   002004  C07E  F07E         	movff	___almod@dividend+2,?___almod+2
  6252   002008  C07F  F07F         	movff	___almod@dividend+3,?___almod+3
  6253                           
  6254                           ; BSR set to: 0
  6255   00200C  0012               	return		;funcret
  6256   00200E                     __end_of___almod:
  6257                           	callstack 0
  6258                           
  6259 ;; *************** function ___aldiv *****************
  6260 ;; Defined at:
  6261 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  dividend        4   28[BANK0 ] long 
  6264 ;;  divisor         4   32[BANK0 ] long 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  quotient        4   38[BANK0 ] long 
  6267 ;;  sign            1   37[BANK0 ] unsigned char 
  6268 ;;  counter         1   36[BANK0 ] unsigned char 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  4   28[BANK0 ] long 
  6271 ;; Registers used:
  6272 ;;		wreg, status,2, status,0
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 3F/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6278 ;;      Params:         0       8       0       0       0       0       0       0       0
  6279 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6281 ;;      Totals:         0      14       0       0       0       0       0       0       0
  6282 ;;Total ram usage:       14 bytes
  6283 ;; Hardware stack levels used: 1
  6284 ;; Hardware stack levels required when called: 5
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_Imprimir_Resultado
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text29
  6293   001D1A                     __ptext29:
  6294                           	callstack 0
  6295   001D1A                     ___aldiv:
  6296                           	callstack 24
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;incstack = 0
  6300   001D1A  0E00               	movlw	0
  6301   001D1C  0100               	movlb	0	; () banked
  6302   001D1E  6F85               	movwf	___aldiv@sign& (0+255),b
  6303                           
  6304                           ; BSR set to: 0
  6305   001D20  AF83               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6306   001D22  D00A               	goto	l3373
  6307                           
  6308                           ; BSR set to: 0
  6309   001D24  1F83               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6310   001D26  1F82               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6311   001D28  1F81               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6312   001D2A  6D80               	negf	___aldiv@divisor& (0+255),b
  6313   001D2C  0E00               	movlw	0
  6314   001D2E  2381               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6315   001D30  2382               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6316   001D32  2383               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6317                           
  6318                           ; BSR set to: 0
  6319   001D34  0E01               	movlw	1
  6320   001D36  6F85               	movwf	___aldiv@sign& (0+255),b
  6321   001D38                     l3373:
  6322                           
  6323                           ; BSR set to: 0
  6324   001D38  AF7F               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6325   001D3A  D00A               	goto	l3379
  6326                           
  6327                           ; BSR set to: 0
  6328   001D3C  1F7F               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6329   001D3E  1F7E               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6330   001D40  1F7D               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6331   001D42  6D7C               	negf	___aldiv@dividend& (0+255),b
  6332   001D44  0E00               	movlw	0
  6333   001D46  237D               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6334   001D48  237E               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6335   001D4A  237F               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6336                           
  6337                           ; BSR set to: 0
  6338   001D4C  0E01               	movlw	1
  6339   001D4E  1B85               	xorwf	___aldiv@sign& (0+255),f,b
  6340   001D50                     l3379:
  6341                           
  6342                           ; BSR set to: 0
  6343   001D50  0E00               	movlw	0
  6344   001D52  6F86               	movwf	___aldiv@quotient& (0+255),b
  6345   001D54  0E00               	movlw	0
  6346   001D56  6F87               	movwf	(___aldiv@quotient+1)& (0+255),b
  6347   001D58  0E00               	movlw	0
  6348   001D5A  6F88               	movwf	(___aldiv@quotient+2)& (0+255),b
  6349   001D5C  0E00               	movlw	0
  6350   001D5E  6F89               	movwf	(___aldiv@quotient+3)& (0+255),b
  6351                           
  6352                           ; BSR set to: 0
  6353   001D60  5180               	movf	___aldiv@divisor& (0+255),w,b
  6354   001D62  1181               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6355   001D64  1182               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6356   001D66  1183               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6357   001D68  B4D8               	btfsc	status,2,c
  6358   001D6A  D02A               	goto	l3401
  6359                           
  6360                           ; BSR set to: 0
  6361   001D6C  0E01               	movlw	1
  6362   001D6E  6F84               	movwf	___aldiv@counter& (0+255),b
  6363   001D70  D006               	goto	l3387
  6364   001D72                     l3385:
  6365                           
  6366                           ; BSR set to: 0
  6367   001D72  90D8               	bcf	status,0,c
  6368   001D74  3780               	rlcf	___aldiv@divisor& (0+255),f,b
  6369   001D76  3781               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6370   001D78  3782               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6371   001D7A  3783               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6372   001D7C  2B84               	incf	___aldiv@counter& (0+255),f,b
  6373   001D7E                     l3387:
  6374                           
  6375                           ; BSR set to: 0
  6376   001D7E  AF83               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6377   001D80  D7F8               	goto	l3385
  6378   001D82                     u3510:
  6379                           
  6380                           ; BSR set to: 0
  6381   001D82  90D8               	bcf	status,0,c
  6382   001D84  3786               	rlcf	___aldiv@quotient& (0+255),f,b
  6383   001D86  3787               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6384   001D88  3788               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6385   001D8A  3789               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6386                           
  6387                           ; BSR set to: 0
  6388   001D8C  5180               	movf	___aldiv@divisor& (0+255),w,b
  6389   001D8E  5D7C               	subwf	___aldiv@dividend& (0+255),w,b
  6390   001D90  5181               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6391   001D92  597D               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6392   001D94  5182               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6393   001D96  597E               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6394   001D98  5183               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6395   001D9A  597F               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6396   001D9C  A0D8               	btfss	status,0,c
  6397   001D9E  D009               	goto	l3397
  6398                           
  6399                           ; BSR set to: 0
  6400   001DA0  5180               	movf	___aldiv@divisor& (0+255),w,b
  6401   001DA2  5F7C               	subwf	___aldiv@dividend& (0+255),f,b
  6402   001DA4  5181               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6403   001DA6  5B7D               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6404   001DA8  5182               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6405   001DAA  5B7E               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6406   001DAC  5183               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6407   001DAE  5B7F               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6408                           
  6409                           ; BSR set to: 0
  6410   001DB0  8186               	bsf	___aldiv@quotient& (0+255),0,b
  6411   001DB2                     l3397:
  6412                           
  6413                           ; BSR set to: 0
  6414   001DB2  90D8               	bcf	status,0,c
  6415   001DB4  3383               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6416   001DB6  3382               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6417   001DB8  3381               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6418   001DBA  3380               	rrcf	___aldiv@divisor& (0+255),f,b
  6419                           
  6420                           ; BSR set to: 0
  6421   001DBC  2F84               	decfsz	___aldiv@counter& (0+255),f,b
  6422   001DBE  D7E1               	goto	u3510
  6423   001DC0                     l3401:
  6424                           
  6425                           ; BSR set to: 0
  6426   001DC0  5185               	movf	___aldiv@sign& (0+255),w,b
  6427   001DC2  B4D8               	btfsc	status,2,c
  6428   001DC4  D008               	goto	l3405
  6429                           
  6430                           ; BSR set to: 0
  6431   001DC6  1F89               	comf	(___aldiv@quotient+3)& (0+255),f,b
  6432   001DC8  1F88               	comf	(___aldiv@quotient+2)& (0+255),f,b
  6433   001DCA  1F87               	comf	(___aldiv@quotient+1)& (0+255),f,b
  6434   001DCC  6D86               	negf	___aldiv@quotient& (0+255),b
  6435   001DCE  0E00               	movlw	0
  6436   001DD0  2387               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  6437   001DD2  2388               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  6438   001DD4  2389               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  6439   001DD6                     l3405:
  6440                           
  6441                           ; BSR set to: 0
  6442   001DD6  C086  F07C         	movff	___aldiv@quotient,?___aldiv
  6443   001DDA  C087  F07D         	movff	___aldiv@quotient+1,?___aldiv+1
  6444   001DDE  C088  F07E         	movff	___aldiv@quotient+2,?___aldiv+2
  6445   001DE2  C089  F07F         	movff	___aldiv@quotient+3,?___aldiv+3
  6446                           
  6447                           ; BSR set to: 0
  6448   001DE6  0012               	return		;funcret
  6449   001DE8                     __end_of___aldiv:
  6450                           	callstack 0
  6451                           
  6452 ;; *************** function _MensajeLCD_Var *****************
  6453 ;; Defined at:
  6454 ;;		line 261 in file "LibLCDXC8.h"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  a               1   18[COMRAM] PTR unsigned char 
  6457 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  6458 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  6459 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  6460 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  i               2   20[COMRAM] int 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      void 
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6472 ;;      Params:         1       0       0       0       0       0       0       0       0
  6473 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6474 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6475 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6476 ;;Total ram usage:        4 bytes
  6477 ;; Hardware stack levels used: 1
  6478 ;; Hardware stack levels required when called: 8
  6479 ;; This function calls:
  6480 ;;		_EscribeLCD_c
  6481 ;;		_strlen
  6482 ;; This function is called by:
  6483 ;;		_main
  6484 ;;		_Imprimir_Resultado
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text30
  6489   002620                     __ptext30:
  6490                           	callstack 0
  6491   002620                     _MensajeLCD_Var:
  6492                           	callstack 22
  6493                           
  6494                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;incstack = 0
  6498   002620  0E00               	movlw	0
  6499   002622  6E16               	movwf	(MensajeLCD_Var@i+1)^0,c
  6500   002624  0E00               	movlw	0
  6501   002626  6E15               	movwf	MensajeLCD_Var@i^0,c
  6502   002628  D019               	goto	l3299
  6503   00262A                     l3291:
  6504                           
  6505                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  6506   00262A  5013               	movf	MensajeLCD_Var@a^0,w,c
  6507   00262C  2415               	addwf	MensajeLCD_Var@i^0,w,c
  6508   00262E  6E14               	movwf	??_MensajeLCD_Var^0,c
  6509   002630  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  6510   002634                     	if	1	;There is more than 1 active tblptr byte
  6511   002634  0E08               	movlw	high __smallconst
  6512   002636  6EF7               	movwf	tblptrh,c
  6513   002638                     	endif
  6514   002638                     	if	0	;tblptru may be non-zero
  6515   002638                     	endif
  6516   002638                     	if	0	;tblptru may be non-zero
  6517   002638                     	endif
  6518   002638  0008               	tblrd		*
  6519   00263A  50F5               	movf	tablat,w,c
  6520   00263C  0900               	iorlw	0
  6521   00263E  B4D8               	btfsc	status,2,c
  6522   002640  0012               	return	
  6523                           
  6524                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  6525   002642  5013               	movf	MensajeLCD_Var@a^0,w,c
  6526   002644  2415               	addwf	MensajeLCD_Var@i^0,w,c
  6527   002646  6E14               	movwf	??_MensajeLCD_Var^0,c
  6528   002648  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  6529   00264C                     	if	1	;There is more than 1 active tblptr byte
  6530   00264C  0E08               	movlw	high __smallconst
  6531   00264E  6EF7               	movwf	tblptrh,c
  6532   002650                     	endif
  6533   002650                     	if	0	;tblptru may be non-zero
  6534   002650                     	endif
  6535   002650                     	if	0	;tblptru may be non-zero
  6536   002650                     	endif
  6537   002650  0008               	tblrd		*
  6538   002652  50F5               	movf	tablat,w,c
  6539   002654  EC5E  F014         	call	_EscribeLCD_c
  6540   002658  4A15               	infsnz	MensajeLCD_Var@i^0,f,c
  6541   00265A  2A16               	incf	(MensajeLCD_Var@i+1)^0,f,c
  6542   00265C                     l3299:
  6543   00265C  C013  F00E         	movff	MensajeLCD_Var@a,strlen@s
  6544   002660  EC05  F014         	call	_strlen	;wreg free
  6545   002664  500E               	movf	?_strlen^0,w,c
  6546   002666  5C15               	subwf	MensajeLCD_Var@i^0,w,c
  6547   002668  500F               	movf	(?_strlen+1)^0,w,c
  6548   00266A  5816               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  6549   00266C  B0D8               	btfsc	status,0,c
  6550   00266E  0012               	return	
  6551   002670  D7DC               	goto	l3291
  6552   002672                     __end_of_MensajeLCD_Var:
  6553                           	callstack 0
  6554                           
  6555 ;; *************** function _strlen *****************
  6556 ;; Defined at:
  6557 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  s               1   13[COMRAM] PTR const unsigned char 
  6560 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  6561 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  6562 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  6563 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  cp              1   15[COMRAM] PTR const unsigned char 
  6566 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  6567 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  6568 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  6569 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  2   13[COMRAM] unsigned int 
  6572 ;; Registers used:
  6573 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6579 ;;      Params:         2       0       0       0       0       0       0       0       0
  6580 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6582 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6583 ;;Total ram usage:        3 bytes
  6584 ;; Hardware stack levels used: 1
  6585 ;; Hardware stack levels required when called: 5
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_MensajeLCD_Var
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text31
  6594   00280A                     __ptext31:
  6595                           	callstack 0
  6596   00280A                     _strlen:
  6597                           	callstack 24
  6598                           
  6599                           ;incstack = 0
  6600   00280A  C00E  F010         	movff	strlen@s,strlen@cp
  6601   00280E  D001               	goto	l3185
  6602   002810                     l3183:
  6603   002810  2A10               	incf	strlen@cp^0,f,c
  6604   002812                     l3185:
  6605   002812  C010  FFF6         	movff	strlen@cp,tblptrl
  6606   002816                     	if	1	;There is more than 1 active tblptr byte
  6607   002816  0E08               	movlw	high __smallconst
  6608   002818  6EF7               	movwf	tblptrh,c
  6609   00281A                     	endif
  6610   00281A                     	if	0	;tblptru may be non-zero
  6611   00281A                     	endif
  6612   00281A                     	if	0	;tblptru may be non-zero
  6613   00281A                     	endif
  6614   00281A  0008               	tblrd		*
  6615   00281C  50F5               	movf	tablat,w,c
  6616   00281E  0900               	iorlw	0
  6617   002820  A4D8               	btfss	status,2,c
  6618   002822  D7F6               	goto	l3183
  6619   002824  500E               	movf	strlen@s^0,w,c
  6620   002826  5C10               	subwf	strlen@cp^0,w,c
  6621   002828  6E0E               	movwf	?_strlen^0,c
  6622   00282A  6A0F               	clrf	(?_strlen+1)^0,c
  6623   00282C  BE0E               	btfsc	?_strlen^0,7,c
  6624   00282E  060F               	decf	(?_strlen+1)^0,f,c
  6625   002830  0012               	return		;funcret
  6626   002832                     __end_of_strlen:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function _EscribeLCD_c *****************
  6630 ;; Defined at:
  6631 ;;		line 117 in file "LibLCDXC8.h"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  a               1    wreg     unsigned char 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  a               1   17[COMRAM] unsigned char 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0
  6646 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6648 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6649 ;;Total ram usage:        1 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 7
  6652 ;; This function calls:
  6653 ;;		_EnviaDato
  6654 ;;		_HabilitaLCD
  6655 ;;		_RetardoLCD
  6656 ;; This function is called by:
  6657 ;;		_MensajeLCD_Var
  6658 ;;		_main
  6659 ;;		_Imprimir_Resultado
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text32
  6664   0028BC                     __ptext32:
  6665                           	callstack 0
  6666   0028BC                     _EscribeLCD_c:
  6667                           	callstack 22
  6668                           
  6669                           ;incstack = 0
  6670                           ;EscribeLCD_c@a stored from wreg
  6671   0028BC  6E12               	movwf	EscribeLCD_c@a^0,c
  6672                           
  6673                           ;LibLCDXC8.h: 121: LATE0=1;
  6674   0028BE  808D               	bsf	3981,0,c	;volatile
  6675                           
  6676                           ;LibLCDXC8.h: 122: EnviaDato(a);
  6677   0028C0  5012               	movf	EscribeLCD_c@a^0,w,c
  6678   0028C2  EC62  F013         	call	_EnviaDato
  6679                           
  6680                           ;LibLCDXC8.h: 123: HabilitaLCD();
  6681   0028C6  EC9E  F014         	call	_HabilitaLCD	;wreg free
  6682                           
  6683                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  6684   0028CA  0E04               	movlw	4
  6685   0028CC  EC91  F012         	call	_RetardoLCD
  6686   0028D0  0012               	return		;funcret
  6687   0028D2                     __end_of_EscribeLCD_c:
  6688                           	callstack 0
  6689                           
  6690 ;; *************** function _DireccionaLCD *****************
  6691 ;; Defined at:
  6692 ;;		line 273 in file "LibLCDXC8.h"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  a               1    wreg     unsigned char 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  a               1   17[COMRAM] unsigned char 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      void 
  6699 ;; Registers used:
  6700 ;;		wreg, status,2, status,0, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6706 ;;      Params:         0       0       0       0       0       0       0       0       0
  6707 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6708 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6709 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6710 ;;Total ram usage:        1 bytes
  6711 ;; Hardware stack levels used: 1
  6712 ;; Hardware stack levels required when called: 7
  6713 ;; This function calls:
  6714 ;;		_EnviaDato
  6715 ;;		_HabilitaLCD
  6716 ;;		_RetardoLCD
  6717 ;; This function is called by:
  6718 ;;		_main
  6719 ;;		_Imprimir_Resultado
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           	psect	text33
  6724   0028D2                     __ptext33:
  6725                           	callstack 0
  6726   0028D2                     _DireccionaLCD:
  6727                           	callstack 22
  6728                           
  6729                           ;incstack = 0
  6730                           ;DireccionaLCD@a stored from wreg
  6731   0028D2  6E12               	movwf	DireccionaLCD@a^0,c
  6732                           
  6733                           ;LibLCDXC8.h: 276: LATE0=0;
  6734   0028D4  908D               	bcf	3981,0,c	;volatile
  6735                           
  6736                           ;LibLCDXC8.h: 277: EnviaDato(a);
  6737   0028D6  5012               	movf	DireccionaLCD@a^0,w,c
  6738   0028D8  EC62  F013         	call	_EnviaDato
  6739                           
  6740                           ;LibLCDXC8.h: 278: HabilitaLCD();
  6741   0028DC  EC9E  F014         	call	_HabilitaLCD	;wreg free
  6742                           
  6743                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  6744   0028E0  0E04               	movlw	4
  6745   0028E2  EC91  F012         	call	_RetardoLCD
  6746   0028E6  0012               	return		;funcret
  6747   0028E8                     __end_of_DireccionaLCD:
  6748                           	callstack 0
  6749                           
  6750 ;; *************** function _EnviaDato *****************
  6751 ;; Defined at:
  6752 ;;		line 52 in file "LibLCDXC8.h"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  a               1    wreg     unsigned char 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  a               1   16[COMRAM] unsigned char 
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6766 ;;      Params:         0       0       0       0       0       0       0       0       0
  6767 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6768 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6769 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6770 ;;Total ram usage:        2 bytes
  6771 ;; Hardware stack levels used: 1
  6772 ;; Hardware stack levels required when called: 6
  6773 ;; This function calls:
  6774 ;;		_HabilitaLCD
  6775 ;;		_RetardoLCD
  6776 ;; This function is called by:
  6777 ;;		_InicializaLCD
  6778 ;;		_BorraLCD
  6779 ;;		_EscribeLCD_c
  6780 ;;		_DireccionaLCD
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text34
  6785   0026C4                     __ptext34:
  6786                           	callstack 0
  6787   0026C4                     _EnviaDato:
  6788                           	callstack 22
  6789                           
  6790                           ;incstack = 0
  6791                           ;EnviaDato@a stored from wreg
  6792   0026C4  6E11               	movwf	EnviaDato@a^0,c
  6793                           
  6794                           ;LibLCDXC8.h: 53: if(interfaz==4){
  6795   0026C6  0E04               	movlw	4
  6796   0026C8  1850               	xorwf	_interfaz^0,w,c
  6797   0026CA  A4D8               	btfss	status,2,c
  6798   0026CC  D017               	goto	l3013
  6799                           
  6800                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  6801   0026CE  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  6802   0026D2  0EF0               	movlw	240
  6803   0026D4  1610               	andwf	??_EnviaDato^0,f,c
  6804   0026D6  508C               	movf	140,w,c	;volatile
  6805   0026D8  0B0F               	andlw	15
  6806   0026DA  1010               	iorwf	??_EnviaDato^0,w,c
  6807   0026DC  6E8C               	movwf	140,c	;volatile
  6808                           
  6809                           ;LibLCDXC8.h: 55: HabilitaLCD();
  6810   0026DE  EC9E  F014         	call	_HabilitaLCD	;wreg free
  6811                           
  6812                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  6813   0026E2  0E01               	movlw	1
  6814   0026E4  EC91  F012         	call	_RetardoLCD
  6815                           
  6816                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  6817   0026E8  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  6818   0026EC  3A10               	swapf	??_EnviaDato^0,f,c
  6819   0026EE  0EF0               	movlw	240
  6820   0026F0  1610               	andwf	??_EnviaDato^0,f,c
  6821   0026F2  508C               	movf	140,w,c	;volatile
  6822   0026F4  0B0F               	andlw	15
  6823   0026F6  1010               	iorwf	??_EnviaDato^0,w,c
  6824   0026F8  6E8C               	movwf	140,c	;volatile
  6825                           
  6826                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  6827   0026FA  0012               	return	
  6828   0026FC                     l3013:
  6829   0026FC  0E08               	movlw	8
  6830   0026FE  1850               	xorwf	_interfaz^0,w,c
  6831   002700  A4D8               	btfss	status,2,c
  6832   002702  0012               	return	
  6833                           
  6834                           ;LibLCDXC8.h: 59: LATD=a;
  6835   002704  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  6836   002708  0012               	return		;funcret
  6837   00270A                     __end_of_EnviaDato:
  6838                           	callstack 0
  6839                           
  6840 ;; *************** function _RetardoLCD *****************
  6841 ;; Defined at:
  6842 ;;		line 309 in file "LibLCDXC8.h"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  a               1    wreg     unsigned char 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  a               1   14[COMRAM] unsigned char 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      void 
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6856 ;;      Params:         0       0       0       0       0       0       0       0       0
  6857 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6858 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6859 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6860 ;;Total ram usage:        2 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; Hardware stack levels required when called: 5
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_EnviaDato
  6867 ;;		_InicializaLCD
  6868 ;;		_BorraLCD
  6869 ;;		_EscribeLCD_c
  6870 ;;		_DireccionaLCD
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text35
  6875   002522                     __ptext35:
  6876                           	callstack 0
  6877   002522                     _RetardoLCD:
  6878                           	callstack 23
  6879                           
  6880                           ;incstack = 0
  6881                           ;RetardoLCD@a stored from wreg
  6882   002522  6E0F               	movwf	RetardoLCD@a^0,c
  6883                           
  6884                           ;LibLCDXC8.h: 310: switch(a){
  6885   002524  D01B               	goto	l2783
  6886   002526                     l2773:
  6887   002526  0E05               	movlw	5
  6888   002528  6E0E               	movwf	??_RetardoLCD^0,c
  6889   00252A  0EDE               	movlw	222
  6890   00252C                     u6997:
  6891   00252C  2EE8               	decfsz	wreg,f,c
  6892   00252E  D7FE               	bra	u6997
  6893   002530  2E0E               	decfsz	??_RetardoLCD^0,f,c
  6894   002532  D7FC               	bra	u6997
  6895                           
  6896                           ;LibLCDXC8.h: 313: break;
  6897   002534  0012               	return	
  6898   002536                     l2775:
  6899   002536  0E53               	movlw	83
  6900   002538                     u7007:
  6901   002538  2EE8               	decfsz	wreg,f,c
  6902   00253A  D7FE               	bra	u7007
  6903   00253C  F000               	nop	
  6904                           
  6905                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  6906   00253E  0E35               	movlw	53
  6907   002540                     u7017:
  6908   002540  2EE8               	decfsz	wreg,f,c
  6909   002542  D7FE               	bra	u7017
  6910   002544  F000               	nop	
  6911                           
  6912                           ;LibLCDXC8.h: 317: break;
  6913   002546  0012               	return	
  6914   002548                     l2777:
  6915   002548  0E08               	movlw	8
  6916   00254A                     u7027:
  6917   00254A  2EE8               	decfsz	wreg,f,c
  6918   00254C  D7FE               	bra	u7027
  6919   00254E  F000               	nop	
  6920                           
  6921                           ;LibLCDXC8.h: 320: break;
  6922   002550  0012               	return	
  6923   002552                     l2779:
  6924   002552  0E03               	movlw	3
  6925   002554                     u7037:
  6926   002554  2EE8               	decfsz	wreg,f,c
  6927   002556  D7FE               	bra	u7037
  6928   002558  F000               	nop	
  6929                           
  6930                           ;LibLCDXC8.h: 323: break;
  6931   00255A  0012               	return	
  6932   00255C                     l2783:
  6933   00255C  500F               	movf	RetardoLCD@a^0,w,c
  6934                           
  6935                           ; Switch size 1, requested type "simple"
  6936                           ; Number of cases is 4, Range of values is 1 to 4
  6937                           ; switch strategies available:
  6938                           ; Name         Instructions Cycles
  6939                           ; simple_byte           13     7 (average)
  6940                           ;	Chosen strategy is simple_byte
  6941   00255E  0A01               	xorlw	1	; case 1
  6942   002560  B4D8               	btfsc	status,2,c
  6943   002562  D7E1               	goto	l2773
  6944   002564  0A03               	xorlw	3	; case 2
  6945   002566  B4D8               	btfsc	status,2,c
  6946   002568  D7E6               	goto	l2775
  6947   00256A  0A01               	xorlw	1	; case 3
  6948   00256C  B4D8               	btfsc	status,2,c
  6949   00256E  D7EC               	goto	l2777
  6950   002570  0A07               	xorlw	7	; case 4
  6951   002572  A4D8               	btfss	status,2,c
  6952   002574  0012               	return	
  6953   002576  D7ED               	goto	l2779
  6954   002578                     __end_of_RetardoLCD:
  6955                           	callstack 0
  6956                           
  6957 ;; *************** function _HabilitaLCD *****************
  6958 ;; Defined at:
  6959 ;;		line 96 in file "LibLCDXC8.h"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;		None
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6973 ;;      Params:         0       0       0       0       0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6976 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6977 ;;Total ram usage:        0 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; Hardware stack levels required when called: 5
  6980 ;; This function calls:
  6981 ;;		Nothing
  6982 ;; This function is called by:
  6983 ;;		_EnviaDato
  6984 ;;		_InicializaLCD
  6985 ;;		_BorraLCD
  6986 ;;		_EscribeLCD_c
  6987 ;;		_DireccionaLCD
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text36
  6992   00293C                     __ptext36:
  6993                           	callstack 0
  6994   00293C                     _HabilitaLCD:
  6995                           	callstack 23
  6996                           
  6997                           ;LibLCDXC8.h: 98: LATE1=1;
  6998                           
  6999                           ;incstack = 0
  7000   00293C  828D               	bsf	3981,1,c	;volatile
  7001                           
  7002                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  7003   00293E  0E03               	movlw	3
  7004   002940                     u7047:
  7005   002940  2EE8               	decfsz	wreg,f,c
  7006   002942  D7FE               	bra	u7047
  7007   002944  F000               	nop	
  7008                           
  7009                           ;LibLCDXC8.h: 101: LATE1=0;
  7010   002946  928D               	bcf	3981,1,c	;volatile
  7011   002948  0012               	return		;funcret
  7012   00294A                     __end_of_HabilitaLCD:
  7013                           	callstack 0
  7014                           
  7015 ;; *************** function _ConfiguraLCD *****************
  7016 ;; Defined at:
  7017 ;;		line 48 in file "LibLCDXC8.h"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  a               1    wreg     unsigned char 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;  a               1   13[COMRAM] unsigned char 
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  1    wreg      void 
  7024 ;; Registers used:
  7025 ;;		wreg, status,2, status,0
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7031 ;;      Params:         0       0       0       0       0       0       0       0       0
  7032 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7034 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7035 ;;Total ram usage:        1 bytes
  7036 ;; Hardware stack levels used: 1
  7037 ;; Hardware stack levels required when called: 5
  7038 ;; This function calls:
  7039 ;;		Nothing
  7040 ;; This function is called by:
  7041 ;;		_main
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           	psect	text37
  7046   0028A4                     __ptext37:
  7047                           	callstack 0
  7048   0028A4                     _ConfiguraLCD:
  7049                           	callstack 25
  7050                           
  7051                           ;incstack = 0
  7052                           ;ConfiguraLCD@a stored from wreg
  7053   0028A4  6E0E               	movwf	ConfiguraLCD@a^0,c
  7054                           
  7055                           ;LibLCDXC8.h: 49: if(a==4 | a ==8)
  7056   0028A6  0E04               	movlw	4
  7057   0028A8  180E               	xorwf	ConfiguraLCD@a^0,w,c
  7058   0028AA  B4D8               	btfsc	status,2,c
  7059   0028AC  D004               	goto	u3680
  7060   0028AE  0E08               	movlw	8
  7061   0028B0  180E               	xorwf	ConfiguraLCD@a^0,w,c
  7062   0028B2  A4D8               	btfss	status,2,c
  7063   0028B4  0012               	return	
  7064   0028B6                     u3680:
  7065                           
  7066                           ;LibLCDXC8.h: 50: interfaz=a;
  7067   0028B6  C00E  F050         	movff	ConfiguraLCD@a,_interfaz
  7068   0028BA  0012               	return		;funcret
  7069   0028BC                     __end_of_ConfiguraLCD:
  7070                           	callstack 0
  7071                           
  7072 ;; *************** function _ColorRGB *****************
  7073 ;; Defined at:
  7074 ;;		line 245 in file "Lab4.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;		None
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;		None
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  1    wreg      void 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2, status,0
  7083 ;; Tracked objects:
  7084 ;;		On entry : 3F/0
  7085 ;;		On exit  : 3F/0
  7086 ;;		Unchanged: 3F/0
  7087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7088 ;;      Params:         0       0       0       0       0       0       0       0       0
  7089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7090 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7091 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7092 ;;Total ram usage:        2 bytes
  7093 ;; Hardware stack levels used: 1
  7094 ;; Hardware stack levels required when called: 5
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_main
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           	psect	text38
  7103   00225C                     __ptext38:
  7104                           	callstack 0
  7105   00225C                     _ColorRGB:
  7106                           	callstack 25
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;Lab4.c: 246: if(color==8) color = 0;
  7110                           
  7111                           ;incstack = 0
  7112   00225C  0E08               	movlw	8
  7113   00225E  184E               	xorwf	_color^0,w,c
  7114   002260  104F               	iorwf	(_color+1)^0,w,c
  7115   002262  A4D8               	btfss	status,2,c
  7116   002264  D014               	goto	l3719
  7117                           
  7118                           ; BSR set to: 0
  7119   002266  0E00               	movlw	0
  7120   002268  6E4F               	movwf	(_color+1)^0,c
  7121   00226A  0E00               	movlw	0
  7122   00226C  6E4E               	movwf	_color^0,c
  7123   00226E  D00F               	goto	l3719
  7124   002270                     l3701:
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;Lab4.c: 249: LATC = 0b00000000;
  7128   002270  0E00               	movlw	0
  7129   002272  D00B               	goto	L13
  7130   002274                     l3703:
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;Lab4.c: 252: LATC = 0b00000101;
  7134   002274  0E05               	movlw	5
  7135   002276  D009               	goto	L13
  7136   002278                     l3705:
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;Lab4.c: 255: LATC = 0b00000110;
  7140   002278  0E06               	movlw	6
  7141   00227A  D007               	goto	L13
  7142   00227C                     l3707:
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;Lab4.c: 258: LATC = 0b00000011;
  7146   00227C  0E03               	movlw	3
  7147   00227E  D005               	goto	L13
  7148   002280                     l3709:
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;Lab4.c: 261: LATC = 0b00000010;
  7152   002280  0E02               	movlw	2
  7153   002282  D003               	goto	L13
  7154   002284                     l3713:
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;Lab4.c: 267: LATC = 0b00000100;
  7158   002284  0E04               	movlw	4
  7159   002286  D001               	goto	L13
  7160   002288                     l3715:
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;Lab4.c: 270: LATC = 0b00000111;
  7164   002288  0E07               	movlw	7
  7165   00228A                     L13:
  7166   00228A  6E8B               	movwf	139,c	;volatile
  7167                           
  7168                           ;Lab4.c: 271: break;
  7169   00228C  D021               	goto	l3721
  7170   00228E                     l3719:
  7171                           
  7172                           ; BSR set to: 0
  7173   00228E  C04E  F00E         	movff	_color,??_ColorRGB
  7174   002292  C04F  F00F         	movff	_color+1,??_ColorRGB+1
  7175                           
  7176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7177                           ; Switch size 1, requested type "simple"
  7178                           ; Number of cases is 1, Range of values is 0 to 0
  7179                           ; switch strategies available:
  7180                           ; Name         Instructions Cycles
  7181                           ; simple_byte            4     3 (average)
  7182                           ;	Chosen strategy is simple_byte
  7183   002296  500F               	movf	(??_ColorRGB+1)^0,w,c
  7184   002298  0A00               	xorlw	0	; case 0
  7185   00229A  A4D8               	btfss	status,2,c
  7186   00229C  D019               	goto	l3721
  7187                           
  7188                           ; BSR set to: 0
  7189                           ; Switch size 1, requested type "simple"
  7190                           ; Number of cases is 8, Range of values is 0 to 7
  7191                           ; switch strategies available:
  7192                           ; Name         Instructions Cycles
  7193                           ; simple_byte           25    13 (average)
  7194                           ;	Chosen strategy is simple_byte
  7195   00229E  500E               	movf	??_ColorRGB^0,w,c
  7196   0022A0  0A00               	xorlw	0	; case 0
  7197   0022A2  B4D8               	btfsc	status,2,c
  7198   0022A4  D7E5               	goto	l3701
  7199   0022A6  0A01               	xorlw	1	; case 1
  7200   0022A8  B4D8               	btfsc	status,2,c
  7201   0022AA  D7E4               	goto	l3703
  7202   0022AC  0A03               	xorlw	3	; case 2
  7203   0022AE  B4D8               	btfsc	status,2,c
  7204   0022B0  D7E3               	goto	l3705
  7205   0022B2  0A01               	xorlw	1	; case 3
  7206   0022B4  B4D8               	btfsc	status,2,c
  7207   0022B6  D7E2               	goto	l3707
  7208   0022B8  0A07               	xorlw	7	; case 4
  7209   0022BA  B4D8               	btfsc	status,2,c
  7210   0022BC  D7E1               	goto	l3709
  7211   0022BE  0A01               	xorlw	1	; case 5
  7212   0022C0  B4D8               	btfsc	status,2,c
  7213   0022C2  D7DA               	goto	l3705
  7214   0022C4  0A03               	xorlw	3	; case 6
  7215   0022C6  B4D8               	btfsc	status,2,c
  7216   0022C8  D7DD               	goto	l3713
  7217   0022CA  0A01               	xorlw	1	; case 7
  7218   0022CC  B4D8               	btfsc	status,2,c
  7219   0022CE  D7DC               	goto	l3715
  7220   0022D0                     l3721:
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;Lab4.c: 275: color += 1;
  7224   0022D0  4A4E               	infsnz	_color^0,f,c
  7225   0022D2  2A4F               	incf	(_color+1)^0,f,c
  7226                           
  7227                           ; BSR set to: 0
  7228   0022D4  0012               	return		;funcret
  7229   0022D6                     __end_of_ColorRGB:
  7230                           	callstack 0
  7231                           
  7232 ;; *************** function _ISR *****************
  7233 ;; Defined at:
  7234 ;;		line 286 in file "Lab4.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;		None
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;		None
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  1    wreg      void 
  7241 ;; Registers used:
  7242 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7248 ;;      Params:         0       0       0       0       0       0       0       0       0
  7249 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7250 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7251 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7252 ;;Total ram usage:        4 bytes
  7253 ;; Hardware stack levels used: 1
  7254 ;; Hardware stack levels required when called: 4
  7255 ;; This function calls:
  7256 ;;		i2_BorraLCD
  7257 ;;		i2_DireccionaLCD
  7258 ;;		i2_MensajeLCD_Var
  7259 ;; This function is called by:
  7260 ;;		Interrupt level 2
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	intcode
  7265   000008                     __pintcode:
  7266                           	callstack 0
  7267   000008                     _ISR:
  7268                           	callstack 20
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;incstack = 0
  7272   000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7273   00000A  EDA4  F010         	call	int_func,f	;refresh shadow registers
  7274                           
  7275                           	psect	intcode_body
  7276   002148                     __pintcode_body:
  7277                           	callstack 20
  7278   002148                     int_func:
  7279                           	callstack 20
  7280   002148  0006               	pop		; remove dummy address from shadow register refresh
  7281   00214A  CFF6 F00A          	movff	tblptrl,??_ISR
  7282   00214E  CFF7 F00B          	movff	tblptrh,??_ISR+1
  7283   002152  CFF8 F00C          	movff	tblptru,??_ISR+2
  7284   002156  CFF5 F00D          	movff	tablat,??_ISR+3
  7285                           
  7286                           ;Lab4.c: 287: if(TMR0IF==1){
  7287   00215A  A4F2               	btfss	4082,2,c	;volatile
  7288   00215C  D019               	goto	i2l4209
  7289                           
  7290                           ;Lab4.c: 288: if(!verificador) contador = contador +1;
  7291   00215E  5048               	movf	_verificador^0,w,c
  7292   002160  1049               	iorwf	(_verificador+1)^0,w,c
  7293   002162  A4D8               	btfss	status,2,c
  7294   002164  D007               	goto	i2l4203
  7295   002166  0E01               	movlw	1
  7296   002168  244C               	addwf	_contador^0,w,c
  7297   00216A  6E4C               	movwf	_contador^0,c
  7298   00216C  0E00               	movlw	0
  7299   00216E  204D               	addwfc	(_contador+1)^0,w,c
  7300   002170  6E4D               	movwf	(_contador+1)^0,c
  7301   002172  D004               	goto	i2l4205
  7302   002174                     i2l4203:
  7303                           
  7304                           ;Lab4.c: 289: else contador = 0;
  7305   002174  0E00               	movlw	0
  7306   002176  6E4D               	movwf	(_contador+1)^0,c
  7307   002178  0E00               	movlw	0
  7308   00217A  6E4C               	movwf	_contador^0,c
  7309   00217C                     i2l4205:
  7310                           
  7311                           ;Lab4.c: 290: TMR0IF=0;
  7312   00217C  94F2               	bcf	4082,2,c	;volatile
  7313                           
  7314                           ;Lab4.c: 291: LATE2 = !LATE2;
  7315   00217E  B48D               	btfsc	3981,2,c	;volatile
  7316   002180  D002               	goto	i2u501_40
  7317   002182  848D               	bsf	3981,2,c	;volatile
  7318   002184  D001               	goto	i2u502_45
  7319   002186                     i2u501_40:
  7320   002186  948D               	bcf	3981,2,c	;volatile
  7321   002188                     i2u502_45:
  7322                           
  7323                           ;Lab4.c: 292: TMR0 = 49911;
  7324   002188  0EC2               	movlw	194
  7325   00218A  6ED7               	movwf	215,c	;volatile
  7326   00218C  0EF7               	movlw	247
  7327   00218E  6ED6               	movwf	214,c	;volatile
  7328   002190                     i2l4209:
  7329                           
  7330                           ;Lab4.c: 293: };Lab4.c: 295: if(contador == 2100){
  7331   002190  0E34               	movlw	52
  7332   002192  184C               	xorwf	_contador^0,w,c
  7333   002194  E118               	bnz	i2l329
  7334   002196  0E08               	movlw	8
  7335   002198  184D               	xorwf	(_contador+1)^0,w,c
  7336   00219A  A4D8               	btfss	status,2,c
  7337   00219C  D014               	goto	i2l329
  7338                           
  7339                           ;Lab4.c: 296: if(!verificador){
  7340   00219E  5048               	movf	_verificador^0,w,c
  7341   0021A0  1049               	iorwf	(_verificador+1)^0,w,c
  7342   0021A2  A4D8               	btfss	status,2,c
  7343   0021A4  D010               	goto	i2l329
  7344                           
  7345                           ;Lab4.c: 297: LATC7 = !LATC7;
  7346   0021A6  BE8B               	btfsc	3979,7,c	;volatile
  7347   0021A8  D002               	goto	i2u505_40
  7348   0021AA  8E8B               	bsf	3979,7,c	;volatile
  7349   0021AC  D001               	goto	i2u506_45
  7350   0021AE                     i2u505_40:
  7351   0021AE  9E8B               	bcf	3979,7,c	;volatile
  7352   0021B0                     i2u506_45:
  7353                           
  7354                           ;Lab4.c: 298: BorraLCD();
  7355   0021B0  EC94  F014         	call	i2_BorraLCD	;wreg free
  7356                           
  7357                           ;Lab4.c: 299: DireccionaLCD(0x82);
  7358   0021B4  0E82               	movlw	130
  7359   0021B6  EC7F  F014         	call	i2_DireccionaLCD
  7360                           
  7361                           ;Lab4.c: 300: MensajeLCD_Var("LVP Activado");
  7362   0021BA  0E65               	movlw	low STR_11
  7363   0021BC  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  7364   0021BE  EC39  F013         	call	i2_MensajeLCD_Var	;wreg free
  7365   0021C2  0003               	sleep		;# 
  7366   0021C4                     i2l326:
  7367   0021C4  D7FF               	goto	i2l326
  7368   0021C6                     i2l329:
  7369   0021C6  C00D  FFF5         	movff	??_ISR+3,tablat
  7370   0021CA  C00C  FFF8         	movff	??_ISR+2,tblptru
  7371   0021CE  C00B  FFF7         	movff	??_ISR+1,tblptrh
  7372   0021D2  C00A  FFF6         	movff	??_ISR,tblptrl
  7373   0021D6  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7374   0021D8  0011               	retfie		f
  7375   0021DA                     __end_of_ISR:
  7376                           	callstack 0
  7377                           
  7378 ;; *************** function i2_MensajeLCD_Var *****************
  7379 ;; Defined at:
  7380 ;;		line 261 in file "LibLCDXC8.h"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  a               1    5[COMRAM] PTR unsigned char 
  7383 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  7384 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  7385 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  7386 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;  i               2    7[COMRAM] int 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7398 ;;      Params:         1       0       0       0       0       0       0       0       0
  7399 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7400 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7401 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7402 ;;Total ram usage:        4 bytes
  7403 ;; Hardware stack levels used: 1
  7404 ;; Hardware stack levels required when called: 3
  7405 ;; This function calls:
  7406 ;;		i2_EscribeLCD_c
  7407 ;;		i2_strlen
  7408 ;; This function is called by:
  7409 ;;		_ISR
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text40
  7414   002672                     __ptext40:
  7415                           	callstack 0
  7416   002672                     i2_MensajeLCD_Var:
  7417                           	callstack 20
  7418                           
  7419                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  7420                           
  7421                           ;incstack = 0
  7422   002672  0E00               	movlw	0
  7423   002674  6E09               	movwf	(i2MensajeLCD_Var@i+1)^0,c
  7424   002676  0E00               	movlw	0
  7425   002678  6E08               	movwf	i2MensajeLCD_Var@i^0,c
  7426   00267A  D019               	goto	i2l3841
  7427   00267C                     i2l3833:
  7428                           
  7429                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  7430   00267C  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  7431   00267E  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  7432   002680  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  7433   002682  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  7434   002686                     	if	1	;There is more than 1 active tblptr byte
  7435   002686  0E08               	movlw	high __smallconst
  7436   002688  6EF7               	movwf	tblptrh,c
  7437   00268A                     	endif
  7438   00268A                     	if	0	;tblptru may be non-zero
  7439   00268A                     	endif
  7440   00268A                     	if	0	;tblptru may be non-zero
  7441   00268A                     	endif
  7442   00268A  0008               	tblrd		*
  7443   00268C  50F5               	movf	tablat,w,c
  7444   00268E  0900               	iorlw	0
  7445   002690  B4D8               	btfsc	status,2,c
  7446   002692  0012               	return	
  7447                           
  7448                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  7449   002694  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  7450   002696  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  7451   002698  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  7452   00269A  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  7453   00269E                     	if	1	;There is more than 1 active tblptr byte
  7454   00269E  0E08               	movlw	high __smallconst
  7455   0026A0  6EF7               	movwf	tblptrh,c
  7456   0026A2                     	endif
  7457   0026A2                     	if	0	;tblptru may be non-zero
  7458   0026A2                     	endif
  7459   0026A2                     	if	0	;tblptru may be non-zero
  7460   0026A2                     	endif
  7461   0026A2  0008               	tblrd		*
  7462   0026A4  50F5               	movf	tablat,w,c
  7463   0026A6  EC74  F014         	call	i2_EscribeLCD_c
  7464   0026AA  4A08               	infsnz	i2MensajeLCD_Var@i^0,f,c
  7465   0026AC  2A09               	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  7466   0026AE                     i2l3841:
  7467   0026AE  C006  F001         	movff	i2MensajeLCD_Var@a,i2strlen@s
  7468   0026B2  EC19  F014         	call	i2_strlen	;wreg free
  7469   0026B6  5001               	movf	?i2_strlen^0,w,c
  7470   0026B8  5C08               	subwf	i2MensajeLCD_Var@i^0,w,c
  7471   0026BA  5002               	movf	(?i2_strlen+1)^0,w,c
  7472   0026BC  5809               	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  7473   0026BE  B0D8               	btfsc	status,0,c
  7474   0026C0  0012               	return	
  7475   0026C2  D7DC               	goto	i2l3833
  7476   0026C4                     __end_ofi2_MensajeLCD_Var:
  7477                           	callstack 0
  7478                           
  7479 ;; *************** function i2_strlen *****************
  7480 ;; Defined at:
  7481 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;  s               1    0[COMRAM] PTR const unsigned char 
  7484 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  7485 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  7486 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  7487 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  7490 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  7491 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  7492 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  7493 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  2    0[COMRAM] unsigned int 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7503 ;;      Params:         2       0       0       0       0       0       0       0       0
  7504 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7506 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7507 ;;Total ram usage:        3 bytes
  7508 ;; Hardware stack levels used: 1
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		i2_MensajeLCD_Var
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text41
  7517   002832                     __ptext41:
  7518                           	callstack 0
  7519   002832                     i2_strlen:
  7520                           	callstack 22
  7521                           
  7522                           ;incstack = 0
  7523   002832  C001  F003         	movff	i2strlen@s,i2strlen@cp
  7524   002836  D001               	goto	i2l3495
  7525   002838                     i2l3493:
  7526   002838  2A03               	incf	i2strlen@cp^0,f,c
  7527   00283A                     i2l3495:
  7528   00283A  C003  FFF6         	movff	i2strlen@cp,tblptrl
  7529   00283E                     	if	1	;There is more than 1 active tblptr byte
  7530   00283E  0E08               	movlw	high __smallconst
  7531   002840  6EF7               	movwf	tblptrh,c
  7532   002842                     	endif
  7533   002842                     	if	0	;tblptru may be non-zero
  7534   002842                     	endif
  7535   002842                     	if	0	;tblptru may be non-zero
  7536   002842                     	endif
  7537   002842  0008               	tblrd		*
  7538   002844  50F5               	movf	tablat,w,c
  7539   002846  0900               	iorlw	0
  7540   002848  A4D8               	btfss	status,2,c
  7541   00284A  D7F6               	goto	i2l3493
  7542   00284C  5001               	movf	i2strlen@s^0,w,c
  7543   00284E  5C03               	subwf	i2strlen@cp^0,w,c
  7544   002850  6E01               	movwf	?i2_strlen^0,c
  7545   002852  6A02               	clrf	(?i2_strlen+1)^0,c
  7546   002854  BE01               	btfsc	?i2_strlen^0,7,c
  7547   002856  0602               	decf	(?i2_strlen+1)^0,f,c
  7548   002858  0012               	return		;funcret
  7549   00285A                     __end_ofi2_strlen:
  7550                           	callstack 0
  7551                           
  7552 ;; *************** function i2_EscribeLCD_c *****************
  7553 ;; Defined at:
  7554 ;;		line 117 in file "LibLCDXC8.h"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  a               1    wreg     unsigned char 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  a               1    4[COMRAM] unsigned char 
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      void 
  7561 ;; Registers used:
  7562 ;;		wreg, status,2, status,0, cstack
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7568 ;;      Params:         0       0       0       0       0       0       0       0       0
  7569 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7571 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7572 ;;Total ram usage:        1 bytes
  7573 ;; Hardware stack levels used: 1
  7574 ;; Hardware stack levels required when called: 2
  7575 ;; This function calls:
  7576 ;;		i2_EnviaDato
  7577 ;;		i2_HabilitaLCD
  7578 ;;		i2_RetardoLCD
  7579 ;; This function is called by:
  7580 ;;		i2_MensajeLCD_Var
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text42
  7585   0028E8                     __ptext42:
  7586                           	callstack 0
  7587   0028E8                     i2_EscribeLCD_c:
  7588                           	callstack 20
  7589                           
  7590                           ;incstack = 0
  7591                           ;i2EscribeLCD_c@a stored from wreg
  7592   0028E8  6E05               	movwf	i2EscribeLCD_c@a^0,c
  7593                           
  7594                           ;LibLCDXC8.h: 121: LATE0=1;
  7595   0028EA  808D               	bsf	3981,0,c	;volatile
  7596                           
  7597                           ;LibLCDXC8.h: 122: EnviaDato(a);
  7598   0028EC  5005               	movf	i2EscribeLCD_c@a^0,w,c
  7599   0028EE  EC85  F013         	call	i2_EnviaDato
  7600                           
  7601                           ;LibLCDXC8.h: 123: HabilitaLCD();
  7602   0028F2  ECA5  F014         	call	i2_HabilitaLCD	;wreg free
  7603                           
  7604                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  7605   0028F6  0E04               	movlw	4
  7606   0028F8  ECBC  F012         	call	i2_RetardoLCD
  7607   0028FC  0012               	return		;funcret
  7608   0028FE                     __end_ofi2_EscribeLCD_c:
  7609                           	callstack 0
  7610                           
  7611 ;; *************** function i2_DireccionaLCD *****************
  7612 ;; Defined at:
  7613 ;;		line 273 in file "LibLCDXC8.h"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;  a               1    wreg     unsigned char 
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;  a               1    4[COMRAM] unsigned char 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  1    wreg      void 
  7620 ;; Registers used:
  7621 ;;		wreg, status,2, status,0, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7627 ;;      Params:         0       0       0       0       0       0       0       0       0
  7628 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7630 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7631 ;;Total ram usage:        1 bytes
  7632 ;; Hardware stack levels used: 1
  7633 ;; Hardware stack levels required when called: 2
  7634 ;; This function calls:
  7635 ;;		i2_EnviaDato
  7636 ;;		i2_HabilitaLCD
  7637 ;;		i2_RetardoLCD
  7638 ;; This function is called by:
  7639 ;;		_ISR
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           	psect	text43
  7644   0028FE                     __ptext43:
  7645                           	callstack 0
  7646   0028FE                     i2_DireccionaLCD:
  7647                           	callstack 21
  7648                           
  7649                           ;incstack = 0
  7650                           ;i2DireccionaLCD@a stored from wreg
  7651   0028FE  6E05               	movwf	i2DireccionaLCD@a^0,c
  7652                           
  7653                           ;LibLCDXC8.h: 276: LATE0=0;
  7654   002900  908D               	bcf	3981,0,c	;volatile
  7655                           
  7656                           ;LibLCDXC8.h: 277: EnviaDato(a);
  7657   002902  5005               	movf	i2DireccionaLCD@a^0,w,c
  7658   002904  EC85  F013         	call	i2_EnviaDato
  7659                           
  7660                           ;LibLCDXC8.h: 278: HabilitaLCD();
  7661   002908  ECA5  F014         	call	i2_HabilitaLCD	;wreg free
  7662                           
  7663                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  7664   00290C  0E04               	movlw	4
  7665   00290E  ECBC  F012         	call	i2_RetardoLCD
  7666   002912  0012               	return		;funcret
  7667   002914                     __end_ofi2_DireccionaLCD:
  7668                           	callstack 0
  7669                           
  7670 ;; *************** function i2_BorraLCD *****************
  7671 ;; Defined at:
  7672 ;;		line 103 in file "LibLCDXC8.h"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;		None
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7686 ;;      Params:         0       0       0       0       0       0       0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7689 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7690 ;;Total ram usage:        0 bytes
  7691 ;; Hardware stack levels used: 1
  7692 ;; Hardware stack levels required when called: 2
  7693 ;; This function calls:
  7694 ;;		i2_EnviaDato
  7695 ;;		i2_HabilitaLCD
  7696 ;;		i2_RetardoLCD
  7697 ;; This function is called by:
  7698 ;;		_ISR
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text44
  7703   002928                     __ptext44:
  7704                           	callstack 0
  7705   002928                     i2_BorraLCD:
  7706                           	callstack 21
  7707                           
  7708                           ;LibLCDXC8.h: 105: LATE0=0;
  7709                           
  7710                           ;incstack = 0
  7711   002928  908D               	bcf	3981,0,c	;volatile
  7712                           
  7713                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  7714   00292A  0E01               	movlw	1
  7715   00292C  EC85  F013         	call	i2_EnviaDato
  7716                           
  7717                           ;LibLCDXC8.h: 107: HabilitaLCD();
  7718   002930  ECA5  F014         	call	i2_HabilitaLCD	;wreg free
  7719                           
  7720                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  7721   002934  0E02               	movlw	2
  7722   002936  ECBC  F012         	call	i2_RetardoLCD
  7723   00293A  0012               	return		;funcret
  7724   00293C                     __end_ofi2_BorraLCD:
  7725                           	callstack 0
  7726                           
  7727 ;; *************** function i2_EnviaDato *****************
  7728 ;; Defined at:
  7729 ;;		line 52 in file "LibLCDXC8.h"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  a               1    wreg     unsigned char 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  a               1    3[COMRAM] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0
  7744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7745 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7746 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7747 ;;Total ram usage:        2 bytes
  7748 ;; Hardware stack levels used: 1
  7749 ;; Hardware stack levels required when called: 1
  7750 ;; This function calls:
  7751 ;;		i2_HabilitaLCD
  7752 ;;		i2_RetardoLCD
  7753 ;; This function is called by:
  7754 ;;		i2_BorraLCD
  7755 ;;		i2_EscribeLCD_c
  7756 ;;		i2_DireccionaLCD
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text45
  7761   00270A                     __ptext45:
  7762                           	callstack 0
  7763   00270A                     i2_EnviaDato:
  7764                           	callstack 20
  7765                           
  7766                           ;incstack = 0
  7767                           ;i2EnviaDato@a stored from wreg
  7768   00270A  6E04               	movwf	i2EnviaDato@a^0,c
  7769                           
  7770                           ;LibLCDXC8.h: 53: if(interfaz==4){
  7771   00270C  0E04               	movlw	4
  7772   00270E  1850               	xorwf	_interfaz^0,w,c
  7773   002710  A4D8               	btfss	status,2,c
  7774   002712  D017               	goto	i2l3277
  7775                           
  7776                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  7777   002714  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  7778   002718  0EF0               	movlw	240
  7779   00271A  1603               	andwf	??i2_EnviaDato^0,f,c
  7780   00271C  508C               	movf	140,w,c	;volatile
  7781   00271E  0B0F               	andlw	15
  7782   002720  1003               	iorwf	??i2_EnviaDato^0,w,c
  7783   002722  6E8C               	movwf	140,c	;volatile
  7784                           
  7785                           ;LibLCDXC8.h: 55: HabilitaLCD();
  7786   002724  ECA5  F014         	call	i2_HabilitaLCD	;wreg free
  7787                           
  7788                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  7789   002728  0E01               	movlw	1
  7790   00272A  ECBC  F012         	call	i2_RetardoLCD
  7791                           
  7792                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  7793   00272E  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  7794   002732  3A03               	swapf	??i2_EnviaDato^0,f,c
  7795   002734  0EF0               	movlw	240
  7796   002736  1603               	andwf	??i2_EnviaDato^0,f,c
  7797   002738  508C               	movf	140,w,c	;volatile
  7798   00273A  0B0F               	andlw	15
  7799   00273C  1003               	iorwf	??i2_EnviaDato^0,w,c
  7800   00273E  6E8C               	movwf	140,c	;volatile
  7801                           
  7802                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  7803   002740  0012               	return	
  7804   002742                     i2l3277:
  7805   002742  0E08               	movlw	8
  7806   002744  1850               	xorwf	_interfaz^0,w,c
  7807   002746  A4D8               	btfss	status,2,c
  7808   002748  0012               	return	
  7809                           
  7810                           ;LibLCDXC8.h: 59: LATD=a;
  7811   00274A  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  7812   00274E  0012               	return		;funcret
  7813   002750                     __end_ofi2_EnviaDato:
  7814                           	callstack 0
  7815                           
  7816 ;; *************** function i2_RetardoLCD *****************
  7817 ;; Defined at:
  7818 ;;		line 309 in file "LibLCDXC8.h"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;  a               1    wreg     unsigned char 
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;  a               1    1[COMRAM] unsigned char 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  1    wreg      void 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7832 ;;      Params:         0       0       0       0       0       0       0       0       0
  7833 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7834 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7835 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7836 ;;Total ram usage:        2 bytes
  7837 ;; Hardware stack levels used: 1
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		i2_EnviaDato
  7842 ;;		i2_BorraLCD
  7843 ;;		i2_EscribeLCD_c
  7844 ;;		i2_DireccionaLCD
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text46
  7849   002578                     __ptext46:
  7850                           	callstack 0
  7851   002578                     i2_RetardoLCD:
  7852                           	callstack 21
  7853                           
  7854                           ;incstack = 0
  7855                           ;i2RetardoLCD@a stored from wreg
  7856   002578  6E02               	movwf	i2RetardoLCD@a^0,c
  7857                           
  7858                           ;LibLCDXC8.h: 310: switch(a){
  7859   00257A  D01B               	goto	i2l3171
  7860   00257C                     i2l3161:
  7861   00257C  0E05               	movlw	5
  7862   00257E  6E01               	movwf	??i2_RetardoLCD^0,c
  7863   002580  0EDE               	movlw	222
  7864   002582                     i2u705_47:
  7865   002582  2EE8               	decfsz	wreg,f,c
  7866   002584  D7FE               	bra	i2u705_47
  7867   002586  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  7868   002588  D7FC               	bra	i2u705_47
  7869                           
  7870                           ;LibLCDXC8.h: 313: break;
  7871   00258A  0012               	return	
  7872   00258C                     i2l3163:
  7873   00258C  0E53               	movlw	83
  7874   00258E                     i2u706_47:
  7875   00258E  2EE8               	decfsz	wreg,f,c
  7876   002590  D7FE               	bra	i2u706_47
  7877   002592  F000               	nop	
  7878                           
  7879                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  7880   002594  0E35               	movlw	53
  7881   002596                     i2u707_47:
  7882   002596  2EE8               	decfsz	wreg,f,c
  7883   002598  D7FE               	bra	i2u707_47
  7884   00259A  F000               	nop	
  7885                           
  7886                           ;LibLCDXC8.h: 317: break;
  7887   00259C  0012               	return	
  7888   00259E                     i2l3165:
  7889   00259E  0E08               	movlw	8
  7890   0025A0                     i2u708_47:
  7891   0025A0  2EE8               	decfsz	wreg,f,c
  7892   0025A2  D7FE               	bra	i2u708_47
  7893   0025A4  F000               	nop	
  7894                           
  7895                           ;LibLCDXC8.h: 320: break;
  7896   0025A6  0012               	return	
  7897   0025A8                     i2l3167:
  7898   0025A8  0E03               	movlw	3
  7899   0025AA                     i2u709_47:
  7900   0025AA  2EE8               	decfsz	wreg,f,c
  7901   0025AC  D7FE               	bra	i2u709_47
  7902   0025AE  F000               	nop	
  7903                           
  7904                           ;LibLCDXC8.h: 323: break;
  7905   0025B0  0012               	return	
  7906   0025B2                     i2l3171:
  7907   0025B2  5002               	movf	i2RetardoLCD@a^0,w,c
  7908                           
  7909                           ; Switch size 1, requested type "simple"
  7910                           ; Number of cases is 4, Range of values is 1 to 4
  7911                           ; switch strategies available:
  7912                           ; Name         Instructions Cycles
  7913                           ; simple_byte           13     7 (average)
  7914                           ;	Chosen strategy is simple_byte
  7915   0025B4  0A01               	xorlw	1	; case 1
  7916   0025B6  B4D8               	btfsc	status,2,c
  7917   0025B8  D7E1               	goto	i2l3161
  7918   0025BA  0A03               	xorlw	3	; case 2
  7919   0025BC  B4D8               	btfsc	status,2,c
  7920   0025BE  D7E6               	goto	i2l3163
  7921   0025C0  0A01               	xorlw	1	; case 3
  7922   0025C2  B4D8               	btfsc	status,2,c
  7923   0025C4  D7EC               	goto	i2l3165
  7924   0025C6  0A07               	xorlw	7	; case 4
  7925   0025C8  A4D8               	btfss	status,2,c
  7926   0025CA  0012               	return	
  7927   0025CC  D7ED               	goto	i2l3167
  7928   0025CE                     __end_ofi2_RetardoLCD:
  7929                           	callstack 0
  7930                           
  7931 ;; *************** function i2_HabilitaLCD *****************
  7932 ;; Defined at:
  7933 ;;		line 96 in file "LibLCDXC8.h"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7947 ;;      Params:         0       0       0       0       0       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7950 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7951 ;;Total ram usage:        0 bytes
  7952 ;; Hardware stack levels used: 1
  7953 ;; This function calls:
  7954 ;;		Nothing
  7955 ;; This function is called by:
  7956 ;;		i2_EnviaDato
  7957 ;;		i2_BorraLCD
  7958 ;;		i2_EscribeLCD_c
  7959 ;;		i2_DireccionaLCD
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text47
  7964   00294A                     __ptext47:
  7965                           	callstack 0
  7966   00294A                     i2_HabilitaLCD:
  7967                           	callstack 21
  7968                           
  7969                           ;LibLCDXC8.h: 98: LATE1=1;
  7970                           
  7971                           ;incstack = 0
  7972   00294A  828D               	bsf	3981,1,c	;volatile
  7973                           
  7974                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  7975   00294C  0E03               	movlw	3
  7976   00294E                     i2u710_47:
  7977   00294E  2EE8               	decfsz	wreg,f,c
  7978   002950  D7FE               	bra	i2u710_47
  7979   002952  F000               	nop	
  7980                           
  7981                           ;LibLCDXC8.h: 101: LATE1=0;
  7982   002954  928D               	bcf	3981,1,c	;volatile
  7983   002956  0012               	return		;funcret
  7984   002958                     __end_ofi2_HabilitaLCD:
  7985                           	callstack 0
  7986                           
  7987                           	psect	rparam
  7988   000000                     
  7989                           	psect	temp
  7990   000051                     btemp:
  7991                           	callstack 0
  7992   000051                     	ds	1
  7993   000000                     int$flags	set	btemp
  7994   000000                     wtemp8	set	btemp+1
  7995   000000                     ttemp5	set	btemp+1
  7996   000000                     ttemp6	set	btemp+4
  7997   000000                     ttemp7	set	btemp+8
  7998                           
  7999                           	psect	idloc
  8000                           
  8001                           ;Config register IDLOC0 @ 0x200000
  8002                           ;	unspecified, using default values
  8003   200000                     	org	2097152
  8004   200000  FF                 	db	255
  8005                           
  8006                           ;Config register IDLOC1 @ 0x200001
  8007                           ;	unspecified, using default values
  8008   200001                     	org	2097153
  8009   200001  FF                 	db	255
  8010                           
  8011                           ;Config register IDLOC2 @ 0x200002
  8012                           ;	unspecified, using default values
  8013   200002                     	org	2097154
  8014   200002  FF                 	db	255
  8015                           
  8016                           ;Config register IDLOC3 @ 0x200003
  8017                           ;	unspecified, using default values
  8018   200003                     	org	2097155
  8019   200003  FF                 	db	255
  8020                           
  8021                           ;Config register IDLOC4 @ 0x200004
  8022                           ;	unspecified, using default values
  8023   200004                     	org	2097156
  8024   200004  FF                 	db	255
  8025                           
  8026                           ;Config register IDLOC5 @ 0x200005
  8027                           ;	unspecified, using default values
  8028   200005                     	org	2097157
  8029   200005  FF                 	db	255
  8030                           
  8031                           ;Config register IDLOC6 @ 0x200006
  8032                           ;	unspecified, using default values
  8033   200006                     	org	2097158
  8034   200006  FF                 	db	255
  8035                           
  8036                           ;Config register IDLOC7 @ 0x200007
  8037                           ;	unspecified, using default values
  8038   200007                     	org	2097159
  8039   200007  FF                 	db	255
  8040                           
  8041                           	psect	config
  8042                           
  8043                           ;Config register CONFIG1L @ 0x300000
  8044                           ;	unspecified, using default values
  8045                           ;	PLL Prescaler Selection bits
  8046                           ;	PLLDIV = 0x0, unprogrammed default
  8047                           ;	System Clock Postscaler Selection bits
  8048                           ;	CPUDIV = 0x0, unprogrammed default
  8049                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8050                           ;	USBDIV = 0x0, unprogrammed default
  8051   300000                     	org	3145728
  8052   300000  00                 	db	0
  8053                           
  8054                           ;Config register CONFIG1H @ 0x300001
  8055                           ;	Oscillator Selection bits
  8056                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8057                           ;	Fail-Safe Clock Monitor Enable bit
  8058                           ;	FCMEN = 0x0, unprogrammed default
  8059                           ;	Internal/External Oscillator Switchover bit
  8060                           ;	IESO = 0x0, unprogrammed default
  8061   300001                     	org	3145729
  8062   300001  09                 	db	9
  8063                           
  8064                           ;Config register CONFIG2L @ 0x300002
  8065                           ;	unspecified, using default values
  8066                           ;	Power-up Timer Enable bit
  8067                           ;	PWRT = 0x1, unprogrammed default
  8068                           ;	Brown-out Reset Enable bits
  8069                           ;	BOR = 0x3, unprogrammed default
  8070                           ;	Brown-out Reset Voltage bits
  8071                           ;	BORV = 0x3, unprogrammed default
  8072                           ;	USB Voltage Regulator Enable bit
  8073                           ;	VREGEN = 0x0, unprogrammed default
  8074   300002                     	org	3145730
  8075   300002  1F                 	db	31
  8076                           
  8077                           ;Config register CONFIG2H @ 0x300003
  8078                           ;	Watchdog Timer Enable bit
  8079                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8080                           ;	Watchdog Timer Postscale Select bits
  8081                           ;	WDTPS = 0xF, unprogrammed default
  8082   300003                     	org	3145731
  8083   300003  1E                 	db	30
  8084                           
  8085                           ; Padding undefined space
  8086   300004                     	org	3145732
  8087   300004  FF                 	db	255
  8088                           
  8089                           ;Config register CONFIG3H @ 0x300005
  8090                           ;	CCP2 MUX bit
  8091                           ;	CCP2MX = 0x1, unprogrammed default
  8092                           ;	PORTB A/D Enable bit
  8093                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8094                           ;	Low-Power Timer 1 Oscillator Enable bit
  8095                           ;	LPT1OSC = 0x0, unprogrammed default
  8096                           ;	MCLR Pin Enable bit
  8097                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8098   300005                     	org	3145733
  8099   300005  81                 	db	129
  8100                           
  8101                           ;Config register CONFIG4L @ 0x300006
  8102                           ;	Stack Full/Underflow Reset Enable bit
  8103                           ;	STVREN = 0x1, unprogrammed default
  8104                           ;	Single-Supply ICSP Enable bit
  8105                           ;	LVP = OFF, Single-Supply ICSP disabled
  8106                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8107                           ;	ICPRT = 0x0, unprogrammed default
  8108                           ;	Extended Instruction Set Enable bit
  8109                           ;	XINST = 0x0, unprogrammed default
  8110                           ;	Background Debugger Enable bit
  8111                           ;	DEBUG = 0x1, unprogrammed default
  8112   300006                     	org	3145734
  8113   300006  81                 	db	129
  8114                           
  8115                           ; Padding undefined space
  8116   300007                     	org	3145735
  8117   300007  FF                 	db	255
  8118                           
  8119                           ;Config register CONFIG5L @ 0x300008
  8120                           ;	unspecified, using default values
  8121                           ;	Code Protection bit
  8122                           ;	CP0 = 0x1, unprogrammed default
  8123                           ;	Code Protection bit
  8124                           ;	CP1 = 0x1, unprogrammed default
  8125                           ;	Code Protection bit
  8126                           ;	CP2 = 0x1, unprogrammed default
  8127                           ;	Code Protection bit
  8128                           ;	CP3 = 0x1, unprogrammed default
  8129   300008                     	org	3145736
  8130   300008  0F                 	db	15
  8131                           
  8132                           ;Config register CONFIG5H @ 0x300009
  8133                           ;	unspecified, using default values
  8134                           ;	Boot Block Code Protection bit
  8135                           ;	CPB = 0x1, unprogrammed default
  8136                           ;	Data EEPROM Code Protection bit
  8137                           ;	CPD = 0x1, unprogrammed default
  8138   300009                     	org	3145737
  8139   300009  C0                 	db	192
  8140                           
  8141                           ;Config register CONFIG6L @ 0x30000A
  8142                           ;	unspecified, using default values
  8143                           ;	Write Protection bit
  8144                           ;	WRT0 = 0x1, unprogrammed default
  8145                           ;	Write Protection bit
  8146                           ;	WRT1 = 0x1, unprogrammed default
  8147                           ;	Write Protection bit
  8148                           ;	WRT2 = 0x1, unprogrammed default
  8149                           ;	Write Protection bit
  8150                           ;	WRT3 = 0x1, unprogrammed default
  8151   30000A                     	org	3145738
  8152   30000A  0F                 	db	15
  8153                           
  8154                           ;Config register CONFIG6H @ 0x30000B
  8155                           ;	unspecified, using default values
  8156                           ;	Configuration Register Write Protection bit
  8157                           ;	WRTC = 0x1, unprogrammed default
  8158                           ;	Boot Block Write Protection bit
  8159                           ;	WRTB = 0x1, unprogrammed default
  8160                           ;	Data EEPROM Write Protection bit
  8161                           ;	WRTD = 0x1, unprogrammed default
  8162   30000B                     	org	3145739
  8163   30000B  E0                 	db	224
  8164                           
  8165                           ;Config register CONFIG7L @ 0x30000C
  8166                           ;	unspecified, using default values
  8167                           ;	Table Read Protection bit
  8168                           ;	EBTR0 = 0x1, unprogrammed default
  8169                           ;	Table Read Protection bit
  8170                           ;	EBTR1 = 0x1, unprogrammed default
  8171                           ;	Table Read Protection bit
  8172                           ;	EBTR2 = 0x1, unprogrammed default
  8173                           ;	Table Read Protection bit
  8174                           ;	EBTR3 = 0x1, unprogrammed default
  8175   30000C                     	org	3145740
  8176   30000C  0F                 	db	15
  8177                           
  8178                           ;Config register CONFIG7H @ 0x30000D
  8179                           ;	unspecified, using default values
  8180                           ;	Boot Block Table Read Protection bit
  8181                           ;	EBTRB = 0x1, unprogrammed default
  8182   30000D                     	org	3145741
  8183   30000D  40                 	db	64
  8184                           tosu	equ	0xFFF
  8185                           tosh	equ	0xFFE
  8186                           tosl	equ	0xFFD
  8187                           stkptr	equ	0xFFC
  8188                           pclatu	equ	0xFFB
  8189                           pclath	equ	0xFFA
  8190                           pcl	equ	0xFF9
  8191                           tblptru	equ	0xFF8
  8192                           tblptrh	equ	0xFF7
  8193                           tblptrl	equ	0xFF6
  8194                           tablat	equ	0xFF5
  8195                           prodh	equ	0xFF4
  8196                           prodl	equ	0xFF3
  8197                           indf0	equ	0xFEF
  8198                           postinc0	equ	0xFEE
  8199                           postdec0	equ	0xFED
  8200                           preinc0	equ	0xFEC
  8201                           plusw0	equ	0xFEB
  8202                           fsr0h	equ	0xFEA
  8203                           fsr0l	equ	0xFE9
  8204                           wreg	equ	0xFE8
  8205                           indf1	equ	0xFE7
  8206                           postinc1	equ	0xFE6
  8207                           postdec1	equ	0xFE5
  8208                           preinc1	equ	0xFE4
  8209                           plusw1	equ	0xFE3
  8210                           fsr1h	equ	0xFE2
  8211                           fsr1l	equ	0xFE1
  8212                           bsr	equ	0xFE0
  8213                           indf2	equ	0xFDF
  8214                           postinc2	equ	0xFDE
  8215                           postdec2	equ	0xFDD
  8216                           preinc2	equ	0xFDC
  8217                           plusw2	equ	0xFDB
  8218                           fsr2h	equ	0xFDA
  8219                           fsr2l	equ	0xFD9
  8220                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    57
    Data        4
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      80
    BANK0           160     64      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _factorial_function->___wmul
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _pow->_log
    _log->_eval_poly
    _exp->_ldexp
    _exp->_log
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___awtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lwdiv->___wmul
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_Imprimir_Resultado
    _Imprimir_Resultado->___aldiv
    _pow->_exp
    _exp->_ldexp
    ___almod->_pow
    ___aldiv->_pow

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  104669
                                             60 BANK0      4     4      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                 _Imprimir_Resultado
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
                             ___lmul
                            ___lwdiv
                             ___wmul
                 _factorial_function
 ---------------------------------------------------------------------------------
 (1) _factorial_function                                   6     2      4    1003
                                             19 COMRAM     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Resultado                                  18    14      4   98475
                                             42 BANK0     18    14      4
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                            ___aldiv
                            ___almod
                           ___awtoft
                            ___fttol
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   86215
                                             11 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   27512
                                             62 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   46750
                                              2 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     539
                                             62 COMRAM     5     0      5
                                              0 BANK0      2     2      0
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3   12394
                                             52 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     682
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     911
                                             25 COMRAM    15    11      4
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     918
                                             13 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    3727
                                             40 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           10     4      6   11599
                                             52 COMRAM    10     4      6
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    5107
                                             25 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6114
                                             52 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5698
                                             40 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     335
                                             13 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    4179
                                             21 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    4016
                                             21 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    3625
                                             21 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    3433
                                             13 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     859
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8    1434
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     613
                                             28 BANK0     10     2      8
                           ___awtoft (ARG)
                            ___fttol (ARG)
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                             28 BANK0     14     6      8
                           ___awtoft (ARG)
                            ___fttol (ARG)
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1    1546
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     132
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      88
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      22
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  4     4      0     650
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (8) i2_MensajeLCD_Var                                     4     3      1     408
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (9) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_DireccionaLCD                                      1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (10) i2_EnviaDato                                         2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (10) i2_RetardoLCD                                        2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_HabilitaLCD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Imprimir_Resultado
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
       _EscribeLCD_c
       _strlen
     ___aldiv
       ___awtoft (ARG)
         ___ftpack
       ___fttol (ARG)
         ___awtoft (ARG)
       _pow (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
           ___ftdiv
             ___ftpack
           ___ftge
           ___ftmul
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
               ___ftmul (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           ___fttol
           _eval_poly
             ___ftadd
             ___ftmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___ftadd
             ___ftge
             ___fttol
             _frexp
           _ldexp
             _eval_poly (ARG)
           _log (ARG)
             ___awtoft
             ___ftadd
             ___ftmul
             _eval_poly
             _frexp
         _log
     ___almod
       ___awtoft (ARG)
       ___fttol (ARG)
       _pow (ARG)
     ___awtoft
     ___fttol
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
     _pow
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
   ___lmul
   ___lwdiv
   ___wmul
   _factorial_function
     ___wmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_DireccionaLCD
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      5E       5       58.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      50       1       85.1%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AE      29        0.0%
DATA                 0      0      AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 18 10:47:19 2023

              ___altoft@exp 0031                           _a 0046                           _b 0044  
                         _i 00AE                           _m 00B7                           _r 00A4  
             ___altoft@sign 0032            i2DireccionaLCD@a 0005                          _PD 007E82  
                        _TO 007E83                          _n1 00B2                          _n2 00B0  
                EnviaDato@a 0011                          _op 00BD         ___wmul@multiplicand 0010  
              ___ftadd@exp1 0034                ___ftadd@exp2 0033               ??_LeerTeclado 000E  
              ___ftadd@sign 0032               _InicializaLCD 20AC                         l181 0904  
                       l270 1CB6                         l264 1C88                         l281 1CDA  
                       l290 1D16                         l266 1C90                         l258 1C80  
                       l291 1D06                         l283 1CE2                         l275 1CBE  
                       l293 1D0E                         l285 1CEA                         l277 1CC6  
                       l289 1CFE                         l718 2896                         l834 2616  
                       l844 2788                         l685 15C8                         l696 1A6E  
                       _GIE 007F97                         _RB4 007C0C                         _RB5 007C0D  
                       _RB6 007C0E                         _RB7 007C0F                         _ISR 0008  
                       _POR 007E81                         _n1c 00BC                         _n2c 00BB  
                       _exp 12A8                         _log 17B4                         _res 00A0  
                       _pow 163A                         wreg 000FE8                        ?_ISR 0001  
              ___ftdiv@cntr 001F            ??i2_EscribeLCD_c 0005                ___ftdiv@sign 0024  
                      l1024 1672                        l1029 17A6                        l1048 1362  
                      l1065 1B6C                        l1049 1484                        l3013 26FC  
                      l3401 1DC0                        l3405 1DD6                        l5013 0AE4  
                      l3183 2810                        l4303 14E2                        l3511 20BE  
                      l5015 0AEA                        l3185 2812                        l3361 24F0  
                      l4401 1970                        l3521 20DC                        l5033 0B38  
                      l3291 262A                        l3451 25E4                        l4251 1ED0  
                      l4331 155C                        l3531 20FA                        l3603 1C98  
                      l5131 0CC4                        l5211 0F1E                        l3701 2270  
                      l3373 1D38                        l3357 24DC                        l3453 25EC  
                      l4261 1F2C                        l4253 1EDA                        l4333 1566  
                      l4309 150A                        l4405 1980                        l4421 2392  
                      l5133 0CDC                        l5037 0B4C                        l3703 2274  
                      l3463 260C                        l3471 275E                        l4263 1F36  
                      l4255 1EF8                        l4503 19E2                        l4351 15E4  
                      l4343 159A                        l4335 1570                        l3551 2132  
                      l3615 1CAC                        l5151 0DA8                        l5143 0D3E  
                      l5135 0D12                        l5119 0C90                        l5071 0BD6  
                      l5063 0BBE                        l3713 2284                        l3705 2278  
                      l3721 22D0                        l3385 1D72                        l3473 2766  
                      l4361 1614                        l4345 15A4                        l4417 2370  
                      l5209 0F18                        l3715 2288                        l3707 227C  
                      l3299 265C                        l3387 1D7E                        l3379 1D50  
                      l4259 1F0E                        l4371 18EE                        l4427 23BE  
                      l4611 1E48                        l4603 1E00                        l5139 0D1E  
                      l3709 2280                        l2773 2526                        l3397 1DB2  
                      l4509 1A0A                        l4437 1BA6                        l3813 2430  
                      l5173 0E2A                        l5165 0DDE                        l5157 0DBC  
                      l5181 0E4A                        l3719 228E                        l2775 2536  
                      l2783 255C                        l3479 277E                        l4391 1948  
                      l4287 22F8                        l4455 1BFA                        l4623 1E6C  
                      l3639 1CCE                        l5183 0E6E                        l5095 0C38  
                      l2777 2548                        l4529 1A48                        l4377 1916  
                      l4289 2304                        l4473 1C3A                        l4465 1C12  
                      l4705 145A                        l3817 2452                        l5185 0E74  
                      l5177 0E38                        l5169 0DF4                        l2779 2552  
                      l4635 23C8                        l4547 27A8                        l4395 1958  
                      l4467 1C1E                        l4459 1C0A                        l4627 1E7A  
                      l4803 0FEA                        l4811 102E                        l3667 1CF2  
                      l3579 1C76                        l5187 0E8A                        l4637 23D4  
                      l4485 2200                        l4581 1AD8                        l4733 16FE  
                      l4725 169A                        l5197 0EAA                        l4901 0932  
                      l4559 27E6                        l4671 12C2                        l4655 17EE  
                      l4719 1682                        l4823 1088                        l4761 1F92  
                      l4593 2034                        l4585 1AF2                        l4577 1ACA  
                      l4649 17CE                        l4737 1720                        l4595 2096  
                      l4683 1332                        l4851 1254                        l4835 10C8  
                      l4915 0988                        ?_exp 0062                        l4781 1FFC  
                      l4773 1FD8                        l4765 1FA4                        l4757 1F7E  
                      l4677 12FA                        l4941 09EE                        ?_log 003F  
                      l4767 1FB0                        l4855 1260                        l4935 09D4  
                      l4951 0A0C                        l4777 1FE6                        l4865 129E  
                      l4859 127C                        l4795 0F84                        l4977 0A5A  
                      l4897 0914                        l4987 0A78                        l4899 092E  
                      ?_pow 006B                        STR_1 08A6                        STR_2 08AE  
                      STR_3 0849                        STR_4 0869                        STR_5 0889  
                      STR_6 0869                        STR_7 083A                        STR_8 0869  
                      STR_9 087E                        _LATB 000F8A                        _LATC 000F8B  
                      _LATD 000F8C                        u4130 2462                        u3510 1D82  
                      u5120 1F40                        u3610 25F0                        u5210 14D4  
                      u6020 102C                        u5310 1578                        u3640 276A  
                      u5080 1EC2                        u5240 14FC                        u6040 1058  
                      u5401 18FE                        u6050 106A                        u5171 14A2  
                      u5340 15AC                        u6060 109C                        u5181 14B6  
                      u5270 153A                        u6070 10AE                        u6310 0A90  
                      u7007 2538                        u3680 28B6                        u6080 10C0  
                      u3760 1C5A                        u7017 2540                        u5530 1C24  
                      u6090 1150                        u6250 0A24                        u7027 254A  
                      u7037 2554                        u5381 18D6                        u5710 1E22  
                      u6190 09A0                        u7047 2940                        u5471 1B8A  
                      u5480 1B94                        u5560 222C                        u5490 1BC4  
                      u5810 133C                        u5571 19CA                        u5820 133E  
                      u5900 16E8                        u6380 0AC6                        u5670 1AE4  
                      u5718 1E26                        u5591 19F2                        u5495 1BBC  
                      u5568 222E                        u6480 0B2A                        u6580 0B9C  
                      u5950 1FB4                        u6680 0C18                        _RBPU 007F8F  
                      u6790 0C80                        u6967 0920                        u6977 09E0  
                      u6987 0F26                        u6997 252C                        _TMR0 000FD6  
            ??_EscribeLCD_c 0012                        _main 08B4                ___ftpack@arg 000E  
              ___ftpack@exp 0011                        fsr2h 000FDA                        fsr2l 000FD9  
                      btemp 0051                        exp@x 0062                        log@x 003F  
                      pow@x 006B                        pow@y 006E                        prodh 000FF4  
                      prodl 000FF3                        start 000E                ___ftmul@cntr 0027  
              ___param_bank 000000                ___ftmul@sign 0028                       ??_ISR 000A  
              ___fttol@exp1 0028                       ??_exp 0044                       ??_log 0042  
              ___fttol@lval 0024                       ??_pow 0044             i2_DireccionaLCD 28FE  
            ?_InicializaLCD 0001             __end_of___aldiv 1DE8             __end_of___almod 200E  
                     ?_main 0001             __end_of___ftadd 163A                       STR_10 0869  
                     STR_11 0865                       STR_12 0893                       STR_13 0872  
                     STR_14 089D                       STR_15 0857               EscribeLCD_c@a 0012  
           __end_of___ftdiv 1AA0             __end_of___ftneg 28A4             __end_of___ftmul 19BA  
                     _T0CON 000FD5             __end_of___ftsub 27D2             __end_of___fttol 1C4C  
                     _LATE0 007C68                       _LATE1 007C69                       _LATE2 007C6A  
                     _LATC7 007C5F             __end_of___lwdiv 2620             __end_of___lwmod 2792  
                     i2l326 21C4                       i2l329 21C6                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
       ___lmul@multiplicand 0012                ___lltoft@exp 001E                       _Tecla 00B6  
             ___awtoft@sign 0019         __end_of_LeerTeclado 1D1A                       _color 004E  
               ?i2_BorraLCD 0001                       _floor 1AA0                       _ldexp 1DE8  
                     _frexp 21DA                       _errno 00AC               ___ftpack@sign 0012  
                     tablat 000FF5                       pow@yi 0078                 _HabilitaLCD 293C  
                     ttemp5 0052                       ttemp6 0055                       ttemp7 0059  
                     status 000FD8                       wtemp8 0052                 exp@exponent 0068  
               ldexp@newexp 0042            __end_ofi2_strlen 285A            __end_of_BorraLCD 2928  
          __end_of_ColorRGB 22D6             __initialization 2476                 log@exponent 0042  
              __end_of_main 0F32            i2_MensajeLCD_Var 2672                      ??_main 009C  
      __end_of_ConfiguraLCD 28BC               ___fttol@sign1 0023               __activetblptr 000002  
                i2strlen@cp 0003          _Imprimir_Resultado 0F32                      _ADCON1 000FC1  
                    ?_floor 0035                      ?_ldexp 003F                      ?_frexp 000E  
          __end_of___altoft 234E              DireccionaLCD@a 0012            __end_of___awtoft 280A  
          __end_of___ftpack 1F60            _contador_digitos 004A            __end_of___lltoft 241E  
                    i2l3161 257C                      i2l3163 258C                      i2l3171 25B2  
                    i2l4203 2174                      i2l3165 259E                      i2l4205 217C  
                    i2l3167 25A8                      i2l4209 2190                      i2l3277 2742  
                    i2l3493 2838                      i2l3495 283A                      i2l3833 267C  
                    i2l3841 26AE                      _OSCCON 000FD3                      _TMR0IE 007F95  
                    _TMR0IF 007F92                      _TMR0ON 007EAF         ?_Imprimir_Resultado 008A  
     __end_of_DireccionaLCD 28E8                  _RetardoLCD 2522     __end_ofi2_DireccionaLCD 2914  
                    ___ftge 234E                      ___lmul 24CC                   ??___aldiv 0044  
                 ??___almod 0044                      ___wmul 285A                   ??___ftadd 002F  
                 ??___ftdiv 001C                   ??___ftneg 0011                   ??___ftmul 0020  
                 ??___ftsub 003B                   ??___fttol 001E                   ??___lwdiv 0018  
                 ??___lwmod 0012             ??_InicializaLCD 0012                      clear_0 24AC  
                    clear_1 24B8                      isa$std 000001        ??_Imprimir_Resultado 008E  
      __end_of_EscribeLCD_c 28D2                      _strlen 280A                      floor@i 0038  
               _LeerTeclado 1C4C                      floor@x 0035       ___ftmul@f3_as_product 0024  
              ?i2_EnviaDato 0001                __pdataCOMRAM 0050                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
__end_of_factorial_function 2476            __end_ofexp@coeff 081F            __end_oflog@coeff 083A  
     __end_ofi2_HabilitaLCD 2958                  __accesstop 0060     __end_of__initialization 24BE  
                ___altoft@c 0029                  ___ftadd@f1 0029                  ___ftadd@f2 002C  
                ___ftge@ff1 000E                  ___ftge@ff2 0011                eval_poly@res 003C  
             ___rparam_used 000001                  ___ftdiv@f1 0016                  ___ftdiv@f2 0019  
                ___ftdiv@f3 0020                  ___ftneg@f1 000E                  ___awtoft@c 0016  
                ___ftmul@f1 001A                  ___ftmul@f2 001D                  ___ftsub@f1 0035  
                ___ftsub@f2 0038                  ___fttol@f1 001A              __pcstackCOMRAM 0001  
              __pidataBANK0 2958                  ___lltoft@c 0016               __end_of_floor 1B7A  
             __end_of_ldexp 1EB2               __end_of_frexp 225C           __end_of_EnviaDato 270A  
                 ?i2_strlen 0001                   ?_BorraLCD 0001                     ??_floor 0038  
                   ??_ldexp 0060                     ??_frexp 0012                   ?_ColorRGB 0001  
            _MensajeLCD_Var 2620                  __pbssBANK0 00A0             MensajeLCD_Var@a 0013  
           MensajeLCD_Var@i 0015      factorial_function@fact 0018                 ?_RetardoLCD 0001  
               RetardoLCD@a 000F            ?i2_DireccionaLCD 0001                     ?___ftge 000E  
                   ?___lmul 000E                     ?___wmul 000E                   ?___altoft 0029  
            ___lmul@product 0016                   ?___awtoft 0016                   ?___ftpack 000E  
                 ?___lltoft 0016                     ?_strlen 000E      __end_of_MensajeLCD_Var 2672  
                ??i2_strlen 0003                ??i2_BorraLCD 0005                  ??_BorraLCD 0012  
                ??_ColorRGB 000E    __end_ofi2_MensajeLCD_Var 26C4                ?_HabilitaLCD 0001  
              _ConfiguraLCD 28A4                     __Hparam 0000                     __Lparam 0000  
                   ___aldiv 1D1A                     ___almod 1F60                     ___ftadd 1492  
                   ___ftdiv 19BA                     ___ftneg 2880                     ___ftmul 18C6  
                   ___ftsub 2792                     ___fttol 1B7A                     ___lwdiv 25CE  
                   ___lwmod 2750                __psmallconst 0800                  ??___altoft 002D  
                   _exp$909 0065          __end_ofi2_BorraLCD 293C         factorial_function@a 0014  
                   __pcinit 2476                  ??___awtoft 0019                  ??___ftpack 0013  
         __end_of_eval_poly 20AC                     __ramtop 0800                  ??___lltoft 001A  
                   __ptext0 08B4                     __ptext1 241E                     __ptext2 1C4C  
                   __ptext3 20AC                     __ptext4 2914                     __ptext5 0F32  
                   __ptext6 163A                     __ptext7 17B4                     __ptext8 12A8  
                   __ptext9 1DE8                     _pow$907 0071                     _pow$908 0074  
          ___aldiv@dividend 007C             ?_MensajeLCD_Var 0013              __pintcode_body 2148  
      end_of_initialization 24BE                     exp@sign 006A               __Lmediumconst 0000  
                   int_func 2148                _EscribeLCD_c 28BC                     pow@sign 0077  
          ___aldiv@quotient 0086                     postdec2 000FDD                     postinc0 000FEE  
                   postinc2 000FDE                     strlen@s 000E                ?_LeerTeclado 0001  
           i2EscribeLCD_c@a 0005                 ___ftdiv@exp 0023               ?i2_RetardoLCD 0001  
        _factorial_function 241E                 ___ftmul@exp 0023              __end_of___ftge 23C2  
            __end_of___lmul 2522              __end_of___wmul 2880               __pidataCOMRAM 295B  
       ?_factorial_function 0014       __end_of_InicializaLCD 2148                  floor@expon 003B  
                 _EnviaDato 26C4              __end_of_strlen 2832         start_initialization 2476  
                eval_poly@d 0038                  eval_poly@n 0039                  eval_poly@x 0035  
               __end_of_ISR 21DA                  ldexp@value 003F                 __end_of_exp 1492  
               __end_of_log 18C6                 __end_of_pow 17B4        ??_factorial_function 0018  
                 i2strlen@s 0001                  frexp@value 000E              ??i2_RetardoLCD 0001  
              ??_RetardoLCD 000E                    ??___ftge 0014                    ??___lmul 0016  
                  ??___wmul 0012                 __pdataBANK0 00BB                    ??_strlen 0010  
                ?_EnviaDato 0001                 __pbssCOMRAM 0044          __end_of_RetardoLCD 2578  
             __pcstackBANK0 0060           ?i2_MensajeLCD_Var 0006          ??i2_MensajeLCD_Var 0007  
             _DireccionaLCD 28D2              i2_EscribeLCD_c 28E8            ___lwdiv@dividend 0014  
                 _factorial 00B4                   __pintcode 0008                    ?___aldiv 007C  
                  ?___almod 007C                    ?___ftadd 0029                    ?___ftdiv 0016  
                  ?___ftneg 000E                    ?___ftmul 001A                    ?___ftsub 0035  
                  ?___fttol 001A                    ?___lwdiv 0014                    ?___lwmod 000E  
          ___almod@dividend 007C            ??_MensajeLCD_Var 0014                 __smallconst 0800  
                 _eval_poly 200E            ___lwdiv@quotient 0018             ___aldiv@divisor 0080  
    _Imprimir_Resultado$905 0094      _Imprimir_Resultado$906 0097             ___aldiv@counter 0084  
            ___wmul@product 0012               i2_HabilitaLCD 294A              ?_DireccionaLCD 0001  
    __end_ofi2_EscribeLCD_c 28FE                    i2u501_40 2186                    i2u502_45 2188  
                  i2u505_40 21AE                    i2u506_45 21B0                    i2u710_47 294E  
                  i2u705_47 2582                    i2u706_47 258E                    i2u707_47 2596  
                  i2u708_47 25A0                    i2u709_47 25AA           ___wmul@multiplier 000E  
             ??i2_EnviaDato 0003        __end_ofi2_RetardoLCD 25CE                 ??_EnviaDato 0010  
                ?_eval_poly 0035                    i2_strlen 2832                    _BorraLCD 2914  
                  _ColorRGB 225C           ___lmul@multiplier 000E              ?i2_HabilitaLCD 0001  
           ?i2_EscribeLCD_c 0001                   frexp@eptr 0011                    __Hrparam 0000  
                  __Lrparam 0000                    ___altoft 22D6                i2EnviaDato@a 0004  
                  ___awtoft 27D2                    ___ftpack 1EB2                    ___lltoft 23C2  
             ConfiguraLCD@a 000E                    _main$163 009E                    _main$164 009F  
         ??i2_DireccionaLCD 0005             ___lwdiv@divisor 0016             ___lwdiv@counter 001A  
                  __ptext10 1AA0                    __ptext11 21DA                    __ptext20 19BA  
                  __ptext12 1B7A                    __ptext21 27D2                    __ptext13 234E  
                  __ptext30 2620                    __ptext22 23C2                    __ptext14 22D6  
                  __ptext31 280A                    __ptext23 1EB2                    __ptext15 200E  
                  __ptext40 2672                    __ptext32 28BC                    __ptext24 285A  
                  __ptext16 18C6                    __ptext41 2832                    __ptext33 28D2  
                  __ptext25 2750                    __ptext17 2792                    __ptext42 28E8  
                  __ptext34 26C4                    __ptext26 25CE                    __ptext18 1492  
                  __ptext43 28FE                    __ptext35 2522                    __ptext27 24CC  
                  __ptext19 2880                    __ptext44 2928                    __ptext36 293C  
                  __ptext28 1F60                    __ptext45 270A                    __ptext37 28A4  
                  __ptext29 1D1A                    __ptext46 2578                    __ptext38 225C  
                  __ptext47 294A         __end_ofi2_EnviaDato 2750             ___almod@divisor 0080  
                  _contador 004C             ___almod@counter 0084             ??_DireccionaLCD 0012  
                  _interfaz 0050                    _partdecl 00A8                    isa$xinst 000000  
                  _potencia 00B5                    int$flags 0051  __end_of_Imprimir_Resultado 12A8  
                  exp@coeff 0801                    log@coeff 081F                 ??_eval_poly 003B  
           ??i2_HabilitaLCD 0001                    intlevel2 0000               ??_HabilitaLCD 000E  
          ___lwmod@dividend 000E               ?_ConfiguraLCD 0001               i2RetardoLCD@a 0002  
               i2_EnviaDato 270A             ___lwmod@divisor 0010                    strlen@cp 0010  
           ___lwmod@counter 0012                ___aldiv@sign 0085         Imprimir_Resultado@i 0092  
       Imprimir_Resultado@j 009A         Imprimir_Resultado@r 008A                  i2_BorraLCD 2928  
              ___almod@sign 0085              ??_ConfiguraLCD 000E               ?_EscribeLCD_c 0001  
               _verificador 0048           i2MensajeLCD_Var@a 0006           i2MensajeLCD_Var@i 0008  
              i2_RetardoLCD 2578         __end_of_HabilitaLCD 294A  
