

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 12 12:02:11 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Version 2.40
    31                           ; Generated 04/07/2022 GMT
    32                           ; 
    33                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   000CFC                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _interfaz
    71   000CFC  08                 	db	8
    72   000000                     _LATE	set	3981
    73   000000                     _LATD1	set	31841
    74   000000                     _TMR0IF	set	32658
    75   000000                     _RB7	set	31759
    76   000000                     _RB6	set	31758
    77   000000                     _RB5	set	31757
    78   000000                     _RB4	set	31756
    79   000000                     _GIE	set	32663
    80   000000                     _RBIE	set	32659
    81   000000                     _LATE1	set	31849
    82   000000                     _PORTB	set	3969
    83   000000                     _LATB	set	3978
    84   000000                     _LATD	set	3980
    85   000000                     _TRISB	set	3987
    86   000000                     _TRISD	set	3989
    87   000000                     _ADCON1	set	4033
    88   000000                     _LATE0	set	31848
    89   000000                     _TMR0	set	4054
    90   000000                     _RBPU	set	32655
    91   000000                     _TRISE	set	3990
    92   000000                     _RBIF	set	32656
    93                           
    94                           	psect	smallconst
    95   000800                     __psmallconst:
    96                           	callstack 0
    97   000800  00                 	db	0
    98   000801                     STR_1:
    99   000801  48                 	db	72	;'H'
   100   000802  6F                 	db	111	;'o'
   101   000803  6C                 	db	108	;'l'
   102   000804  61                 	db	97	;'a'
   103   000805  20                 	db	32
   104   000806  6D                 	db	109	;'m'
   105   000807  75                 	db	117	;'u'
   106   000808  6E                 	db	110	;'n'
   107   000809  64                 	db	100	;'d'
   108   00080A  6F                 	db	111	;'o'
   109   00080B  00                 	db	0
   110   00080C                     STR_13:
   111   00080C  31                 	db	49	;'1'
   112   00080D  30                 	db	48	;'0'
   113   00080E  00                 	db	0
   114   00080F                     STR_14:
   115   00080F  31                 	db	49	;'1'
   116   000810  31                 	db	49	;'1'
   117   000811  00                 	db	0
   118   000812                     STR_15:
   119   000812  31                 	db	49	;'1'
   120   000813  32                 	db	50	;'2'
   121   000814  00                 	db	0
   122   000815                     STR_16:
   123   000815  31                 	db	49	;'1'
   124   000816  33                 	db	51	;'3'
   125   000817  00                 	db	0
   126   000818                     STR_17:
   127   000818  31                 	db	49	;'1'
   128   000819  34                 	db	52	;'4'
   129   00081A  00                 	db	0
   130   00081B                     STR_18:
   131   00081B  31                 	db	49	;'1'
   132   00081C  35                 	db	53	;'5'
   133   00081D  00                 	db	0
   134   00081E                     STR_9:
   135   00081E  36                 	db	54	;'6'
   136   00081F  00                 	db	0
   137   000820                     STR_2:
   138   000820  37                 	db	55	;'7'
   139   000821  00                 	db	0
   140   000822                     STR_11:
   141   000822  38                 	db	56	;'8'
   142   000823  00                 	db	0
   143   000824                     STR_12:
   144   000824  39                 	db	57	;'9'
   145   000825  00                 	db	0
   146   000826  00                 	db	0	; dummy byte at the end
   147   000000                     
   148                           ; #config settings
   149                           
   150                           	psect	cinit
   151   000C74                     __pcinit:
   152                           	callstack 0
   153   000C74                     start_initialization:
   154                           	callstack 0
   155   000C74                     __initialization:
   156                           	callstack 0
   157                           
   158                           ; Initialize objects allocated to COMRAM (1 bytes)
   159                           ; load TBLPTR registers with __pidataCOMRAM
   160   000C74  0EFC               	movlw	low __pidataCOMRAM
   161   000C76  6EF6               	movwf	tblptrl,c
   162   000C78  0E0C               	movlw	high __pidataCOMRAM
   163   000C7A  6EF7               	movwf	tblptrh,c
   164   000C7C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   165   000C7E  6EF8               	movwf	tblptru,c
   166   000C80  0009               	tblrd		*+	;fetch initializer
   167   000C82  CFF5 F010          	movff	tablat,__pdataCOMRAM
   168                           
   169                           ; Clear objects allocated to COMRAM (1 bytes)
   170   000C86  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   171   000C88                     end_of_initialization:
   172                           	callstack 0
   173   000C88                     __end_of__initialization:
   174                           	callstack 0
   175   000C88  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   176   000C8A  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   177   000C8C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178   000C8E  6EF8               	movwf	tblptru,c
   179   000C90  0100               	movlb	0
   180   000C92  EFFE  F004         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183   00000F                     __pbssCOMRAM:
   184                           	callstack 0
   185   00000F                     _Tecla:
   186                           	callstack 0
   187   00000F                     	ds	1
   188                           
   189                           	psect	dataCOMRAM
   190   000010                     __pdataCOMRAM:
   191                           	callstack 0
   192   000010                     _interfaz:
   193                           	callstack 0
   194   000010                     	ds	1
   195                           
   196                           	psect	cstackCOMRAM
   197   000001                     __pcstackCOMRAM:
   198                           	callstack 0
   199   000001                     ??_ISR:
   200                           
   201                           ; 1 bytes @ 0x0
   202   000001                     	ds	1
   203   000002                     ??_RetardoLCD:
   204   000002                     ConfiguraLCD@a:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0x1
   208   000002                     	ds	1
   209   000003                     RetardoLCD@a:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x2
   213   000003                     	ds	1
   214   000004                     ??_EnviaDato:
   215                           
   216                           ; 1 bytes @ 0x3
   217   000004                     	ds	1
   218   000005                     EnviaDato@a:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0x4
   222   000005                     	ds	1
   223   000006                     EscribeLCD_c@a:
   224                           	callstack 0
   225   000006                     DireccionaLCD@a:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x5
   229   000006                     	ds	1
   230   000007                     MensajeLCD_Var@a:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x6
   234   000007                     	ds	2
   235   000009                     ??_MensajeLCD_Var:
   236                           
   237                           ; 1 bytes @ 0x8
   238   000009                     	ds	2
   239   00000B                     MensajeLCD_Var@i:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0xA
   243   00000B                     	ds	2
   244   00000D                     ??_main:
   245                           
   246                           ; 1 bytes @ 0xC
   247   00000D                     	ds	2
   248                           
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 22 in file "Lab4.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;  i               1    0        unsigned char 
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : 0/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   268 ;;      Params:         0       0       0       0       0       0       0       0       0
   269 ;;      Locals:         0       0       0       0       0       0       0       0       0
   270 ;;      Temps:          2       0       0       0       0       0       0       0       0
   271 ;;      Totals:         2       0       0       0       0       0       0       0       0
   272 ;;Total ram usage:        2 bytes
   273 ;; Hardware stack levels required when called: 5
   274 ;; This function calls:
   275 ;;		_BorraLCD
   276 ;;		_ConfiguraLCD
   277 ;;		_DireccionaLCD
   278 ;;		_InicializaLCD
   279 ;;		_LeerTeclado
   280 ;;		_MensajeLCD_Var
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text0
   287   0009FC                     __ptext0:
   288                           	callstack 0
   289   0009FC                     _main:
   290                           	callstack 26
   291                           
   292                           ;Lab4.c: 23: unsigned char i;;Lab4.c: 24: ADCON1=15;
   293                           
   294                           ;incstack = 0
   295   0009FC  0E0F               	movlw	15
   296   0009FE  6EC1               	movwf	193,c	;volatile
   297                           
   298                           ;Lab4.c: 25: TRISD = 0;
   299   000A00  0E00               	movlw	0
   300   000A02  6E95               	movwf	149,c	;volatile
   301                           
   302                           ;Lab4.c: 26: TRISE = 0;
   303   000A04  0E00               	movlw	0
   304   000A06  6E96               	movwf	150,c	;volatile
   305                           
   306                           ;Lab4.c: 27: TRISB = 0b11110000;
   307   000A08  0EF0               	movlw	240
   308   000A0A  6E93               	movwf	147,c	;volatile
   309                           
   310                           ;Lab4.c: 28: LATD = 0;
   311   000A0C  0E00               	movlw	0
   312   000A0E  6E8C               	movwf	140,c	;volatile
   313                           
   314                           ;Lab4.c: 29: LATE = 0;
   315   000A10  0E00               	movlw	0
   316   000A12  6E8D               	movwf	141,c	;volatile
   317                           
   318                           ;Lab4.c: 30: LATB = 0;
   319   000A14  0E00               	movlw	0
   320   000A16  6E8A               	movwf	138,c	;volatile
   321                           
   322                           ;Lab4.c: 31: _delay((unsigned long)((100)*(1000000/4000.0)));
   323   000A18  0E21               	movlw	33
   324   000A1A  6E0D               	movwf	??_main^0,c
   325   000A1C  0E76               	movlw	118
   326   000A1E                     u557:
   327   000A1E  2EE8               	decfsz	wreg,f,c
   328   000A20  D7FE               	bra	u557
   329   000A22  2E0D               	decfsz	??_main^0,f,c
   330   000A24  D7FC               	bra	u557
   331   000A26  D000               	nop2	
   332                           
   333                           ;Lab4.c: 32: RBPU = 0;
   334   000A28  9EF1               	bcf	4081,7,c	;volatile
   335                           
   336                           ;Lab4.c: 33: _delay((unsigned long)((100)*(1000000/4000.0)));
   337   000A2A  0E21               	movlw	33
   338   000A2C  6E0D               	movwf	??_main^0,c
   339   000A2E  0E76               	movlw	118
   340   000A30                     u567:
   341   000A30  2EE8               	decfsz	wreg,f,c
   342   000A32  D7FE               	bra	u567
   343   000A34  2E0D               	decfsz	??_main^0,f,c
   344   000A36  D7FC               	bra	u567
   345   000A38  D000               	nop2	
   346                           
   347                           ;Lab4.c: 39: RBIF=0;
   348   000A3A  90F2               	bcf	4082,0,c	;volatile
   349                           
   350                           ;Lab4.c: 40: RBIE=1;
   351   000A3C  86F2               	bsf	4082,3,c	;volatile
   352                           
   353                           ;Lab4.c: 41: GIE=1;
   354   000A3E  8EF2               	bsf	4082,7,c	;volatile
   355                           
   356                           ;Lab4.c: 42: _delay((unsigned long)((1000)*(1000000/4000.0)));
   357   000A40  0E02               	movlw	2
   358   000A42  6E0E               	movwf	(??_main+1)^0,c
   359   000A44  0E45               	movlw	69
   360   000A46  6E0D               	movwf	??_main^0,c
   361   000A48  0EAA               	movlw	170
   362   000A4A                     u577:
   363   000A4A  2EE8               	decfsz	wreg,f,c
   364   000A4C  D7FE               	bra	u577
   365   000A4E  2E0D               	decfsz	??_main^0,f,c
   366   000A50  D7FC               	bra	u577
   367   000A52  2E0E               	decfsz	(??_main+1)^0,f,c
   368   000A54  D7FA               	bra	u577
   369                           
   370                           ;Lab4.c: 43: ConfiguraLCD(4);
   371   000A56  0E04               	movlw	4
   372   000A58  EC4B  F006         	call	_ConfiguraLCD
   373                           
   374                           ;Lab4.c: 44: InicializaLCD();
   375   000A5C  EC5D  F005         	call	_InicializaLCD	;wreg free
   376                           
   377                           ;Lab4.c: 45: BorraLCD();
   378   000A60  EC6D  F006         	call	_BorraLCD	;wreg free
   379                           
   380                           ;Lab4.c: 46: MensajeLCD_Var("Hola mundo");
   381   000A64  0E01               	movlw	low STR_1
   382   000A66  6E07               	movwf	MensajeLCD_Var@a^0,c
   383   000A68  5007               	movf	MensajeLCD_Var@a^0,w,c
   384   000A6A  A4D8               	btfss	status,2,c
   385   000A6C  0E08               	movlw	high __smallconst
   386   000A6E  6E08               	movwf	(MensajeLCD_Var@a+1)^0,c
   387   000A70  ECAB  F005         	call	_MensajeLCD_Var	;wreg free
   388                           
   389                           ;Lab4.c: 47: DireccionaLCD(0xC0);
   390   000A74  0EC0               	movlw	192
   391   000A76  EC62  F006         	call	_DireccionaLCD
   392                           
   393                           ;Lab4.c: 48: MensajeLCD_Var("7");
   394   000A7A  0E20               	movlw	low STR_2
   395   000A7C  6E07               	movwf	MensajeLCD_Var@a^0,c
   396   000A7E  5007               	movf	MensajeLCD_Var@a^0,w,c
   397   000A80  A4D8               	btfss	status,2,c
   398   000A82  0E08               	movlw	high __smallconst
   399   000A84  6E08               	movwf	(MensajeLCD_Var@a+1)^0,c
   400   000A86  ECAB  F005         	call	_MensajeLCD_Var	;wreg free
   401                           
   402                           ;Lab4.c: 49: _delay((unsigned long)((1000)*(1000000/4000.0)));
   403   000A8A  0E02               	movlw	2
   404   000A8C  6E0E               	movwf	(??_main+1)^0,c
   405   000A8E  0E45               	movlw	69
   406   000A90  6E0D               	movwf	??_main^0,c
   407   000A92  0EAA               	movlw	170
   408   000A94                     u587:
   409   000A94  2EE8               	decfsz	wreg,f,c
   410   000A96  D7FE               	bra	u587
   411   000A98  2E0D               	decfsz	??_main^0,f,c
   412   000A9A  D7FC               	bra	u587
   413   000A9C  2E0E               	decfsz	(??_main+1)^0,f,c
   414   000A9E  D7FA               	bra	u587
   415   000AA0                     l1311:
   416                           
   417                           ;Lab4.c: 51: Tecla=LeerTeclado();
   418   000AA0  EC14  F004         	call	_LeerTeclado	;wreg free
   419   000AA4  6E0F               	movwf	_Tecla^0,c
   420                           
   421                           ;Lab4.c: 53: MensajeLCD_Var(Tecla);
   422   000AA6  500F               	movf	_Tecla^0,w,c
   423   000AA8  6E0D               	movwf	??_main^0,c
   424   000AAA  6A0E               	clrf	(??_main+1)^0,c
   425   000AAC  C00D  F007         	movff	??_main,MensajeLCD_Var@a
   426   000AB0  C00E  F008         	movff	??_main+1,MensajeLCD_Var@a+1
   427   000AB4  ECAB  F005         	call	_MensajeLCD_Var	;wreg free
   428   000AB8  D7F3               	goto	l1311
   429   000ABA                     __end_of_main:
   430                           	callstack 0
   431                           
   432 ;; *************** function _MensajeLCD_Var *****************
   433 ;; Defined at:
   434 ;;		line 215 in file "LibLCDXC8.h"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  a               2    6[COMRAM] PTR unsigned char 
   437 ;;		 -> RAM(2047), STR_2(2), STR_1(11), 
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  i               2   10[COMRAM] int 
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   449 ;;      Params:         2       0       0       0       0       0       0       0       0
   450 ;;      Locals:         2       0       0       0       0       0       0       0       0
   451 ;;      Temps:          2       0       0       0       0       0       0       0       0
   452 ;;      Totals:         6       0       0       0       0       0       0       0       0
   453 ;;Total ram usage:        6 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; Hardware stack levels required when called: 4
   456 ;; This function calls:
   457 ;;		_EscribeLCD_c
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text1
   464   000B56                     __ptext1:
   465                           	callstack 0
   466   000B56                     _MensajeLCD_Var:
   467                           	callstack 26
   468                           
   469                           ;LibLCDXC8.h: 219: for(int i = 0; i<16; i++){
   470                           
   471                           ;incstack = 0
   472   000B56  0E00               	movlw	0
   473   000B58  6E0C               	movwf	(MensajeLCD_Var@i+1)^0,c
   474   000B5A  0E00               	movlw	0
   475   000B5C  6E0B               	movwf	MensajeLCD_Var@i^0,c
   476   000B5E                     l1271:
   477                           
   478                           ;LibLCDXC8.h: 220: if(a[i] == (0)){
   479   000B5E  500B               	movf	MensajeLCD_Var@i^0,w,c
   480   000B60  2407               	addwf	MensajeLCD_Var@a^0,w,c
   481   000B62  6E09               	movwf	??_MensajeLCD_Var^0,c
   482   000B64  500C               	movf	(MensajeLCD_Var@i+1)^0,w,c
   483   000B66  2008               	addwfc	(MensajeLCD_Var@a+1)^0,w,c
   484   000B68  6E0A               	movwf	(??_MensajeLCD_Var+1)^0,c
   485   000B6A  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   486   000B6E  C00A  FFF7         	movff	??_MensajeLCD_Var+1,tblptrh
   487   000B72  6AF8               	clrf	tblptru,c
   488   000B74  0E07               	movlw	(high __ramtop+-1)
   489   000B76  64F7               	cpfsgt	tblptrh,c
   490   000B78  D003               	bra	u517
   491   000B7A  0008               	tblrd		*
   492   000B7C  50F5               	movf	tablat,w,c
   493   000B7E  D005               	bra	u510
   494   000B80                     u517:
   495   000B80  CFF6 FFE9          	movff	tblptrl,fsr0l
   496   000B84  CFF7 FFEA          	movff	tblptrh,fsr0h
   497   000B88  50EF               	movf	indf0,w,c
   498   000B8A                     u510:
   499   000B8A  0900               	iorlw	0
   500   000B8C  B4D8               	btfsc	status,2,c
   501   000B8E  0012               	return	
   502                           
   503                           ;LibLCDXC8.h: 222: };LibLCDXC8.h: 223: EscribeLCD_c(a[i]);
   504   000B90  500B               	movf	MensajeLCD_Var@i^0,w,c
   505   000B92  2407               	addwf	MensajeLCD_Var@a^0,w,c
   506   000B94  6E09               	movwf	??_MensajeLCD_Var^0,c
   507   000B96  500C               	movf	(MensajeLCD_Var@i+1)^0,w,c
   508   000B98  2008               	addwfc	(MensajeLCD_Var@a+1)^0,w,c
   509   000B9A  6E0A               	movwf	(??_MensajeLCD_Var+1)^0,c
   510   000B9C  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   511   000BA0  C00A  FFF7         	movff	??_MensajeLCD_Var+1,tblptrh
   512   000BA4  6AF8               	clrf	tblptru,c
   513   000BA6  0E07               	movlw	(high __ramtop+-1)
   514   000BA8  64F7               	cpfsgt	tblptrh,c
   515   000BAA  D003               	bra	u537
   516   000BAC  0008               	tblrd		*
   517   000BAE  50F5               	movf	tablat,w,c
   518   000BB0  D005               	bra	u530
   519   000BB2                     u537:
   520   000BB2  CFF6 FFE9          	movff	tblptrl,fsr0l
   521   000BB6  CFF7 FFEA          	movff	tblptrh,fsr0h
   522   000BBA  50EF               	movf	indf0,w,c
   523   000BBC                     u530:
   524   000BBC  EC57  F006         	call	_EscribeLCD_c
   525   000BC0  4A0B               	infsnz	MensajeLCD_Var@i^0,f,c
   526   000BC2  2A0C               	incf	(MensajeLCD_Var@i+1)^0,f,c
   527   000BC4  BE0C               	btfsc	(MensajeLCD_Var@i+1)^0,7,c
   528   000BC6  D7CB               	goto	l1271
   529   000BC8  500C               	movf	(MensajeLCD_Var@i+1)^0,w,c
   530   000BCA  E105               	bnz	u540
   531   000BCC  0E10               	movlw	16
   532   000BCE  5C0B               	subwf	MensajeLCD_Var@i^0,w,c
   533   000BD0  B0D8               	btfsc	status,0,c
   534   000BD2  0012               	return	
   535   000BD4  D7C4               	goto	l1271
   536   000BD6                     u540:
   537   000BD6  0012               	return		;funcret
   538   000BD8                     __end_of_MensajeLCD_Var:
   539                           	callstack 0
   540                           
   541 ;; *************** function _EscribeLCD_c *****************
   542 ;; Defined at:
   543 ;;		line 116 in file "LibLCDXC8.h"
   544 ;; Parameters:    Size  Location     Type
   545 ;;  a               1    wreg     unsigned char 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  a               1    5[COMRAM] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   557 ;;      Params:         0       0       0       0       0       0       0       0       0
   558 ;;      Locals:         1       0       0       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0
   560 ;;      Totals:         1       0       0       0       0       0       0       0       0
   561 ;;Total ram usage:        1 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; Hardware stack levels required when called: 3
   564 ;; This function calls:
   565 ;;		_EnviaDato
   566 ;;		_HabilitaLCD
   567 ;;		_RetardoLCD
   568 ;; This function is called by:
   569 ;;		_MensajeLCD_Var
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text2
   574   000CAE                     __ptext2:
   575                           	callstack 0
   576   000CAE                     _EscribeLCD_c:
   577                           	callstack 26
   578                           
   579                           ;incstack = 0
   580                           ;EscribeLCD_c@a stored from wreg
   581   000CAE  6E06               	movwf	EscribeLCD_c@a^0,c
   582                           
   583                           ;LibLCDXC8.h: 120: LATE0=1;
   584   000CB0  808D               	bsf	3981,0,c	;volatile
   585                           
   586                           ;LibLCDXC8.h: 121: EnviaDato(a);
   587   000CB2  5006               	movf	EscribeLCD_c@a^0,w,c
   588   000CB4  EC17  F006         	call	_EnviaDato
   589                           
   590                           ;LibLCDXC8.h: 122: HabilitaLCD();
   591   000CB8  EC77  F006         	call	_HabilitaLCD	;wreg free
   592                           
   593                           ;LibLCDXC8.h: 123: RetardoLCD(4);
   594   000CBC  0E04               	movlw	4
   595   000CBE  ECEC  F005         	call	_RetardoLCD
   596   000CC2  0012               	return		;funcret
   597   000CC4                     __end_of_EscribeLCD_c:
   598                           	callstack 0
   599                           
   600 ;; *************** function _LeerTeclado *****************
   601 ;; Defined at:
   602 ;;		line 57 in file "Lab4.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      unsigned char 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   616 ;;      Params:         0       0       0       0       0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text3
   631   000828                     __ptext3:
   632                           	callstack 0
   633   000828                     _LeerTeclado:
   634                           	callstack 29
   635                           
   636                           ;Lab4.c: 58: LATB = 0b00000000;
   637                           
   638                           ;incstack = 0
   639   000828  0E00               	movlw	0
   640   00082A  6E8A               	movwf	138,c	;volatile
   641   00082C                     l1057:
   642   00082C  0EF0               	movlw	240
   643   00082E  1881               	xorwf	129,w,c	;volatile
   644   000830  B4D8               	btfsc	status,2,c
   645   000832  D7FC               	goto	l1057
   646                           
   647                           ;Lab4.c: 60: };Lab4.c: 61: LATB = 0b0111;
   648   000834  0E07               	movlw	7
   649   000836  6E8A               	movwf	138,c	;volatile
   650                           
   651                           ;Lab4.c: 62: if ((PORTB&0b11110000) == 0b11100000){
   652   000838  5081               	movf	129,w,c	;volatile
   653   00083A  0BF0               	andlw	240
   654   00083C  0AE0               	xorlw	224
   655   00083E  A4D8               	btfss	status,2,c
   656   000840  D002               	goto	l1067
   657                           
   658                           ;Lab4.c: 63: return '1';
   659   000842  0E31               	movlw	49
   660   000844  0012               	return	
   661   000846                     l1067:
   662                           
   663                           ;Lab4.c: 64: };Lab4.c: 65: if ((PORTB&0b11110000) == 0b11010000){
   664   000846  5081               	movf	129,w,c	;volatile
   665   000848  0BF0               	andlw	240
   666   00084A  0AD0               	xorlw	208
   667   00084C  A4D8               	btfss	status,2,c
   668   00084E  D002               	goto	l1073
   669                           
   670                           ;Lab4.c: 66: return '2';
   671   000850  0E32               	movlw	50
   672   000852  0012               	return	
   673   000854                     l1073:
   674                           
   675                           ;Lab4.c: 67: };Lab4.c: 68: if ((PORTB&0b11110000) == 0b10110000){
   676   000854  5081               	movf	129,w,c	;volatile
   677   000856  0BF0               	andlw	240
   678   000858  0AB0               	xorlw	176
   679   00085A  A4D8               	btfss	status,2,c
   680   00085C  D002               	goto	l1079
   681                           
   682                           ;Lab4.c: 69: return '3';
   683   00085E  0E33               	movlw	51
   684   000860  0012               	return	
   685   000862                     l1079:
   686                           
   687                           ;Lab4.c: 70: };Lab4.c: 71: if ((PORTB&0b11110000) == 0b01110000){
   688   000862  5081               	movf	129,w,c	;volatile
   689   000864  0BF0               	andlw	240
   690   000866  0A70               	xorlw	112
   691   000868  A4D8               	btfss	status,2,c
   692   00086A  D002               	goto	l1085
   693                           
   694                           ;Lab4.c: 72: return '+';
   695   00086C  0E2B               	movlw	43
   696   00086E  0012               	return	
   697   000870                     l1085:
   698                           
   699                           ;Lab4.c: 73: };Lab4.c: 75: LATB = 0b1011;
   700   000870  0E0B               	movlw	11
   701   000872  6E8A               	movwf	138,c	;volatile
   702                           
   703                           ;Lab4.c: 76: if ((PORTB&0b11110000) == 0b11100000){
   704   000874  5081               	movf	129,w,c	;volatile
   705   000876  0BF0               	andlw	240
   706   000878  0AE0               	xorlw	224
   707   00087A  A4D8               	btfss	status,2,c
   708   00087C  D002               	goto	l1093
   709                           
   710                           ;Lab4.c: 77: return '4';
   711   00087E  0E34               	movlw	52
   712   000880  0012               	return	
   713   000882                     l1093:
   714                           
   715                           ;Lab4.c: 78: };Lab4.c: 79: if ((PORTB&0b11110000) == 0b11010000){
   716   000882  5081               	movf	129,w,c	;volatile
   717   000884  0BF0               	andlw	240
   718   000886  0AD0               	xorlw	208
   719   000888  A4D8               	btfss	status,2,c
   720   00088A  D002               	goto	l1099
   721                           
   722                           ;Lab4.c: 80: return '5';
   723   00088C  0E35               	movlw	53
   724   00088E  0012               	return	
   725   000890                     l1099:
   726                           
   727                           ;Lab4.c: 81: };Lab4.c: 82: if ((PORTB&0b11110000) == 0b10110000){
   728   000890  5081               	movf	129,w,c	;volatile
   729   000892  0BF0               	andlw	240
   730   000894  0AB0               	xorlw	176
   731   000896  A4D8               	btfss	status,2,c
   732   000898  D002               	goto	l1105
   733                           
   734                           ;Lab4.c: 83: return '6';
   735   00089A  0E36               	movlw	54
   736   00089C  0012               	return	
   737   00089E                     l1105:
   738                           
   739                           ;Lab4.c: 84: };Lab4.c: 85: if ((PORTB&0b11110000) == 0b01110000){
   740   00089E  5081               	movf	129,w,c	;volatile
   741   0008A0  0BF0               	andlw	240
   742   0008A2  0A70               	xorlw	112
   743   0008A4  A4D8               	btfss	status,2,c
   744   0008A6  D002               	goto	l1111
   745                           
   746                           ;Lab4.c: 86: return '-';
   747   0008A8  0E2D               	movlw	45
   748   0008AA  0012               	return	
   749   0008AC                     l1111:
   750                           
   751                           ;Lab4.c: 87: };Lab4.c: 89: LATB = 0b1101;
   752   0008AC  0E0D               	movlw	13
   753   0008AE  6E8A               	movwf	138,c	;volatile
   754                           
   755                           ;Lab4.c: 90: if ((PORTB&0b11110000) == 0b11100000){
   756   0008B0  5081               	movf	129,w,c	;volatile
   757   0008B2  0BF0               	andlw	240
   758   0008B4  0AE0               	xorlw	224
   759   0008B6  A4D8               	btfss	status,2,c
   760   0008B8  D002               	goto	l1119
   761                           
   762                           ;Lab4.c: 91: return '7';
   763   0008BA  0E37               	movlw	55
   764   0008BC  0012               	return	
   765   0008BE                     l1119:
   766                           
   767                           ;Lab4.c: 92: };Lab4.c: 93: if ((PORTB&0b11110000) == 0b11010000){
   768   0008BE  5081               	movf	129,w,c	;volatile
   769   0008C0  0BF0               	andlw	240
   770   0008C2  0AD0               	xorlw	208
   771   0008C4  A4D8               	btfss	status,2,c
   772   0008C6  D002               	goto	l1125
   773                           
   774                           ;Lab4.c: 94: return '8';
   775   0008C8  0E38               	movlw	56
   776   0008CA  0012               	return	
   777   0008CC                     l1125:
   778                           
   779                           ;Lab4.c: 95: };Lab4.c: 96: if ((PORTB&0b11110000) == 0b10110000){
   780   0008CC  5081               	movf	129,w,c	;volatile
   781   0008CE  0BF0               	andlw	240
   782   0008D0  0AB0               	xorlw	176
   783   0008D2  A4D8               	btfss	status,2,c
   784   0008D4  D002               	goto	l1131
   785                           
   786                           ;Lab4.c: 97: return '9';
   787   0008D6  0E39               	movlw	57
   788   0008D8  0012               	return	
   789   0008DA                     l1131:
   790                           
   791                           ;Lab4.c: 98: };Lab4.c: 99: if ((PORTB&0b11110000) == 0b01110000){
   792   0008DA  5081               	movf	129,w,c	;volatile
   793   0008DC  0BF0               	andlw	240
   794   0008DE  0A70               	xorlw	112
   795   0008E0  A4D8               	btfss	status,2,c
   796   0008E2  D002               	goto	l1137
   797                           
   798                           ;Lab4.c: 100: return '*';
   799   0008E4  0E2A               	movlw	42
   800   0008E6  0012               	return	
   801   0008E8                     l1137:
   802                           
   803                           ;Lab4.c: 101: };Lab4.c: 103: LATB = 0b1110;
   804   0008E8  0E0E               	movlw	14
   805   0008EA  6E8A               	movwf	138,c	;volatile
   806                           
   807                           ;Lab4.c: 104: if ((PORTB&0b11110000) == 0b11100000){
   808   0008EC  5081               	movf	129,w,c	;volatile
   809   0008EE  0BF0               	andlw	240
   810   0008F0  0AE0               	xorlw	224
   811   0008F2  A4D8               	btfss	status,2,c
   812   0008F4  D002               	goto	l1145
   813                           
   814                           ;Lab4.c: 105: return 'e';
   815   0008F6  0E65               	movlw	101
   816   0008F8  0012               	return	
   817   0008FA                     l1145:
   818                           
   819                           ;Lab4.c: 106: };Lab4.c: 107: if ((PORTB&0b11110000) == 0b11010000){
   820   0008FA  5081               	movf	129,w,c	;volatile
   821   0008FC  0BF0               	andlw	240
   822   0008FE  0AD0               	xorlw	208
   823   000900  A4D8               	btfss	status,2,c
   824   000902  D002               	goto	l1151
   825                           
   826                           ;Lab4.c: 108: return '0';
   827   000904  0E30               	movlw	48
   828   000906  0012               	return	
   829   000908                     l1151:
   830                           
   831                           ;Lab4.c: 109: };Lab4.c: 110: if ((PORTB&0b11110000) == 0b10110000){
   832   000908  5081               	movf	129,w,c	;volatile
   833   00090A  0BF0               	andlw	240
   834   00090C  0AB0               	xorlw	176
   835   00090E  A4D8               	btfss	status,2,c
   836   000910  D002               	goto	l1157
   837                           
   838                           ;Lab4.c: 111: return '=';
   839   000912  0E3D               	movlw	61
   840   000914  0012               	return	
   841   000916                     l1157:
   842                           
   843                           ;Lab4.c: 112: };Lab4.c: 113: if ((PORTB&0b11110000) == 0b01110000){
   844   000916  5081               	movf	129,w,c	;volatile
   845   000918  0BF0               	andlw	240
   846   00091A  0A70               	xorlw	112
   847   00091C  A4D8               	btfss	status,2,c
   848   00091E  D002               	goto	l1163
   849                           
   850                           ;Lab4.c: 114: return '/';
   851   000920  0E2F               	movlw	47
   852   000922  0012               	return	
   853   000924                     l1163:
   854                           
   855                           ;Lab4.c: 115: };Lab4.c: 116: return '?';
   856   000924  0E3F               	movlw	63
   857   000926  0012               	return		;funcret
   858   000928                     __end_of_LeerTeclado:
   859                           	callstack 0
   860                           
   861 ;; *************** function _InicializaLCD *****************
   862 ;; Defined at:
   863 ;;		line 61 in file "LibLCDXC8.h"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   877 ;;      Params:         0       0       0       0       0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0
   880 ;;      Totals:         0       0       0       0       0       0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 4
   884 ;; This function calls:
   885 ;;		_BorraLCD
   886 ;;		_EnviaDato
   887 ;;		_HabilitaLCD
   888 ;;		_RetardoLCD
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text4
   895   000ABA                     __ptext4:
   896                           	callstack 0
   897   000ABA                     _InicializaLCD:
   898                           	callstack 26
   899                           
   900                           ;LibLCDXC8.h: 63: LATE0=0;
   901                           
   902                           ;incstack = 0
   903   000ABA  908D               	bcf	3981,0,c	;volatile
   904                           
   905                           ;LibLCDXC8.h: 64: if(interfaz==4)
   906   000ABC  0E04               	movlw	4
   907   000ABE  1810               	xorwf	_interfaz^0,w,c
   908   000AC0  A4D8               	btfss	status,2,c
   909   000AC2  D004               	goto	l983
   910                           
   911                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | 0x30;
   912   000AC4  508C               	movf	140,w,c	;volatile
   913   000AC6  0B0F               	andlw	15
   914   000AC8  0930               	iorlw	48
   915   000ACA  D001               	goto	L1
   916   000ACC                     l983:
   917                           
   918                           ;LibLCDXC8.h: 66: else;LibLCDXC8.h: 67: LATD=0x3F;
   919   000ACC  0E3F               	movlw	63
   920   000ACE                     L1:
   921   000ACE  6E8C               	movwf	140,c	;volatile
   922                           
   923                           ;LibLCDXC8.h: 68: HabilitaLCD();
   924   000AD0  EC77  F006         	call	_HabilitaLCD	;wreg free
   925                           
   926                           ;LibLCDXC8.h: 69: RetardoLCD(1);
   927   000AD4  0E01               	movlw	1
   928   000AD6  ECEC  F005         	call	_RetardoLCD
   929                           
   930                           ;LibLCDXC8.h: 70: if(interfaz==4)
   931   000ADA  0E04               	movlw	4
   932   000ADC  1810               	xorwf	_interfaz^0,w,c
   933   000ADE  A4D8               	btfss	status,2,c
   934   000AE0  D004               	goto	l993
   935                           
   936                           ;LibLCDXC8.h: 71: LATD=(LATD & 0b00001111) | 0x30;
   937   000AE2  508C               	movf	140,w,c	;volatile
   938   000AE4  0B0F               	andlw	15
   939   000AE6  0930               	iorlw	48
   940   000AE8  D001               	goto	L2
   941   000AEA                     l993:
   942                           
   943                           ;LibLCDXC8.h: 72: else;LibLCDXC8.h: 73: LATD=0x3F;
   944   000AEA  0E3F               	movlw	63
   945   000AEC                     L2:
   946   000AEC  6E8C               	movwf	140,c	;volatile
   947                           
   948                           ;LibLCDXC8.h: 74: HabilitaLCD();
   949   000AEE  EC77  F006         	call	_HabilitaLCD	;wreg free
   950                           
   951                           ;LibLCDXC8.h: 75: RetardoLCD(3);
   952   000AF2  0E03               	movlw	3
   953   000AF4  ECEC  F005         	call	_RetardoLCD
   954                           
   955                           ;LibLCDXC8.h: 76: if(interfaz==4)
   956   000AF8  0E04               	movlw	4
   957   000AFA  1810               	xorwf	_interfaz^0,w,c
   958   000AFC  A4D8               	btfss	status,2,c
   959   000AFE  D004               	goto	l1003
   960                           
   961                           ;LibLCDXC8.h: 77: LATD=(LATD & 0b00001111) | 0x30;
   962   000B00  508C               	movf	140,w,c	;volatile
   963   000B02  0B0F               	andlw	15
   964   000B04  0930               	iorlw	48
   965   000B06  D001               	goto	L3
   966   000B08                     l1003:
   967                           
   968                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATD=0x3F;
   969   000B08  0E3F               	movlw	63
   970   000B0A                     L3:
   971   000B0A  6E8C               	movwf	140,c	;volatile
   972                           
   973                           ;LibLCDXC8.h: 80: HabilitaLCD();
   974   000B0C  EC77  F006         	call	_HabilitaLCD	;wreg free
   975                           
   976                           ;LibLCDXC8.h: 81: RetardoLCD(4);
   977   000B10  0E04               	movlw	4
   978   000B12  ECEC  F005         	call	_RetardoLCD
   979                           
   980                           ;LibLCDXC8.h: 82: if(interfaz==4){
   981   000B16  0E04               	movlw	4
   982   000B18  1810               	xorwf	_interfaz^0,w,c
   983   000B1A  A4D8               	btfss	status,2,c
   984   000B1C  D011               	goto	l1023
   985                           
   986                           ;LibLCDXC8.h: 83: LATD=(LATD & 0b00001111) | 0x20;
   987   000B1E  508C               	movf	140,w,c	;volatile
   988   000B20  0B0F               	andlw	15
   989   000B22  0920               	iorlw	32
   990   000B24  6E8C               	movwf	140,c	;volatile
   991                           
   992                           ;LibLCDXC8.h: 84: HabilitaLCD();
   993   000B26  EC77  F006         	call	_HabilitaLCD	;wreg free
   994                           
   995                           ;LibLCDXC8.h: 85: RetardoLCD(4);
   996   000B2A  0E04               	movlw	4
   997   000B2C  ECEC  F005         	call	_RetardoLCD
   998                           
   999                           ;LibLCDXC8.h: 86: EnviaDato(0x2F);
  1000   000B30  0E2F               	movlw	47
  1001   000B32  EC17  F006         	call	_EnviaDato
  1002                           
  1003                           ;LibLCDXC8.h: 87: HabilitaLCD();
  1004   000B36  EC77  F006         	call	_HabilitaLCD	;wreg free
  1005                           
  1006                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  1007   000B3A  0E04               	movlw	4
  1008   000B3C  ECEC  F005         	call	_RetardoLCD
  1009   000B40                     l1023:
  1010                           
  1011                           ;LibLCDXC8.h: 89: };LibLCDXC8.h: 90: BorraLCD();
  1012   000B40  EC6D  F006         	call	_BorraLCD	;wreg free
  1013                           
  1014                           ;LibLCDXC8.h: 91: EnviaDato(0xF);
  1015   000B44  0E0F               	movlw	15
  1016   000B46  EC17  F006         	call	_EnviaDato
  1017                           
  1018                           ;LibLCDXC8.h: 92: HabilitaLCD();
  1019   000B4A  EC77  F006         	call	_HabilitaLCD	;wreg free
  1020                           
  1021                           ;LibLCDXC8.h: 93: RetardoLCD(4);
  1022   000B4E  0E04               	movlw	4
  1023   000B50  ECEC  F005         	call	_RetardoLCD
  1024   000B54  0012               	return		;funcret
  1025   000B56                     __end_of_InicializaLCD:
  1026                           	callstack 0
  1027                           
  1028 ;; *************** function _BorraLCD *****************
  1029 ;; Defined at:
  1030 ;;		line 102 in file "LibLCDXC8.h"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, status,2, status,0, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0
  1045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1047 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1048 ;;Total ram usage:        0 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 3
  1051 ;; This function calls:
  1052 ;;		_EnviaDato
  1053 ;;		_HabilitaLCD
  1054 ;;		_RetardoLCD
  1055 ;; This function is called by:
  1056 ;;		_InicializaLCD
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text5
  1062   000CDA                     __ptext5:
  1063                           	callstack 0
  1064   000CDA                     _BorraLCD:
  1065                           	callstack 26
  1066                           
  1067                           ;LibLCDXC8.h: 104: LATE0=0;
  1068                           
  1069                           ;incstack = 0
  1070   000CDA  908D               	bcf	3981,0,c	;volatile
  1071                           
  1072                           ;LibLCDXC8.h: 105: EnviaDato(0x01);
  1073   000CDC  0E01               	movlw	1
  1074   000CDE  EC17  F006         	call	_EnviaDato
  1075                           
  1076                           ;LibLCDXC8.h: 106: HabilitaLCD();
  1077   000CE2  EC77  F006         	call	_HabilitaLCD	;wreg free
  1078                           
  1079                           ;LibLCDXC8.h: 107: RetardoLCD(2);
  1080   000CE6  0E02               	movlw	2
  1081   000CE8  ECEC  F005         	call	_RetardoLCD
  1082   000CEC  0012               	return		;funcret
  1083   000CEE                     __end_of_BorraLCD:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _DireccionaLCD *****************
  1087 ;; Defined at:
  1088 ;;		line 227 in file "LibLCDXC8.h"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  a               1    wreg     unsigned char 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  a               1    5[COMRAM] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0
  1103 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1105 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1106 ;;Total ram usage:        1 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 3
  1109 ;; This function calls:
  1110 ;;		_EnviaDato
  1111 ;;		_HabilitaLCD
  1112 ;;		_RetardoLCD
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text6
  1119   000CC4                     __ptext6:
  1120                           	callstack 0
  1121   000CC4                     _DireccionaLCD:
  1122                           	callstack 27
  1123                           
  1124                           ;incstack = 0
  1125                           ;DireccionaLCD@a stored from wreg
  1126   000CC4  6E06               	movwf	DireccionaLCD@a^0,c
  1127                           
  1128                           ;LibLCDXC8.h: 230: LATE0=0;
  1129   000CC6  908D               	bcf	3981,0,c	;volatile
  1130                           
  1131                           ;LibLCDXC8.h: 231: EnviaDato(a);
  1132   000CC8  5006               	movf	DireccionaLCD@a^0,w,c
  1133   000CCA  EC17  F006         	call	_EnviaDato
  1134                           
  1135                           ;LibLCDXC8.h: 232: HabilitaLCD();
  1136   000CCE  EC77  F006         	call	_HabilitaLCD	;wreg free
  1137                           
  1138                           ;LibLCDXC8.h: 233: RetardoLCD(4);
  1139   000CD2  0E04               	movlw	4
  1140   000CD4  ECEC  F005         	call	_RetardoLCD
  1141   000CD8  0012               	return		;funcret
  1142   000CDA                     __end_of_DireccionaLCD:
  1143                           	callstack 0
  1144                           
  1145 ;; *************** function _EnviaDato *****************
  1146 ;; Defined at:
  1147 ;;		line 51 in file "LibLCDXC8.h"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  a               1    wreg     unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  a               1    4[COMRAM] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1161 ;;      Params:         0       0       0       0       0       0       0       0       0
  1162 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1163 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1164 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1165 ;;Total ram usage:        2 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; Hardware stack levels required when called: 2
  1168 ;; This function calls:
  1169 ;;		_HabilitaLCD
  1170 ;;		_RetardoLCD
  1171 ;; This function is called by:
  1172 ;;		_InicializaLCD
  1173 ;;		_BorraLCD
  1174 ;;		_EscribeLCD_c
  1175 ;;		_DireccionaLCD
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text7
  1180   000C2E                     __ptext7:
  1181                           	callstack 0
  1182   000C2E                     _EnviaDato:
  1183                           	callstack 26
  1184                           
  1185                           ;incstack = 0
  1186                           ;EnviaDato@a stored from wreg
  1187   000C2E  6E05               	movwf	EnviaDato@a^0,c
  1188                           
  1189                           ;LibLCDXC8.h: 52: if(interfaz==4){
  1190   000C30  0E04               	movlw	4
  1191   000C32  1810               	xorwf	_interfaz^0,w,c
  1192   000C34  A4D8               	btfss	status,2,c
  1193   000C36  D017               	goto	l953
  1194                           
  1195                           ;LibLCDXC8.h: 53: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  1196   000C38  C005  F004         	movff	EnviaDato@a,??_EnviaDato
  1197   000C3C  0EF0               	movlw	240
  1198   000C3E  1604               	andwf	??_EnviaDato^0,f,c
  1199   000C40  508C               	movf	140,w,c	;volatile
  1200   000C42  0B0F               	andlw	15
  1201   000C44  1004               	iorwf	??_EnviaDato^0,w,c
  1202   000C46  6E8C               	movwf	140,c	;volatile
  1203                           
  1204                           ;LibLCDXC8.h: 54: HabilitaLCD();
  1205   000C48  EC77  F006         	call	_HabilitaLCD	;wreg free
  1206                           
  1207                           ;LibLCDXC8.h: 55: RetardoLCD(1);
  1208   000C4C  0E01               	movlw	1
  1209   000C4E  ECEC  F005         	call	_RetardoLCD
  1210                           
  1211                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a<<4);
  1212   000C52  C005  F004         	movff	EnviaDato@a,??_EnviaDato
  1213   000C56  3A04               	swapf	??_EnviaDato^0,f,c
  1214   000C58  0EF0               	movlw	240
  1215   000C5A  1604               	andwf	??_EnviaDato^0,f,c
  1216   000C5C  508C               	movf	140,w,c	;volatile
  1217   000C5E  0B0F               	andlw	15
  1218   000C60  1004               	iorwf	??_EnviaDato^0,w,c
  1219   000C62  6E8C               	movwf	140,c	;volatile
  1220                           
  1221                           ;LibLCDXC8.h: 57: }else if(interfaz==8){
  1222   000C64  0012               	return	
  1223   000C66                     l953:
  1224   000C66  0E08               	movlw	8
  1225   000C68  1810               	xorwf	_interfaz^0,w,c
  1226   000C6A  A4D8               	btfss	status,2,c
  1227   000C6C  0012               	return	
  1228                           
  1229                           ;LibLCDXC8.h: 58: LATD=a;
  1230   000C6E  C005  FF8C         	movff	EnviaDato@a,3980	;volatile
  1231   000C72  0012               	return		;funcret
  1232   000C74                     __end_of_EnviaDato:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function _RetardoLCD *****************
  1236 ;; Defined at:
  1237 ;;		line 263 in file "LibLCDXC8.h"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  a               1    wreg     unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  a               1    2[COMRAM] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1251 ;;      Params:         0       0       0       0       0       0       0       0       0
  1252 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1253 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1254 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1255 ;;Total ram usage:        2 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 1
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_EnviaDato
  1262 ;;		_InicializaLCD
  1263 ;;		_BorraLCD
  1264 ;;		_EscribeLCD_c
  1265 ;;		_DireccionaLCD
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text8
  1270   000BD8                     __ptext8:
  1271                           	callstack 0
  1272   000BD8                     _RetardoLCD:
  1273                           	callstack 27
  1274                           
  1275                           ;incstack = 0
  1276                           ;RetardoLCD@a stored from wreg
  1277   000BD8  6E03               	movwf	RetardoLCD@a^0,c
  1278                           
  1279                           ;LibLCDXC8.h: 264: switch(a){
  1280   000BDA  D01B               	goto	l941
  1281   000BDC                     l931:
  1282   000BDC  0E05               	movlw	5
  1283   000BDE  6E02               	movwf	??_RetardoLCD^0,c
  1284   000BE0  0EDE               	movlw	222
  1285   000BE2                     u597:
  1286   000BE2  2EE8               	decfsz	wreg,f,c
  1287   000BE4  D7FE               	bra	u597
  1288   000BE6  2E02               	decfsz	??_RetardoLCD^0,f,c
  1289   000BE8  D7FC               	bra	u597
  1290                           
  1291                           ;LibLCDXC8.h: 267: break;
  1292   000BEA  0012               	return	
  1293   000BEC                     l933:
  1294   000BEC  0E53               	movlw	83
  1295   000BEE                     u607:
  1296   000BEE  2EE8               	decfsz	wreg,f,c
  1297   000BF0  D7FE               	bra	u607
  1298   000BF2  F000               	nop	
  1299                           
  1300                           ;LibLCDXC8.h: 269: _delay((unsigned long)((640)*(1000000/4000000.0)));
  1301   000BF4  0E35               	movlw	53
  1302   000BF6                     u617:
  1303   000BF6  2EE8               	decfsz	wreg,f,c
  1304   000BF8  D7FE               	bra	u617
  1305   000BFA  F000               	nop	
  1306                           
  1307                           ;LibLCDXC8.h: 271: break;
  1308   000BFC  0012               	return	
  1309   000BFE                     l935:
  1310   000BFE  0E08               	movlw	8
  1311   000C00                     u627:
  1312   000C00  2EE8               	decfsz	wreg,f,c
  1313   000C02  D7FE               	bra	u627
  1314   000C04  F000               	nop	
  1315                           
  1316                           ;LibLCDXC8.h: 274: break;
  1317   000C06  0012               	return	
  1318   000C08                     l937:
  1319   000C08  0E03               	movlw	3
  1320   000C0A                     u637:
  1321   000C0A  2EE8               	decfsz	wreg,f,c
  1322   000C0C  D7FE               	bra	u637
  1323   000C0E  F000               	nop	
  1324                           
  1325                           ;LibLCDXC8.h: 277: break;
  1326   000C10  0012               	return	
  1327   000C12                     l941:
  1328   000C12  5003               	movf	RetardoLCD@a^0,w,c
  1329                           
  1330                           ; Switch size 1, requested type "simple"
  1331                           ; Number of cases is 4, Range of values is 1 to 4
  1332                           ; switch strategies available:
  1333                           ; Name         Instructions Cycles
  1334                           ; simple_byte           13     7 (average)
  1335                           ;	Chosen strategy is simple_byte
  1336   000C14  0A01               	xorlw	1	; case 1
  1337   000C16  B4D8               	btfsc	status,2,c
  1338   000C18  D7E1               	goto	l931
  1339   000C1A  0A03               	xorlw	3	; case 2
  1340   000C1C  B4D8               	btfsc	status,2,c
  1341   000C1E  D7E6               	goto	l933
  1342   000C20  0A01               	xorlw	1	; case 3
  1343   000C22  B4D8               	btfsc	status,2,c
  1344   000C24  D7EC               	goto	l935
  1345   000C26  0A07               	xorlw	7	; case 4
  1346   000C28  A4D8               	btfss	status,2,c
  1347   000C2A  0012               	return	
  1348   000C2C  D7ED               	goto	l937
  1349   000C2E                     __end_of_RetardoLCD:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function _HabilitaLCD *****************
  1353 ;; Defined at:
  1354 ;;		line 95 in file "LibLCDXC8.h"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1368 ;;      Params:         0       0       0       0       0       0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1371 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1372 ;;Total ram usage:        0 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; Hardware stack levels required when called: 1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_EnviaDato
  1379 ;;		_InicializaLCD
  1380 ;;		_BorraLCD
  1381 ;;		_EscribeLCD_c
  1382 ;;		_DireccionaLCD
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text9
  1387   000CEE                     __ptext9:
  1388                           	callstack 0
  1389   000CEE                     _HabilitaLCD:
  1390                           	callstack 27
  1391                           
  1392                           ;LibLCDXC8.h: 97: LATE1=1;
  1393                           
  1394                           ;incstack = 0
  1395   000CEE  828D               	bsf	3981,1,c	;volatile
  1396                           
  1397                           ;LibLCDXC8.h: 98: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1398   000CF0  0E03               	movlw	3
  1399   000CF2                     u647:
  1400   000CF2  2EE8               	decfsz	wreg,f,c
  1401   000CF4  D7FE               	bra	u647
  1402   000CF6  F000               	nop	
  1403                           
  1404                           ;LibLCDXC8.h: 100: LATE1=0;
  1405   000CF8  928D               	bcf	3981,1,c	;volatile
  1406   000CFA  0012               	return		;funcret
  1407   000CFC                     __end_of_HabilitaLCD:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function _ConfiguraLCD *****************
  1411 ;; Defined at:
  1412 ;;		line 47 in file "LibLCDXC8.h"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  a               1    wreg     unsigned char 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  a               1    1[COMRAM] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0
  1427 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1429 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1430 ;;Total ram usage:        1 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text10
  1441   000C96                     __ptext10:
  1442                           	callstack 0
  1443   000C96                     _ConfiguraLCD:
  1444                           	callstack 29
  1445                           
  1446                           ;incstack = 0
  1447                           ;ConfiguraLCD@a stored from wreg
  1448   000C96  6E02               	movwf	ConfiguraLCD@a^0,c
  1449                           
  1450                           ;LibLCDXC8.h: 48: if(a==4 | a ==8)
  1451   000C98  0E04               	movlw	4
  1452   000C9A  1802               	xorwf	ConfiguraLCD@a^0,w,c
  1453   000C9C  B4D8               	btfsc	status,2,c
  1454   000C9E  D004               	goto	u40
  1455   000CA0  0E08               	movlw	8
  1456   000CA2  1802               	xorwf	ConfiguraLCD@a^0,w,c
  1457   000CA4  A4D8               	btfss	status,2,c
  1458   000CA6  0012               	return	
  1459   000CA8                     u40:
  1460                           
  1461                           ;LibLCDXC8.h: 49: interfaz=a;
  1462   000CA8  C002  F010         	movff	ConfiguraLCD@a,_interfaz
  1463   000CAC  0012               	return		;funcret
  1464   000CAE                     __end_of_ConfiguraLCD:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _ISR *****************
  1468 ;; Defined at:
  1469 ;;		line 118 in file "Lab4.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1485 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1486 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1487 ;;Total ram usage:        1 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		Interrupt level 2
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	intcode
  1497   000008                     __pintcode:
  1498                           	callstack 0
  1499   000008                     _ISR:
  1500                           	callstack 26
  1501                           
  1502                           ;incstack = 0
  1503   000008  8211               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1504   00000A  ED94  F004         	call	int_func,f	;refresh shadow registers
  1505                           
  1506                           	psect	intcode_body
  1507   000928                     __pintcode_body:
  1508                           	callstack 26
  1509   000928                     int_func:
  1510                           	callstack 26
  1511   000928  0006               	pop		; remove dummy address from shadow register refresh
  1512                           
  1513                           ;Lab4.c: 119: if(RBIF==1){
  1514   00092A  A0F2               	btfss	4082,0,c	;volatile
  1515   00092C  D059               	goto	i2l1257
  1516                           
  1517                           ;Lab4.c: 120: if(PORTB!=0b11110000){
  1518   00092E  0EF0               	movlw	240
  1519   000930  1881               	xorwf	129,w,c	;volatile
  1520   000932  B4D8               	btfsc	status,2,c
  1521   000934  D04C               	goto	i2l1253
  1522                           
  1523                           ;Lab4.c: 121: Tecla=16;
  1524   000936  0E10               	movlw	16
  1525   000938  6E0F               	movwf	_Tecla^0,c
  1526                           
  1527                           ;Lab4.c: 122: LATB=0b11111110;
  1528   00093A  0EFE               	movlw	254
  1529   00093C  6E8A               	movwf	138,c	;volatile
  1530                           
  1531                           ;Lab4.c: 123: if(RB4==0) Tecla="0";
  1532   00093E  B881               	btfsc	3969,4,c	;volatile
  1533   000940  D002               	goto	i2l143
  1534   000942  0E0D               	movlw	low (low (STR_13+1))
  1535   000944  D041               	goto	L18
  1536   000946                     i2l143:
  1537                           
  1538                           ;Lab4.c: 124: else if(RB5==0) Tecla="1";
  1539   000946  BA81               	btfsc	3969,5,c	;volatile
  1540   000948  D002               	goto	i2l145
  1541   00094A  0E10               	movlw	low (low (STR_14+1))
  1542   00094C  D03D               	goto	L18
  1543   00094E                     i2l145:
  1544                           
  1545                           ;Lab4.c: 125: else if(RB6==0) Tecla="2";
  1546   00094E  BC81               	btfsc	3969,6,c	;volatile
  1547   000950  D002               	goto	i2l147
  1548   000952  0E13               	movlw	low (low (STR_15+1))
  1549   000954  D039               	goto	L18
  1550   000956                     i2l147:
  1551                           
  1552                           ;Lab4.c: 126: else if(RB7==0) Tecla="3";
  1553   000956  BE81               	btfsc	3969,7,c	;volatile
  1554   000958  D002               	goto	i2l1217
  1555   00095A  0E16               	movlw	low (low (STR_16+1))
  1556   00095C  D035               	goto	L18
  1557   00095E                     i2l1217:
  1558                           
  1559                           ;Lab4.c: 127: else{;Lab4.c: 128: LATB=0b11111101;
  1560   00095E  0EFD               	movlw	253
  1561   000960  6E8A               	movwf	138,c	;volatile
  1562                           
  1563                           ;Lab4.c: 129: if(RB4==0) Tecla="4";
  1564   000962  B881               	btfsc	3969,4,c	;volatile
  1565   000964  D002               	goto	i2l151
  1566   000966  0E19               	movlw	low (low (STR_17+1))
  1567   000968  D02F               	goto	L18
  1568   00096A                     i2l151:
  1569                           
  1570                           ;Lab4.c: 130: else if(RB5==0) Tecla="5";
  1571   00096A  BA81               	btfsc	3969,5,c	;volatile
  1572   00096C  D002               	goto	i2l153
  1573   00096E  0E1C               	movlw	low (low (STR_18+1))
  1574   000970  D02B               	goto	L18
  1575   000972                     i2l153:
  1576                           
  1577                           ;Lab4.c: 131: else if(RB6==0) Tecla="6";
  1578   000972  BC81               	btfsc	3969,6,c	;volatile
  1579   000974  D002               	goto	i2l155
  1580   000976  0E1E               	movlw	low (low STR_9)
  1581   000978  D027               	goto	L18
  1582   00097A                     i2l155:
  1583                           
  1584                           ;Lab4.c: 132: else if(RB7==0) Tecla="7";
  1585   00097A  BE81               	btfsc	3969,7,c	;volatile
  1586   00097C  D002               	goto	i2l1229
  1587   00097E  0E20               	movlw	low (low STR_2)
  1588   000980  D023               	goto	L18
  1589   000982                     i2l1229:
  1590                           
  1591                           ;Lab4.c: 133: else{;Lab4.c: 134: LATB=0b11111011;
  1592   000982  0EFB               	movlw	251
  1593   000984  6E8A               	movwf	138,c	;volatile
  1594                           
  1595                           ;Lab4.c: 135: if(RB4==0) Tecla="8";
  1596   000986  B881               	btfsc	3969,4,c	;volatile
  1597   000988  D002               	goto	i2l159
  1598   00098A  0E22               	movlw	low (low STR_11)
  1599   00098C  D01D               	goto	L18
  1600   00098E                     i2l159:
  1601                           
  1602                           ;Lab4.c: 136: else if(RB5==0) Tecla="9";
  1603   00098E  BA81               	btfsc	3969,5,c	;volatile
  1604   000990  D002               	goto	i2l161
  1605   000992  0E24               	movlw	low (low STR_12)
  1606   000994  D019               	goto	L18
  1607   000996                     i2l161:
  1608                           
  1609                           ;Lab4.c: 137: else if(RB6==0) Tecla="10";
  1610   000996  BC81               	btfsc	3969,6,c	;volatile
  1611   000998  D002               	goto	i2l163
  1612   00099A  0E0C               	movlw	low (low STR_13)
  1613   00099C  D015               	goto	L18
  1614   00099E                     i2l163:
  1615                           
  1616                           ;Lab4.c: 138: else if(RB7==0) Tecla="11";
  1617   00099E  BE81               	btfsc	3969,7,c	;volatile
  1618   0009A0  D002               	goto	i2l1241
  1619   0009A2  0E0F               	movlw	low (low STR_14)
  1620   0009A4  D011               	goto	L18
  1621   0009A6                     i2l1241:
  1622                           
  1623                           ;Lab4.c: 139: else{;Lab4.c: 140: LATB=0b11110111;
  1624   0009A6  0EF7               	movlw	247
  1625   0009A8  6E8A               	movwf	138,c	;volatile
  1626                           
  1627                           ;Lab4.c: 141: if(RB4==0) Tecla="12";
  1628   0009AA  B881               	btfsc	3969,4,c	;volatile
  1629   0009AC  D002               	goto	i2l167
  1630   0009AE  0E12               	movlw	low (low STR_15)
  1631   0009B0  D00B               	goto	L18
  1632   0009B2                     i2l167:
  1633                           
  1634                           ;Lab4.c: 142: else if(RB5==0) Tecla="13";
  1635   0009B2  BA81               	btfsc	3969,5,c	;volatile
  1636   0009B4  D002               	goto	i2l169
  1637   0009B6  0E15               	movlw	low (low STR_16)
  1638   0009B8  D007               	goto	L18
  1639   0009BA                     i2l169:
  1640                           
  1641                           ;Lab4.c: 143: else if(RB6==0) Tecla="14";
  1642   0009BA  BC81               	btfsc	3969,6,c	;volatile
  1643   0009BC  D002               	goto	i2l171
  1644   0009BE  0E18               	movlw	low (low STR_17)
  1645   0009C0  D003               	goto	L18
  1646   0009C2                     i2l171:
  1647                           
  1648                           ;Lab4.c: 144: else if(RB7==0) Tecla="15";
  1649   0009C2  BE81               	btfsc	3969,7,c	;volatile
  1650   0009C4  D002               	goto	i2l168
  1651   0009C6  0E1B               	movlw	low (low STR_18)
  1652   0009C8                     L18:
  1653   0009C8  6E0F               	movwf	_Tecla^0,c
  1654   0009CA                     i2l168:
  1655                           
  1656                           ;Lab4.c: 145: };Lab4.c: 146: };Lab4.c: 147: };Lab4.c: 148: LATB=0b11110000;
  1657   0009CA  0EF0               	movlw	240
  1658   0009CC  6E8A               	movwf	138,c	;volatile
  1659   0009CE                     i2l1253:
  1660                           
  1661                           ;Lab4.c: 149: };Lab4.c: 150: _delay((unsigned long)((100)*(1000000/4000.0)));
  1662   0009CE  0E21               	movlw	33
  1663   0009D0  6E01               	movwf	??_ISR^0,c
  1664   0009D2  0E76               	movlw	118
  1665   0009D4                     i2u65_47:
  1666   0009D4  2EE8               	decfsz	wreg,f,c
  1667   0009D6  D7FE               	bra	i2u65_47
  1668   0009D8  2E01               	decfsz	??_ISR^0,f,c
  1669   0009DA  D7FC               	bra	i2u65_47
  1670   0009DC  D000               	nop2	
  1671                           
  1672                           ;Lab4.c: 151: RBIF=0;
  1673   0009DE  90F2               	bcf	4082,0,c	;volatile
  1674   0009E0                     i2l1257:
  1675                           
  1676                           ;Lab4.c: 152: };Lab4.c: 153: if(TMR0IF==1){
  1677   0009E0  A4F2               	btfss	4082,2,c	;volatile
  1678   0009E2  D00A               	goto	i2u50_45
  1679                           
  1680                           ;Lab4.c: 154: TMR0IF=0;
  1681   0009E4  94F2               	bcf	4082,2,c	;volatile
  1682                           
  1683                           ;Lab4.c: 155: TMR0=3036;
  1684   0009E6  0E0B               	movlw	11
  1685   0009E8  6ED7               	movwf	215,c	;volatile
  1686   0009EA  0EDC               	movlw	220
  1687   0009EC  6ED6               	movwf	214,c	;volatile
  1688                           
  1689                           ;Lab4.c: 156: LATD1=LATD1^1;
  1690   0009EE  B28C               	btfsc	3980,1,c	;volatile
  1691   0009F0  D002               	goto	i2u49_40
  1692   0009F2  828C               	bsf	3980,1,c	;volatile
  1693   0009F4  D001               	goto	i2u50_45
  1694   0009F6                     i2u49_40:
  1695   0009F6  928C               	bcf	3980,1,c	;volatile
  1696   0009F8                     i2u50_45:
  1697   0009F8  9211               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1698   0009FA  0011               	retfie		f
  1699   0009FC                     __end_of_ISR:
  1700                           	callstack 0
  1701                           
  1702                           	psect	rparam
  1703   000000                     
  1704                           	psect	temp
  1705   000011                     btemp:
  1706                           	callstack 0
  1707   000011                     	ds	1
  1708   000000                     int$flags	set	btemp
  1709   000000                     wtemp8	set	btemp+1
  1710   000000                     ttemp5	set	btemp+1
  1711   000000                     ttemp6	set	btemp+4
  1712   000000                     ttemp7	set	btemp+8
  1713                           
  1714                           	psect	idloc
  1715                           
  1716                           ;Config register IDLOC0 @ 0x200000
  1717                           ;	unspecified, using default values
  1718   200000                     	org	2097152
  1719   200000  FF                 	db	255
  1720                           
  1721                           ;Config register IDLOC1 @ 0x200001
  1722                           ;	unspecified, using default values
  1723   200001                     	org	2097153
  1724   200001  FF                 	db	255
  1725                           
  1726                           ;Config register IDLOC2 @ 0x200002
  1727                           ;	unspecified, using default values
  1728   200002                     	org	2097154
  1729   200002  FF                 	db	255
  1730                           
  1731                           ;Config register IDLOC3 @ 0x200003
  1732                           ;	unspecified, using default values
  1733   200003                     	org	2097155
  1734   200003  FF                 	db	255
  1735                           
  1736                           ;Config register IDLOC4 @ 0x200004
  1737                           ;	unspecified, using default values
  1738   200004                     	org	2097156
  1739   200004  FF                 	db	255
  1740                           
  1741                           ;Config register IDLOC5 @ 0x200005
  1742                           ;	unspecified, using default values
  1743   200005                     	org	2097157
  1744   200005  FF                 	db	255
  1745                           
  1746                           ;Config register IDLOC6 @ 0x200006
  1747                           ;	unspecified, using default values
  1748   200006                     	org	2097158
  1749   200006  FF                 	db	255
  1750                           
  1751                           ;Config register IDLOC7 @ 0x200007
  1752                           ;	unspecified, using default values
  1753   200007                     	org	2097159
  1754   200007  FF                 	db	255
  1755                           
  1756                           	psect	config
  1757                           
  1758                           ;Config register CONFIG1L @ 0x300000
  1759                           ;	unspecified, using default values
  1760                           ;	PLL Prescaler Selection bits
  1761                           ;	PLLDIV = 0x0, unprogrammed default
  1762                           ;	System Clock Postscaler Selection bits
  1763                           ;	CPUDIV = 0x0, unprogrammed default
  1764                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1765                           ;	USBDIV = 0x0, unprogrammed default
  1766   300000                     	org	3145728
  1767   300000  00                 	db	0
  1768                           
  1769                           ;Config register CONFIG1H @ 0x300001
  1770                           ;	Oscillator Selection bits
  1771                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1772                           ;	Fail-Safe Clock Monitor Enable bit
  1773                           ;	FCMEN = 0x0, unprogrammed default
  1774                           ;	Internal/External Oscillator Switchover bit
  1775                           ;	IESO = 0x0, unprogrammed default
  1776   300001                     	org	3145729
  1777   300001  09                 	db	9
  1778                           
  1779                           ;Config register CONFIG2L @ 0x300002
  1780                           ;	unspecified, using default values
  1781                           ;	Power-up Timer Enable bit
  1782                           ;	PWRT = 0x1, unprogrammed default
  1783                           ;	Brown-out Reset Enable bits
  1784                           ;	BOR = 0x3, unprogrammed default
  1785                           ;	Brown-out Reset Voltage bits
  1786                           ;	BORV = 0x3, unprogrammed default
  1787                           ;	USB Voltage Regulator Enable bit
  1788                           ;	VREGEN = 0x0, unprogrammed default
  1789   300002                     	org	3145730
  1790   300002  1F                 	db	31
  1791                           
  1792                           ;Config register CONFIG2H @ 0x300003
  1793                           ;	Watchdog Timer Enable bit
  1794                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1795                           ;	Watchdog Timer Postscale Select bits
  1796                           ;	WDTPS = 0xF, unprogrammed default
  1797   300003                     	org	3145731
  1798   300003  1E                 	db	30
  1799                           
  1800                           ; Padding undefined space
  1801   300004                     	org	3145732
  1802   300004  FF                 	db	255
  1803                           
  1804                           ;Config register CONFIG3H @ 0x300005
  1805                           ;	CCP2 MUX bit
  1806                           ;	CCP2MX = 0x1, unprogrammed default
  1807                           ;	PORTB A/D Enable bit
  1808                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1809                           ;	Low-Power Timer 1 Oscillator Enable bit
  1810                           ;	LPT1OSC = 0x0, unprogrammed default
  1811                           ;	MCLR Pin Enable bit
  1812                           ;	MCLRE = 0x1, unprogrammed default
  1813   300005                     	org	3145733
  1814   300005  81                 	db	129
  1815                           
  1816                           ;Config register CONFIG4L @ 0x300006
  1817                           ;	Stack Full/Underflow Reset Enable bit
  1818                           ;	STVREN = 0x1, unprogrammed default
  1819                           ;	Single-Supply ICSP Enable bit
  1820                           ;	LVP = OFF, Single-Supply ICSP disabled
  1821                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1822                           ;	ICPRT = 0x0, unprogrammed default
  1823                           ;	Extended Instruction Set Enable bit
  1824                           ;	XINST = 0x0, unprogrammed default
  1825                           ;	Background Debugger Enable bit
  1826                           ;	DEBUG = 0x1, unprogrammed default
  1827   300006                     	org	3145734
  1828   300006  81                 	db	129
  1829                           
  1830                           ; Padding undefined space
  1831   300007                     	org	3145735
  1832   300007  FF                 	db	255
  1833                           
  1834                           ;Config register CONFIG5L @ 0x300008
  1835                           ;	unspecified, using default values
  1836                           ;	Code Protection bit
  1837                           ;	CP0 = 0x1, unprogrammed default
  1838                           ;	Code Protection bit
  1839                           ;	CP1 = 0x1, unprogrammed default
  1840                           ;	Code Protection bit
  1841                           ;	CP2 = 0x1, unprogrammed default
  1842                           ;	Code Protection bit
  1843                           ;	CP3 = 0x1, unprogrammed default
  1844   300008                     	org	3145736
  1845   300008  0F                 	db	15
  1846                           
  1847                           ;Config register CONFIG5H @ 0x300009
  1848                           ;	unspecified, using default values
  1849                           ;	Boot Block Code Protection bit
  1850                           ;	CPB = 0x1, unprogrammed default
  1851                           ;	Data EEPROM Code Protection bit
  1852                           ;	CPD = 0x1, unprogrammed default
  1853   300009                     	org	3145737
  1854   300009  C0                 	db	192
  1855                           
  1856                           ;Config register CONFIG6L @ 0x30000A
  1857                           ;	unspecified, using default values
  1858                           ;	Write Protection bit
  1859                           ;	WRT0 = 0x1, unprogrammed default
  1860                           ;	Write Protection bit
  1861                           ;	WRT1 = 0x1, unprogrammed default
  1862                           ;	Write Protection bit
  1863                           ;	WRT2 = 0x1, unprogrammed default
  1864                           ;	Write Protection bit
  1865                           ;	WRT3 = 0x1, unprogrammed default
  1866   30000A                     	org	3145738
  1867   30000A  0F                 	db	15
  1868                           
  1869                           ;Config register CONFIG6H @ 0x30000B
  1870                           ;	unspecified, using default values
  1871                           ;	Configuration Register Write Protection bit
  1872                           ;	WRTC = 0x1, unprogrammed default
  1873                           ;	Boot Block Write Protection bit
  1874                           ;	WRTB = 0x1, unprogrammed default
  1875                           ;	Data EEPROM Write Protection bit
  1876                           ;	WRTD = 0x1, unprogrammed default
  1877   30000B                     	org	3145739
  1878   30000B  E0                 	db	224
  1879                           
  1880                           ;Config register CONFIG7L @ 0x30000C
  1881                           ;	unspecified, using default values
  1882                           ;	Table Read Protection bit
  1883                           ;	EBTR0 = 0x1, unprogrammed default
  1884                           ;	Table Read Protection bit
  1885                           ;	EBTR1 = 0x1, unprogrammed default
  1886                           ;	Table Read Protection bit
  1887                           ;	EBTR2 = 0x1, unprogrammed default
  1888                           ;	Table Read Protection bit
  1889                           ;	EBTR3 = 0x1, unprogrammed default
  1890   30000C                     	org	3145740
  1891   30000C  0F                 	db	15
  1892                           
  1893                           ;Config register CONFIG7H @ 0x30000D
  1894                           ;	unspecified, using default values
  1895                           ;	Boot Block Table Read Protection bit
  1896                           ;	EBTRB = 0x1, unprogrammed default
  1897   30000D                     	org	3145741
  1898   30000D  40                 	db	64
  1899                           tosu	equ	0xFFF
  1900                           tosh	equ	0xFFE
  1901                           tosl	equ	0xFFD
  1902                           stkptr	equ	0xFFC
  1903                           pclatu	equ	0xFFB
  1904                           pclath	equ	0xFFA
  1905                           pcl	equ	0xFF9
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           prodh	equ	0xFF4
  1911                           prodl	equ	0xFF3
  1912                           indf0	equ	0xFEF
  1913                           postinc0	equ	0xFEE
  1914                           postdec0	equ	0xFED
  1915                           preinc0	equ	0xFEC
  1916                           plusw0	equ	0xFEB
  1917                           fsr0h	equ	0xFEA
  1918                           fsr0l	equ	0xFE9
  1919                           wreg	equ	0xFE8
  1920                           indf1	equ	0xFE7
  1921                           postinc1	equ	0xFE6
  1922                           postdec1	equ	0xFE5
  1923                           preinc1	equ	0xFE4
  1924                           plusw1	equ	0xFE3
  1925                           fsr1h	equ	0xFE2
  1926                           fsr1l	equ	0xFE1
  1927                           bsr	equ	0xFE0
  1928                           indf2	equ	0xFDF
  1929                           postinc2	equ	0xFDE
  1930                           postdec2	equ	0xFDD
  1931                           preinc2	equ	0xFDC
  1932                           plusw2	equ	0xFDB
  1933                           fsr2h	equ	0xFDA
  1934                           fsr2l	equ	0xFD9
  1935                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Var@a	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), STR_2(CODE[2]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     812
                                             12 COMRAM     2     2      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       6     4      2     452
                                              6 COMRAM     6     4      2
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                              3 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      E      10       1       17.0%
BITBIGSFRhlh        2A      0       0      23        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhll       14      0       0      22        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      25        0.0%
BITBIGSFRlh          1      0       0      26        0.0%
BITBIGSFRhllh        1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      29        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 12 12:02:11 2023

                     u40 0CA8               EnviaDato@a 0005            ??_LeerTeclado 0002  
          _InicializaLCD 0ABA                      l931 0BDC                      l933 0BEC  
                    l941 0C12                      l935 0BFE                      l937 0C08  
                    l953 0C66                      l983 0ACC                      l993 0AEA  
                    _GIE 007F97                      _RB4 007C0C                      _RB5 007C0D  
                    _RB6 007C0E                      _RB7 007C0F                      u510 0B8A  
                    u530 0BBC                      u540 0BD6                      _ISR 0008  
                    u517 0B80                      u607 0BEE                      u617 0BF6  
                    u537 0BB2                      u627 0C00                      u637 0C0A  
                    u557 0A1E                      u647 0CF2                      u567 0A30  
                    u577 0A4A                      u587 0A94                      u597 0BE2  
                    wreg 000FE8                     ?_ISR 0001                     l1003 0B08  
                   l1023 0B40                     l1111 08AC                     l1105 089E  
                   l1131 08DA                     l1125 08CC                     l1151 0908  
                   l1119 08BE                     l1311 0AA0                     l1145 08FA  
                   l1137 08E8                     l1073 0854                     l1057 082C  
                   l1163 0924                     l1067 0846                     l1157 0916  
                   l1093 0882                     l1085 0870                     l1079 0862  
                   l1271 0B5E                     l1099 0890                     STR_1 0801  
                   STR_2 0820                     STR_3 080D                     STR_4 0810  
                   STR_5 0813                     STR_6 0816                     STR_7 0819  
                   STR_8 081C                     STR_9 081E                     _LATB 000F8A  
                   _LATD 000F8C                     _LATE 000F8D                     _RBIE 007F93  
                   _RBIF 007F90                     _RBPU 007F8F                     _TMR0 000FD6  
         ??_EscribeLCD_c 0006                     _main 09FC                     fsr0h 000FEA  
                   indf0 000FEF                     fsr0l 000FE9                     btemp 0011  
                   start 000E             ___param_bank 000000                    ??_ISR 0001  
         ?_InicializaLCD 0001                    ?_main 0001                    STR_10 0820  
                  STR_11 0822                    STR_12 0824                    STR_13 080C  
                  STR_14 080F                    STR_15 0812                    STR_16 0815  
                  STR_17 0818                    STR_18 081B            EscribeLCD_c@a 0006  
                  _LATD1 007C61                    _LATE0 007C68                    _LATE1 007C69  
                  i2l151 096A                    i2l143 0946                    i2l161 0996  
                  i2l153 0972                    i2l145 094E                    i2l171 09C2  
                  i2l163 099E                    i2l155 097A                    i2l147 0956  
                  i2l167 09B2                    i2l159 098E                    i2l168 09CA  
                  i2l169 09BA                    _PORTB 000F81                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96                    _Tecla 000F  
    __end_of_LeerTeclado 0928                    tablat 000FF5              _HabilitaLCD 0CEE  
                  ttemp5 0012                    ttemp6 0015                    ttemp7 0019  
                  status 000FD8                    wtemp8 0012         __end_of_BorraLCD 0CEE  
        __initialization 0C74             __end_of_main 0ABA                   ??_main 000D  
   __end_of_ConfiguraLCD 0CAE            __activetblptr 000002                   _ADCON1 000FC1  
         DireccionaLCD@a 0006                   i2l1241 09A6                   i2l1217 095E  
                 i2l1229 0982                   i2l1253 09CE                   i2l1257 09E0  
                 _TMR0IF 007F92    __end_of_DireccionaLCD 0CDA               _RetardoLCD 0BD8  
        ??_InicializaLCD 0006                   isa$std 000001     __end_of_EscribeLCD_c 0CC4  
            _LeerTeclado 0828             __pdataCOMRAM 0010             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0C88            ___rparam_used 000001  
         __pcstackCOMRAM 0001        __end_of_EnviaDato 0C74                ?_BorraLCD 0001  
         _MensajeLCD_Var 0B56          MensajeLCD_Var@a 0007          MensajeLCD_Var@i 000B  
            ?_RetardoLCD 0001              RetardoLCD@a 0003   __end_of_MensajeLCD_Var 0BD8  
                i2u50_45 09F8                  i2u49_40 09F6                  i2u65_47 09D4  
             ??_BorraLCD 0006             ?_HabilitaLCD 0001             _ConfiguraLCD 0C96  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0C74                  __ramtop 0800                  __ptext0 09FC  
                __ptext1 0B56                  __ptext2 0CAE                  __ptext3 0828  
                __ptext4 0ABA                  __ptext5 0CDA                  __ptext6 0CC4  
                __ptext7 0C2E                  __ptext8 0BD8                  __ptext9 0CEE  
        ?_MensajeLCD_Var 0007           __pintcode_body 0928     end_of_initialization 0C88  
          __Lmediumconst 0000                  int_func 0928             _EscribeLCD_c 0CAE  
           ?_LeerTeclado 0001            __pidataCOMRAM 0CFC    __end_of_InicializaLCD 0B56  
              _EnviaDato 0C2E      start_initialization 0C74              __end_of_ISR 09FC  
           ??_RetardoLCD 0002               ?_EnviaDato 0001              __pbssCOMRAM 000F  
     __end_of_RetardoLCD 0C2E            _DireccionaLCD 0CC4                __pintcode 0008  
       ??_MensajeLCD_Var 0009              __smallconst 0800           ?_DireccionaLCD 0001  
            ??_EnviaDato 0004                 _BorraLCD 0CDA                 __Hrparam 0000  
               __Lrparam 0000            ConfiguraLCD@a 0002                 __ptext10 0C96  
        ??_DireccionaLCD 0006                 _interfaz 0010                 isa$xinst 000000  
               int$flags 0011                 intlevel2 0000            ??_HabilitaLCD 0002  
          ?_ConfiguraLCD 0001           ??_ConfiguraLCD 0002            ?_EscribeLCD_c 0001  
    __end_of_HabilitaLCD 0CFC  
