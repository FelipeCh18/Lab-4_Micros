

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 19 14:24:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Version 2.40
    54                           ; Generated 04/07/2022 GMT
    55                           ; 
    56                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     
    89                           	psect	idataCOMRAM
    90   001BEE                     __pidataCOMRAM:
    91                           	callstack 0
    92                           
    93                           ;initializer for _Numero_2_Char
    94   001BEE  20                 	db	32
    95                           
    96                           ;initializer for _Numero_1_Char
    97   001BEF  20                 	db	32
    98                           
    99                           ;initializer for _Operador
   100   001BF0  20                 	db	32
   101                           
   102                           ;initializer for _interfaz
   103   001BF1  08                 	db	8
   104                           
   105                           ;initializer for _heart
   106   001BF2  00                 	db	0
   107   001BF3  1B                 	db	27
   108   001BF4  1F                 	db	31
   109   001BF5  1F                 	db	31
   110   001BF6  0E                 	db	14
   111   001BF7  04                 	db	4
   112   001BF8  00                 	db	0
   113   001BF9  00                 	db	0
   114                           
   115                           	psect	idataBANK0
   116   001BFA                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _persona
   120   001BFA  0E                 	db	14
   121   001BFB  0E                 	db	14
   122   001BFC  04                 	db	4
   123   001BFD  1F                 	db	31
   124   001BFE  04                 	db	4
   125   001BFF  04                 	db	4
   126   001C00  0A                 	db	10
   127   001C01  11                 	db	17
   128   000000                     _LATC	set	3979
   129   000000                     _TRISC	set	3988
   130   000000                     _LATC7	set	31839
   131   000000                     _LATE2	set	31850
   132   000000                     _RB7	set	31759
   133   000000                     _RB6	set	31758
   134   000000                     _RB5	set	31757
   135   000000                     _PD	set	32386
   136   000000                     _RI	set	32388
   137   000000                     _TMR0ON	set	32431
   138   000000                     _GIE	set	32663
   139   000000                     _TMR0IE	set	32661
   140   000000                     _LATE1	set	31849
   141   000000                     _LATB	set	3978
   142   000000                     _LATD	set	3980
   143   000000                     _RB4	set	31756
   144   000000                     _TRISB	set	3987
   145   000000                     _TRISD	set	3989
   146   000000                     _ADCON1	set	4033
   147   000000                     _LATE0	set	31848
   148   000000                     _OSCCON	set	4051
   149   000000                     _T0CON	set	4053
   150   000000                     _TO	set	32387
   151   000000                     _RBPU	set	32655
   152   000000                     _TRISE	set	3990
   153   000000                     _TMR0IF	set	32658
   154   000000                     _TMR0	set	4054
   155                           
   156                           	psect	smallconst
   157   000800                     __psmallconst:
   158                           	callstack 0
   159   000800  00                 	db	0
   160   000801                     STR_8:
   161   000801  4D                 	db	77	;'M'
   162   000802  6F                 	db	111	;'o'
   163   000803  64                 	db	100	;'d'
   164   000804  6F                 	db	111	;'o'
   165   000805  20                 	db	32
   166   000806  46                 	db	70	;'F'
   167   000807  61                 	db	97	;'a'
   168   000808  63                 	db	99	;'c'
   169   000809  74                 	db	116	;'t'
   170   00080A  6F                 	db	111	;'o'
   171   00080B  72                 	db	114	;'r'
   172   00080C  69                 	db	105	;'i'
   173   00080D  61                 	db	97	;'a'
   174   00080E  6C                 	db	108	;'l'
   175   00080F  00                 	db	0
   176   000810                     STR_4:
   177   000810  4D                 	db	77	;'M'
   178   000811  6F                 	db	111	;'o'
   179   000812  64                 	db	100	;'d'
   180   000813  6F                 	db	111	;'o'
   181   000814  20                 	db	32
   182   000815  50                 	db	80	;'P'
   183   000816  6F                 	db	111	;'o'
   184   000817  74                 	db	116	;'t'
   185   000818  65                 	db	101	;'e'
   186   000819  6E                 	db	110	;'n'
   187   00081A  63                 	db	99	;'c'
   188   00081B  69                 	db	105	;'i'
   189   00081C  61                 	db	97	;'a'
   190   00081D  00                 	db	0
   191   00081E                     STR_14:
   192   00081E  49                 	db	73	;'I'
   193   00081F  6E                 	db	110	;'n'
   194   000820  64                 	db	100	;'d'
   195   000821  65                 	db	101	;'e'
   196   000822  74                 	db	116	;'t'
   197   000823  65                 	db	101	;'e'
   198   000824  72                 	db	114	;'r'
   199   000825  6D                 	db	109	;'m'
   200   000826  69                 	db	105	;'i'
   201   000827  6E                 	db	110	;'n'
   202   000828  61                 	db	97	;'a'
   203   000829  64                 	db	100	;'d'
   204   00082A  6F                 	db	111	;'o'
   205   00082B  00                 	db	0
   206   00082C                     STR_12:
   207   00082C  4C                 	db	76	;'L'
   208   00082D  56                 	db	86	;'V'
   209   00082E  50                 	db	80	;'P'
   210   00082F  20                 	db	32
   211   000830  41                 	db	65	;'A'
   212   000831  63                 	db	99	;'c'
   213   000832  74                 	db	116	;'t'
   214   000833  69                 	db	105	;'i'
   215   000834  76                 	db	118	;'v'
   216   000835  61                 	db	97	;'a'
   217   000836  64                 	db	100	;'d'
   218   000837  6F                 	db	111	;'o'
   219   000838  00                 	db	0
   220   000839                     STR_10:
   221   000839  4D                 	db	77	;'M'
   222   00083A  6F                 	db	111	;'o'
   223   00083B  64                 	db	100	;'d'
   224   00083C  6F                 	db	111	;'o'
   225   00083D  20                 	db	32
   226   00083E  52                 	db	82	;'R'
   227   00083F  65                 	db	101	;'e'
   228   000840  73                 	db	115	;'s'
   229   000841  74                 	db	116	;'t'
   230   000842  61                 	db	97	;'a'
   231   000843  00                 	db	0
   232   000844                     STR_3:
   233   000844  42                 	db	66	;'B'
   234   000845  69                 	db	105	;'i'
   235   000846  65                 	db	101	;'e'
   236   000847  6E                 	db	110	;'n'
   237   000848  76                 	db	118	;'v'
   238   000849  65                 	db	101	;'e'
   239   00084A  6E                 	db	110	;'n'
   240   00084B  69                 	db	105	;'i'
   241   00084C  64                 	db	100	;'d'
   242   00084D  6F                 	db	111	;'o'
   243   00084E  00                 	db	0
   244   00084F                     STR_6:
   245   00084F  4D                 	db	77	;'M'
   246   000850  6F                 	db	111	;'o'
   247   000851  64                 	db	100	;'d'
   248   000852  6F                 	db	111	;'o'
   249   000853  20                 	db	32
   250   000854  53                 	db	83	;'S'
   251   000855  75                 	db	117	;'u'
   252   000856  6D                 	db	109	;'m'
   253   000857  61                 	db	97	;'a'
   254   000858  00                 	db	0
   255   000859                     STR_13:
   256   000859  49                 	db	73	;'I'
   257   00085A  6E                 	db	110	;'n'
   258   00085B  66                 	db	102	;'f'
   259   00085C  69                 	db	105	;'i'
   260   00085D  6E                 	db	110	;'n'
   261   00085E  69                 	db	105	;'i'
   262   00085F  74                 	db	116	;'t'
   263   000860  6F                 	db	111	;'o'
   264   000861  00                 	db	0
   265   000862                     STR_1:
   266   000862  45                 	db	69	;'E'
   267   000863  6E                 	db	110	;'n'
   268   000864  65                 	db	101	;'e'
   269   000865  72                 	db	114	;'r'
   270   000866  67                 	db	103	;'g'
   271   000867  69                 	db	105	;'i'
   272   000868  61                 	db	97	;'a'
   273   000869  00                 	db	0
   274   00086A                     STR_2:
   275   00086A  4D                 	db	77	;'M'
   276   00086B  43                 	db	67	;'C'
   277   00086C  4C                 	db	76	;'L'
   278   00086D  52                 	db	82	;'R'
   279   00086E  00                 	db	0
   280   00086F  00                 	db	0	; dummy byte at the end
   281   000000                     
   282                           ; #config settings
   283                           
   284                           	psect	cinit
   285   00173A                     __pcinit:
   286                           	callstack 0
   287   00173A                     start_initialization:
   288                           	callstack 0
   289   00173A                     __initialization:
   290                           	callstack 0
   291                           
   292                           ; Initialize objects allocated to BANK0 (8 bytes)
   293                           ; load TBLPTR registers with __pidataBANK0
   294   00173A  0EFA               	movlw	low __pidataBANK0
   295   00173C  6EF6               	movwf	tblptrl,c
   296   00173E  0E1B               	movlw	high __pidataBANK0
   297   001740  6EF7               	movwf	tblptrh,c
   298   001742  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   299   001744  6EF8               	movwf	tblptru,c
   300   001746  EE00  F06D         	lfsr	0,__pdataBANK0
   301   00174A  EE10 F008          	lfsr	1,8
   302   00174E                     copy_data0:
   303   00174E  0009               	tblrd		*+
   304   001750  CFF5 FFEE          	movff	tablat,postinc0
   305   001754  50E5               	movf	postdec1,w,c
   306   001756  50E1               	movf	fsr1l,w,c
   307   001758  E1FA               	bnz	copy_data0
   308                           
   309                           ; Initialize objects allocated to COMRAM (12 bytes)
   310                           ; load TBLPTR registers with __pidataCOMRAM
   311   00175A  0EEE               	movlw	low __pidataCOMRAM
   312   00175C  6EF6               	movwf	tblptrl,c
   313   00175E  0E1B               	movlw	high __pidataCOMRAM
   314   001760  6EF7               	movwf	tblptrh,c
   315   001762  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   316   001764  6EF8               	movwf	tblptru,c
   317   001766  EE00  F046         	lfsr	0,__pdataCOMRAM
   318   00176A  EE10 F00C          	lfsr	1,12
   319   00176E                     copy_data1:
   320   00176E  0009               	tblrd		*+
   321   001770  CFF5 FFEE          	movff	tablat,postinc0
   322   001774  50E5               	movf	postdec1,w,c
   323   001776  50E1               	movf	fsr1l,w,c
   324   001778  E1FA               	bnz	copy_data1
   325                           
   326                           ; Clear objects allocated to COMRAM (32 bytes)
   327   00177A  EE00  F026         	lfsr	0,__pbssCOMRAM
   328   00177E  0E20               	movlw	32
   329   001780                     clear_0:
   330   001780  6AEE               	clrf	postinc0,c
   331   001782  06E8               	decf	wreg,f,c
   332   001784  E1FD               	bnz	clear_0
   333   001786                     end_of_initialization:
   334                           	callstack 0
   335   001786                     __end_of__initialization:
   336                           	callstack 0
   337   001786  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   338   001788  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   339   00178A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   340   00178C  6EF8               	movwf	tblptru,c
   341   00178E  0100               	movlb	0
   342   001790  EF38  F004         	goto	_main	;jump to C main() function
   343                           
   344                           	psect	bssCOMRAM
   345   000026                     __pbssCOMRAM:
   346                           	callstack 0
   347   000026                     _Resultado:
   348                           	callstack 0
   349   000026                     	ds	4
   350   00002A                     _Parte_Decimal:
   351                           	callstack 0
   352   00002A                     	ds	4
   353   00002E                     _b:
   354                           	callstack 0
   355   00002E                     	ds	2
   356   000030                     _a:
   357                           	callstack 0
   358   000030                     	ds	2
   359   000032                     _Verificador:
   360                           	callstack 0
   361   000032                     	ds	2
   362   000034                     _Contador:
   363                           	callstack 0
   364   000034                     	ds	2
   365   000036                     _Color:
   366                           	callstack 0
   367   000036                     	ds	2
   368   000038                     _i:
   369                           	callstack 0
   370   000038                     	ds	2
   371   00003A                     _Numero_2:
   372                           	callstack 0
   373   00003A                     	ds	2
   374   00003C                     _Numero_1:
   375                           	callstack 0
   376   00003C                     	ds	2
   377   00003E                     _Negativo:
   378                           	callstack 0
   379   00003E                     	ds	1
   380   00003F                     _Factorial:
   381                           	callstack 0
   382   00003F                     	ds	1
   383   000040                     _Potencia:
   384                           	callstack 0
   385   000040                     	ds	1
   386   000041                     _Boton:
   387                           	callstack 0
   388   000041                     	ds	1
   389   000042                     _m:
   390                           	callstack 0
   391   000042                     	ds	4
   392                           
   393                           	psect	dataCOMRAM
   394   000046                     __pdataCOMRAM:
   395                           	callstack 0
   396   000046                     _Numero_2_Char:
   397                           	callstack 0
   398   000046                     	ds	1
   399   000047                     _Numero_1_Char:
   400                           	callstack 0
   401   000047                     	ds	1
   402   000048                     _Operador:
   403                           	callstack 0
   404   000048                     	ds	1
   405   000049                     _interfaz:
   406                           	callstack 0
   407   000049                     	ds	1
   408   00004A                     _heart:
   409                           	callstack 0
   410   00004A                     	ds	8
   411                           
   412                           	psect	dataBANK0
   413   00006D                     __pdataBANK0:
   414                           	callstack 0
   415   00006D                     _persona:
   416                           	callstack 0
   417   00006D                     	ds	8
   418                           
   419                           	psect	cstackBANK0
   420   000060                     __pcstackBANK0:
   421                           	callstack 0
   422   000060                     Imprimir_Resultado@flag:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x0
   426   000060                     	ds	1
   427   000061                     Imprimir_Resultado@k:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x1
   431   000061                     	ds	2
   432   000063                     Imprimir_Resultado@i:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x3
   436   000063                     	ds	2
   437   000065                     Imprimir_Resultado@j:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x5
   441   000065                     	ds	2
   442   000067                     Imprimir_Resultado@Potencia:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x7
   446   000067                     	ds	4
   447   00006B                     _main$167:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0xB
   451   00006B                     	ds	1
   452   00006C                     _main$168:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0xC
   456   00006C                     	ds	1
   457                           
   458                           	psect	cstackCOMRAM
   459   000001                     __pcstackCOMRAM:
   460                           	callstack 0
   461   000001                     ??i2_RetardoLCD:
   462   000001                     ?i2_strlen:
   463                           	callstack 0
   464   000001                     i2strlen@s:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x0
   468   000001                     	ds	1
   469   000002                     i2RetardoLCD@a:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x1
   473   000002                     	ds	1
   474   000003                     ??i2_EnviaDato:
   475   000003                     i2strlen@cp:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x2
   479   000003                     	ds	1
   480   000004                     i2EnviaDato@a:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x3
   484   000004                     	ds	1
   485   000005                     i2EscribeLCD_c@a:
   486                           	callstack 0
   487   000005                     i2DireccionaLCD@a:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x4
   491   000005                     	ds	1
   492   000006                     i2MensajeLCD_Var@a:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x5
   496   000006                     	ds	1
   497   000007                     ??i2_MensajeLCD_Var:
   498                           
   499                           ; 1 bytes @ 0x6
   500   000007                     	ds	1
   501   000008                     i2MensajeLCD_Var@i:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x7
   505   000008                     	ds	2
   506   00000A                     ??_ISR:
   507                           
   508                           ; 1 bytes @ 0x9
   509   00000A                     	ds	4
   510   00000E                     ??_RetardoLCD:
   511   00000E                     ??_ColorRGB:
   512   00000E                     ?_strlen:
   513                           	callstack 0
   514   00000E                     ?___wmul:
   515                           	callstack 0
   516   00000E                     ?___lwmod:
   517                           	callstack 0
   518   00000E                     ?___lmul:
   519                           	callstack 0
   520   00000E                     ?___aldiv:
   521                           	callstack 0
   522   00000E                     ?___almod:
   523                           	callstack 0
   524   00000E                     ConfiguraLCD@a:
   525                           	callstack 0
   526   00000E                     strlen@s:
   527                           	callstack 0
   528   00000E                     ___wmul@multiplier:
   529                           	callstack 0
   530   00000E                     ___lwmod@dividend:
   531                           	callstack 0
   532   00000E                     ___lmul@multiplier:
   533                           	callstack 0
   534   00000E                     ___aldiv@dividend:
   535                           	callstack 0
   536   00000E                     ___almod@dividend:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0xD
   540   00000E                     	ds	1
   541   00000F                     RetardoLCD@a:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0xE
   545   00000F                     	ds	1
   546   000010                     ??_EnviaDato:
   547   000010                     ??_ComandoLCD:
   548   000010                     strlen@cp:
   549                           	callstack 0
   550   000010                     ___wmul@multiplicand:
   551                           	callstack 0
   552   000010                     ___lwmod@divisor:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0xF
   556   000010                     	ds	1
   557   000011                     EnviaDato@a:
   558                           	callstack 0
   559   000011                     ComandoLCD@a:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x10
   563   000011                     	ds	1
   564   000012                     EscribeLCD_c@a:
   565                           	callstack 0
   566   000012                     DireccionaLCD@a:
   567                           	callstack 0
   568   000012                     ___lwmod@counter:
   569                           	callstack 0
   570   000012                     ___wmul@product:
   571                           	callstack 0
   572   000012                     ___lmul@multiplicand:
   573                           	callstack 0
   574   000012                     ___aldiv@divisor:
   575                           	callstack 0
   576   000012                     ___almod@divisor:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x11
   580   000012                     	ds	1
   581   000013                     MensajeLCD_Var@a:
   582                           	callstack 0
   583   000013                     NuevoCaracter@mapeo:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x12
   587   000013                     	ds	1
   588   000014                     ??_MensajeLCD_Var:
   589   000014                     ?___lwdiv:
   590                           	callstack 0
   591   000014                     NuevoCaracter@ubicacion:
   592                           	callstack 0
   593   000014                     ___lwdiv@dividend:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x13
   597   000014                     	ds	1
   598   000015                     MensajeLCD_Var@i:
   599                           	callstack 0
   600   000015                     NuevoCaracter@i:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x14
   604   000015                     	ds	1
   605   000016                     ___aldiv@counter:
   606                           	callstack 0
   607   000016                     ___almod@counter:
   608                           	callstack 0
   609   000016                     ___lwdiv@divisor:
   610                           	callstack 0
   611   000016                     ___lmul@product:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x15
   615   000016                     	ds	1
   616   000017                     ___aldiv@sign:
   617                           	callstack 0
   618   000017                     ___almod@sign:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x16
   622   000017                     	ds	1
   623   000018                     ___lwdiv@counter:
   624                           	callstack 0
   625   000018                     ___aldiv@quotient:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x17
   629   000018                     	ds	1
   630   000019                     ___lwdiv@quotient:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x18
   634   000019                     	ds	1
   635   00001A                     ?_factorial_function:
   636                           	callstack 0
   637   00001A                     factorial_function@a:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x19
   641   00001A                     	ds	2
   642   00001C                     Imprimir_Resultado@Resultado:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x1B
   646   00001C                     	ds	2
   647   00001E                     factorial_function@fact:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0x1D
   651   00001E                     	ds	2
   652   000020                     ??_Imprimir_Resultado:
   653                           
   654                           ; 1 bytes @ 0x1F
   655   000020                     	ds	4
   656   000024                     ??_main:
   657                           
   658                           ; 1 bytes @ 0x23
   659   000024                     	ds	2
   660                           
   661 ;;
   662 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   663 ;;
   664 ;; *************** function _main *****************
   665 ;; Defined at:
   666 ;;		line 38 in file "Lab4.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   680 ;;      Params:         0       0       0       0       0       0       0       0       0
   681 ;;      Locals:         0       2       0       0       0       0       0       0       0
   682 ;;      Temps:          2       0       0       0       0       0       0       0       0
   683 ;;      Totals:         2       2       0       0       0       0       0       0       0
   684 ;;Total ram usage:        4 bytes
   685 ;; Hardware stack levels required when called: 10
   686 ;; This function calls:
   687 ;;		_BorraLCD
   688 ;;		_ColorRGB
   689 ;;		_ConfiguraLCD
   690 ;;		_DireccionaLCD
   691 ;;		_EscribeLCD_c
   692 ;;		_Imprimir_Resultado
   693 ;;		_InicializaLCD
   694 ;;		_LeerTeclado
   695 ;;		_MensajeLCD_Var
   696 ;;		_NuevoCaracter
   697 ;;		___lmul
   698 ;;		___lwdiv
   699 ;;		___wmul
   700 ;;		_factorial_function
   701 ;; This function is called by:
   702 ;;		Startup code after reset
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text0
   707   000870                     __ptext0:
   708                           	callstack 0
   709   000870                     _main:
   710                           	callstack 21
   711                           
   712                           ;Lab4.c: 39: ADCON1=15;
   713                           
   714                           ;incstack = 0
   715   000870  0E0F               	movlw	15
   716   000872  6EC1               	movwf	193,c	;volatile
   717                           
   718                           ;Lab4.c: 40: TRISD=0;
   719   000874  0E00               	movlw	0
   720   000876  6E95               	movwf	149,c	;volatile
   721                           
   722                           ;Lab4.c: 41: TRISB=0b11110000;
   723   000878  0EF0               	movlw	240
   724   00087A  6E93               	movwf	147,c	;volatile
   725                           
   726                           ;Lab4.c: 42: TRISE=0;
   727   00087C  0E00               	movlw	0
   728   00087E  6E96               	movwf	150,c	;volatile
   729                           
   730                           ;Lab4.c: 43: TRISC=0;
   731   000880  0E00               	movlw	0
   732   000882  6E94               	movwf	148,c	;volatile
   733                           
   734                           ;Lab4.c: 44: RBPU=0;
   735   000884  9EF1               	bcf	4081,7,c	;volatile
   736                           
   737                           ;Lab4.c: 45: ConfiguraLCD(4);
   738   000886  0E04               	movlw	4
   739   000888  EC9D  F00D         	call	_ConfiguraLCD
   740                           
   741                           ;Lab4.c: 46: InicializaLCD();
   742   00088C  EC8F  F00A         	call	_InicializaLCD	;wreg free
   743                           
   744                           ;Lab4.c: 48: T0CON=0b10000010;
   745   000890  0E82               	movlw	130
   746   000892  6ED5               	movwf	213,c	;volatile
   747                           
   748                           ;Lab4.c: 49: TMR0IF=0;
   749   000894  94F2               	bcf	4082,2,c	;volatile
   750                           
   751                           ;Lab4.c: 50: TMR0=49911;
   752   000896  0EC2               	movlw	194
   753   000898  6ED7               	movwf	215,c	;volatile
   754   00089A  0EF7               	movlw	247
   755   00089C  6ED6               	movwf	214,c	;volatile
   756                           
   757                           ;Lab4.c: 51: TMR0IE=1;
   758   00089E  8AF2               	bsf	4082,5,c	;volatile
   759                           
   760                           ;Lab4.c: 52: GIE=1;
   761   0008A0  8EF2               	bsf	4082,7,c	;volatile
   762                           
   763                           ;Lab4.c: 53: TMR0ON=1;
   764   0008A2  8ED5               	bsf	4053,7,c	;volatile
   765                           
   766                           ;Lab4.c: 56: OSCCON = 0b11000100;
   767   0008A4  0EC4               	movlw	196
   768   0008A6  6ED3               	movwf	211,c	;volatile
   769                           
   770                           ;Lab4.c: 58: BorraLCD();
   771   0008A8  ECD5  F00D         	call	_BorraLCD	;wreg free
   772                           
   773                           ;Lab4.c: 59: if(TO == 1 & RI == 1){
   774   0008AC  0E01               	movlw	1
   775   0008AE  A6D0               	btfss	4048,3,c	;volatile
   776   0008B0  0E00               	movlw	0
   777   0008B2  A8D0               	btfss	4048,4,c	;volatile
   778   0008B4  0E00               	movlw	0
   779   0008B6  A0E8               	btfss	wreg,0,c
   780   0008B8  D008               	goto	l3831
   781                           
   782                           ;Lab4.c: 60: BorraLCD();
   783   0008BA  ECD5  F00D         	call	_BorraLCD	;wreg free
   784                           
   785                           ;Lab4.c: 61: RI = 0;
   786   0008BE  98D0               	bcf	4048,4,c	;volatile
   787                           
   788                           ;Lab4.c: 62: MensajeLCD_Var("Energia");
   789   0008C0  0E62               	movlw	low STR_1
   790   0008C2  6E13               	movwf	MensajeLCD_Var@a^0,c
   791   0008C4  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
   792                           
   793                           ;Lab4.c: 63: }else{
   794   0008C8  D014               	goto	l3837
   795   0008CA                     l3831:
   796                           
   797                           ;Lab4.c: 64: if(TO == 1 | PD == 0 ){
   798   0008CA  A6D0               	btfss	4048,3,c	;volatile
   799   0008CC  D002               	goto	u4340
   800   0008CE  0E01               	movlw	1
   801   0008D0  D001               	goto	u4342
   802   0008D2                     u4340:
   803   0008D2  0E00               	movlw	0
   804   0008D4                     u4342:
   805   0008D4  6E24               	movwf	??_main^0,c
   806   0008D6  B4D0               	btfsc	4048,2,c	;volatile
   807   0008D8  D002               	goto	u4350
   808   0008DA  0E01               	movlw	1
   809   0008DC  D001               	goto	u4352
   810   0008DE                     u4350:
   811   0008DE  0E00               	movlw	0
   812   0008E0                     u4352:
   813   0008E0  1024               	iorwf	??_main^0,w,c
   814   0008E2  A0E8               	btfss	wreg,0,c
   815   0008E4  D006               	goto	l3837
   816                           
   817                           ;Lab4.c: 65: BorraLCD();
   818   0008E6  ECD5  F00D         	call	_BorraLCD	;wreg free
   819                           
   820                           ;Lab4.c: 66: MensajeLCD_Var("MCLR");
   821   0008EA  0E6A               	movlw	low STR_2
   822   0008EC  6E13               	movwf	MensajeLCD_Var@a^0,c
   823   0008EE  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
   824   0008F2                     l3837:
   825                           
   826                           ;Lab4.c: 67: };Lab4.c: 68: };Lab4.c: 69: _delay((unsigned long)((1000)*(1000000/4000.0))
      +                          );
   827   0008F2  0E02               	movlw	2
   828   0008F4  6E25               	movwf	(??_main+1)^0,c
   829   0008F6  0E45               	movlw	69
   830   0008F8  6E24               	movwf	??_main^0,c
   831   0008FA  0EAA               	movlw	170
   832   0008FC                     u5197:
   833   0008FC  2EE8               	decfsz	wreg,f,c
   834   0008FE  D7FE               	bra	u5197
   835   000900  2E24               	decfsz	??_main^0,f,c
   836   000902  D7FC               	bra	u5197
   837   000904  2E25               	decfsz	(??_main+1)^0,f,c
   838   000906  D7FA               	bra	u5197
   839                           
   840                           ;Lab4.c: 70: BorraLCD();
   841   000908  ECD5  F00D         	call	_BorraLCD	;wreg free
   842                           
   843                           ;Lab4.c: 71: NuevoCaracter(0,heart);
   844   00090C  0E4A               	movlw	low _heart
   845   00090E  6E13               	movwf	NuevoCaracter@mapeo^0,c
   846   000910  0E00               	movlw	0
   847   000912  EC2D  F00D         	call	_NuevoCaracter
   848                           
   849                           ;Lab4.c: 72: DireccionaLCD(0x80);
   850   000916  0E80               	movlw	128
   851   000918  ECB4  F00D         	call	_DireccionaLCD
   852                           
   853                           ;Lab4.c: 73: EscribeLCD_c(0);
   854   00091C  0E00               	movlw	0
   855   00091E  ECA9  F00D         	call	_EscribeLCD_c
   856                           
   857                           ;Lab4.c: 74: _delay((unsigned long)((500)*(1000000/4000.0)));
   858   000922  0EA3               	movlw	163
   859   000924  6E24               	movwf	??_main^0,c
   860   000926  0E55               	movlw	85
   861   000928                     u5207:
   862   000928  2EE8               	decfsz	wreg,f,c
   863   00092A  D7FE               	bra	u5207
   864   00092C  2E24               	decfsz	??_main^0,f,c
   865   00092E  D7FC               	bra	u5207
   866   000930  F000               	nop	
   867                           
   868                           ;Lab4.c: 75: DireccionaLCD(0x82);
   869   000932  0E82               	movlw	130
   870   000934  ECB4  F00D         	call	_DireccionaLCD
   871                           
   872                           ;Lab4.c: 76: MensajeLCD_Var("Bienvenido");
   873   000938  0E44               	movlw	low STR_3
   874   00093A  6E13               	movwf	MensajeLCD_Var@a^0,c
   875   00093C  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
   876                           
   877                           ;Lab4.c: 77: NuevoCaracter(4,persona);
   878   000940  0E6D               	movlw	low _persona
   879   000942  6E13               	movwf	NuevoCaracter@mapeo^0,c
   880   000944  0E04               	movlw	4
   881   000946  EC2D  F00D         	call	_NuevoCaracter
   882                           
   883                           ;Lab4.c: 78: DireccionaLCD(0x8E);
   884   00094A  0E8E               	movlw	142
   885   00094C  ECB4  F00D         	call	_DireccionaLCD
   886                           
   887                           ;Lab4.c: 79: EscribeLCD_c(4);
   888   000950  0E04               	movlw	4
   889   000952  ECA9  F00D         	call	_EscribeLCD_c
   890                           
   891                           ;Lab4.c: 80: _delay((unsigned long)((2000)*(1000000/4000.0)));
   892   000956  0E03               	movlw	3
   893   000958  6E25               	movwf	(??_main+1)^0,c
   894   00095A  0E8A               	movlw	138
   895   00095C  6E24               	movwf	??_main^0,c
   896   00095E  0E56               	movlw	86
   897   000960                     u5217:
   898   000960  2EE8               	decfsz	wreg,f,c
   899   000962  D7FE               	bra	u5217
   900   000964  2E24               	decfsz	??_main^0,f,c
   901   000966  D7FC               	bra	u5217
   902   000968  2E25               	decfsz	(??_main+1)^0,f,c
   903   00096A  D7FA               	bra	u5217
   904   00096C                     l3857:
   905                           
   906                           ;Lab4.c: 81: BorraLCD();
   907   00096C  ECD5  F00D         	call	_BorraLCD	;wreg free
   908   000970                     l3859:
   909                           
   910                           ;Lab4.c: 84: Negativo=0;
   911   000970  0E00               	movlw	0
   912   000972  6E3E               	movwf	_Negativo^0,c
   913                           
   914                           ;Lab4.c: 85: LATB=0b00000000;
   915   000974  0E00               	movlw	0
   916   000976  6E8A               	movwf	138,c	;volatile
   917                           
   918                           ;Lab4.c: 86: Verificador = 0;
   919   000978  0E00               	movlw	0
   920   00097A  6E33               	movwf	(_Verificador+1)^0,c
   921   00097C  0E00               	movlw	0
   922   00097E  6E32               	movwf	_Verificador^0,c
   923                           
   924                           ;Lab4.c: 87: Boton = LeerTeclado();
   925   000980  ECD4  F009         	call	_LeerTeclado	;wreg free
   926   000984  6E41               	movwf	_Boton^0,c
   927                           
   928                           ;Lab4.c: 88: ColorRGB();
   929   000986  EC24  F00B         	call	_ColorRGB	;wreg free
   930                           
   931                           ;Lab4.c: 89: if(Boton=='C'){
   932   00098A  0E43               	movlw	67
   933   00098C  1841               	xorwf	_Boton^0,w,c
   934   00098E  A4D8               	btfss	status,2,c
   935   000990  D01B               	goto	l3875
   936                           
   937                           ;Lab4.c: 91: Operador = ' ';
   938   000992  0E20               	movlw	32
   939   000994  6E48               	movwf	_Operador^0,c
   940                           
   941                           ;Lab4.c: 92: Numero_1_Char = ' ';
   942   000996  0E20               	movlw	32
   943   000998  6E47               	movwf	_Numero_1_Char^0,c
   944                           
   945                           ;Lab4.c: 93: Numero_2_Char = ' ';
   946   00099A  0E20               	movlw	32
   947   00099C  6E46               	movwf	_Numero_2_Char^0,c
   948                           
   949                           ;Lab4.c: 94: Numero_1 = 0;
   950   00099E  0E00               	movlw	0
   951   0009A0  6E3D               	movwf	(_Numero_1+1)^0,c
   952   0009A2  0E00               	movlw	0
   953   0009A4  6E3C               	movwf	_Numero_1^0,c
   954                           
   955                           ;Lab4.c: 95: Numero_2 = 0;
   956   0009A6  0E00               	movlw	0
   957   0009A8  6E3B               	movwf	(_Numero_2+1)^0,c
   958   0009AA  0E00               	movlw	0
   959   0009AC  6E3A               	movwf	_Numero_2^0,c
   960                           
   961                           ;Lab4.c: 96: i = 0;
   962   0009AE  0E00               	movlw	0
   963   0009B0  6E39               	movwf	(_i+1)^0,c
   964   0009B2  0E00               	movlw	0
   965   0009B4  6E38               	movwf	_i^0,c
   966                           
   967                           ;Lab4.c: 97: Parte_Decimal = 0;
   968   0009B6  0E00               	movlw	0
   969   0009B8  6E2A               	movwf	_Parte_Decimal^0,c
   970   0009BA  0E00               	movlw	0
   971   0009BC  6E2B               	movwf	(_Parte_Decimal+1)^0,c
   972   0009BE  0E00               	movlw	0
   973   0009C0  6E2C               	movwf	(_Parte_Decimal+2)^0,c
   974   0009C2  0E00               	movlw	0
   975   0009C4  6E2D               	movwf	(_Parte_Decimal+3)^0,c
   976   0009C6  D7D2               	goto	l3857
   977   0009C8                     l3875:
   978   0009C8  0E20               	movlw	32
   979   0009CA  1848               	xorwf	_Operador^0,w,c
   980   0009CC  A4D8               	btfss	status,2,c
   981   0009CE  D03D               	goto	l3911
   982   0009D0  0E2B               	movlw	43
   983   0009D2  1841               	xorwf	_Boton^0,w,c
   984   0009D4  B4D8               	btfsc	status,2,c
   985   0009D6  D004               	goto	u4400
   986   0009D8  0E5E               	movlw	94
   987   0009DA  1841               	xorwf	_Boton^0,w,c
   988   0009DC  A4D8               	btfss	status,2,c
   989   0009DE  D035               	goto	l3911
   990   0009E0                     u4400:
   991   0009E0  0E20               	movlw	32
   992   0009E2  1847               	xorwf	_Numero_1_Char^0,w,c
   993   0009E4  A4D8               	btfss	status,2,c
   994   0009E6  D031               	goto	l3911
   995   0009E8  0E20               	movlw	32
   996   0009EA  1846               	xorwf	_Numero_2_Char^0,w,c
   997   0009EC  A4D8               	btfss	status,2,c
   998   0009EE  D02D               	goto	l3911
   999                           
  1000                           ;Lab4.c: 100: Potencia=~Potencia;
  1001   0009F0  1E40               	comf	_Potencia^0,f,c
  1002                           
  1003                           ;Lab4.c: 101: if(Potencia){
  1004   0009F2  5040               	movf	_Potencia^0,w,c
  1005   0009F4  B4D8               	btfsc	status,2,c
  1006   0009F6  D01A               	goto	l3901
  1007                           
  1008                           ;Lab4.c: 102: DireccionaLCD(0x80);
  1009   0009F8  0E80               	movlw	128
  1010   0009FA  ECB4  F00D         	call	_DireccionaLCD
  1011                           
  1012                           ;Lab4.c: 103: MensajeLCD_Var("Modo Potencia");
  1013   0009FE  0E10               	movlw	low STR_4
  1014   000A00  6E13               	movwf	MensajeLCD_Var@a^0,c
  1015   000A02  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
  1016                           
  1017                           ;Lab4.c: 104: DireccionaLCD(0xC0);
  1018   000A06  0EC0               	movlw	192
  1019   000A08  ECB4  F00D         	call	_DireccionaLCD
  1020                           
  1021                           ;Lab4.c: 105: MensajeLCD_Var("Activado");
  1022   000A0C  0E30               	movlw	low (STR_12+4)
  1023   000A0E  6E13               	movwf	MensajeLCD_Var@a^0,c
  1024   000A10  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
  1025   000A14                     l3895:
  1026                           
  1027                           ;Lab4.c: 106: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1028   000A14  0E02               	movlw	2
  1029   000A16  6E25               	movwf	(??_main+1)^0,c
  1030   000A18  0E45               	movlw	69
  1031   000A1A  6E24               	movwf	??_main^0,c
  1032   000A1C  0EAA               	movlw	170
  1033   000A1E                     u5227:
  1034   000A1E  2EE8               	decfsz	wreg,f,c
  1035   000A20  D7FE               	bra	u5227
  1036   000A22  2E24               	decfsz	??_main^0,f,c
  1037   000A24  D7FC               	bra	u5227
  1038   000A26  2E25               	decfsz	(??_main+1)^0,f,c
  1039   000A28  D7FA               	bra	u5227
  1040   000A2A  D7A0               	goto	l3857
  1041   000A2C                     l3901:
  1042                           
  1043                           ;Lab4.c: 110: DireccionaLCD(0x80);
  1044   000A2C  0E80               	movlw	128
  1045   000A2E  ECB4  F00D         	call	_DireccionaLCD
  1046                           
  1047                           ;Lab4.c: 111: MensajeLCD_Var("Modo Suma");
  1048   000A32  0E4F               	movlw	low STR_6
  1049   000A34  6E13               	movwf	MensajeLCD_Var@a^0,c
  1050   000A36  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
  1051                           
  1052                           ;Lab4.c: 112: DireccionaLCD(0xC0);
  1053   000A3A  0EC0               	movlw	192
  1054   000A3C  ECB4  F00D         	call	_DireccionaLCD
  1055                           
  1056                           ;Lab4.c: 113: MensajeLCD_Var("Activado");
  1057   000A40  0E30               	movlw	low (STR_12+4)
  1058   000A42  6E13               	movwf	MensajeLCD_Var@a^0,c
  1059   000A44  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
  1060   000A48  D7E5               	goto	l3895
  1061   000A4A                     l3911:
  1062   000A4A  0E20               	movlw	32
  1063   000A4C  1848               	xorwf	_Operador^0,w,c
  1064   000A4E  A4D8               	btfss	status,2,c
  1065   000A50  D032               	goto	l3947
  1066   000A52  0E2D               	movlw	45
  1067   000A54  1841               	xorwf	_Boton^0,w,c
  1068   000A56  B4D8               	btfsc	status,2,c
  1069   000A58  D004               	goto	u4460
  1070   000A5A  0E21               	movlw	33
  1071   000A5C  1841               	xorwf	_Boton^0,w,c
  1072   000A5E  A4D8               	btfss	status,2,c
  1073   000A60  D02A               	goto	l3947
  1074   000A62                     u4460:
  1075   000A62  0E20               	movlw	32
  1076   000A64  1847               	xorwf	_Numero_1_Char^0,w,c
  1077   000A66  A4D8               	btfss	status,2,c
  1078   000A68  D026               	goto	l3947
  1079   000A6A  0E20               	movlw	32
  1080   000A6C  1846               	xorwf	_Numero_2_Char^0,w,c
  1081   000A6E  A4D8               	btfss	status,2,c
  1082   000A70  D022               	goto	l3947
  1083                           
  1084                           ;Lab4.c: 119: Factorial=~Factorial;
  1085   000A72  1E3F               	comf	_Factorial^0,f,c
  1086                           
  1087                           ;Lab4.c: 120: if(Factorial){
  1088   000A74  503F               	movf	_Factorial^0,w,c
  1089   000A76  B4D8               	btfsc	status,2,c
  1090   000A78  D00F               	goto	l3937
  1091                           
  1092                           ;Lab4.c: 121: DireccionaLCD(0x80);
  1093   000A7A  0E80               	movlw	128
  1094   000A7C  ECB4  F00D         	call	_DireccionaLCD
  1095                           
  1096                           ;Lab4.c: 122: MensajeLCD_Var("Modo Factorial");
  1097   000A80  0E01               	movlw	low STR_8
  1098   000A82  6E13               	movwf	MensajeLCD_Var@a^0,c
  1099   000A84  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
  1100                           
  1101                           ;Lab4.c: 123: DireccionaLCD(0xC0);
  1102   000A88  0EC0               	movlw	192
  1103   000A8A  ECB4  F00D         	call	_DireccionaLCD
  1104                           
  1105                           ;Lab4.c: 124: MensajeLCD_Var("Activado");
  1106   000A8E  0E30               	movlw	low (STR_12+4)
  1107   000A90  6E13               	movwf	MensajeLCD_Var@a^0,c
  1108   000A92  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
  1109   000A96  D7BE               	goto	l3895
  1110   000A98                     l3937:
  1111                           
  1112                           ;Lab4.c: 129: DireccionaLCD(0x80);
  1113   000A98  0E80               	movlw	128
  1114   000A9A  ECB4  F00D         	call	_DireccionaLCD
  1115                           
  1116                           ;Lab4.c: 130: MensajeLCD_Var("Modo Resta");
  1117   000A9E  0E39               	movlw	low STR_10
  1118   000AA0  6E13               	movwf	MensajeLCD_Var@a^0,c
  1119   000AA2  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
  1120                           
  1121                           ;Lab4.c: 131: DireccionaLCD(0xC0);
  1122   000AA6  0EC0               	movlw	192
  1123   000AA8  ECB4  F00D         	call	_DireccionaLCD
  1124                           
  1125                           ;Lab4.c: 132: MensajeLCD_Var("Activado");
  1126   000AAC  0E30               	movlw	low (STR_12+4)
  1127   000AAE  6E13               	movwf	MensajeLCD_Var@a^0,c
  1128   000AB0  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
  1129   000AB4  D7AF               	goto	l3895
  1130   000AB6                     l3947:
  1131                           
  1132                           ;Lab4.c: 138: if((Numero_1_Char==' '|Numero_2_Char==' '|Operador==' ') & !Factorial){
  1133   000AB6  0E20               	movlw	32
  1134   000AB8  1847               	xorwf	_Numero_1_Char^0,w,c
  1135   000ABA  B4D8               	btfsc	status,2,c
  1136   000ABC  D008               	goto	u4520
  1137   000ABE  0E20               	movlw	32
  1138   000AC0  1846               	xorwf	_Numero_2_Char^0,w,c
  1139   000AC2  B4D8               	btfsc	status,2,c
  1140   000AC4  D004               	goto	u4520
  1141   000AC6  0E20               	movlw	32
  1142   000AC8  1848               	xorwf	_Operador^0,w,c
  1143   000ACA  A4D8               	btfss	status,2,c
  1144   000ACC  D092               	goto	l4023
  1145   000ACE                     u4520:
  1146   000ACE  503F               	movf	_Factorial^0,w,c
  1147   000AD0  A4D8               	btfss	status,2,c
  1148   000AD2  D08F               	goto	l4023
  1149                           
  1150                           ;Lab4.c: 139: if(Operador==' ' & (Boton=='+'|Boton=='-'|Boton=='/'|Boton=='x'|Boton=='^'
      +                          ) & Numero_1_Char != ' ' & Numero_2_Char ==' '){
  1151   000AD4  0E20               	movlw	32
  1152   000AD6  1848               	xorwf	_Operador^0,w,c
  1153   000AD8  A4D8               	btfss	status,2,c
  1154   000ADA  D025               	goto	l3975
  1155   000ADC  0E2B               	movlw	43
  1156   000ADE  1841               	xorwf	_Boton^0,w,c
  1157   000AE0  B4D8               	btfsc	status,2,c
  1158   000AE2  D010               	goto	u4590
  1159   000AE4  0E2D               	movlw	45
  1160   000AE6  1841               	xorwf	_Boton^0,w,c
  1161   000AE8  B4D8               	btfsc	status,2,c
  1162   000AEA  D00C               	goto	u4590
  1163   000AEC  0E2F               	movlw	47
  1164   000AEE  1841               	xorwf	_Boton^0,w,c
  1165   000AF0  B4D8               	btfsc	status,2,c
  1166   000AF2  D008               	goto	u4590
  1167   000AF4  0E78               	movlw	120
  1168   000AF6  1841               	xorwf	_Boton^0,w,c
  1169   000AF8  B4D8               	btfsc	status,2,c
  1170   000AFA  D004               	goto	u4590
  1171   000AFC  0E5E               	movlw	94
  1172   000AFE  1841               	xorwf	_Boton^0,w,c
  1173   000B00  A4D8               	btfss	status,2,c
  1174   000B02  D011               	goto	l3975
  1175   000B04                     u4590:
  1176   000B04  0E20               	movlw	32
  1177   000B06  1847               	xorwf	_Numero_1_Char^0,w,c
  1178   000B08  B4D8               	btfsc	status,2,c
  1179   000B0A  D00D               	goto	l3975
  1180   000B0C  0E20               	movlw	32
  1181   000B0E  1846               	xorwf	_Numero_2_Char^0,w,c
  1182   000B10  A4D8               	btfss	status,2,c
  1183   000B12  D009               	goto	l3975
  1184                           
  1185                           ;Lab4.c: 140: DireccionaLCD(0x81);
  1186   000B14  0E81               	movlw	129
  1187   000B16  ECB4  F00D         	call	_DireccionaLCD
  1188                           
  1189                           ;Lab4.c: 141: EscribeLCD_c(Boton);
  1190   000B1A  5041               	movf	_Boton^0,w,c
  1191   000B1C  ECA9  F00D         	call	_EscribeLCD_c
  1192   000B20                     l3973:
  1193                           
  1194                           ;Lab4.c: 142: Operador = Boton;
  1195   000B20  C041  F048         	movff	_Boton,_Operador
  1196                           
  1197                           ;Lab4.c: 143: }else if(Numero_1_Char == ' ' & (Boton!='+'|Boton!='-'|Boton!='/'|Boton!='
      +                          x'|Boton!='='|Boton!='C'|Boton!='^')){
  1198   000B24  D224               	goto	l4171
  1199   000B26                     l3975:
  1200   000B26  0E20               	movlw	32
  1201   000B28  1847               	xorwf	_Numero_1_Char^0,w,c
  1202   000B2A  A4D8               	btfss	status,2,c
  1203   000B2C  D02B               	goto	l3997
  1204   000B2E  0E2B               	movlw	43
  1205   000B30  1841               	xorwf	_Boton^0,w,c
  1206   000B32  A4D8               	btfss	status,2,c
  1207   000B34  D018               	goto	u4690
  1208   000B36  0E2D               	movlw	45
  1209   000B38  1841               	xorwf	_Boton^0,w,c
  1210   000B3A  A4D8               	btfss	status,2,c
  1211   000B3C  D014               	goto	u4690
  1212   000B3E  0E2F               	movlw	47
  1213   000B40  1841               	xorwf	_Boton^0,w,c
  1214   000B42  A4D8               	btfss	status,2,c
  1215   000B44  D010               	goto	u4690
  1216   000B46  0E78               	movlw	120
  1217   000B48  1841               	xorwf	_Boton^0,w,c
  1218   000B4A  A4D8               	btfss	status,2,c
  1219   000B4C  D00C               	goto	u4690
  1220   000B4E  0E3D               	movlw	61
  1221   000B50  1841               	xorwf	_Boton^0,w,c
  1222   000B52  A4D8               	btfss	status,2,c
  1223   000B54  D008               	goto	u4690
  1224   000B56  0E43               	movlw	67
  1225   000B58  1841               	xorwf	_Boton^0,w,c
  1226   000B5A  A4D8               	btfss	status,2,c
  1227   000B5C  D004               	goto	u4690
  1228   000B5E  0E5E               	movlw	94
  1229   000B60  1841               	xorwf	_Boton^0,w,c
  1230   000B62  B4D8               	btfsc	status,2,c
  1231   000B64  D00F               	goto	l3997
  1232   000B66                     u4690:
  1233                           
  1234                           ;Lab4.c: 144: DireccionaLCD(0x80);
  1235   000B66  0E80               	movlw	128
  1236   000B68  ECB4  F00D         	call	_DireccionaLCD
  1237                           
  1238                           ;Lab4.c: 145: EscribeLCD_c(Boton);
  1239   000B6C  5041               	movf	_Boton^0,w,c
  1240   000B6E  ECA9  F00D         	call	_EscribeLCD_c
  1241   000B72                     l3993:
  1242                           
  1243                           ;Lab4.c: 146: Numero_1_Char=Boton;
  1244   000B72  C041  F047         	movff	_Boton,_Numero_1_Char
  1245                           
  1246                           ;Lab4.c: 147: Numero_1 = Boton-'0';
  1247   000B76  0ED0               	movlw	208
  1248   000B78  2441               	addwf	_Boton^0,w,c
  1249   000B7A  6E3C               	movwf	_Numero_1^0,c
  1250   000B7C  6A3D               	clrf	(_Numero_1+1)^0,c
  1251   000B7E  0EFF               	movlw	255
  1252   000B80  223D               	addwfc	(_Numero_1+1)^0,f,c
  1253                           
  1254                           ;Lab4.c: 148: }else if(Numero_2_Char==' ' & Operador!=' ' & Numero_1_Char != ' ' & (Boto
      +                          n!='+'|Boton!='-'|Boton!='/'|Boton!='x'|Boton!='='|Boton!='C'|Boton!='^')){
  1255   000B82  D1F5               	goto	l4171
  1256   000B84                     l3997:
  1257   000B84  0E20               	movlw	32
  1258   000B86  1846               	xorwf	_Numero_2_Char^0,w,c
  1259   000B88  A4D8               	btfss	status,2,c
  1260   000B8A  D1F1               	goto	l4171
  1261   000B8C  0E20               	movlw	32
  1262   000B8E  1848               	xorwf	_Operador^0,w,c
  1263   000B90  B4D8               	btfsc	status,2,c
  1264   000B92  D1ED               	goto	l4171
  1265   000B94  0E20               	movlw	32
  1266   000B96  1847               	xorwf	_Numero_1_Char^0,w,c
  1267   000B98  B4D8               	btfsc	status,2,c
  1268   000B9A  D1E9               	goto	l4171
  1269   000B9C  0E2B               	movlw	43
  1270   000B9E  1841               	xorwf	_Boton^0,w,c
  1271   000BA0  A4D8               	btfss	status,2,c
  1272   000BA2  D018               	goto	u4790
  1273   000BA4  0E2D               	movlw	45
  1274   000BA6  1841               	xorwf	_Boton^0,w,c
  1275   000BA8  A4D8               	btfss	status,2,c
  1276   000BAA  D014               	goto	u4790
  1277   000BAC  0E2F               	movlw	47
  1278   000BAE  1841               	xorwf	_Boton^0,w,c
  1279   000BB0  A4D8               	btfss	status,2,c
  1280   000BB2  D010               	goto	u4790
  1281   000BB4  0E78               	movlw	120
  1282   000BB6  1841               	xorwf	_Boton^0,w,c
  1283   000BB8  A4D8               	btfss	status,2,c
  1284   000BBA  D00C               	goto	u4790
  1285   000BBC  0E3D               	movlw	61
  1286   000BBE  1841               	xorwf	_Boton^0,w,c
  1287   000BC0  A4D8               	btfss	status,2,c
  1288   000BC2  D008               	goto	u4790
  1289   000BC4  0E43               	movlw	67
  1290   000BC6  1841               	xorwf	_Boton^0,w,c
  1291   000BC8  A4D8               	btfss	status,2,c
  1292   000BCA  D004               	goto	u4790
  1293   000BCC  0E5E               	movlw	94
  1294   000BCE  1841               	xorwf	_Boton^0,w,c
  1295   000BD0  B4D8               	btfsc	status,2,c
  1296   000BD2  D1CD               	goto	l4171
  1297   000BD4                     u4790:
  1298                           
  1299                           ;Lab4.c: 149: DireccionaLCD(0x82);
  1300   000BD4  0E82               	movlw	130
  1301   000BD6  ECB4  F00D         	call	_DireccionaLCD
  1302                           
  1303                           ;Lab4.c: 150: EscribeLCD_c(Boton);
  1304   000BDA  5041               	movf	_Boton^0,w,c
  1305   000BDC  ECA9  F00D         	call	_EscribeLCD_c
  1306                           
  1307                           ;Lab4.c: 151: Numero_2_Char=Boton;
  1308   000BE0  C041  F046         	movff	_Boton,_Numero_2_Char
  1309                           
  1310                           ;Lab4.c: 152: Numero_2 = Boton-'0';
  1311   000BE4  0ED0               	movlw	208
  1312   000BE6  2441               	addwf	_Boton^0,w,c
  1313   000BE8  6E3A               	movwf	_Numero_2^0,c
  1314   000BEA  6A3B               	clrf	(_Numero_2+1)^0,c
  1315   000BEC  0EFF               	movlw	255
  1316   000BEE  223B               	addwfc	(_Numero_2+1)^0,f,c
  1317                           
  1318                           ;Lab4.c: 153: };Lab4.c: 154: }else if ((Numero_1_Char==' '|Operador==' ') & Factorial){
  1319   000BF0  D1BE               	goto	l4171
  1320   000BF2                     l4023:
  1321   000BF2  0E01               	movlw	1
  1322   000BF4  0100               	movlb	0	; () banked
  1323   000BF6  6F6B               	movwf	_main$167& (0+255),b
  1324                           
  1325                           ; BSR set to: 0
  1326   000BF8  0E20               	movlw	32
  1327   000BFA  1847               	xorwf	_Numero_1_Char^0,w,c
  1328   000BFC  B4D8               	btfsc	status,2,c
  1329   000BFE  D006               	goto	l4031
  1330                           
  1331                           ; BSR set to: 0
  1332   000C00  0E20               	movlw	32
  1333   000C02  1848               	xorwf	_Operador^0,w,c
  1334   000C04  B4D8               	btfsc	status,2,c
  1335   000C06  D002               	goto	l4031
  1336                           
  1337                           ; BSR set to: 0
  1338   000C08  0E00               	movlw	0
  1339   000C0A  6F6B               	movwf	_main$167& (0+255),b
  1340   000C0C                     l4031:
  1341                           
  1342                           ; BSR set to: 0
  1343   000C0C  516B               	movf	_main$167& (0+255),w,b
  1344   000C0E  143F               	andwf	_Factorial^0,w,c
  1345   000C10  0900               	iorlw	0
  1346   000C12  B4D8               	btfsc	status,2,c
  1347   000C14  D056               	goto	l4079
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;Lab4.c: 155: if(Operador==' ' & (Boton=='+'|Boton=='-'|Boton=='/'|Boton=='x'|Boton=='^'
      +                          |Boton=='!') & Numero_1_Char != ' ' & Numero_2_Char ==' '){
  1351   000C16  0E20               	movlw	32
  1352   000C18  1848               	xorwf	_Operador^0,w,c
  1353   000C1A  A4D8               	btfss	status,2,c
  1354   000C1C  D027               	goto	l4055
  1355                           
  1356                           ; BSR set to: 0
  1357   000C1E  0E2B               	movlw	43
  1358   000C20  1841               	xorwf	_Boton^0,w,c
  1359   000C22  B4D8               	btfsc	status,2,c
  1360   000C24  D014               	goto	u4890
  1361                           
  1362                           ; BSR set to: 0
  1363   000C26  0E2D               	movlw	45
  1364   000C28  1841               	xorwf	_Boton^0,w,c
  1365   000C2A  B4D8               	btfsc	status,2,c
  1366   000C2C  D010               	goto	u4890
  1367                           
  1368                           ; BSR set to: 0
  1369   000C2E  0E2F               	movlw	47
  1370   000C30  1841               	xorwf	_Boton^0,w,c
  1371   000C32  B4D8               	btfsc	status,2,c
  1372   000C34  D00C               	goto	u4890
  1373                           
  1374                           ; BSR set to: 0
  1375   000C36  0E78               	movlw	120
  1376   000C38  1841               	xorwf	_Boton^0,w,c
  1377   000C3A  B4D8               	btfsc	status,2,c
  1378   000C3C  D008               	goto	u4890
  1379                           
  1380                           ; BSR set to: 0
  1381   000C3E  0E5E               	movlw	94
  1382   000C40  1841               	xorwf	_Boton^0,w,c
  1383   000C42  B4D8               	btfsc	status,2,c
  1384   000C44  D004               	goto	u4890
  1385                           
  1386                           ; BSR set to: 0
  1387   000C46  0E21               	movlw	33
  1388   000C48  1841               	xorwf	_Boton^0,w,c
  1389   000C4A  A4D8               	btfss	status,2,c
  1390   000C4C  D00F               	goto	l4055
  1391   000C4E                     u4890:
  1392                           
  1393                           ; BSR set to: 0
  1394   000C4E  0E20               	movlw	32
  1395   000C50  1847               	xorwf	_Numero_1_Char^0,w,c
  1396   000C52  B4D8               	btfsc	status,2,c
  1397   000C54  D00B               	goto	l4055
  1398                           
  1399                           ; BSR set to: 0
  1400   000C56  0E20               	movlw	32
  1401   000C58  1846               	xorwf	_Numero_2_Char^0,w,c
  1402   000C5A  A4D8               	btfss	status,2,c
  1403   000C5C  D007               	goto	l4055
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;Lab4.c: 156: DireccionaLCD(0x81);
  1407   000C5E  0E81               	movlw	129
  1408   000C60  ECB4  F00D         	call	_DireccionaLCD
  1409                           
  1410                           ;Lab4.c: 157: EscribeLCD_c(Boton);
  1411   000C64  5041               	movf	_Boton^0,w,c
  1412   000C66  ECA9  F00D         	call	_EscribeLCD_c
  1413   000C6A  D75A               	goto	l3973
  1414   000C6C                     l4055:
  1415                           
  1416                           ; BSR set to: 0
  1417   000C6C  0E20               	movlw	32
  1418   000C6E  1847               	xorwf	_Numero_1_Char^0,w,c
  1419   000C70  A4D8               	btfss	status,2,c
  1420   000C72  D17D               	goto	l4171
  1421                           
  1422                           ; BSR set to: 0
  1423   000C74  0E2B               	movlw	43
  1424   000C76  1841               	xorwf	_Boton^0,w,c
  1425   000C78  A4D8               	btfss	status,2,c
  1426   000C7A  D01C               	goto	u5000
  1427                           
  1428                           ; BSR set to: 0
  1429   000C7C  0E2D               	movlw	45
  1430   000C7E  1841               	xorwf	_Boton^0,w,c
  1431   000C80  A4D8               	btfss	status,2,c
  1432   000C82  D018               	goto	u5000
  1433                           
  1434                           ; BSR set to: 0
  1435   000C84  0E2F               	movlw	47
  1436   000C86  1841               	xorwf	_Boton^0,w,c
  1437   000C88  A4D8               	btfss	status,2,c
  1438   000C8A  D014               	goto	u5000
  1439                           
  1440                           ; BSR set to: 0
  1441   000C8C  0E78               	movlw	120
  1442   000C8E  1841               	xorwf	_Boton^0,w,c
  1443   000C90  A4D8               	btfss	status,2,c
  1444   000C92  D010               	goto	u5000
  1445                           
  1446                           ; BSR set to: 0
  1447   000C94  0E3D               	movlw	61
  1448   000C96  1841               	xorwf	_Boton^0,w,c
  1449   000C98  A4D8               	btfss	status,2,c
  1450   000C9A  D00C               	goto	u5000
  1451                           
  1452                           ; BSR set to: 0
  1453   000C9C  0E43               	movlw	67
  1454   000C9E  1841               	xorwf	_Boton^0,w,c
  1455   000CA0  A4D8               	btfss	status,2,c
  1456   000CA2  D008               	goto	u5000
  1457                           
  1458                           ; BSR set to: 0
  1459   000CA4  0E5E               	movlw	94
  1460   000CA6  1841               	xorwf	_Boton^0,w,c
  1461   000CA8  A4D8               	btfss	status,2,c
  1462   000CAA  D004               	goto	u5000
  1463                           
  1464                           ; BSR set to: 0
  1465   000CAC  0E21               	movlw	33
  1466   000CAE  1841               	xorwf	_Boton^0,w,c
  1467   000CB0  B4D8               	btfsc	status,2,c
  1468   000CB2  D15D               	goto	l4171
  1469   000CB4                     u5000:
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;Lab4.c: 160: DireccionaLCD(0x80);
  1473   000CB4  0E80               	movlw	128
  1474   000CB6  ECB4  F00D         	call	_DireccionaLCD
  1475                           
  1476                           ;Lab4.c: 161: EscribeLCD_c(Boton);
  1477   000CBA  5041               	movf	_Boton^0,w,c
  1478   000CBC  ECA9  F00D         	call	_EscribeLCD_c
  1479   000CC0  D758               	goto	l3993
  1480   000CC2                     l4079:
  1481                           
  1482                           ; BSR set to: 0
  1483   000CC2  0E3D               	movlw	61
  1484   000CC4  1841               	xorwf	_Boton^0,w,c
  1485   000CC6  A4D8               	btfss	status,2,c
  1486   000CC8  D10B               	goto	l4153
  1487                           
  1488                           ; BSR set to: 0
  1489   000CCA  0E20               	movlw	32
  1490   000CCC  1846               	xorwf	_Numero_2_Char^0,w,c
  1491   000CCE  B4D8               	btfsc	status,2,c
  1492   000CD0  D107               	goto	l4153
  1493                           
  1494                           ; BSR set to: 0
  1495   000CD2  0E20               	movlw	32
  1496   000CD4  1848               	xorwf	_Operador^0,w,c
  1497   000CD6  B4D8               	btfsc	status,2,c
  1498   000CD8  D103               	goto	l4153
  1499                           
  1500                           ; BSR set to: 0
  1501   000CDA  0E20               	movlw	32
  1502   000CDC  1847               	xorwf	_Numero_1_Char^0,w,c
  1503   000CDE  B4D8               	btfsc	status,2,c
  1504   000CE0  D0FF               	goto	l4153
  1505                           
  1506                           ; BSR set to: 0
  1507   000CE2  503F               	movf	_Factorial^0,w,c
  1508   000CE4  A4D8               	btfss	status,2,c
  1509   000CE6  D0FC               	goto	l4153
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;Lab4.c: 166: DireccionaLCD(0x83);
  1513   000CE8  0E83               	movlw	131
  1514   000CEA  ECB4  F00D         	call	_DireccionaLCD
  1515                           
  1516                           ;Lab4.c: 167: EscribeLCD_c('=');
  1517   000CEE  0E3D               	movlw	61
  1518   000CF0  ECA9  F00D         	call	_EscribeLCD_c
  1519                           
  1520                           ;Lab4.c: 168: switch(Operador){
  1521   000CF4  D0D6               	goto	l4147
  1522   000CF6                     l4091:
  1523                           
  1524                           ;Lab4.c: 170: Resultado = Numero_1 + Numero_2;
  1525   000CF6  503A               	movf	_Numero_2^0,w,c
  1526   000CF8  243C               	addwf	_Numero_1^0,w,c
  1527   000CFA  6E24               	movwf	??_main^0,c
  1528   000CFC  503B               	movf	(_Numero_2+1)^0,w,c
  1529   000CFE  203D               	addwfc	(_Numero_1+1)^0,w,c
  1530   000D00  6E25               	movwf	(??_main+1)^0,c
  1531   000D02  C024  F026         	movff	??_main,_Resultado
  1532   000D06  C025  F027         	movff	??_main+1,_Resultado+1
  1533   000D0A  6A28               	clrf	(_Resultado+2)^0,c
  1534   000D0C  6A29               	clrf	(_Resultado+3)^0,c
  1535   000D0E                     l4093:
  1536                           
  1537                           ;Lab4.c: 171: Parte_Decimal = Resultado*100;
  1538   000D0E  C026  F00E         	movff	_Resultado,___lmul@multiplier
  1539   000D12  C027  F00F         	movff	_Resultado+1,___lmul@multiplier+1
  1540   000D16  C028  F010         	movff	_Resultado+2,___lmul@multiplier+2
  1541   000D1A  C029  F011         	movff	_Resultado+3,___lmul@multiplier+3
  1542   000D1E  0E64               	movlw	100
  1543   000D20  6E12               	movwf	___lmul@multiplicand^0,c
  1544   000D22  0E00               	movlw	0
  1545   000D24  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1546   000D26  0E00               	movlw	0
  1547   000D28  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1548   000D2A  0E00               	movlw	0
  1549   000D2C  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1550   000D2E  ECCA  F00B         	call	___lmul	;wreg free
  1551   000D32  C00E  F02A         	movff	?___lmul,_Parte_Decimal
  1552   000D36  C00F  F02B         	movff	?___lmul+1,_Parte_Decimal+1
  1553   000D3A  C010  F02C         	movff	?___lmul+2,_Parte_Decimal+2
  1554   000D3E  C011  F02D         	movff	?___lmul+3,_Parte_Decimal+3
  1555                           
  1556                           ;Lab4.c: 172: break;
  1557   000D42  D0C0               	goto	l4149
  1558   000D44                     l4095:
  1559                           
  1560                           ;Lab4.c: 174: Resultado = Numero_1 - Numero_2;
  1561   000D44  503A               	movf	_Numero_2^0,w,c
  1562   000D46  5C3C               	subwf	_Numero_1^0,w,c
  1563   000D48  6E24               	movwf	??_main^0,c
  1564   000D4A  503B               	movf	(_Numero_2+1)^0,w,c
  1565   000D4C  583D               	subwfb	(_Numero_1+1)^0,w,c
  1566   000D4E  6E25               	movwf	(??_main+1)^0,c
  1567   000D50  C024  F026         	movff	??_main,_Resultado
  1568   000D54  C025  F027         	movff	??_main+1,_Resultado+1
  1569   000D58  6A28               	clrf	(_Resultado+2)^0,c
  1570   000D5A  6A29               	clrf	(_Resultado+3)^0,c
  1571                           
  1572                           ;Lab4.c: 175: if(Numero_1<Numero_2){
  1573   000D5C  503A               	movf	_Numero_2^0,w,c
  1574   000D5E  5C3C               	subwf	_Numero_1^0,w,c
  1575   000D60  503B               	movf	(_Numero_2+1)^0,w,c
  1576   000D62  583D               	subwfb	(_Numero_1+1)^0,w,c
  1577   000D64  B0D8               	btfsc	status,0,c
  1578   000D66  D7D3               	goto	l4093
  1579                           
  1580                           ;Lab4.c: 176: Negativo=1;
  1581   000D68  0E01               	movlw	1
  1582   000D6A  6E3E               	movwf	_Negativo^0,c
  1583   000D6C  D7D0               	goto	l4093
  1584   000D6E                     l4101:
  1585                           
  1586                           ;Lab4.c: 181: Resultado = Numero_1*Numero_2;
  1587   000D6E  C03C  F00E         	movff	_Numero_1,___wmul@multiplier
  1588   000D72  C03D  F00F         	movff	_Numero_1+1,___wmul@multiplier+1
  1589   000D76  C03A  F010         	movff	_Numero_2,___wmul@multiplicand
  1590   000D7A  C03B  F011         	movff	_Numero_2+1,___wmul@multiplicand+1
  1591   000D7E  EC8A  F00D         	call	___wmul	;wreg free
  1592   000D82  C00E  F026         	movff	?___wmul,_Resultado
  1593   000D86  C00F  F027         	movff	?___wmul+1,_Resultado+1
  1594   000D8A  D7BF               	goto	L1
  1595   000D8C                     l4105:
  1596                           
  1597                           ;Lab4.c: 185: if(Numero_2!=0){
  1598   000D8C  503A               	movf	_Numero_2^0,w,c
  1599   000D8E  103B               	iorwf	(_Numero_2+1)^0,w,c
  1600   000D90  B4D8               	btfsc	status,2,c
  1601   000D92  D02F               	goto	l4113
  1602                           
  1603                           ;Lab4.c: 186: if(Numero_1!=0){
  1604   000D94  503C               	movf	_Numero_1^0,w,c
  1605   000D96  103D               	iorwf	(_Numero_1+1)^0,w,c
  1606   000D98  B4D8               	btfsc	status,2,c
  1607   000D9A  D094               	goto	l4149
  1608                           
  1609                           ;Lab4.c: 187: Resultado = Numero_1/Numero_2;
  1610   000D9C  C03C  F014         	movff	_Numero_1,___lwdiv@dividend
  1611   000DA0  C03D  F015         	movff	_Numero_1+1,___lwdiv@dividend+1
  1612   000DA4  C03A  F016         	movff	_Numero_2,___lwdiv@divisor
  1613   000DA8  C03B  F017         	movff	_Numero_2+1,___lwdiv@divisor+1
  1614   000DAC  EC4B  F00C         	call	___lwdiv	;wreg free
  1615   000DB0  C014  F026         	movff	?___lwdiv,_Resultado
  1616   000DB4  C015  F027         	movff	?___lwdiv+1,_Resultado+1
  1617   000DB8  6A28               	clrf	(_Resultado+2)^0,c
  1618   000DBA  6A29               	clrf	(_Resultado+3)^0,c
  1619                           
  1620                           ;Lab4.c: 188: Parte_Decimal = (Numero_1*100)/Numero_2;
  1621   000DBC  C03C  F00E         	movff	_Numero_1,___wmul@multiplier
  1622   000DC0  C03D  F00F         	movff	_Numero_1+1,___wmul@multiplier+1
  1623   000DC4  0E00               	movlw	0
  1624   000DC6  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1625   000DC8  0E64               	movlw	100
  1626   000DCA  6E10               	movwf	___wmul@multiplicand^0,c
  1627   000DCC  EC8A  F00D         	call	___wmul	;wreg free
  1628   000DD0  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1629   000DD4  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1630   000DD8  C03A  F016         	movff	_Numero_2,___lwdiv@divisor
  1631   000DDC  C03B  F017         	movff	_Numero_2+1,___lwdiv@divisor+1
  1632   000DE0  EC4B  F00C         	call	___lwdiv	;wreg free
  1633   000DE4  C014  F02A         	movff	?___lwdiv,_Parte_Decimal
  1634   000DE8  C015  F02B         	movff	?___lwdiv+1,_Parte_Decimal+1
  1635   000DEC  6A2C               	clrf	(_Parte_Decimal+2)^0,c
  1636   000DEE  6A2D               	clrf	(_Parte_Decimal+3)^0,c
  1637   000DF0  D069               	goto	l4149
  1638   000DF2                     l4113:
  1639                           
  1640                           ;Lab4.c: 191: if(Numero_1 != 0 & Numero_2 == 0) Resultado = 1000;
  1641   000DF2  503C               	movf	_Numero_1^0,w,c
  1642   000DF4  103D               	iorwf	(_Numero_1+1)^0,w,c
  1643   000DF6  B4D8               	btfsc	status,2,c
  1644   000DF8  D006               	goto	l4119
  1645   000DFA  503A               	movf	_Numero_2^0,w,c
  1646   000DFC  103B               	iorwf	(_Numero_2+1)^0,w,c
  1647   000DFE  A4D8               	btfss	status,2,c
  1648   000E00  D002               	goto	l4119
  1649   000E02  0EE8               	movlw	232
  1650   000E04  D009               	goto	L2
  1651   000E06                     l4119:
  1652                           
  1653                           ;Lab4.c: 192: else if(Numero_1 == 0 & Numero_2 == 0) Resultado = 1001;
  1654   000E06  503C               	movf	_Numero_1^0,w,c
  1655   000E08  103D               	iorwf	(_Numero_1+1)^0,w,c
  1656   000E0A  A4D8               	btfss	status,2,c
  1657   000E0C  D780               	goto	l4093
  1658   000E0E  503A               	movf	_Numero_2^0,w,c
  1659   000E10  103B               	iorwf	(_Numero_2+1)^0,w,c
  1660   000E12  A4D8               	btfss	status,2,c
  1661   000E14  D77C               	goto	l4093
  1662   000E16  0EE9               	movlw	233
  1663   000E18                     L2:
  1664   000E18  6E26               	movwf	_Resultado^0,c
  1665   000E1A  0E03               	movlw	3
  1666   000E1C  D007               	goto	L3
  1667   000E1E                     l4127:
  1668                           
  1669                           ;Lab4.c: 197: if(Numero_2==0){
  1670   000E1E  503A               	movf	_Numero_2^0,w,c
  1671   000E20  103B               	iorwf	(_Numero_2+1)^0,w,c
  1672   000E22  A4D8               	btfss	status,2,c
  1673   000E24  D009               	goto	l4131
  1674                           
  1675                           ;Lab4.c: 198: Resultado=1;
  1676   000E26  0E01               	movlw	1
  1677   000E28  6E26               	movwf	_Resultado^0,c
  1678   000E2A  0E00               	movlw	0
  1679   000E2C                     L3:
  1680   000E2C  6E27               	movwf	(_Resultado+1)^0,c
  1681   000E2E  0E00               	movlw	0
  1682   000E30  6E28               	movwf	(_Resultado+2)^0,c
  1683   000E32  0E00               	movlw	0
  1684   000E34  6E29               	movwf	(_Resultado+3)^0,c
  1685                           
  1686                           ;Lab4.c: 199: }else{
  1687   000E36  D76B               	goto	l4093
  1688   000E38                     l4131:
  1689                           
  1690                           ;Lab4.c: 200: Resultado=Numero_1;
  1691   000E38  C03C  F026         	movff	_Numero_1,_Resultado
  1692   000E3C  C03D  F027         	movff	_Numero_1+1,_Resultado+1
  1693   000E40  6A28               	clrf	(_Resultado+2)^0,c
  1694   000E42  6A29               	clrf	(_Resultado+3)^0,c
  1695                           
  1696                           ;Lab4.c: 201: for(i=1;i<Numero_2;i++){
  1697   000E44  0E00               	movlw	0
  1698   000E46  6E39               	movwf	(_i+1)^0,c
  1699   000E48  0E01               	movlw	1
  1700   000E4A  6E38               	movwf	_i^0,c
  1701   000E4C  D01A               	goto	l4139
  1702   000E4E                     l4135:
  1703                           
  1704                           ;Lab4.c: 202: Resultado=Resultado*Numero_1;
  1705   000E4E  C03C  F00E         	movff	_Numero_1,___lmul@multiplier
  1706   000E52  C03D  F00F         	movff	_Numero_1+1,___lmul@multiplier+1
  1707   000E56  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1708   000E58  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1709   000E5A  C026  F012         	movff	_Resultado,___lmul@multiplicand
  1710   000E5E  C027  F013         	movff	_Resultado+1,___lmul@multiplicand+1
  1711   000E62  C028  F014         	movff	_Resultado+2,___lmul@multiplicand+2
  1712   000E66  C029  F015         	movff	_Resultado+3,___lmul@multiplicand+3
  1713   000E6A  ECCA  F00B         	call	___lmul	;wreg free
  1714   000E6E  C00E  F026         	movff	?___lmul,_Resultado
  1715   000E72  C00F  F027         	movff	?___lmul+1,_Resultado+1
  1716   000E76  C010  F028         	movff	?___lmul+2,_Resultado+2
  1717   000E7A  C011  F029         	movff	?___lmul+3,_Resultado+3
  1718   000E7E  4A38               	infsnz	_i^0,f,c
  1719   000E80  2A39               	incf	(_i+1)^0,f,c
  1720   000E82                     l4139:
  1721   000E82  503A               	movf	_Numero_2^0,w,c
  1722   000E84  5C38               	subwf	_i^0,w,c
  1723   000E86  503B               	movf	(_Numero_2+1)^0,w,c
  1724   000E88  5839               	subwfb	(_i+1)^0,w,c
  1725   000E8A  B0D8               	btfsc	status,0,c
  1726   000E8C  D740               	goto	l4093
  1727   000E8E  D7DF               	goto	l4135
  1728   000E90                     l4143:
  1729                           
  1730                           ;Lab4.c: 208: Resultado = 0;
  1731   000E90  0E00               	movlw	0
  1732   000E92  6E26               	movwf	_Resultado^0,c
  1733   000E94  0E00               	movlw	0
  1734   000E96  6E27               	movwf	(_Resultado+1)^0,c
  1735   000E98  0E00               	movlw	0
  1736   000E9A  6E28               	movwf	(_Resultado+2)^0,c
  1737   000E9C  0E00               	movlw	0
  1738   000E9E  6E29               	movwf	(_Resultado+3)^0,c
  1739                           
  1740                           ;Lab4.c: 209: break;
  1741   000EA0  D011               	goto	l4149
  1742   000EA2                     l4147:
  1743   000EA2  5048               	movf	_Operador^0,w,c
  1744                           
  1745                           ; Switch size 1, requested type "simple"
  1746                           ; Number of cases is 5, Range of values is 43 to 120
  1747                           ; switch strategies available:
  1748                           ; Name         Instructions Cycles
  1749                           ; simple_byte           16     9 (average)
  1750                           ;	Chosen strategy is simple_byte
  1751   000EA4  0A2B               	xorlw	43	; case 43
  1752   000EA6  B4D8               	btfsc	status,2,c
  1753   000EA8  D726               	goto	l4091
  1754   000EAA  0A06               	xorlw	6	; case 45
  1755   000EAC  B4D8               	btfsc	status,2,c
  1756   000EAE  D74A               	goto	l4095
  1757   000EB0  0A02               	xorlw	2	; case 47
  1758   000EB2  B4D8               	btfsc	status,2,c
  1759   000EB4  D76B               	goto	l4105
  1760   000EB6  0A71               	xorlw	113	; case 94
  1761   000EB8  B4D8               	btfsc	status,2,c
  1762   000EBA  D7B1               	goto	l4127
  1763   000EBC  0A26               	xorlw	38	; case 120
  1764   000EBE  B4D8               	btfsc	status,2,c
  1765   000EC0  D756               	goto	l4101
  1766   000EC2  D7E6               	goto	l4143
  1767   000EC4                     l4149:
  1768                           
  1769                           ;Lab4.c: 211: DireccionaLCD(0x84);
  1770   000EC4  0E84               	movlw	132
  1771   000EC6  ECB4  F00D         	call	_DireccionaLCD
  1772   000ECA                     l4151:
  1773                           
  1774                           ;Lab4.c: 212: Imprimir_Resultado(Resultado);
  1775   000ECA  C026  F01C         	movff	_Resultado,Imprimir_Resultado@Resultado
  1776   000ECE  C027  F01D         	movff	_Resultado+1,Imprimir_Resultado@Resultado+1
  1777   000ED2  C028  F01E         	movff	_Resultado+2,Imprimir_Resultado@Resultado+2
  1778   000ED6  C029  F01F         	movff	_Resultado+3,Imprimir_Resultado@Resultado+3
  1779   000EDA  ECC0  F007         	call	_Imprimir_Resultado	;wreg free
  1780                           
  1781                           ;Lab4.c: 213: }else if((Boton=='=' & Operador=='!' & Numero_1_Char != ' ') & Factorial) 
      +                          {
  1782   000EDE  D047               	goto	l4171
  1783   000EE0                     l4153:
  1784                           
  1785                           ; BSR set to: 0
  1786   000EE0  0E00               	movlw	0
  1787   000EE2  6F6C               	movwf	_main$168& (0+255),b
  1788                           
  1789                           ; BSR set to: 0
  1790   000EE4  0E3D               	movlw	61
  1791   000EE6  1841               	xorwf	_Boton^0,w,c
  1792   000EE8  A4D8               	btfss	status,2,c
  1793   000EEA  D00A               	goto	l4163
  1794                           
  1795                           ; BSR set to: 0
  1796   000EEC  0E21               	movlw	33
  1797   000EEE  1848               	xorwf	_Operador^0,w,c
  1798   000EF0  A4D8               	btfss	status,2,c
  1799   000EF2  D006               	goto	l4163
  1800                           
  1801                           ; BSR set to: 0
  1802   000EF4  0E20               	movlw	32
  1803   000EF6  1847               	xorwf	_Numero_1_Char^0,w,c
  1804   000EF8  B4D8               	btfsc	status,2,c
  1805   000EFA  D002               	goto	l4163
  1806                           
  1807                           ; BSR set to: 0
  1808   000EFC  0E01               	movlw	1
  1809   000EFE  6F6C               	movwf	_main$168& (0+255),b
  1810   000F00                     l4163:
  1811                           
  1812                           ; BSR set to: 0
  1813   000F00  516C               	movf	_main$168& (0+255),w,b
  1814   000F02  143F               	andwf	_Factorial^0,w,c
  1815   000F04  0900               	iorlw	0
  1816   000F06  B4D8               	btfsc	status,2,c
  1817   000F08  D02F               	goto	l4169
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;Lab4.c: 214: DireccionaLCD(0x82);
  1821   000F0A  0E82               	movlw	130
  1822   000F0C  ECB4  F00D         	call	_DireccionaLCD
  1823                           
  1824                           ;Lab4.c: 215: EscribeLCD_c('=');
  1825   000F10  0E3D               	movlw	61
  1826   000F12  ECA9  F00D         	call	_EscribeLCD_c
  1827                           
  1828                           ;Lab4.c: 216: Resultado=factorial_function(Numero_1);
  1829   000F16  C03C  F01A         	movff	_Numero_1,factorial_function@a
  1830   000F1A  C03D  F01B         	movff	_Numero_1+1,factorial_function@a+1
  1831   000F1E  EC61  F00B         	call	_factorial_function	;wreg free
  1832   000F22  C01A  F026         	movff	?_factorial_function,_Resultado
  1833   000F26  C01B  F027         	movff	?_factorial_function+1,_Resultado+1
  1834   000F2A  C01C  F028         	movff	?_factorial_function+2,_Resultado+2
  1835   000F2E  C01D  F029         	movff	?_factorial_function+3,_Resultado+3
  1836                           
  1837                           ;Lab4.c: 217: Parte_Decimal = Resultado*100;
  1838   000F32  C026  F00E         	movff	_Resultado,___lmul@multiplier
  1839   000F36  C027  F00F         	movff	_Resultado+1,___lmul@multiplier+1
  1840   000F3A  C028  F010         	movff	_Resultado+2,___lmul@multiplier+2
  1841   000F3E  C029  F011         	movff	_Resultado+3,___lmul@multiplier+3
  1842   000F42  0E64               	movlw	100
  1843   000F44  6E12               	movwf	___lmul@multiplicand^0,c
  1844   000F46  0E00               	movlw	0
  1845   000F48  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1846   000F4A  0E00               	movlw	0
  1847   000F4C  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1848   000F4E  0E00               	movlw	0
  1849   000F50  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1850   000F52  ECCA  F00B         	call	___lmul	;wreg free
  1851   000F56  C00E  F02A         	movff	?___lmul,_Parte_Decimal
  1852   000F5A  C00F  F02B         	movff	?___lmul+1,_Parte_Decimal+1
  1853   000F5E  C010  F02C         	movff	?___lmul+2,_Parte_Decimal+2
  1854   000F62  C011  F02D         	movff	?___lmul+3,_Parte_Decimal+3
  1855   000F66  D7B1               	goto	l4151
  1856   000F68                     l4169:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;Lab4.c: 220: EscribeLCD_c('W');
  1860   000F68  0E57               	movlw	87
  1861   000F6A  ECA9  F00D         	call	_EscribeLCD_c
  1862   000F6E                     l4171:
  1863                           
  1864                           ;Lab4.c: 221: };Lab4.c: 222: _delay((unsigned long)((700)*(1000000/4000.0)));
  1865   000F6E  0EE4               	movlw	228
  1866   000F70  6E24               	movwf	??_main^0,c
  1867   000F72  0E44               	movlw	68
  1868   000F74                     u5237:
  1869   000F74  2EE8               	decfsz	wreg,f,c
  1870   000F76  D7FE               	bra	u5237
  1871   000F78  2E24               	decfsz	??_main^0,f,c
  1872   000F7A  D7FC               	bra	u5237
  1873   000F7C  D000               	nop2	
  1874   000F7E  D4F8               	goto	l3859
  1875   000F80                     __end_of_main:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _factorial_function *****************
  1879 ;; Defined at:
  1880 ;;		line 299 in file "Lab4.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  a               2   25[COMRAM] int 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  fact            4   29[COMRAM] long 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  4   25[COMRAM] unsigned long 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1894 ;;      Params:         4       0       0       0       0       0       0       0       0
  1895 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1897 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1898 ;;Total ram usage:        8 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 6
  1901 ;; This function calls:
  1902 ;;		___lmul
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text1
  1909   0016C2                     __ptext1:
  1910                           	callstack 0
  1911   0016C2                     _factorial_function:
  1912                           	callstack 24
  1913                           
  1914                           ;Lab4.c: 300: long fact = 1;
  1915                           
  1916                           ;incstack = 0
  1917   0016C2  0E01               	movlw	1
  1918   0016C4  6E1E               	movwf	factorial_function@fact^0,c
  1919   0016C6  0E00               	movlw	0
  1920   0016C8  6E1F               	movwf	(factorial_function@fact+1)^0,c
  1921   0016CA  0E00               	movlw	0
  1922   0016CC  6E20               	movwf	(factorial_function@fact+2)^0,c
  1923   0016CE  0E00               	movlw	0
  1924   0016D0  6E21               	movwf	(factorial_function@fact+3)^0,c
  1925                           
  1926                           ;Lab4.c: 301: for (b = a; b > 1; b--){
  1927   0016D2  C01A  F02E         	movff	factorial_function@a,_b
  1928   0016D6  C01B  F02F         	movff	factorial_function@a+1,_b+1
  1929   0016DA  D01E               	goto	l3803
  1930   0016DC                     l3799:
  1931                           
  1932                           ;Lab4.c: 302: fact = fact * b;
  1933   0016DC  C02E  F00E         	movff	_b,___lmul@multiplier
  1934   0016E0  C02F  F00F         	movff	_b+1,___lmul@multiplier+1
  1935   0016E4  0E00               	movlw	0
  1936   0016E6  BE0F               	btfsc	(___lmul@multiplier+1)^0,7,c
  1937   0016E8  0EFF               	movlw	-1
  1938   0016EA  6E10               	movwf	(___lmul@multiplier+2)^0,c
  1939   0016EC  6E11               	movwf	(___lmul@multiplier+3)^0,c
  1940   0016EE  C01E  F012         	movff	factorial_function@fact,___lmul@multiplicand
  1941   0016F2  C01F  F013         	movff	factorial_function@fact+1,___lmul@multiplicand+1
  1942   0016F6  C020  F014         	movff	factorial_function@fact+2,___lmul@multiplicand+2
  1943   0016FA  C021  F015         	movff	factorial_function@fact+3,___lmul@multiplicand+3
  1944   0016FE  ECCA  F00B         	call	___lmul	;wreg free
  1945   001702  C00E  F01E         	movff	?___lmul,factorial_function@fact
  1946   001706  C00F  F01F         	movff	?___lmul+1,factorial_function@fact+1
  1947   00170A  C010  F020         	movff	?___lmul+2,factorial_function@fact+2
  1948   00170E  C011  F021         	movff	?___lmul+3,factorial_function@fact+3
  1949   001712  062E               	decf	_b^0,f,c
  1950   001714  A0D8               	btfss	status,0,c
  1951   001716  062F               	decf	(_b+1)^0,f,c
  1952   001718                     l3803:
  1953   001718  BE2F               	btfsc	(_b+1)^0,7,c
  1954   00171A  D006               	goto	u4320
  1955   00171C  502F               	movf	(_b+1)^0,w,c
  1956   00171E  E1DE               	bnz	l3799
  1957   001720  0E02               	movlw	2
  1958   001722  5C2E               	subwf	_b^0,w,c
  1959   001724  B0D8               	btfsc	status,0,c
  1960   001726  D7DA               	goto	l3799
  1961   001728                     u4320:
  1962                           
  1963                           ;Lab4.c: 303: };Lab4.c: 305: return fact;
  1964   001728  C01E  F01A         	movff	factorial_function@fact,?_factorial_function
  1965   00172C  C01F  F01B         	movff	factorial_function@fact+1,?_factorial_function+1
  1966   001730  C020  F01C         	movff	factorial_function@fact+2,?_factorial_function+2
  1967   001734  C021  F01D         	movff	factorial_function@fact+3,?_factorial_function+3
  1968   001738  0012               	return		;funcret
  1969   00173A                     __end_of_factorial_function:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function _NuevoCaracter *****************
  1973 ;; Defined at:
  1974 ;;		line 340 in file "LibLCDXC8.h"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  ubicacion       1    wreg     unsigned char 
  1977 ;;  mapeo           1   18[COMRAM] PTR unsigned char 
  1978 ;;		 -> persona(8), heart(8), 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  ubicacion       1   19[COMRAM] unsigned char 
  1981 ;;  i               2   20[COMRAM] int 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1991 ;;      Params:         1       0       0       0       0       0       0       0       0
  1992 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1994 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1995 ;;Total ram usage:        4 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 8
  1998 ;; This function calls:
  1999 ;;		_ComandoLCD
  2000 ;;		_EscribeLCD_c
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text2
  2007   001A5A                     __ptext2:
  2008                           	callstack 0
  2009   001A5A                     _NuevoCaracter:
  2010                           	callstack 22
  2011                           
  2012                           ;incstack = 0
  2013                           ;NuevoCaracter@ubicacion stored from wreg
  2014   001A5A  6E14               	movwf	NuevoCaracter@ubicacion^0,c
  2015                           
  2016                           ;LibLCDXC8.h: 341: int i;;LibLCDXC8.h: 342: ComandoLCD(0x40 + (ubicacion * 8));
  2017   001A5C  5014               	movf	NuevoCaracter@ubicacion^0,w,c
  2018   001A5E  0D08               	mullw	8
  2019   001A60  50F3               	movf	243,w,c
  2020   001A62  0F40               	addlw	64
  2021   001A64  EC4B  F00D         	call	_ComandoLCD
  2022                           
  2023                           ;LibLCDXC8.h: 343: for (i=0;i<8;i++){
  2024   001A68  0E00               	movlw	0
  2025   001A6A  6E16               	movwf	(NuevoCaracter@i+1)^0,c
  2026   001A6C  0E00               	movlw	0
  2027   001A6E  6E15               	movwf	NuevoCaracter@i^0,c
  2028   001A70                     l3519:
  2029                           
  2030                           ;LibLCDXC8.h: 344: EscribeLCD_c(mapeo [i]);
  2031   001A70  5013               	movf	NuevoCaracter@mapeo^0,w,c
  2032   001A72  2415               	addwf	NuevoCaracter@i^0,w,c
  2033   001A74  6ED9               	movwf	fsr2l,c
  2034   001A76  6ADA               	clrf	fsr2h,c
  2035   001A78  50DF               	movf	indf2,w,c
  2036   001A7A  ECA9  F00D         	call	_EscribeLCD_c
  2037   001A7E  4A15               	infsnz	NuevoCaracter@i^0,f,c
  2038   001A80  2A16               	incf	(NuevoCaracter@i+1)^0,f,c
  2039   001A82  BE16               	btfsc	(NuevoCaracter@i+1)^0,7,c
  2040   001A84  D7F5               	goto	l3519
  2041   001A86  5016               	movf	(NuevoCaracter@i+1)^0,w,c
  2042   001A88  E105               	bnz	u3860
  2043   001A8A  0E08               	movlw	8
  2044   001A8C  5C15               	subwf	NuevoCaracter@i^0,w,c
  2045   001A8E  B0D8               	btfsc	status,0,c
  2046   001A90  0012               	return	
  2047   001A92  D7EE               	goto	l3519
  2048   001A94                     u3860:
  2049   001A94  0012               	return		;funcret
  2050   001A96                     __end_of_NuevoCaracter:
  2051                           	callstack 0
  2052                           
  2053 ;; *************** function _ComandoLCD *****************
  2054 ;; Defined at:
  2055 ;;		line 330 in file "LibLCDXC8.h"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  a               1    wreg     unsigned char 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  a               1   16[COMRAM] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2069 ;;      Params:         0       0       0       0       0       0       0       0       0
  2070 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2071 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2072 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2073 ;;Total ram usage:        2 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 6
  2076 ;; This function calls:
  2077 ;;		_HabilitaLCD
  2078 ;;		_RetardoLCD
  2079 ;; This function is called by:
  2080 ;;		_NuevoCaracter
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text3
  2085   001A96                     __ptext3:
  2086                           	callstack 0
  2087   001A96                     _ComandoLCD:
  2088                           	callstack 23
  2089                           
  2090                           ;incstack = 0
  2091                           ;ComandoLCD@a stored from wreg
  2092   001A96  6E11               	movwf	ComandoLCD@a^0,c
  2093                           
  2094                           ;LibLCDXC8.h: 332: LATE0=0;
  2095   001A98  908D               	bcf	3981,0,c	;volatile
  2096                           
  2097                           ;LibLCDXC8.h: 333: LATD=a&0xF0;
  2098   001A9A  5011               	movf	ComandoLCD@a^0,w,c
  2099   001A9C  0BF0               	andlw	240
  2100   001A9E  6E8C               	movwf	140,c	;volatile
  2101                           
  2102                           ;LibLCDXC8.h: 334: HabilitaLCD();
  2103   001AA0  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  2104                           
  2105                           ;LibLCDXC8.h: 335: LATD=(a&0xF0)<<4;
  2106   001AA4  C011  F010         	movff	ComandoLCD@a,??_ComandoLCD
  2107   001AA8  0EF0               	movlw	240
  2108   001AAA  1610               	andwf	??_ComandoLCD^0,f,c
  2109   001AAC  3810               	swapf	??_ComandoLCD^0,w,c
  2110   001AAE  0BF0               	andlw	240
  2111   001AB0  6E8C               	movwf	140,c	;volatile
  2112                           
  2113                           ;LibLCDXC8.h: 336: HabilitaLCD();
  2114   001AB2  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  2115                           
  2116                           ;LibLCDXC8.h: 337: RetardoLCD(2);
  2117   001AB6  0E02               	movlw	2
  2118   001AB8  ECF5  F00B         	call	_RetardoLCD
  2119                           
  2120                           ;LibLCDXC8.h: 338: RetardoLCD(2);
  2121   001ABC  0E02               	movlw	2
  2122   001ABE  ECF5  F00B         	call	_RetardoLCD
  2123   001AC2  0012               	return		;funcret
  2124   001AC4                     __end_of_ComandoLCD:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function _LeerTeclado *****************
  2128 ;; Defined at:
  2129 ;;		line 228 in file "Lab4.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      unsigned char 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 5
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text4
  2158   0013A8                     __ptext4:
  2159                           	callstack 0
  2160   0013A8                     _LeerTeclado:
  2161                           	callstack 25
  2162                           
  2163                           ;Lab4.c: 229: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2164                           
  2165                           ;incstack = 0
  2166   0013A8  B881               	btfsc	3969,4,c	;volatile
  2167   0013AA  AA81               	btfss	3969,5,c	;volatile
  2168   0013AC  D004               	goto	u3900
  2169   0013AE  AC81               	btfss	3969,6,c	;volatile
  2170   0013B0  D002               	goto	u3900
  2171   0013B2  BE81               	btfsc	3969,7,c	;volatile
  2172   0013B4  D7F9               	goto	__ptext4
  2173   0013B6                     u3900:
  2174                           
  2175                           ;Lab4.c: 230: Verificador = 1;
  2176   0013B6  0E00               	movlw	0
  2177   0013B8  6E33               	movwf	(_Verificador+1)^0,c
  2178   0013BA  0E01               	movlw	1
  2179   0013BC  6E32               	movwf	_Verificador^0,c
  2180                           
  2181                           ;Lab4.c: 231: LATB=0b11111110;
  2182   0013BE  0EFE               	movlw	254
  2183   0013C0  6E8A               	movwf	138,c	;volatile
  2184                           
  2185                           ;Lab4.c: 232: if(RB4==0){
  2186   0013C2  B881               	btfsc	3969,4,c	;volatile
  2187   0013C4  D00A               	goto	l269
  2188                           
  2189                           ;Lab4.c: 233: if(!Potencia) return '+';
  2190   0013C6  5040               	movf	_Potencia^0,w,c
  2191   0013C8  A4D8               	btfss	status,2,c
  2192   0013CA  D002               	goto	l3545
  2193   0013CC  0E2B               	movlw	43
  2194   0013CE  0012               	return	
  2195   0013D0                     l3545:
  2196                           
  2197                           ;Lab4.c: 234: else if(Potencia) return '^';
  2198   0013D0  5040               	movf	_Potencia^0,w,c
  2199   0013D2  B4D8               	btfsc	status,2,c
  2200   0013D4  D04C               	goto	l301
  2201   0013D6  0E5E               	movlw	94
  2202   0013D8  0012               	return	
  2203   0013DA                     l269:
  2204                           
  2205                           ;Lab4.c: 236: else if(RB5==0) return '=';
  2206   0013DA  BA81               	btfsc	3969,5,c	;volatile
  2207   0013DC  D002               	goto	l275
  2208   0013DE  0E3D               	movlw	61
  2209   0013E0  0012               	return	
  2210   0013E2                     l275:
  2211                           
  2212                           ;Lab4.c: 237: else if(RB6==0) return '0';
  2213   0013E2  BC81               	btfsc	3969,6,c	;volatile
  2214   0013E4  D002               	goto	l277
  2215   0013E6  0E30               	movlw	48
  2216   0013E8  0012               	return	
  2217   0013EA                     l277:
  2218                           
  2219                           ;Lab4.c: 238: else if(RB7==0) return 'C';
  2220   0013EA  BE81               	btfsc	3969,7,c	;volatile
  2221   0013EC  D002               	goto	l3569
  2222   0013EE  0E43               	movlw	67
  2223   0013F0  0012               	return	
  2224   0013F2                     l3569:
  2225                           
  2226                           ;Lab4.c: 239: else{;Lab4.c: 240: LATB=0b11111101;
  2227   0013F2  0EFD               	movlw	253
  2228   0013F4  6E8A               	movwf	138,c	;volatile
  2229                           
  2230                           ;Lab4.c: 241: if(RB4==0){
  2231   0013F6  B881               	btfsc	3969,4,c	;volatile
  2232   0013F8  D00A               	goto	l281
  2233                           
  2234                           ;Lab4.c: 242: if(!Factorial) return '-';
  2235   0013FA  503F               	movf	_Factorial^0,w,c
  2236   0013FC  A4D8               	btfss	status,2,c
  2237   0013FE  D002               	goto	l3581
  2238   001400  0E2D               	movlw	45
  2239   001402  0012               	return	
  2240   001404                     l3581:
  2241                           
  2242                           ;Lab4.c: 243: else if(Factorial) return '!';
  2243   001404  503F               	movf	_Factorial^0,w,c
  2244   001406  B4D8               	btfsc	status,2,c
  2245   001408  D032               	goto	l301
  2246   00140A  0E21               	movlw	33
  2247   00140C  0012               	return	
  2248   00140E                     l281:
  2249                           
  2250                           ;Lab4.c: 245: else if(RB5==0) return '9';
  2251   00140E  BA81               	btfsc	3969,5,c	;volatile
  2252   001410  D002               	goto	l286
  2253   001412  0E39               	movlw	57
  2254   001414  0012               	return	
  2255   001416                     l286:
  2256                           
  2257                           ;Lab4.c: 246: else if(RB6==0) return '8';
  2258   001416  BC81               	btfsc	3969,6,c	;volatile
  2259   001418  D002               	goto	l288
  2260   00141A  0E38               	movlw	56
  2261   00141C  0012               	return	
  2262   00141E                     l288:
  2263                           
  2264                           ;Lab4.c: 247: else if(RB7==0) return '7';
  2265   00141E  BE81               	btfsc	3969,7,c	;volatile
  2266   001420  D002               	goto	l3605
  2267   001422  0E37               	movlw	55
  2268   001424  0012               	return	
  2269   001426                     l3605:
  2270                           
  2271                           ;Lab4.c: 248: else{;Lab4.c: 249: LATB=0b11111011;
  2272   001426  0EFB               	movlw	251
  2273   001428  6E8A               	movwf	138,c	;volatile
  2274                           
  2275                           ;Lab4.c: 250: if(RB4==0) return 'x';
  2276   00142A  B881               	btfsc	3969,4,c	;volatile
  2277   00142C  D002               	goto	l292
  2278   00142E  0E78               	movlw	120
  2279   001430  0012               	return	
  2280   001432                     l292:
  2281                           
  2282                           ;Lab4.c: 251: else if(RB5==0) return '6';
  2283   001432  BA81               	btfsc	3969,5,c	;volatile
  2284   001434  D002               	goto	l294
  2285   001436  0E36               	movlw	54
  2286   001438  0012               	return	
  2287   00143A                     l294:
  2288                           
  2289                           ;Lab4.c: 252: else if(RB6==0) return '5';
  2290   00143A  BC81               	btfsc	3969,6,c	;volatile
  2291   00143C  D002               	goto	l296
  2292   00143E  0E35               	movlw	53
  2293   001440  0012               	return	
  2294   001442                     l296:
  2295                           
  2296                           ;Lab4.c: 253: else if(RB7==0) return '4';
  2297   001442  BE81               	btfsc	3969,7,c	;volatile
  2298   001444  D002               	goto	l3633
  2299   001446  0E34               	movlw	52
  2300   001448  0012               	return	
  2301   00144A                     l3633:
  2302                           
  2303                           ;Lab4.c: 254: else{;Lab4.c: 255: LATB=0b11110111;
  2304   00144A  0EF7               	movlw	247
  2305   00144C  6E8A               	movwf	138,c	;volatile
  2306                           
  2307                           ;Lab4.c: 256: if(RB4==0) return '/';
  2308   00144E  B881               	btfsc	3969,4,c	;volatile
  2309   001450  D002               	goto	l300
  2310   001452  0E2F               	movlw	47
  2311   001454  0012               	return	
  2312   001456                     l300:
  2313                           
  2314                           ;Lab4.c: 257: else if(RB5==0) return '3';
  2315   001456  BA81               	btfsc	3969,5,c	;volatile
  2316   001458  D002               	goto	l302
  2317   00145A  0E33               	movlw	51
  2318   00145C  0012               	return	
  2319   00145E                     l302:
  2320                           
  2321                           ;Lab4.c: 258: else if(RB6==0) return '2';
  2322   00145E  BC81               	btfsc	3969,6,c	;volatile
  2323   001460  D002               	goto	l304
  2324   001462  0E32               	movlw	50
  2325   001464  0012               	return	
  2326   001466                     l304:
  2327                           
  2328                           ;Lab4.c: 259: else if(RB7==0) return '1';
  2329   001466  BE81               	btfsc	3969,7,c	;volatile
  2330   001468  D002               	goto	l301
  2331   00146A  0E31               	movlw	49
  2332   00146C  0012               	return	
  2333   00146E                     l301:
  2334                           
  2335                           ;Lab4.c: 260: };Lab4.c: 261: };Lab4.c: 262: };Lab4.c: 263: return '?';
  2336   00146E  0E3F               	movlw	63
  2337   001470  0012               	return		;funcret
  2338   001472                     __end_of_LeerTeclado:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _InicializaLCD *****************
  2342 ;; Defined at:
  2343 ;;		line 64 in file "LibLCDXC8.h"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 8
  2364 ;; This function calls:
  2365 ;;		_BorraLCD
  2366 ;;		_EnviaDato
  2367 ;;		_HabilitaLCD
  2368 ;;		_RetardoLCD
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text5
  2375   00151E                     __ptext5:
  2376                           	callstack 0
  2377   00151E                     _InicializaLCD:
  2378                           	callstack 22
  2379                           
  2380                           ;LibLCDXC8.h: 66: LATE0=0;
  2381                           
  2382                           ;incstack = 0
  2383   00151E  908D               	bcf	3981,0,c	;volatile
  2384                           
  2385                           ;LibLCDXC8.h: 67: if(interfaz==4)
  2386   001520  0E04               	movlw	4
  2387   001522  1849               	xorwf	_interfaz^0,w,c
  2388   001524  A4D8               	btfss	status,2,c
  2389   001526  D004               	goto	l3463
  2390                           
  2391                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | 0x30;
  2392   001528  508C               	movf	140,w,c	;volatile
  2393   00152A  0B0F               	andlw	15
  2394   00152C  0930               	iorlw	48
  2395   00152E  D001               	goto	L4
  2396   001530                     l3463:
  2397                           
  2398                           ;LibLCDXC8.h: 69: else;LibLCDXC8.h: 70: LATD=0x3F;
  2399   001530  0E3F               	movlw	63
  2400   001532                     L4:
  2401   001532  6E8C               	movwf	140,c	;volatile
  2402                           
  2403                           ;LibLCDXC8.h: 71: HabilitaLCD();
  2404   001534  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  2405                           
  2406                           ;LibLCDXC8.h: 72: RetardoLCD(1);
  2407   001538  0E01               	movlw	1
  2408   00153A  ECF5  F00B         	call	_RetardoLCD
  2409                           
  2410                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2411   00153E  0E04               	movlw	4
  2412   001540  1849               	xorwf	_interfaz^0,w,c
  2413   001542  A4D8               	btfss	status,2,c
  2414   001544  D004               	goto	l3473
  2415                           
  2416                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  2417   001546  508C               	movf	140,w,c	;volatile
  2418   001548  0B0F               	andlw	15
  2419   00154A  0930               	iorlw	48
  2420   00154C  D001               	goto	L5
  2421   00154E                     l3473:
  2422                           
  2423                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2424   00154E  0E3F               	movlw	63
  2425   001550                     L5:
  2426   001550  6E8C               	movwf	140,c	;volatile
  2427                           
  2428                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2429   001552  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  2430                           
  2431                           ;LibLCDXC8.h: 78: RetardoLCD(3);
  2432   001556  0E03               	movlw	3
  2433   001558  ECF5  F00B         	call	_RetardoLCD
  2434                           
  2435                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2436   00155C  0E04               	movlw	4
  2437   00155E  1849               	xorwf	_interfaz^0,w,c
  2438   001560  A4D8               	btfss	status,2,c
  2439   001562  D004               	goto	l3483
  2440                           
  2441                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  2442   001564  508C               	movf	140,w,c	;volatile
  2443   001566  0B0F               	andlw	15
  2444   001568  0930               	iorlw	48
  2445   00156A  D001               	goto	L6
  2446   00156C                     l3483:
  2447                           
  2448                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2449   00156C  0E3F               	movlw	63
  2450   00156E                     L6:
  2451   00156E  6E8C               	movwf	140,c	;volatile
  2452                           
  2453                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2454   001570  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  2455                           
  2456                           ;LibLCDXC8.h: 84: RetardoLCD(4);
  2457   001574  0E04               	movlw	4
  2458   001576  ECF5  F00B         	call	_RetardoLCD
  2459                           
  2460                           ;LibLCDXC8.h: 85: if(interfaz==4){
  2461   00157A  0E04               	movlw	4
  2462   00157C  1849               	xorwf	_interfaz^0,w,c
  2463   00157E  A4D8               	btfss	status,2,c
  2464   001580  D011               	goto	l3503
  2465                           
  2466                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x20;
  2467   001582  508C               	movf	140,w,c	;volatile
  2468   001584  0B0F               	andlw	15
  2469   001586  0920               	iorlw	32
  2470   001588  6E8C               	movwf	140,c	;volatile
  2471                           
  2472                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2473   00158A  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  2474                           
  2475                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  2476   00158E  0E04               	movlw	4
  2477   001590  ECF5  F00B         	call	_RetardoLCD
  2478                           
  2479                           ;LibLCDXC8.h: 89: EnviaDato(0x2F);
  2480   001594  0E2F               	movlw	47
  2481   001596  ECC6  F00C         	call	_EnviaDato
  2482                           
  2483                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2484   00159A  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  2485                           
  2486                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2487   00159E  0E04               	movlw	4
  2488   0015A0  ECF5  F00B         	call	_RetardoLCD
  2489   0015A4                     l3503:
  2490                           
  2491                           ;LibLCDXC8.h: 92: };LibLCDXC8.h: 93: BorraLCD();
  2492   0015A4  ECD5  F00D         	call	_BorraLCD	;wreg free
  2493                           
  2494                           ;LibLCDXC8.h: 94: EnviaDato(0xF);
  2495   0015A8  0E0F               	movlw	15
  2496   0015AA  ECC6  F00C         	call	_EnviaDato
  2497                           
  2498                           ;LibLCDXC8.h: 95: HabilitaLCD();
  2499   0015AE  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  2500                           
  2501                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  2502   0015B2  0E04               	movlw	4
  2503   0015B4  ECF5  F00B         	call	_RetardoLCD
  2504   0015B8  0012               	return		;funcret
  2505   0015BA                     __end_of_InicializaLCD:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _BorraLCD *****************
  2509 ;; Defined at:
  2510 ;;		line 105 in file "LibLCDXC8.h"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2527 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 7
  2531 ;; This function calls:
  2532 ;;		_EnviaDato
  2533 ;;		_HabilitaLCD
  2534 ;;		_RetardoLCD
  2535 ;; This function is called by:
  2536 ;;		_InicializaLCD
  2537 ;;		_main
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text6
  2542   001BAA                     __ptext6:
  2543                           	callstack 0
  2544   001BAA                     _BorraLCD:
  2545                           	callstack 22
  2546                           
  2547                           ;LibLCDXC8.h: 107: LATE0=0;
  2548                           
  2549                           ;incstack = 0
  2550   001BAA  908D               	bcf	3981,0,c	;volatile
  2551                           
  2552                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  2553   001BAC  0E01               	movlw	1
  2554   001BAE  ECC6  F00C         	call	_EnviaDato
  2555                           
  2556                           ;LibLCDXC8.h: 109: HabilitaLCD();
  2557   001BB2  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  2558                           
  2559                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  2560   001BB6  0E02               	movlw	2
  2561   001BB8  ECF5  F00B         	call	_RetardoLCD
  2562   001BBC  0012               	return		;funcret
  2563   001BBE                     __end_of_BorraLCD:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _Imprimir_Resultado *****************
  2567 ;; Defined at:
  2568 ;;		line 330 in file "Lab4.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  Resultado       4   27[COMRAM] long 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  k               2    1[BANK0 ] int 
  2573 ;;  j               2    5[BANK0 ] int 
  2574 ;;  i               2    3[BANK0 ] int 
  2575 ;;  Potencia        4    7[BANK0 ] long 
  2576 ;;  flag            1    0[BANK0 ] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2586 ;;      Params:         4       0       0       0       0       0       0       0       0
  2587 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2588 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2589 ;;      Totals:         8      11       0       0       0       0       0       0       0
  2590 ;;Total ram usage:       19 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 9
  2593 ;; This function calls:
  2594 ;;		_DireccionaLCD
  2595 ;;		_EscribeLCD_c
  2596 ;;		_MensajeLCD_Var
  2597 ;;		___aldiv
  2598 ;;		___almod
  2599 ;;		___lmul
  2600 ;;		___lwdiv
  2601 ;;		___lwmod
  2602 ;;		___wmul
  2603 ;; This function is called by:
  2604 ;;		_main
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text7
  2609   000F80                     __ptext7:
  2610                           	callstack 0
  2611   000F80                     _Imprimir_Resultado:
  2612                           	callstack 21
  2613                           
  2614                           ;Lab4.c: 332: bool flag=0;
  2615                           
  2616                           ;incstack = 0
  2617   000F80  0E00               	movlw	0
  2618   000F82  0100               	movlb	0	; () banked
  2619   000F84  6F60               	movwf	Imprimir_Resultado@flag& (0+255),b
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;Lab4.c: 333: if ((Parte_Decimal-(Resultado*100))>0 | (Parte_Decimal-(Resultado*100))<0)
      +                          {
  2623   000F86  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___lmul@multiplier
  2624   000F8A  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___lmul@multiplier+1
  2625   000F8E  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___lmul@multiplier+2
  2626   000F92  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___lmul@multiplier+3
  2627   000F96  0E9C               	movlw	156
  2628   000F98  6E12               	movwf	___lmul@multiplicand^0,c
  2629   000F9A  0EFF               	movlw	255
  2630   000F9C  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2631   000F9E  0EFF               	movlw	255
  2632   000FA0  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2633   000FA2  0EFF               	movlw	255
  2634   000FA4  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2635   000FA6  ECCA  F00B         	call	___lmul	;wreg free
  2636   000FAA  502A               	movf	_Parte_Decimal^0,w,c
  2637   000FAC  240E               	addwf	?___lmul^0,w,c
  2638   000FAE  6E20               	movwf	??_Imprimir_Resultado^0,c
  2639   000FB0  502B               	movf	(_Parte_Decimal+1)^0,w,c
  2640   000FB2  200F               	addwfc	(?___lmul+1)^0,w,c
  2641   000FB4  6E21               	movwf	(??_Imprimir_Resultado+1)^0,c
  2642   000FB6  502C               	movf	(_Parte_Decimal+2)^0,w,c
  2643   000FB8  2010               	addwfc	(?___lmul+2)^0,w,c
  2644   000FBA  6E22               	movwf	(??_Imprimir_Resultado+2)^0,c
  2645   000FBC  502D               	movf	(_Parte_Decimal+3)^0,w,c
  2646   000FBE  2011               	addwfc	(?___lmul+3)^0,w,c
  2647   000FC0  6E23               	movwf	(??_Imprimir_Resultado+3)^0,c
  2648   000FC2  5020               	movf	??_Imprimir_Resultado^0,w,c
  2649   000FC4  1021               	iorwf	(??_Imprimir_Resultado+1)^0,w,c
  2650   000FC6  1022               	iorwf	(??_Imprimir_Resultado+2)^0,w,c
  2651   000FC8  1023               	iorwf	(??_Imprimir_Resultado+3)^0,w,c
  2652   000FCA  B4D8               	btfsc	status,2,c
  2653   000FCC  D058               	goto	l3721
  2654                           
  2655                           ;Lab4.c: 334: for (int i = 0; i < 3; i++) {
  2656   000FCE  0E00               	movlw	0
  2657   000FD0  0100               	movlb	0	; () banked
  2658   000FD2  6F64               	movwf	(Imprimir_Resultado@i+1)& (0+255),b
  2659   000FD4  0E00               	movlw	0
  2660   000FD6  6F63               	movwf	Imprimir_Resultado@i& (0+255),b
  2661   000FD8                     l3705:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;Lab4.c: 335: Resultado = Numero_1 / Numero_2;
  2665   000FD8  C03C  F014         	movff	_Numero_1,___lwdiv@dividend
  2666   000FDC  C03D  F015         	movff	_Numero_1+1,___lwdiv@dividend+1
  2667   000FE0  C03A  F016         	movff	_Numero_2,___lwdiv@divisor
  2668   000FE4  C03B  F017         	movff	_Numero_2+1,___lwdiv@divisor+1
  2669   000FE8  EC4B  F00C         	call	___lwdiv	;wreg free
  2670   000FEC  C014  F01C         	movff	?___lwdiv,Imprimir_Resultado@Resultado
  2671   000FF0  C015  F01D         	movff	?___lwdiv+1,Imprimir_Resultado@Resultado+1
  2672   000FF4  6A1E               	clrf	(Imprimir_Resultado@Resultado+2)^0,c
  2673   000FF6  6A1F               	clrf	(Imprimir_Resultado@Resultado+3)^0,c
  2674                           
  2675                           ;Lab4.c: 336: m = Numero_1 % Numero_2;
  2676   000FF8  C03C  F00E         	movff	_Numero_1,___lwmod@dividend
  2677   000FFC  C03D  F00F         	movff	_Numero_1+1,___lwmod@dividend+1
  2678   001000  C03A  F010         	movff	_Numero_2,___lwmod@divisor
  2679   001004  C03B  F011         	movff	_Numero_2+1,___lwmod@divisor+1
  2680   001008  EC0C  F00D         	call	___lwmod	;wreg free
  2681   00100C  C00E  F042         	movff	?___lwmod,_m
  2682   001010  C00F  F043         	movff	?___lwmod+1,_m+1
  2683   001014  6A44               	clrf	(_m+2)^0,c
  2684   001016  6A45               	clrf	(_m+3)^0,c
  2685                           
  2686                           ;Lab4.c: 337: EscribeLCD_c(Resultado+'0');
  2687   001018  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  2688   00101A  0F30               	addlw	48
  2689   00101C  ECA9  F00D         	call	_EscribeLCD_c
  2690                           
  2691                           ;Lab4.c: 338: if(i == 0 && m != 0) {
  2692   001020  0100               	movlb	0	; () banked
  2693   001022  5163               	movf	Imprimir_Resultado@i& (0+255),w,b
  2694   001024  1164               	iorwf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2695   001026  A4D8               	btfss	status,2,c
  2696   001028  D009               	goto	l3713
  2697                           
  2698                           ; BSR set to: 0
  2699   00102A  5042               	movf	_m^0,w,c
  2700   00102C  1043               	iorwf	(_m+1)^0,w,c
  2701   00102E  1044               	iorwf	(_m+2)^0,w,c
  2702   001030  1045               	iorwf	(_m+3)^0,w,c
  2703   001032  B4D8               	btfsc	status,2,c
  2704   001034  D003               	goto	l3713
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;Lab4.c: 339: EscribeLCD_c(',');
  2708   001036  0E2C               	movlw	44
  2709   001038  ECA9  F00D         	call	_EscribeLCD_c
  2710   00103C                     l3713:
  2711                           
  2712                           ;Lab4.c: 340: };Lab4.c: 342: if (m != 0) {
  2713   00103C  5042               	movf	_m^0,w,c
  2714   00103E  1043               	iorwf	(_m+1)^0,w,c
  2715   001040  1044               	iorwf	(_m+2)^0,w,c
  2716   001042  1045               	iorwf	(_m+3)^0,w,c
  2717   001044  B4D8               	btfsc	status,2,c
  2718   001046  0012               	return	
  2719                           
  2720                           ;Lab4.c: 343: Numero_1 = m * 10;
  2721   001048  C042  F00E         	movff	_m,___wmul@multiplier
  2722   00104C  C043  F00F         	movff	_m+1,___wmul@multiplier+1
  2723   001050  0E00               	movlw	0
  2724   001052  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  2725   001054  0E0A               	movlw	10
  2726   001056  6E10               	movwf	___wmul@multiplicand^0,c
  2727   001058  EC8A  F00D         	call	___wmul	;wreg free
  2728   00105C  C00E  F03C         	movff	?___wmul,_Numero_1
  2729   001060  C00F  F03D         	movff	?___wmul+1,_Numero_1+1
  2730                           
  2731                           ;Lab4.c: 344: } else {
  2732   001064  0100               	movlb	0	; () banked
  2733   001066  4B63               	infsnz	Imprimir_Resultado@i& (0+255),f,b
  2734   001068  2B64               	incf	(Imprimir_Resultado@i+1)& (0+255),f,b
  2735                           
  2736                           ; BSR set to: 0
  2737   00106A  BF64               	btfsc	(Imprimir_Resultado@i+1)& (0+255),7,b
  2738   00106C  D7B5               	goto	l3705
  2739   00106E  5164               	movf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2740   001070  E105               	bnz	u4160
  2741   001072  0E03               	movlw	3
  2742   001074  5D63               	subwf	Imprimir_Resultado@i& (0+255),w,b
  2743   001076  B0D8               	btfsc	status,0,c
  2744   001078  0012               	return	
  2745   00107A  D7AE               	goto	l3705
  2746   00107C                     u4160:
  2747   00107C  0012               	return	
  2748   00107E                     l3721:
  2749                           
  2750                           ;Lab4.c: 350: if(Resultado>0x8000 & Resultado!=1000 & Resultado !=1001 & Negativo==1){
  2751   00107E  BE1F               	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2752   001080  D030               	goto	l3735
  2753   001082  501F               	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2754   001084  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2755   001086  E105               	bnz	u4170
  2756   001088  041C               	decf	Imprimir_Resultado@Resultado^0,w,c
  2757   00108A  0E80               	movlw	128
  2758   00108C  581D               	subwfb	(Imprimir_Resultado@Resultado+1)^0,w,c
  2759   00108E  A0D8               	btfss	status,0,c
  2760   001090  D028               	goto	l3735
  2761   001092                     u4170:
  2762   001092  0EE8               	movlw	232
  2763   001094  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2764   001096  E106               	bnz	u4180
  2765   001098  0E03               	movlw	3
  2766   00109A  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2767   00109C  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2768   00109E  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2769   0010A0  B4D8               	btfsc	status,2,c
  2770   0010A2  D01F               	goto	l3735
  2771   0010A4                     u4180:
  2772   0010A4  0EE9               	movlw	233
  2773   0010A6  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2774   0010A8  E106               	bnz	u4190
  2775   0010AA  0E03               	movlw	3
  2776   0010AC  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2777   0010AE  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2778   0010B0  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2779   0010B2  B4D8               	btfsc	status,2,c
  2780   0010B4  D016               	goto	l3735
  2781   0010B6                     u4190:
  2782   0010B6  043E               	decf	_Negativo^0,w,c
  2783   0010B8  A4D8               	btfss	status,2,c
  2784   0010BA  D013               	goto	l3735
  2785                           
  2786                           ;Lab4.c: 351: EscribeLCD_c('-');
  2787   0010BC  0E2D               	movlw	45
  2788   0010BE  ECA9  F00D         	call	_EscribeLCD_c
  2789                           
  2790                           ;Lab4.c: 352: DireccionaLCD(0x85);
  2791   0010C2  0E85               	movlw	133
  2792   0010C4  ECB4  F00D         	call	_DireccionaLCD
  2793                           
  2794                           ;Lab4.c: 353: Resultado = ~Resultado+1;
  2795   0010C8  1E1F               	comf	(Imprimir_Resultado@Resultado+3)^0,f,c
  2796   0010CA  1E1E               	comf	(Imprimir_Resultado@Resultado+2)^0,f,c
  2797   0010CC  1E1D               	comf	(Imprimir_Resultado@Resultado+1)^0,f,c
  2798   0010CE  6C1C               	negf	Imprimir_Resultado@Resultado^0,c
  2799   0010D0  0E00               	movlw	0
  2800   0010D2  221D               	addwfc	(Imprimir_Resultado@Resultado+1)^0,f,c
  2801   0010D4  221E               	addwfc	(Imprimir_Resultado@Resultado+2)^0,f,c
  2802   0010D6  221F               	addwfc	(Imprimir_Resultado@Resultado+3)^0,f,c
  2803                           
  2804                           ;Lab4.c: 354: EscribeLCD_c(Resultado+'0');
  2805   0010D8  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  2806   0010DA  0F30               	addlw	48
  2807   0010DC  ECA9  F00D         	call	_EscribeLCD_c
  2808                           
  2809                           ;Lab4.c: 355: }else{
  2810   0010E0  0012               	return	
  2811   0010E2                     l3735:
  2812                           
  2813                           ;Lab4.c: 356: if(Resultado>=0xA & Resultado!=1000 & Resultado !=1001){
  2814   0010E2  BE1F               	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2815   0010E4  D0D7               	goto	l3783
  2816   0010E6  501F               	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2817   0010E8  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2818   0010EA  101D               	iorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2819   0010EC  E104               	bnz	u4210
  2820   0010EE  0E0A               	movlw	10
  2821   0010F0  5C1C               	subwf	Imprimir_Resultado@Resultado^0,w,c
  2822   0010F2  A0D8               	btfss	status,0,c
  2823   0010F4  D0CF               	goto	l3783
  2824   0010F6                     u4210:
  2825   0010F6  0EE8               	movlw	232
  2826   0010F8  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2827   0010FA  E106               	bnz	u4220
  2828   0010FC  0E03               	movlw	3
  2829   0010FE  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2830   001100  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2831   001102  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2832   001104  B4D8               	btfsc	status,2,c
  2833   001106  D0C6               	goto	l3783
  2834   001108                     u4220:
  2835   001108  0EE9               	movlw	233
  2836   00110A  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2837   00110C  E106               	bnz	u4230
  2838   00110E  0E03               	movlw	3
  2839   001110  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2840   001112  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2841   001114  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2842   001116  B4D8               	btfsc	status,2,c
  2843   001118  D0BD               	goto	l3783
  2844   00111A                     u4230:
  2845                           
  2846                           ;Lab4.c: 357: for(int j=9;j>=0;j--){
  2847   00111A  0E00               	movlw	0
  2848   00111C  0100               	movlb	0	; () banked
  2849   00111E  6F66               	movwf	(Imprimir_Resultado@j+1)& (0+255),b
  2850   001120  0E09               	movlw	9
  2851   001122  6F65               	movwf	Imprimir_Resultado@j& (0+255),b
  2852   001124                     l3747:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;Lab4.c: 358: Potencia = 10;
  2856   001124  0E0A               	movlw	10
  2857   001126  6F67               	movwf	Imprimir_Resultado@Potencia& (0+255),b
  2858   001128  0E00               	movlw	0
  2859   00112A  6F68               	movwf	(Imprimir_Resultado@Potencia+1)& (0+255),b
  2860   00112C  0E00               	movlw	0
  2861   00112E  6F69               	movwf	(Imprimir_Resultado@Potencia+2)& (0+255),b
  2862   001130  0E00               	movlw	0
  2863   001132  6F6A               	movwf	(Imprimir_Resultado@Potencia+3)& (0+255),b
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;Lab4.c: 359: for(int k=j-1;k>0;k--){
  2867   001134  0EFF               	movlw	255
  2868   001136  2565               	addwf	Imprimir_Resultado@j& (0+255),w,b
  2869   001138  6F61               	movwf	Imprimir_Resultado@k& (0+255),b
  2870   00113A  0EFF               	movlw	255
  2871   00113C  2166               	addwfc	(Imprimir_Resultado@j+1)& (0+255),w,b
  2872   00113E  6F62               	movwf	(Imprimir_Resultado@k+1)& (0+255),b
  2873   001140                     l3751:
  2874                           
  2875                           ; BSR set to: 0
  2876   001140  BF62               	btfsc	(Imprimir_Resultado@k+1)& (0+255),7,b
  2877   001142  D024               	goto	l3761
  2878   001144  5162               	movf	(Imprimir_Resultado@k+1)& (0+255),w,b
  2879   001146  E103               	bnz	l3755
  2880   001148  0561               	decf	Imprimir_Resultado@k& (0+255),w,b
  2881   00114A  A0D8               	btfss	status,0,c
  2882   00114C  D01F               	goto	l3761
  2883   00114E                     l3755:
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;Lab4.c: 360: Potencia = Potencia*10;
  2887   00114E  C067  F00E         	movff	Imprimir_Resultado@Potencia,___lmul@multiplier
  2888   001152  C068  F00F         	movff	Imprimir_Resultado@Potencia+1,___lmul@multiplier+1
  2889   001156  C069  F010         	movff	Imprimir_Resultado@Potencia+2,___lmul@multiplier+2
  2890   00115A  C06A  F011         	movff	Imprimir_Resultado@Potencia+3,___lmul@multiplier+3
  2891   00115E  0E0A               	movlw	10
  2892   001160  6E12               	movwf	___lmul@multiplicand^0,c
  2893   001162  0E00               	movlw	0
  2894   001164  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2895   001166  0E00               	movlw	0
  2896   001168  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2897   00116A  0E00               	movlw	0
  2898   00116C  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2899   00116E  ECCA  F00B         	call	___lmul	;wreg free
  2900   001172  C00E  F067         	movff	?___lmul,Imprimir_Resultado@Potencia
  2901   001176  C00F  F068         	movff	?___lmul+1,Imprimir_Resultado@Potencia+1
  2902   00117A  C010  F069         	movff	?___lmul+2,Imprimir_Resultado@Potencia+2
  2903   00117E  C011  F06A         	movff	?___lmul+3,Imprimir_Resultado@Potencia+3
  2904   001182  0100               	movlb	0	; () banked
  2905   001184  0761               	decf	Imprimir_Resultado@k& (0+255),f,b
  2906   001186  A0D8               	btfss	status,0,c
  2907   001188  0762               	decf	(Imprimir_Resultado@k+1)& (0+255),f,b
  2908   00118A  D7DA               	goto	l3751
  2909   00118C                     l3761:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;Lab4.c: 361: };Lab4.c: 362: if(Resultado/Potencia>0){
  2913   00118C  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2914   001190  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2915   001194  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2916   001198  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2917   00119C  C067  F012         	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2918   0011A0  C068  F013         	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2919   0011A4  C069  F014         	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2920   0011A8  C06A  F015         	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2921   0011AC  EC6E  F009         	call	___aldiv	;wreg free
  2922   0011B0  BE11               	btfsc	(?___aldiv+3)^0,7,c
  2923   0011B2  D03B               	goto	l3769
  2924   0011B4  5011               	movf	(?___aldiv+3)^0,w,c
  2925   0011B6  1010               	iorwf	(?___aldiv+2)^0,w,c
  2926   0011B8  100F               	iorwf	(?___aldiv+1)^0,w,c
  2927   0011BA  E103               	bnz	u4250
  2928   0011BC  040E               	decf	?___aldiv^0,w,c
  2929   0011BE  A0D8               	btfss	status,0,c
  2930   0011C0  D034               	goto	l3769
  2931   0011C2                     u4250:
  2932                           
  2933                           ;Lab4.c: 363: flag = 1;
  2934   0011C2  0E01               	movlw	1
  2935   0011C4  0100               	movlb	0	; () banked
  2936   0011C6  6F60               	movwf	Imprimir_Resultado@flag& (0+255),b
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;Lab4.c: 364: EscribeLCD_c(Resultado/Potencia+48);
  2940   0011C8  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2941   0011CC  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2942   0011D0  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2943   0011D4  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2944   0011D8  C067  F012         	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2945   0011DC  C068  F013         	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2946   0011E0  C069  F014         	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2947   0011E4  C06A  F015         	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2948   0011E8  EC6E  F009         	call	___aldiv	;wreg free
  2949   0011EC  500E               	movf	?___aldiv^0,w,c
  2950   0011EE  0F30               	addlw	48
  2951   0011F0  ECA9  F00D         	call	_EscribeLCD_c
  2952                           
  2953                           ;Lab4.c: 365: Resultado=Resultado%Potencia;
  2954   0011F4  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___almod@dividend
  2955   0011F8  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___almod@dividend+1
  2956   0011FC  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___almod@dividend+2
  2957   001200  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___almod@dividend+3
  2958   001204  C067  F012         	movff	Imprimir_Resultado@Potencia,___almod@divisor
  2959   001208  C068  F013         	movff	Imprimir_Resultado@Potencia+1,___almod@divisor+1
  2960   00120C  C069  F014         	movff	Imprimir_Resultado@Potencia+2,___almod@divisor+2
  2961   001210  C06A  F015         	movff	Imprimir_Resultado@Potencia+3,___almod@divisor+3
  2962   001214  EC39  F00A         	call	___almod	;wreg free
  2963   001218  C00E  F01C         	movff	?___almod,Imprimir_Resultado@Resultado
  2964   00121C  C00F  F01D         	movff	?___almod+1,Imprimir_Resultado@Resultado+1
  2965   001220  C010  F01E         	movff	?___almod+2,Imprimir_Resultado@Resultado+2
  2966   001224  C011  F01F         	movff	?___almod+3,Imprimir_Resultado@Resultado+3
  2967                           
  2968                           ;Lab4.c: 366: }else if( (Resultado/Potencia)==0 && flag){
  2969   001228  D02E               	goto	l3779
  2970   00122A                     l3769:
  2971   00122A  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2972   00122E  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2973   001232  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2974   001236  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2975   00123A  C067  F012         	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2976   00123E  C068  F013         	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2977   001242  C069  F014         	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2978   001246  C06A  F015         	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2979   00124A  EC6E  F009         	call	___aldiv	;wreg free
  2980   00124E  500E               	movf	?___aldiv^0,w,c
  2981   001250  100F               	iorwf	(?___aldiv+1)^0,w,c
  2982   001252  1010               	iorwf	(?___aldiv+2)^0,w,c
  2983   001254  1011               	iorwf	(?___aldiv+3)^0,w,c
  2984   001256  A4D8               	btfss	status,2,c
  2985   001258  D016               	goto	l3779
  2986   00125A  0100               	movlb	0	; () banked
  2987   00125C  5160               	movf	Imprimir_Resultado@flag& (0+255),w,b
  2988   00125E  B4D8               	btfsc	status,2,c
  2989   001260  D012               	goto	l3779
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;Lab4.c: 367: if(Resultado<10) EscribeLCD_c(Resultado+48);
  2993   001262  BE1F               	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2994   001264  D008               	goto	u4280
  2995   001266  501F               	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2996   001268  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2997   00126A  101D               	iorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2998   00126C  E109               	bnz	l3777
  2999   00126E  0E0A               	movlw	10
  3000   001270  5C1C               	subwf	Imprimir_Resultado@Resultado^0,w,c
  3001   001272  B0D8               	btfsc	status,0,c
  3002   001274  D005               	goto	l3777
  3003   001276                     u4280:
  3004                           
  3005                           ; BSR set to: 0
  3006   001276  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  3007   001278  0F30               	addlw	48
  3008   00127A  ECA9  F00D         	call	_EscribeLCD_c
  3009   00127E  D003               	goto	l3779
  3010   001280                     l3777:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;Lab4.c: 368: else EscribeLCD_c(48);
  3014   001280  0E30               	movlw	48
  3015   001282  ECA9  F00D         	call	_EscribeLCD_c
  3016   001286                     l3779:
  3017   001286  0100               	movlb	0	; () banked
  3018   001288  0765               	decf	Imprimir_Resultado@j& (0+255),f,b
  3019   00128A  A0D8               	btfss	status,0,c
  3020   00128C  0766               	decf	(Imprimir_Resultado@j+1)& (0+255),f,b
  3021                           
  3022                           ; BSR set to: 0
  3023   00128E  BF66               	btfsc	(Imprimir_Resultado@j+1)& (0+255),7,b
  3024   001290  0012               	return	
  3025   001292  D748               	goto	l3747
  3026   001294                     l3783:
  3027                           
  3028                           ;Lab4.c: 372: if(Resultado==1000){
  3029   001294  0EE8               	movlw	232
  3030   001296  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  3031   001298  E10B               	bnz	l3787
  3032   00129A  0E03               	movlw	3
  3033   00129C  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  3034   00129E  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  3035   0012A0  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  3036   0012A2  A4D8               	btfss	status,2,c
  3037   0012A4  D005               	goto	l3787
  3038                           
  3039                           ;Lab4.c: 373: MensajeLCD_Var("Infinito");
  3040   0012A6  0E59               	movlw	low STR_13
  3041   0012A8  6E13               	movwf	MensajeLCD_Var@a^0,c
  3042   0012AA  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
  3043                           
  3044                           ;Lab4.c: 374: }else{
  3045   0012AE  0012               	return	
  3046   0012B0                     l3787:
  3047                           
  3048                           ;Lab4.c: 375: if(Resultado==1001){
  3049   0012B0  0EE9               	movlw	233
  3050   0012B2  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  3051   0012B4  E10E               	bnz	l3793
  3052   0012B6  0E03               	movlw	3
  3053   0012B8  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  3054   0012BA  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  3055   0012BC  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  3056   0012BE  A4D8               	btfss	status,2,c
  3057   0012C0  D008               	goto	l3793
  3058                           
  3059                           ;Lab4.c: 376: DireccionaLCD(0xC1);
  3060   0012C2  0EC1               	movlw	193
  3061   0012C4  ECB4  F00D         	call	_DireccionaLCD
  3062                           
  3063                           ;Lab4.c: 377: MensajeLCD_Var("Indeterminado");
  3064   0012C8  0E1E               	movlw	low STR_14
  3065   0012CA  6E13               	movwf	MensajeLCD_Var@a^0,c
  3066   0012CC  EC74  F00C         	call	_MensajeLCD_Var	;wreg free
  3067                           
  3068                           ;Lab4.c: 378: }else{
  3069   0012D0  0012               	return	
  3070   0012D2                     l3793:
  3071                           
  3072                           ;Lab4.c: 379: EscribeLCD_c(Resultado+'0');
  3073   0012D2  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  3074   0012D4  0F30               	addlw	48
  3075   0012D6  ECA9  F00D         	call	_EscribeLCD_c
  3076   0012DA  0012               	return		;funcret
  3077   0012DC                     __end_of_Imprimir_Resultado:
  3078                           	callstack 0
  3079                           
  3080 ;; *************** function ___wmul *****************
  3081 ;; Defined at:
  3082 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  multiplier      2   13[COMRAM] unsigned int 
  3085 ;;  multiplicand    2   15[COMRAM] unsigned int 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  product         2   17[COMRAM] unsigned int 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  2   13[COMRAM] unsigned int 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0, prodl, prodh
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3097 ;;      Params:         4       0       0       0       0       0       0       0       0
  3098 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3100 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3101 ;;Total ram usage:        6 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 5
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_main
  3108 ;;		_Imprimir_Resultado
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text8
  3113   001B14                     __ptext8:
  3114                           	callstack 0
  3115   001B14                     ___wmul:
  3116                           	callstack 25
  3117                           
  3118                           ;incstack = 0
  3119   001B14  500E               	movf	___wmul@multiplier^0,w,c
  3120   001B16  0210               	mulwf	___wmul@multiplicand^0,c
  3121   001B18  CFF3 F012          	movff	prodl,___wmul@product
  3122   001B1C  CFF4 F013          	movff	prodh,___wmul@product+1
  3123   001B20  500E               	movf	___wmul@multiplier^0,w,c
  3124   001B22  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  3125   001B24  50F3               	movf	243,w,c
  3126   001B26  2613               	addwf	(___wmul@product+1)^0,f,c
  3127   001B28  500F               	movf	(___wmul@multiplier+1)^0,w,c
  3128   001B2A  0210               	mulwf	___wmul@multiplicand^0,c
  3129   001B2C  50F3               	movf	243,w,c
  3130   001B2E  2613               	addwf	(___wmul@product+1)^0,f,c
  3131   001B30  C012  F00E         	movff	___wmul@product,?___wmul
  3132   001B34  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  3133   001B38  0012               	return		;funcret
  3134   001B3A                     __end_of___wmul:
  3135                           	callstack 0
  3136                           
  3137 ;; *************** function ___lwmod *****************
  3138 ;; Defined at:
  3139 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  dividend        2   13[COMRAM] unsigned int 
  3142 ;;  divisor         2   15[COMRAM] unsigned int 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  counter         1   17[COMRAM] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  2   13[COMRAM] unsigned int 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3154 ;;      Params:         4       0       0       0       0       0       0       0       0
  3155 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3157 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3158 ;;Total ram usage:        5 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 5
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_Imprimir_Resultado
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text9
  3169   001A18                     __ptext9:
  3170                           	callstack 0
  3171   001A18                     ___lwmod:
  3172                           	callstack 24
  3173                           
  3174                           ;incstack = 0
  3175   001A18  5010               	movf	___lwmod@divisor^0,w,c
  3176   001A1A  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  3177   001A1C  B4D8               	btfsc	status,2,c
  3178   001A1E  D018               	goto	l861
  3179   001A20  0E01               	movlw	1
  3180   001A22  6E12               	movwf	___lwmod@counter^0,c
  3181   001A24  D004               	goto	l3443
  3182   001A26                     l3441:
  3183   001A26  90D8               	bcf	status,0,c
  3184   001A28  3610               	rlcf	___lwmod@divisor^0,f,c
  3185   001A2A  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  3186   001A2C  2A12               	incf	___lwmod@counter^0,f,c
  3187   001A2E                     l3443:
  3188   001A2E  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  3189   001A30  D7FA               	goto	l3441
  3190   001A32                     u3780:
  3191   001A32  5010               	movf	___lwmod@divisor^0,w,c
  3192   001A34  5C0E               	subwf	___lwmod@dividend^0,w,c
  3193   001A36  5011               	movf	(___lwmod@divisor+1)^0,w,c
  3194   001A38  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  3195   001A3A  A0D8               	btfss	status,0,c
  3196   001A3C  D004               	goto	l3449
  3197   001A3E  5010               	movf	___lwmod@divisor^0,w,c
  3198   001A40  5E0E               	subwf	___lwmod@dividend^0,f,c
  3199   001A42  5011               	movf	(___lwmod@divisor+1)^0,w,c
  3200   001A44  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  3201   001A46                     l3449:
  3202   001A46  90D8               	bcf	status,0,c
  3203   001A48  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  3204   001A4A  3210               	rrcf	___lwmod@divisor^0,f,c
  3205   001A4C  2E12               	decfsz	___lwmod@counter^0,f,c
  3206   001A4E  D7F1               	goto	u3780
  3207   001A50                     l861:
  3208   001A50  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  3209   001A54  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  3210   001A58  0012               	return		;funcret
  3211   001A5A                     __end_of___lwmod:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function ___lwdiv *****************
  3215 ;; Defined at:
  3216 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  dividend        2   19[COMRAM] unsigned int 
  3219 ;;  divisor         2   21[COMRAM] unsigned int 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  quotient        2   24[COMRAM] unsigned int 
  3222 ;;  counter         1   23[COMRAM] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  2   19[COMRAM] unsigned int 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3232 ;;      Params:         4       0       0       0       0       0       0       0       0
  3233 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3235 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3236 ;;Total ram usage:        7 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 5
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_main
  3243 ;;		_Imprimir_Resultado
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text10
  3248   001896                     __ptext10:
  3249                           	callstack 0
  3250   001896                     ___lwdiv:
  3251                           	callstack 25
  3252                           
  3253                           ;incstack = 0
  3254   001896  0E00               	movlw	0
  3255   001898  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  3256   00189A  0E00               	movlw	0
  3257   00189C  6E19               	movwf	___lwdiv@quotient^0,c
  3258   00189E  5016               	movf	___lwdiv@divisor^0,w,c
  3259   0018A0  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3260   0018A2  B4D8               	btfsc	status,2,c
  3261   0018A4  D01C               	goto	l851
  3262   0018A6  0E01               	movlw	1
  3263   0018A8  6E18               	movwf	___lwdiv@counter^0,c
  3264   0018AA  D004               	goto	l3423
  3265   0018AC                     l3421:
  3266   0018AC  90D8               	bcf	status,0,c
  3267   0018AE  3616               	rlcf	___lwdiv@divisor^0,f,c
  3268   0018B0  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3269   0018B2  2A18               	incf	___lwdiv@counter^0,f,c
  3270   0018B4                     l3423:
  3271   0018B4  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  3272   0018B6  D7FA               	goto	l3421
  3273   0018B8                     u3750:
  3274   0018B8  90D8               	bcf	status,0,c
  3275   0018BA  3619               	rlcf	___lwdiv@quotient^0,f,c
  3276   0018BC  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3277   0018BE  5016               	movf	___lwdiv@divisor^0,w,c
  3278   0018C0  5C14               	subwf	___lwdiv@dividend^0,w,c
  3279   0018C2  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  3280   0018C4  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3281   0018C6  A0D8               	btfss	status,0,c
  3282   0018C8  D005               	goto	l3433
  3283   0018CA  5016               	movf	___lwdiv@divisor^0,w,c
  3284   0018CC  5E14               	subwf	___lwdiv@dividend^0,f,c
  3285   0018CE  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  3286   0018D0  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3287   0018D2  8019               	bsf	___lwdiv@quotient^0,0,c
  3288   0018D4                     l3433:
  3289   0018D4  90D8               	bcf	status,0,c
  3290   0018D6  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3291   0018D8  3216               	rrcf	___lwdiv@divisor^0,f,c
  3292   0018DA  2E18               	decfsz	___lwdiv@counter^0,f,c
  3293   0018DC  D7ED               	goto	u3750
  3294   0018DE                     l851:
  3295   0018DE  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  3296   0018E2  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3297   0018E6  0012               	return		;funcret
  3298   0018E8                     __end_of___lwdiv:
  3299                           	callstack 0
  3300                           
  3301 ;; *************** function ___lmul *****************
  3302 ;; Defined at:
  3303 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  multiplier      4   13[COMRAM] unsigned long 
  3306 ;;  multiplicand    4   17[COMRAM] unsigned long 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;  product         4   21[COMRAM] unsigned long 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  4   13[COMRAM] unsigned long 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3318 ;;      Params:         8       0       0       0       0       0       0       0       0
  3319 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3321 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3322 ;;Total ram usage:       12 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 5
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_main
  3329 ;;		_factorial_function
  3330 ;;		_Imprimir_Resultado
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text11
  3335   001794                     __ptext11:
  3336                           	callstack 0
  3337   001794                     ___lmul:
  3338                           	callstack 24
  3339                           
  3340                           ;incstack = 0
  3341   001794  0E00               	movlw	0
  3342   001796  6E16               	movwf	___lmul@product^0,c
  3343   001798  0E00               	movlw	0
  3344   00179A  6E17               	movwf	(___lmul@product+1)^0,c
  3345   00179C  0E00               	movlw	0
  3346   00179E  6E18               	movwf	(___lmul@product+2)^0,c
  3347   0017A0  0E00               	movlw	0
  3348   0017A2  6E19               	movwf	(___lmul@product+3)^0,c
  3349   0017A4                     l3327:
  3350   0017A4  A00E               	btfss	___lmul@multiplier^0,0,c
  3351   0017A6  D008               	goto	l3331
  3352   0017A8  5012               	movf	___lmul@multiplicand^0,w,c
  3353   0017AA  2616               	addwf	___lmul@product^0,f,c
  3354   0017AC  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  3355   0017AE  2217               	addwfc	(___lmul@product+1)^0,f,c
  3356   0017B0  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  3357   0017B2  2218               	addwfc	(___lmul@product+2)^0,f,c
  3358   0017B4  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  3359   0017B6  2219               	addwfc	(___lmul@product+3)^0,f,c
  3360   0017B8                     l3331:
  3361   0017B8  90D8               	bcf	status,0,c
  3362   0017BA  3612               	rlcf	___lmul@multiplicand^0,f,c
  3363   0017BC  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3364   0017BE  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3365   0017C0  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3366   0017C2  90D8               	bcf	status,0,c
  3367   0017C4  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  3368   0017C6  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  3369   0017C8  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  3370   0017CA  320E               	rrcf	___lmul@multiplier^0,f,c
  3371   0017CC  500E               	movf	___lmul@multiplier^0,w,c
  3372   0017CE  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  3373   0017D0  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  3374   0017D2  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  3375   0017D4  A4D8               	btfss	status,2,c
  3376   0017D6  D7E6               	goto	l3327
  3377   0017D8  C016  F00E         	movff	___lmul@product,?___lmul
  3378   0017DC  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  3379   0017E0  C018  F010         	movff	___lmul@product+2,?___lmul+2
  3380   0017E4  C019  F011         	movff	___lmul@product+3,?___lmul+3
  3381   0017E8  0012               	return		;funcret
  3382   0017EA                     __end_of___lmul:
  3383                           	callstack 0
  3384                           
  3385 ;; *************** function ___almod *****************
  3386 ;; Defined at:
  3387 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  dividend        4   13[COMRAM] long 
  3390 ;;  divisor         4   17[COMRAM] long 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  sign            1   22[COMRAM] unsigned char 
  3393 ;;  counter         1   21[COMRAM] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  4   13[COMRAM] long 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3403 ;;      Params:         8       0       0       0       0       0       0       0       0
  3404 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3406 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3407 ;;Total ram usage:       10 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 5
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_Imprimir_Resultado
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text12
  3418   001472                     __ptext12:
  3419                           	callstack 0
  3420   001472                     ___almod:
  3421                           	callstack 24
  3422                           
  3423                           ;incstack = 0
  3424   001472  0E00               	movlw	0
  3425   001474  6E17               	movwf	___almod@sign^0,c
  3426   001476  AE11               	btfss	(___almod@dividend+3)^0,7,c
  3427   001478  D00A               	goto	l3387
  3428   00147A  1E11               	comf	(___almod@dividend+3)^0,f,c
  3429   00147C  1E10               	comf	(___almod@dividend+2)^0,f,c
  3430   00147E  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3431   001480  6C0E               	negf	___almod@dividend^0,c
  3432   001482  0E00               	movlw	0
  3433   001484  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3434   001486  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3435   001488  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3436   00148A  0E01               	movlw	1
  3437   00148C  6E17               	movwf	___almod@sign^0,c
  3438   00148E                     l3387:
  3439   00148E  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3440   001490  D008               	goto	l3391
  3441   001492  1E15               	comf	(___almod@divisor+3)^0,f,c
  3442   001494  1E14               	comf	(___almod@divisor+2)^0,f,c
  3443   001496  1E13               	comf	(___almod@divisor+1)^0,f,c
  3444   001498  6C12               	negf	___almod@divisor^0,c
  3445   00149A  0E00               	movlw	0
  3446   00149C  2213               	addwfc	(___almod@divisor+1)^0,f,c
  3447   00149E  2214               	addwfc	(___almod@divisor+2)^0,f,c
  3448   0014A0  2215               	addwfc	(___almod@divisor+3)^0,f,c
  3449   0014A2                     l3391:
  3450   0014A2  5012               	movf	___almod@divisor^0,w,c
  3451   0014A4  1013               	iorwf	(___almod@divisor+1)^0,w,c
  3452   0014A6  1014               	iorwf	(___almod@divisor+2)^0,w,c
  3453   0014A8  1015               	iorwf	(___almod@divisor+3)^0,w,c
  3454   0014AA  B4D8               	btfsc	status,2,c
  3455   0014AC  D024               	goto	l3407
  3456   0014AE  0E01               	movlw	1
  3457   0014B0  6E16               	movwf	___almod@counter^0,c
  3458   0014B2  D006               	goto	l3397
  3459   0014B4                     l3395:
  3460   0014B4  90D8               	bcf	status,0,c
  3461   0014B6  3612               	rlcf	___almod@divisor^0,f,c
  3462   0014B8  3613               	rlcf	(___almod@divisor+1)^0,f,c
  3463   0014BA  3614               	rlcf	(___almod@divisor+2)^0,f,c
  3464   0014BC  3615               	rlcf	(___almod@divisor+3)^0,f,c
  3465   0014BE  2A16               	incf	___almod@counter^0,f,c
  3466   0014C0                     l3397:
  3467   0014C0  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3468   0014C2  D7F8               	goto	l3395
  3469   0014C4                     u3710:
  3470   0014C4  5012               	movf	___almod@divisor^0,w,c
  3471   0014C6  5C0E               	subwf	___almod@dividend^0,w,c
  3472   0014C8  5013               	movf	(___almod@divisor+1)^0,w,c
  3473   0014CA  580F               	subwfb	(___almod@dividend+1)^0,w,c
  3474   0014CC  5014               	movf	(___almod@divisor+2)^0,w,c
  3475   0014CE  5810               	subwfb	(___almod@dividend+2)^0,w,c
  3476   0014D0  5015               	movf	(___almod@divisor+3)^0,w,c
  3477   0014D2  5811               	subwfb	(___almod@dividend+3)^0,w,c
  3478   0014D4  A0D8               	btfss	status,0,c
  3479   0014D6  D008               	goto	l3403
  3480   0014D8  5012               	movf	___almod@divisor^0,w,c
  3481   0014DA  5E0E               	subwf	___almod@dividend^0,f,c
  3482   0014DC  5013               	movf	(___almod@divisor+1)^0,w,c
  3483   0014DE  5A0F               	subwfb	(___almod@dividend+1)^0,f,c
  3484   0014E0  5014               	movf	(___almod@divisor+2)^0,w,c
  3485   0014E2  5A10               	subwfb	(___almod@dividend+2)^0,f,c
  3486   0014E4  5015               	movf	(___almod@divisor+3)^0,w,c
  3487   0014E6  5A11               	subwfb	(___almod@dividend+3)^0,f,c
  3488   0014E8                     l3403:
  3489   0014E8  90D8               	bcf	status,0,c
  3490   0014EA  3215               	rrcf	(___almod@divisor+3)^0,f,c
  3491   0014EC  3214               	rrcf	(___almod@divisor+2)^0,f,c
  3492   0014EE  3213               	rrcf	(___almod@divisor+1)^0,f,c
  3493   0014F0  3212               	rrcf	___almod@divisor^0,f,c
  3494   0014F2  2E16               	decfsz	___almod@counter^0,f,c
  3495   0014F4  D7E7               	goto	u3710
  3496   0014F6                     l3407:
  3497   0014F6  5017               	movf	___almod@sign^0,w,c
  3498   0014F8  B4D8               	btfsc	status,2,c
  3499   0014FA  D008               	goto	l3411
  3500   0014FC  1E11               	comf	(___almod@dividend+3)^0,f,c
  3501   0014FE  1E10               	comf	(___almod@dividend+2)^0,f,c
  3502   001500  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3503   001502  6C0E               	negf	___almod@dividend^0,c
  3504   001504  0E00               	movlw	0
  3505   001506  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3506   001508  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3507   00150A  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3508   00150C                     l3411:
  3509   00150C  C00E  F00E         	movff	___almod@dividend,?___almod
  3510   001510  C00F  F00F         	movff	___almod@dividend+1,?___almod+1
  3511   001514  C010  F010         	movff	___almod@dividend+2,?___almod+2
  3512   001518  C011  F011         	movff	___almod@dividend+3,?___almod+3
  3513   00151C  0012               	return		;funcret
  3514   00151E                     __end_of___almod:
  3515                           	callstack 0
  3516                           
  3517 ;; *************** function ___aldiv *****************
  3518 ;; Defined at:
  3519 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  dividend        4   13[COMRAM] long 
  3522 ;;  divisor         4   17[COMRAM] long 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  quotient        4   23[COMRAM] long 
  3525 ;;  sign            1   22[COMRAM] unsigned char 
  3526 ;;  counter         1   21[COMRAM] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  4   13[COMRAM] long 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3536 ;;      Params:         8       0       0       0       0       0       0       0       0
  3537 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3539 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3540 ;;Total ram usage:       14 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 5
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_Imprimir_Resultado
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text13
  3551   0012DC                     __ptext13:
  3552                           	callstack 0
  3553   0012DC                     ___aldiv:
  3554                           	callstack 24
  3555                           
  3556                           ;incstack = 0
  3557   0012DC  0E00               	movlw	0
  3558   0012DE  6E17               	movwf	___aldiv@sign^0,c
  3559   0012E0  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3560   0012E2  D00A               	goto	l3343
  3561   0012E4  1E15               	comf	(___aldiv@divisor+3)^0,f,c
  3562   0012E6  1E14               	comf	(___aldiv@divisor+2)^0,f,c
  3563   0012E8  1E13               	comf	(___aldiv@divisor+1)^0,f,c
  3564   0012EA  6C12               	negf	___aldiv@divisor^0,c
  3565   0012EC  0E00               	movlw	0
  3566   0012EE  2213               	addwfc	(___aldiv@divisor+1)^0,f,c
  3567   0012F0  2214               	addwfc	(___aldiv@divisor+2)^0,f,c
  3568   0012F2  2215               	addwfc	(___aldiv@divisor+3)^0,f,c
  3569   0012F4  0E01               	movlw	1
  3570   0012F6  6E17               	movwf	___aldiv@sign^0,c
  3571   0012F8                     l3343:
  3572   0012F8  AE11               	btfss	(___aldiv@dividend+3)^0,7,c
  3573   0012FA  D00A               	goto	l3349
  3574   0012FC  1E11               	comf	(___aldiv@dividend+3)^0,f,c
  3575   0012FE  1E10               	comf	(___aldiv@dividend+2)^0,f,c
  3576   001300  1E0F               	comf	(___aldiv@dividend+1)^0,f,c
  3577   001302  6C0E               	negf	___aldiv@dividend^0,c
  3578   001304  0E00               	movlw	0
  3579   001306  220F               	addwfc	(___aldiv@dividend+1)^0,f,c
  3580   001308  2210               	addwfc	(___aldiv@dividend+2)^0,f,c
  3581   00130A  2211               	addwfc	(___aldiv@dividend+3)^0,f,c
  3582   00130C  0E01               	movlw	1
  3583   00130E  1A17               	xorwf	___aldiv@sign^0,f,c
  3584   001310                     l3349:
  3585   001310  0E00               	movlw	0
  3586   001312  6E18               	movwf	___aldiv@quotient^0,c
  3587   001314  0E00               	movlw	0
  3588   001316  6E19               	movwf	(___aldiv@quotient+1)^0,c
  3589   001318  0E00               	movlw	0
  3590   00131A  6E1A               	movwf	(___aldiv@quotient+2)^0,c
  3591   00131C  0E00               	movlw	0
  3592   00131E  6E1B               	movwf	(___aldiv@quotient+3)^0,c
  3593   001320  5012               	movf	___aldiv@divisor^0,w,c
  3594   001322  1013               	iorwf	(___aldiv@divisor+1)^0,w,c
  3595   001324  1014               	iorwf	(___aldiv@divisor+2)^0,w,c
  3596   001326  1015               	iorwf	(___aldiv@divisor+3)^0,w,c
  3597   001328  B4D8               	btfsc	status,2,c
  3598   00132A  D02A               	goto	l3371
  3599   00132C  0E01               	movlw	1
  3600   00132E  6E16               	movwf	___aldiv@counter^0,c
  3601   001330  D006               	goto	l3357
  3602   001332                     l3355:
  3603   001332  90D8               	bcf	status,0,c
  3604   001334  3612               	rlcf	___aldiv@divisor^0,f,c
  3605   001336  3613               	rlcf	(___aldiv@divisor+1)^0,f,c
  3606   001338  3614               	rlcf	(___aldiv@divisor+2)^0,f,c
  3607   00133A  3615               	rlcf	(___aldiv@divisor+3)^0,f,c
  3608   00133C  2A16               	incf	___aldiv@counter^0,f,c
  3609   00133E                     l3357:
  3610   00133E  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3611   001340  D7F8               	goto	l3355
  3612   001342                     u3650:
  3613   001342  90D8               	bcf	status,0,c
  3614   001344  3618               	rlcf	___aldiv@quotient^0,f,c
  3615   001346  3619               	rlcf	(___aldiv@quotient+1)^0,f,c
  3616   001348  361A               	rlcf	(___aldiv@quotient+2)^0,f,c
  3617   00134A  361B               	rlcf	(___aldiv@quotient+3)^0,f,c
  3618   00134C  5012               	movf	___aldiv@divisor^0,w,c
  3619   00134E  5C0E               	subwf	___aldiv@dividend^0,w,c
  3620   001350  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3621   001352  580F               	subwfb	(___aldiv@dividend+1)^0,w,c
  3622   001354  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3623   001356  5810               	subwfb	(___aldiv@dividend+2)^0,w,c
  3624   001358  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3625   00135A  5811               	subwfb	(___aldiv@dividend+3)^0,w,c
  3626   00135C  A0D8               	btfss	status,0,c
  3627   00135E  D009               	goto	l3367
  3628   001360  5012               	movf	___aldiv@divisor^0,w,c
  3629   001362  5E0E               	subwf	___aldiv@dividend^0,f,c
  3630   001364  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3631   001366  5A0F               	subwfb	(___aldiv@dividend+1)^0,f,c
  3632   001368  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3633   00136A  5A10               	subwfb	(___aldiv@dividend+2)^0,f,c
  3634   00136C  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3635   00136E  5A11               	subwfb	(___aldiv@dividend+3)^0,f,c
  3636   001370  8018               	bsf	___aldiv@quotient^0,0,c
  3637   001372                     l3367:
  3638   001372  90D8               	bcf	status,0,c
  3639   001374  3215               	rrcf	(___aldiv@divisor+3)^0,f,c
  3640   001376  3214               	rrcf	(___aldiv@divisor+2)^0,f,c
  3641   001378  3213               	rrcf	(___aldiv@divisor+1)^0,f,c
  3642   00137A  3212               	rrcf	___aldiv@divisor^0,f,c
  3643   00137C  2E16               	decfsz	___aldiv@counter^0,f,c
  3644   00137E  D7E1               	goto	u3650
  3645   001380                     l3371:
  3646   001380  5017               	movf	___aldiv@sign^0,w,c
  3647   001382  B4D8               	btfsc	status,2,c
  3648   001384  D008               	goto	l3375
  3649   001386  1E1B               	comf	(___aldiv@quotient+3)^0,f,c
  3650   001388  1E1A               	comf	(___aldiv@quotient+2)^0,f,c
  3651   00138A  1E19               	comf	(___aldiv@quotient+1)^0,f,c
  3652   00138C  6C18               	negf	___aldiv@quotient^0,c
  3653   00138E  0E00               	movlw	0
  3654   001390  2219               	addwfc	(___aldiv@quotient+1)^0,f,c
  3655   001392  221A               	addwfc	(___aldiv@quotient+2)^0,f,c
  3656   001394  221B               	addwfc	(___aldiv@quotient+3)^0,f,c
  3657   001396                     l3375:
  3658   001396  C018  F00E         	movff	___aldiv@quotient,?___aldiv
  3659   00139A  C019  F00F         	movff	___aldiv@quotient+1,?___aldiv+1
  3660   00139E  C01A  F010         	movff	___aldiv@quotient+2,?___aldiv+2
  3661   0013A2  C01B  F011         	movff	___aldiv@quotient+3,?___aldiv+3
  3662   0013A6  0012               	return		;funcret
  3663   0013A8                     __end_of___aldiv:
  3664                           	callstack 0
  3665                           
  3666 ;; *************** function _MensajeLCD_Var *****************
  3667 ;; Defined at:
  3668 ;;		line 263 in file "LibLCDXC8.h"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  a               1   18[COMRAM] PTR unsigned char 
  3671 ;;		 -> STR_14(14), STR_13(9), STR_12(13), STR_11(9), 
  3672 ;;		 -> STR_10(11), STR_9(9), STR_8(15), STR_7(9), 
  3673 ;;		 -> STR_6(10), STR_5(9), STR_4(14), STR_3(11), 
  3674 ;;		 -> STR_2(5), STR_1(8), 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  i               2   20[COMRAM] int 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3686 ;;      Params:         1       0       0       0       0       0       0       0       0
  3687 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3688 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3689 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3690 ;;Total ram usage:        4 bytes
  3691 ;; Hardware stack levels used: 1
  3692 ;; Hardware stack levels required when called: 8
  3693 ;; This function calls:
  3694 ;;		_EscribeLCD_c
  3695 ;;		_strlen
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;;		_Imprimir_Resultado
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text14
  3703   0018E8                     __ptext14:
  3704                           	callstack 0
  3705   0018E8                     _MensajeLCD_Var:
  3706                           	callstack 22
  3707                           
  3708                           ;LibLCDXC8.h: 267: for(int i = 0; i<strlen(a); i++){
  3709                           
  3710                           ;incstack = 0
  3711   0018E8  0E00               	movlw	0
  3712   0018EA  6E16               	movwf	(MensajeLCD_Var@i+1)^0,c
  3713   0018EC  0E00               	movlw	0
  3714   0018EE  6E15               	movwf	MensajeLCD_Var@i^0,c
  3715   0018F0  D019               	goto	l3297
  3716   0018F2                     l3289:
  3717                           
  3718                           ;LibLCDXC8.h: 268: if(a[i] == (0)){
  3719   0018F2  5013               	movf	MensajeLCD_Var@a^0,w,c
  3720   0018F4  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3721   0018F6  6E14               	movwf	??_MensajeLCD_Var^0,c
  3722   0018F8  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3723   0018FC                     	if	1	;There is more than 1 active tblptr byte
  3724   0018FC  0E08               	movlw	high __smallconst
  3725   0018FE  6EF7               	movwf	tblptrh,c
  3726   001900                     	endif
  3727   001900                     	if	0	;tblptru may be non-zero
  3728   001900                     	endif
  3729   001900                     	if	0	;tblptru may be non-zero
  3730   001900                     	endif
  3731   001900  0008               	tblrd		*
  3732   001902  50F5               	movf	tablat,w,c
  3733   001904  0900               	iorlw	0
  3734   001906  B4D8               	btfsc	status,2,c
  3735   001908  0012               	return	
  3736                           
  3737                           ;LibLCDXC8.h: 270: };LibLCDXC8.h: 271: EscribeLCD_c(a[i]);
  3738   00190A  5013               	movf	MensajeLCD_Var@a^0,w,c
  3739   00190C  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3740   00190E  6E14               	movwf	??_MensajeLCD_Var^0,c
  3741   001910  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3742   001914                     	if	1	;There is more than 1 active tblptr byte
  3743   001914  0E08               	movlw	high __smallconst
  3744   001916  6EF7               	movwf	tblptrh,c
  3745   001918                     	endif
  3746   001918                     	if	0	;tblptru may be non-zero
  3747   001918                     	endif
  3748   001918                     	if	0	;tblptru may be non-zero
  3749   001918                     	endif
  3750   001918  0008               	tblrd		*
  3751   00191A  50F5               	movf	tablat,w,c
  3752   00191C  ECA9  F00D         	call	_EscribeLCD_c
  3753   001920  4A15               	infsnz	MensajeLCD_Var@i^0,f,c
  3754   001922  2A16               	incf	(MensajeLCD_Var@i+1)^0,f,c
  3755   001924                     l3297:
  3756   001924  C013  F00E         	movff	MensajeLCD_Var@a,strlen@s
  3757   001928  EC62  F00D         	call	_strlen	;wreg free
  3758   00192C  500E               	movf	?_strlen^0,w,c
  3759   00192E  5C15               	subwf	MensajeLCD_Var@i^0,w,c
  3760   001930  500F               	movf	(?_strlen+1)^0,w,c
  3761   001932  5816               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  3762   001934  B0D8               	btfsc	status,0,c
  3763   001936  0012               	return	
  3764   001938  D7DC               	goto	l3289
  3765   00193A                     __end_of_MensajeLCD_Var:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _strlen *****************
  3769 ;; Defined at:
  3770 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  s               1   13[COMRAM] PTR const unsigned char 
  3773 ;;		 -> STR_14(14), STR_13(9), STR_12(13), STR_11(9), 
  3774 ;;		 -> STR_10(11), STR_9(9), STR_8(15), STR_7(9), 
  3775 ;;		 -> STR_6(10), STR_5(9), STR_4(14), STR_3(11), 
  3776 ;;		 -> STR_2(5), STR_1(8), 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  cp              1   15[COMRAM] PTR const unsigned char 
  3779 ;;		 -> STR_14(14), STR_13(9), STR_12(13), STR_11(9), 
  3780 ;;		 -> STR_10(11), STR_9(9), STR_8(15), STR_7(9), 
  3781 ;;		 -> STR_6(10), STR_5(9), STR_4(14), STR_3(11), 
  3782 ;;		 -> STR_2(5), STR_1(8), 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  2   13[COMRAM] unsigned int 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3792 ;;      Params:         2       0       0       0       0       0       0       0       0
  3793 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3795 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3796 ;;Total ram usage:        3 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 5
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_MensajeLCD_Var
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text15
  3807   001AC4                     __ptext15:
  3808                           	callstack 0
  3809   001AC4                     _strlen:
  3810                           	callstack 24
  3811                           
  3812                           ;incstack = 0
  3813   001AC4  C00E  F010         	movff	strlen@s,strlen@cp
  3814   001AC8  D001               	goto	l3273
  3815   001ACA                     l3271:
  3816   001ACA  2A10               	incf	strlen@cp^0,f,c
  3817   001ACC                     l3273:
  3818   001ACC  C010  FFF6         	movff	strlen@cp,tblptrl
  3819   001AD0                     	if	1	;There is more than 1 active tblptr byte
  3820   001AD0  0E08               	movlw	high __smallconst
  3821   001AD2  6EF7               	movwf	tblptrh,c
  3822   001AD4                     	endif
  3823   001AD4                     	if	0	;tblptru may be non-zero
  3824   001AD4                     	endif
  3825   001AD4                     	if	0	;tblptru may be non-zero
  3826   001AD4                     	endif
  3827   001AD4  0008               	tblrd		*
  3828   001AD6  50F5               	movf	tablat,w,c
  3829   001AD8  0900               	iorlw	0
  3830   001ADA  A4D8               	btfss	status,2,c
  3831   001ADC  D7F6               	goto	l3271
  3832   001ADE  500E               	movf	strlen@s^0,w,c
  3833   001AE0  5C10               	subwf	strlen@cp^0,w,c
  3834   001AE2  6E0E               	movwf	?_strlen^0,c
  3835   001AE4  6A0F               	clrf	(?_strlen+1)^0,c
  3836   001AE6  BE0E               	btfsc	?_strlen^0,7,c
  3837   001AE8  060F               	decf	(?_strlen+1)^0,f,c
  3838   001AEA  0012               	return		;funcret
  3839   001AEC                     __end_of_strlen:
  3840                           	callstack 0
  3841                           
  3842 ;; *************** function _EscribeLCD_c *****************
  3843 ;; Defined at:
  3844 ;;		line 119 in file "LibLCDXC8.h"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  a               1    wreg     unsigned char 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  a               1   17[COMRAM] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0
  3859 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3861 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3862 ;;Total ram usage:        1 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 7
  3865 ;; This function calls:
  3866 ;;		_EnviaDato
  3867 ;;		_HabilitaLCD
  3868 ;;		_RetardoLCD
  3869 ;; This function is called by:
  3870 ;;		_MensajeLCD_Var
  3871 ;;		_NuevoCaracter
  3872 ;;		_main
  3873 ;;		_Imprimir_Resultado
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text16
  3878   001B52                     __ptext16:
  3879                           	callstack 0
  3880   001B52                     _EscribeLCD_c:
  3881                           	callstack 22
  3882                           
  3883                           ;incstack = 0
  3884                           ;EscribeLCD_c@a stored from wreg
  3885   001B52  6E12               	movwf	EscribeLCD_c@a^0,c
  3886                           
  3887                           ;LibLCDXC8.h: 123: LATE0=1;
  3888   001B54  808D               	bsf	3981,0,c	;volatile
  3889                           
  3890                           ;LibLCDXC8.h: 124: EnviaDato(a);
  3891   001B56  5012               	movf	EscribeLCD_c@a^0,w,c
  3892   001B58  ECC6  F00C         	call	_EnviaDato
  3893                           
  3894                           ;LibLCDXC8.h: 125: HabilitaLCD();
  3895   001B5C  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  3896                           
  3897                           ;LibLCDXC8.h: 126: RetardoLCD(4);
  3898   001B60  0E04               	movlw	4
  3899   001B62  ECF5  F00B         	call	_RetardoLCD
  3900   001B66  0012               	return		;funcret
  3901   001B68                     __end_of_EscribeLCD_c:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _DireccionaLCD *****************
  3905 ;; Defined at:
  3906 ;;		line 275 in file "LibLCDXC8.h"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  a               1    wreg     unsigned char 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  a               1   17[COMRAM] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3920 ;;      Params:         0       0       0       0       0       0       0       0       0
  3921 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3923 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3924 ;;Total ram usage:        1 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; Hardware stack levels required when called: 7
  3927 ;; This function calls:
  3928 ;;		_EnviaDato
  3929 ;;		_HabilitaLCD
  3930 ;;		_RetardoLCD
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;;		_Imprimir_Resultado
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text17
  3938   001B68                     __ptext17:
  3939                           	callstack 0
  3940   001B68                     _DireccionaLCD:
  3941                           	callstack 22
  3942                           
  3943                           ;incstack = 0
  3944                           ;DireccionaLCD@a stored from wreg
  3945   001B68  6E12               	movwf	DireccionaLCD@a^0,c
  3946                           
  3947                           ;LibLCDXC8.h: 278: LATE0=0;
  3948   001B6A  908D               	bcf	3981,0,c	;volatile
  3949                           
  3950                           ;LibLCDXC8.h: 279: EnviaDato(a);
  3951   001B6C  5012               	movf	DireccionaLCD@a^0,w,c
  3952   001B6E  ECC6  F00C         	call	_EnviaDato
  3953                           
  3954                           ;LibLCDXC8.h: 280: HabilitaLCD();
  3955   001B72  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  3956                           
  3957                           ;LibLCDXC8.h: 281: RetardoLCD(4);
  3958   001B76  0E04               	movlw	4
  3959   001B78  ECF5  F00B         	call	_RetardoLCD
  3960   001B7C  0012               	return		;funcret
  3961   001B7E                     __end_of_DireccionaLCD:
  3962                           	callstack 0
  3963                           
  3964 ;; *************** function _EnviaDato *****************
  3965 ;; Defined at:
  3966 ;;		line 54 in file "LibLCDXC8.h"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  a               1    wreg     unsigned char 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  a               1   16[COMRAM] unsigned char 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3980 ;;      Params:         0       0       0       0       0       0       0       0       0
  3981 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3982 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3983 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3984 ;;Total ram usage:        2 bytes
  3985 ;; Hardware stack levels used: 1
  3986 ;; Hardware stack levels required when called: 6
  3987 ;; This function calls:
  3988 ;;		_HabilitaLCD
  3989 ;;		_RetardoLCD
  3990 ;; This function is called by:
  3991 ;;		_InicializaLCD
  3992 ;;		_BorraLCD
  3993 ;;		_EscribeLCD_c
  3994 ;;		_DireccionaLCD
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text18
  3999   00198C                     __ptext18:
  4000                           	callstack 0
  4001   00198C                     _EnviaDato:
  4002                           	callstack 22
  4003                           
  4004                           ;incstack = 0
  4005                           ;EnviaDato@a stored from wreg
  4006   00198C  6E11               	movwf	EnviaDato@a^0,c
  4007                           
  4008                           ;LibLCDXC8.h: 55: if(interfaz==4){
  4009   00198E  0E04               	movlw	4
  4010   001990  1849               	xorwf	_interfaz^0,w,c
  4011   001992  A4D8               	btfss	status,2,c
  4012   001994  D017               	goto	l3257
  4013                           
  4014                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4015   001996  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  4016   00199A  0EF0               	movlw	240
  4017   00199C  1610               	andwf	??_EnviaDato^0,f,c
  4018   00199E  508C               	movf	140,w,c	;volatile
  4019   0019A0  0B0F               	andlw	15
  4020   0019A2  1010               	iorwf	??_EnviaDato^0,w,c
  4021   0019A4  6E8C               	movwf	140,c	;volatile
  4022                           
  4023                           ;LibLCDXC8.h: 57: HabilitaLCD();
  4024   0019A6  ECE9  F00D         	call	_HabilitaLCD	;wreg free
  4025                           
  4026                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  4027   0019AA  0E01               	movlw	1
  4028   0019AC  ECF5  F00B         	call	_RetardoLCD
  4029                           
  4030                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  4031   0019B0  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  4032   0019B4  3A10               	swapf	??_EnviaDato^0,f,c
  4033   0019B6  0EF0               	movlw	240
  4034   0019B8  1610               	andwf	??_EnviaDato^0,f,c
  4035   0019BA  508C               	movf	140,w,c	;volatile
  4036   0019BC  0B0F               	andlw	15
  4037   0019BE  1010               	iorwf	??_EnviaDato^0,w,c
  4038   0019C0  6E8C               	movwf	140,c	;volatile
  4039                           
  4040                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  4041   0019C2  0012               	return	
  4042   0019C4                     l3257:
  4043   0019C4  0E08               	movlw	8
  4044   0019C6  1849               	xorwf	_interfaz^0,w,c
  4045   0019C8  A4D8               	btfss	status,2,c
  4046   0019CA  0012               	return	
  4047                           
  4048                           ;LibLCDXC8.h: 61: LATD=a;
  4049   0019CC  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  4050   0019D0  0012               	return		;funcret
  4051   0019D2                     __end_of_EnviaDato:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function _RetardoLCD *****************
  4055 ;; Defined at:
  4056 ;;		line 311 in file "LibLCDXC8.h"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  a               1    wreg     unsigned char 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  a               1   14[COMRAM] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4070 ;;      Params:         0       0       0       0       0       0       0       0       0
  4071 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4072 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4073 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4074 ;;Total ram usage:        2 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 5
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_EnviaDato
  4081 ;;		_InicializaLCD
  4082 ;;		_BorraLCD
  4083 ;;		_EscribeLCD_c
  4084 ;;		_DireccionaLCD
  4085 ;;		_ComandoLCD
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text19
  4090   0017EA                     __ptext19:
  4091                           	callstack 0
  4092   0017EA                     _RetardoLCD:
  4093                           	callstack 23
  4094                           
  4095                           ;incstack = 0
  4096                           ;RetardoLCD@a stored from wreg
  4097   0017EA  6E0F               	movwf	RetardoLCD@a^0,c
  4098                           
  4099                           ;LibLCDXC8.h: 312: switch(a){
  4100   0017EC  D01B               	goto	l3245
  4101   0017EE                     l3235:
  4102   0017EE  0E05               	movlw	5
  4103   0017F0  6E0E               	movwf	??_RetardoLCD^0,c
  4104   0017F2  0EDE               	movlw	222
  4105   0017F4                     u5247:
  4106   0017F4  2EE8               	decfsz	wreg,f,c
  4107   0017F6  D7FE               	bra	u5247
  4108   0017F8  2E0E               	decfsz	??_RetardoLCD^0,f,c
  4109   0017FA  D7FC               	bra	u5247
  4110                           
  4111                           ;LibLCDXC8.h: 315: break;
  4112   0017FC  0012               	return	
  4113   0017FE                     l3237:
  4114   0017FE  0E53               	movlw	83
  4115   001800                     u5257:
  4116   001800  2EE8               	decfsz	wreg,f,c
  4117   001802  D7FE               	bra	u5257
  4118   001804  F000               	nop	
  4119                           
  4120                           ;LibLCDXC8.h: 317: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4121   001806  0E35               	movlw	53
  4122   001808                     u5267:
  4123   001808  2EE8               	decfsz	wreg,f,c
  4124   00180A  D7FE               	bra	u5267
  4125   00180C  F000               	nop	
  4126                           
  4127                           ;LibLCDXC8.h: 319: break;
  4128   00180E  0012               	return	
  4129   001810                     l3239:
  4130   001810  0E08               	movlw	8
  4131   001812                     u5277:
  4132   001812  2EE8               	decfsz	wreg,f,c
  4133   001814  D7FE               	bra	u5277
  4134   001816  F000               	nop	
  4135                           
  4136                           ;LibLCDXC8.h: 322: break;
  4137   001818  0012               	return	
  4138   00181A                     l3241:
  4139   00181A  0E03               	movlw	3
  4140   00181C                     u5287:
  4141   00181C  2EE8               	decfsz	wreg,f,c
  4142   00181E  D7FE               	bra	u5287
  4143   001820  F000               	nop	
  4144                           
  4145                           ;LibLCDXC8.h: 325: break;
  4146   001822  0012               	return	
  4147   001824                     l3245:
  4148   001824  500F               	movf	RetardoLCD@a^0,w,c
  4149                           
  4150                           ; Switch size 1, requested type "simple"
  4151                           ; Number of cases is 4, Range of values is 1 to 4
  4152                           ; switch strategies available:
  4153                           ; Name         Instructions Cycles
  4154                           ; simple_byte           13     7 (average)
  4155                           ;	Chosen strategy is simple_byte
  4156   001826  0A01               	xorlw	1	; case 1
  4157   001828  B4D8               	btfsc	status,2,c
  4158   00182A  D7E1               	goto	l3235
  4159   00182C  0A03               	xorlw	3	; case 2
  4160   00182E  B4D8               	btfsc	status,2,c
  4161   001830  D7E6               	goto	l3237
  4162   001832  0A01               	xorlw	1	; case 3
  4163   001834  B4D8               	btfsc	status,2,c
  4164   001836  D7EC               	goto	l3239
  4165   001838  0A07               	xorlw	7	; case 4
  4166   00183A  A4D8               	btfss	status,2,c
  4167   00183C  0012               	return	
  4168   00183E  D7ED               	goto	l3241
  4169   001840                     __end_of_RetardoLCD:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _HabilitaLCD *****************
  4173 ;; Defined at:
  4174 ;;		line 98 in file "LibLCDXC8.h"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;		None
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4188 ;;      Params:         0       0       0       0       0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4191 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4192 ;;Total ram usage:        0 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 5
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_EnviaDato
  4199 ;;		_InicializaLCD
  4200 ;;		_BorraLCD
  4201 ;;		_EscribeLCD_c
  4202 ;;		_DireccionaLCD
  4203 ;;		_ComandoLCD
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text20
  4208   001BD2                     __ptext20:
  4209                           	callstack 0
  4210   001BD2                     _HabilitaLCD:
  4211                           	callstack 23
  4212                           
  4213                           ;LibLCDXC8.h: 100: LATE1=1;
  4214                           
  4215                           ;incstack = 0
  4216   001BD2  828D               	bsf	3981,1,c	;volatile
  4217                           
  4218                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4219   001BD4  0E03               	movlw	3
  4220   001BD6                     u5297:
  4221   001BD6  2EE8               	decfsz	wreg,f,c
  4222   001BD8  D7FE               	bra	u5297
  4223   001BDA  F000               	nop	
  4224                           
  4225                           ;LibLCDXC8.h: 103: LATE1=0;
  4226   001BDC  928D               	bcf	3981,1,c	;volatile
  4227   001BDE  0012               	return		;funcret
  4228   001BE0                     __end_of_HabilitaLCD:
  4229                           	callstack 0
  4230                           
  4231 ;; *************** function _ConfiguraLCD *****************
  4232 ;; Defined at:
  4233 ;;		line 50 in file "LibLCDXC8.h"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  a               1    wreg     unsigned char 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  a               1   13[COMRAM] unsigned char 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, status,0
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4247 ;;      Params:         0       0       0       0       0       0       0       0       0
  4248 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4250 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4251 ;;Total ram usage:        1 bytes
  4252 ;; Hardware stack levels used: 1
  4253 ;; Hardware stack levels required when called: 5
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_main
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text21
  4262   001B3A                     __ptext21:
  4263                           	callstack 0
  4264   001B3A                     _ConfiguraLCD:
  4265                           	callstack 25
  4266                           
  4267                           ;incstack = 0
  4268                           ;ConfiguraLCD@a stored from wreg
  4269   001B3A  6E0E               	movwf	ConfiguraLCD@a^0,c
  4270                           
  4271                           ;LibLCDXC8.h: 51: if(a==4 | a ==8)
  4272   001B3C  0E04               	movlw	4
  4273   001B3E  180E               	xorwf	ConfiguraLCD@a^0,w,c
  4274   001B40  B4D8               	btfsc	status,2,c
  4275   001B42  D004               	goto	u3810
  4276   001B44  0E08               	movlw	8
  4277   001B46  180E               	xorwf	ConfiguraLCD@a^0,w,c
  4278   001B48  A4D8               	btfss	status,2,c
  4279   001B4A  0012               	return	
  4280   001B4C                     u3810:
  4281                           
  4282                           ;LibLCDXC8.h: 52: interfaz=a;
  4283   001B4C  C00E  F049         	movff	ConfiguraLCD@a,_interfaz
  4284   001B50  0012               	return		;funcret
  4285   001B52                     __end_of_ConfiguraLCD:
  4286                           	callstack 0
  4287                           
  4288 ;; *************** function _ColorRGB *****************
  4289 ;; Defined at:
  4290 ;;		line 266 in file "Lab4.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;		None
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4304 ;;      Params:         0       0       0       0       0       0       0       0       0
  4305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4306 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4307 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4308 ;;Total ram usage:        2 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 5
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text22
  4319   001648                     __ptext22:
  4320                           	callstack 0
  4321   001648                     _ColorRGB:
  4322                           	callstack 25
  4323                           
  4324                           ;Lab4.c: 267: if(Color==8) Color = 0;
  4325                           
  4326                           ;incstack = 0
  4327   001648  0E08               	movlw	8
  4328   00164A  1836               	xorwf	_Color^0,w,c
  4329   00164C  1037               	iorwf	(_Color+1)^0,w,c
  4330   00164E  A4D8               	btfss	status,2,c
  4331   001650  D014               	goto	l3685
  4332   001652  0E00               	movlw	0
  4333   001654  6E37               	movwf	(_Color+1)^0,c
  4334   001656  0E00               	movlw	0
  4335   001658  6E36               	movwf	_Color^0,c
  4336   00165A  D00F               	goto	l3685
  4337   00165C                     l3667:
  4338                           
  4339                           ;Lab4.c: 270: LATC = 0b00000000;
  4340   00165C  0E00               	movlw	0
  4341   00165E  D00B               	goto	L12
  4342   001660                     l3669:
  4343                           
  4344                           ;Lab4.c: 273: LATC = 0b00000101;
  4345   001660  0E05               	movlw	5
  4346   001662  D009               	goto	L12
  4347   001664                     l3671:
  4348                           
  4349                           ;Lab4.c: 276: LATC = 0b00000110;
  4350   001664  0E06               	movlw	6
  4351   001666  D007               	goto	L12
  4352   001668                     l3673:
  4353                           
  4354                           ;Lab4.c: 279: LATC = 0b00000011;
  4355   001668  0E03               	movlw	3
  4356   00166A  D005               	goto	L12
  4357   00166C                     l3675:
  4358                           
  4359                           ;Lab4.c: 282: LATC = 0b00000010;
  4360   00166C  0E02               	movlw	2
  4361   00166E  D003               	goto	L12
  4362   001670                     l3679:
  4363                           
  4364                           ;Lab4.c: 288: LATC = 0b00000100;
  4365   001670  0E04               	movlw	4
  4366   001672  D001               	goto	L12
  4367   001674                     l3681:
  4368                           
  4369                           ;Lab4.c: 291: LATC = 0b00000111;
  4370   001674  0E07               	movlw	7
  4371   001676                     L12:
  4372   001676  6E8B               	movwf	139,c	;volatile
  4373                           
  4374                           ;Lab4.c: 292: break;
  4375   001678  D021               	goto	l3687
  4376   00167A                     l3685:
  4377   00167A  C036  F00E         	movff	_Color,??_ColorRGB
  4378   00167E  C037  F00F         	movff	_Color+1,??_ColorRGB+1
  4379                           
  4380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4381                           ; Switch size 1, requested type "simple"
  4382                           ; Number of cases is 1, Range of values is 0 to 0
  4383                           ; switch strategies available:
  4384                           ; Name         Instructions Cycles
  4385                           ; simple_byte            4     3 (average)
  4386                           ;	Chosen strategy is simple_byte
  4387   001682  500F               	movf	(??_ColorRGB+1)^0,w,c
  4388   001684  0A00               	xorlw	0	; case 0
  4389   001686  A4D8               	btfss	status,2,c
  4390   001688  D019               	goto	l3687
  4391                           
  4392                           ; Switch size 1, requested type "simple"
  4393                           ; Number of cases is 8, Range of values is 0 to 7
  4394                           ; switch strategies available:
  4395                           ; Name         Instructions Cycles
  4396                           ; simple_byte           25    13 (average)
  4397                           ;	Chosen strategy is simple_byte
  4398   00168A  500E               	movf	??_ColorRGB^0,w,c
  4399   00168C  0A00               	xorlw	0	; case 0
  4400   00168E  B4D8               	btfsc	status,2,c
  4401   001690  D7E5               	goto	l3667
  4402   001692  0A01               	xorlw	1	; case 1
  4403   001694  B4D8               	btfsc	status,2,c
  4404   001696  D7E4               	goto	l3669
  4405   001698  0A03               	xorlw	3	; case 2
  4406   00169A  B4D8               	btfsc	status,2,c
  4407   00169C  D7E3               	goto	l3671
  4408   00169E  0A01               	xorlw	1	; case 3
  4409   0016A0  B4D8               	btfsc	status,2,c
  4410   0016A2  D7E2               	goto	l3673
  4411   0016A4  0A07               	xorlw	7	; case 4
  4412   0016A6  B4D8               	btfsc	status,2,c
  4413   0016A8  D7E1               	goto	l3675
  4414   0016AA  0A01               	xorlw	1	; case 5
  4415   0016AC  B4D8               	btfsc	status,2,c
  4416   0016AE  D7DA               	goto	l3671
  4417   0016B0  0A03               	xorlw	3	; case 6
  4418   0016B2  B4D8               	btfsc	status,2,c
  4419   0016B4  D7DD               	goto	l3679
  4420   0016B6  0A01               	xorlw	1	; case 7
  4421   0016B8  B4D8               	btfsc	status,2,c
  4422   0016BA  D7DC               	goto	l3681
  4423   0016BC                     l3687:
  4424                           
  4425                           ;Lab4.c: 296: Color += 1;
  4426   0016BC  4A36               	infsnz	_Color^0,f,c
  4427   0016BE  2A37               	incf	(_Color+1)^0,f,c
  4428   0016C0  0012               	return		;funcret
  4429   0016C2                     __end_of_ColorRGB:
  4430                           	callstack 0
  4431                           
  4432 ;; *************** function _ISR *****************
  4433 ;; Defined at:
  4434 ;;		line 308 in file "Lab4.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4448 ;;      Params:         0       0       0       0       0       0       0       0       0
  4449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4450 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4451 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4452 ;;Total ram usage:        4 bytes
  4453 ;; Hardware stack levels used: 1
  4454 ;; Hardware stack levels required when called: 4
  4455 ;; This function calls:
  4456 ;;		i2_BorraLCD
  4457 ;;		i2_DireccionaLCD
  4458 ;;		i2_MensajeLCD_Var
  4459 ;; This function is called by:
  4460 ;;		Interrupt level 2
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	intcode
  4465   000008                     __pintcode:
  4466                           	callstack 0
  4467   000008                     _ISR:
  4468                           	callstack 21
  4469                           
  4470                           ;incstack = 0
  4471   000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4472   00000A  EDDD  F00A         	call	int_func,f	;refresh shadow registers
  4473                           
  4474                           	psect	intcode_body
  4475   0015BA                     __pintcode_body:
  4476                           	callstack 21
  4477   0015BA                     int_func:
  4478                           	callstack 21
  4479   0015BA  0006               	pop		; remove dummy address from shadow register refresh
  4480   0015BC  CFF6 F00A          	movff	tblptrl,??_ISR
  4481   0015C0  CFF7 F00B          	movff	tblptrh,??_ISR+1
  4482   0015C4  CFF8 F00C          	movff	tblptru,??_ISR+2
  4483   0015C8  CFF5 F00D          	movff	tablat,??_ISR+3
  4484                           
  4485                           ;Lab4.c: 309: if(TMR0IF==1){
  4486   0015CC  A4F2               	btfss	4082,2,c	;volatile
  4487   0015CE  D019               	goto	i2l3213
  4488                           
  4489                           ;Lab4.c: 310: if(!Verificador) Contador = Contador +1;
  4490   0015D0  5032               	movf	_Verificador^0,w,c
  4491   0015D2  1033               	iorwf	(_Verificador+1)^0,w,c
  4492   0015D4  A4D8               	btfss	status,2,c
  4493   0015D6  D007               	goto	i2l3207
  4494   0015D8  0E01               	movlw	1
  4495   0015DA  2434               	addwf	_Contador^0,w,c
  4496   0015DC  6E34               	movwf	_Contador^0,c
  4497   0015DE  0E00               	movlw	0
  4498   0015E0  2035               	addwfc	(_Contador+1)^0,w,c
  4499   0015E2  6E35               	movwf	(_Contador+1)^0,c
  4500   0015E4  D004               	goto	i2l3209
  4501   0015E6                     i2l3207:
  4502                           
  4503                           ;Lab4.c: 311: else Contador = 0;
  4504   0015E6  0E00               	movlw	0
  4505   0015E8  6E35               	movwf	(_Contador+1)^0,c
  4506   0015EA  0E00               	movlw	0
  4507   0015EC  6E34               	movwf	_Contador^0,c
  4508   0015EE                     i2l3209:
  4509                           
  4510                           ;Lab4.c: 312: TMR0IF=0;
  4511   0015EE  94F2               	bcf	4082,2,c	;volatile
  4512                           
  4513                           ;Lab4.c: 313: LATE2 = !LATE2;
  4514   0015F0  B48D               	btfsc	3981,2,c	;volatile
  4515   0015F2  D002               	goto	i2u349_40
  4516   0015F4  848D               	bsf	3981,2,c	;volatile
  4517   0015F6  D001               	goto	i2u350_45
  4518   0015F8                     i2u349_40:
  4519   0015F8  948D               	bcf	3981,2,c	;volatile
  4520   0015FA                     i2u350_45:
  4521                           
  4522                           ;Lab4.c: 314: TMR0 = 49911;
  4523   0015FA  0EC2               	movlw	194
  4524   0015FC  6ED7               	movwf	215,c	;volatile
  4525   0015FE  0EF7               	movlw	247
  4526   001600  6ED6               	movwf	214,c	;volatile
  4527   001602                     i2l3213:
  4528                           
  4529                           ;Lab4.c: 315: };Lab4.c: 317: if(Contador == 20){
  4530   001602  0E14               	movlw	20
  4531   001604  1834               	xorwf	_Contador^0,w,c
  4532   001606  1035               	iorwf	(_Contador+1)^0,w,c
  4533   001608  A4D8               	btfss	status,2,c
  4534   00160A  D014               	goto	i2l340
  4535                           
  4536                           ;Lab4.c: 318: if(!Verificador){
  4537   00160C  5032               	movf	_Verificador^0,w,c
  4538   00160E  1033               	iorwf	(_Verificador+1)^0,w,c
  4539   001610  A4D8               	btfss	status,2,c
  4540   001612  D010               	goto	i2l340
  4541                           
  4542                           ;Lab4.c: 319: LATC7 = !LATC7;
  4543   001614  BE8B               	btfsc	3979,7,c	;volatile
  4544   001616  D002               	goto	i2u353_40
  4545   001618  8E8B               	bsf	3979,7,c	;volatile
  4546   00161A  D001               	goto	i2u354_45
  4547   00161C                     i2u353_40:
  4548   00161C  9E8B               	bcf	3979,7,c	;volatile
  4549   00161E                     i2u354_45:
  4550                           
  4551                           ;Lab4.c: 320: BorraLCD();
  4552   00161E  ECDF  F00D         	call	i2_BorraLCD	;wreg free
  4553                           
  4554                           ;Lab4.c: 321: DireccionaLCD(0x82);
  4555   001622  0E82               	movlw	130
  4556   001624  ECCA  F00D         	call	i2_DireccionaLCD
  4557                           
  4558                           ;Lab4.c: 322: MensajeLCD_Var("LVP Activado");
  4559   001628  0E2C               	movlw	low STR_12
  4560   00162A  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4561   00162C  EC9D  F00C         	call	i2_MensajeLCD_Var	;wreg free
  4562   001630  0003               	sleep		;# 
  4563   001632                     i2l337:
  4564   001632  D7FF               	goto	i2l337
  4565   001634                     i2l340:
  4566   001634  C00D  FFF5         	movff	??_ISR+3,tablat
  4567   001638  C00C  FFF8         	movff	??_ISR+2,tblptru
  4568   00163C  C00B  FFF7         	movff	??_ISR+1,tblptrh
  4569   001640  C00A  FFF6         	movff	??_ISR,tblptrl
  4570   001644  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4571   001646  0011               	retfie		f
  4572   001648                     __end_of_ISR:
  4573                           	callstack 0
  4574                           
  4575 ;; *************** function i2_MensajeLCD_Var *****************
  4576 ;; Defined at:
  4577 ;;		line 263 in file "LibLCDXC8.h"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  a               1    5[COMRAM] PTR unsigned char 
  4580 ;;		 -> STR_14(14), STR_13(9), STR_12(13), STR_11(9), 
  4581 ;;		 -> STR_10(11), STR_9(9), STR_8(15), STR_7(9), 
  4582 ;;		 -> STR_6(10), STR_5(9), STR_4(14), STR_3(11), 
  4583 ;;		 -> STR_2(5), STR_1(8), 
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  i               2    7[COMRAM] int 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4595 ;;      Params:         1       0       0       0       0       0       0       0       0
  4596 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4597 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4598 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4599 ;;Total ram usage:        4 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; Hardware stack levels required when called: 3
  4602 ;; This function calls:
  4603 ;;		i2_EscribeLCD_c
  4604 ;;		i2_strlen
  4605 ;; This function is called by:
  4606 ;;		_ISR
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text24
  4611   00193A                     __ptext24:
  4612                           	callstack 0
  4613   00193A                     i2_MensajeLCD_Var:
  4614                           	callstack 21
  4615                           
  4616                           ;LibLCDXC8.h: 267: for(int i = 0; i<strlen(a); i++){
  4617                           
  4618                           ;incstack = 0
  4619   00193A  0E00               	movlw	0
  4620   00193C  6E09               	movwf	(i2MensajeLCD_Var@i+1)^0,c
  4621   00193E  0E00               	movlw	0
  4622   001940  6E08               	movwf	i2MensajeLCD_Var@i^0,c
  4623   001942  D019               	goto	i2l2823
  4624   001944                     i2l2815:
  4625                           
  4626                           ;LibLCDXC8.h: 268: if(a[i] == (0)){
  4627   001944  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4628   001946  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4629   001948  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4630   00194A  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4631   00194E                     	if	1	;There is more than 1 active tblptr byte
  4632   00194E  0E08               	movlw	high __smallconst
  4633   001950  6EF7               	movwf	tblptrh,c
  4634   001952                     	endif
  4635   001952                     	if	0	;tblptru may be non-zero
  4636   001952                     	endif
  4637   001952                     	if	0	;tblptru may be non-zero
  4638   001952                     	endif
  4639   001952  0008               	tblrd		*
  4640   001954  50F5               	movf	tablat,w,c
  4641   001956  0900               	iorlw	0
  4642   001958  B4D8               	btfsc	status,2,c
  4643   00195A  0012               	return	
  4644                           
  4645                           ;LibLCDXC8.h: 270: };LibLCDXC8.h: 271: EscribeLCD_c(a[i]);
  4646   00195C  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4647   00195E  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4648   001960  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4649   001962  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4650   001966                     	if	1	;There is more than 1 active tblptr byte
  4651   001966  0E08               	movlw	high __smallconst
  4652   001968  6EF7               	movwf	tblptrh,c
  4653   00196A                     	endif
  4654   00196A                     	if	0	;tblptru may be non-zero
  4655   00196A                     	endif
  4656   00196A                     	if	0	;tblptru may be non-zero
  4657   00196A                     	endif
  4658   00196A  0008               	tblrd		*
  4659   00196C  50F5               	movf	tablat,w,c
  4660   00196E  ECBF  F00D         	call	i2_EscribeLCD_c
  4661   001972  4A08               	infsnz	i2MensajeLCD_Var@i^0,f,c
  4662   001974  2A09               	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  4663   001976                     i2l2823:
  4664   001976  C006  F001         	movff	i2MensajeLCD_Var@a,i2strlen@s
  4665   00197A  EC76  F00D         	call	i2_strlen	;wreg free
  4666   00197E  5001               	movf	?i2_strlen^0,w,c
  4667   001980  5C08               	subwf	i2MensajeLCD_Var@i^0,w,c
  4668   001982  5002               	movf	(?i2_strlen+1)^0,w,c
  4669   001984  5809               	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  4670   001986  B0D8               	btfsc	status,0,c
  4671   001988  0012               	return	
  4672   00198A  D7DC               	goto	i2l2815
  4673   00198C                     __end_ofi2_MensajeLCD_Var:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function i2_strlen *****************
  4677 ;; Defined at:
  4678 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  s               1    0[COMRAM] PTR const unsigned char 
  4681 ;;		 -> STR_14(14), STR_13(9), STR_12(13), STR_11(9), 
  4682 ;;		 -> STR_10(11), STR_9(9), STR_8(15), STR_7(9), 
  4683 ;;		 -> STR_6(10), STR_5(9), STR_4(14), STR_3(11), 
  4684 ;;		 -> STR_2(5), STR_1(8), 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  4687 ;;		 -> STR_14(14), STR_13(9), STR_12(13), STR_11(9), 
  4688 ;;		 -> STR_10(11), STR_9(9), STR_8(15), STR_7(9), 
  4689 ;;		 -> STR_6(10), STR_5(9), STR_4(14), STR_3(11), 
  4690 ;;		 -> STR_2(5), STR_1(8), 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  2    0[COMRAM] unsigned int 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4700 ;;      Params:         2       0       0       0       0       0       0       0       0
  4701 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4703 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4704 ;;Total ram usage:        3 bytes
  4705 ;; Hardware stack levels used: 1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		i2_MensajeLCD_Var
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text25
  4714   001AEC                     __ptext25:
  4715                           	callstack 0
  4716   001AEC                     i2_strlen:
  4717                           	callstack 23
  4718                           
  4719                           ;incstack = 0
  4720   001AEC  C001  F003         	movff	i2strlen@s,i2strlen@cp
  4721   001AF0  D001               	goto	i2l2447
  4722   001AF2                     i2l2445:
  4723   001AF2  2A03               	incf	i2strlen@cp^0,f,c
  4724   001AF4                     i2l2447:
  4725   001AF4  C003  FFF6         	movff	i2strlen@cp,tblptrl
  4726   001AF8                     	if	1	;There is more than 1 active tblptr byte
  4727   001AF8  0E08               	movlw	high __smallconst
  4728   001AFA  6EF7               	movwf	tblptrh,c
  4729   001AFC                     	endif
  4730   001AFC                     	if	0	;tblptru may be non-zero
  4731   001AFC                     	endif
  4732   001AFC                     	if	0	;tblptru may be non-zero
  4733   001AFC                     	endif
  4734   001AFC  0008               	tblrd		*
  4735   001AFE  50F5               	movf	tablat,w,c
  4736   001B00  0900               	iorlw	0
  4737   001B02  A4D8               	btfss	status,2,c
  4738   001B04  D7F6               	goto	i2l2445
  4739   001B06  5001               	movf	i2strlen@s^0,w,c
  4740   001B08  5C03               	subwf	i2strlen@cp^0,w,c
  4741   001B0A  6E01               	movwf	?i2_strlen^0,c
  4742   001B0C  6A02               	clrf	(?i2_strlen+1)^0,c
  4743   001B0E  BE01               	btfsc	?i2_strlen^0,7,c
  4744   001B10  0602               	decf	(?i2_strlen+1)^0,f,c
  4745   001B12  0012               	return		;funcret
  4746   001B14                     __end_ofi2_strlen:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function i2_EscribeLCD_c *****************
  4750 ;; Defined at:
  4751 ;;		line 119 in file "LibLCDXC8.h"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  a               1    wreg     unsigned char 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  a               1    4[COMRAM] unsigned char 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4765 ;;      Params:         0       0       0       0       0       0       0       0       0
  4766 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4768 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4769 ;;Total ram usage:        1 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 2
  4772 ;; This function calls:
  4773 ;;		i2_EnviaDato
  4774 ;;		i2_HabilitaLCD
  4775 ;;		i2_RetardoLCD
  4776 ;; This function is called by:
  4777 ;;		i2_MensajeLCD_Var
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text26
  4782   001B7E                     __ptext26:
  4783                           	callstack 0
  4784   001B7E                     i2_EscribeLCD_c:
  4785                           	callstack 21
  4786                           
  4787                           ;incstack = 0
  4788                           ;i2EscribeLCD_c@a stored from wreg
  4789   001B7E  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4790                           
  4791                           ;LibLCDXC8.h: 123: LATE0=1;
  4792   001B80  808D               	bsf	3981,0,c	;volatile
  4793                           
  4794                           ;LibLCDXC8.h: 124: EnviaDato(a);
  4795   001B82  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4796   001B84  ECE9  F00C         	call	i2_EnviaDato
  4797                           
  4798                           ;LibLCDXC8.h: 125: HabilitaLCD();
  4799   001B88  ECF0  F00D         	call	i2_HabilitaLCD	;wreg free
  4800                           
  4801                           ;LibLCDXC8.h: 126: RetardoLCD(4);
  4802   001B8C  0E04               	movlw	4
  4803   001B8E  EC20  F00C         	call	i2_RetardoLCD
  4804   001B92  0012               	return		;funcret
  4805   001B94                     __end_ofi2_EscribeLCD_c:
  4806                           	callstack 0
  4807                           
  4808 ;; *************** function i2_DireccionaLCD *****************
  4809 ;; Defined at:
  4810 ;;		line 275 in file "LibLCDXC8.h"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  a               1    wreg     unsigned char 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  a               1    4[COMRAM] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      void 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4824 ;;      Params:         0       0       0       0       0       0       0       0       0
  4825 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4827 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4828 ;;Total ram usage:        1 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 2
  4831 ;; This function calls:
  4832 ;;		i2_EnviaDato
  4833 ;;		i2_HabilitaLCD
  4834 ;;		i2_RetardoLCD
  4835 ;; This function is called by:
  4836 ;;		_ISR
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text27
  4841   001B94                     __ptext27:
  4842                           	callstack 0
  4843   001B94                     i2_DireccionaLCD:
  4844                           	callstack 22
  4845                           
  4846                           ;incstack = 0
  4847                           ;i2DireccionaLCD@a stored from wreg
  4848   001B94  6E05               	movwf	i2DireccionaLCD@a^0,c
  4849                           
  4850                           ;LibLCDXC8.h: 278: LATE0=0;
  4851   001B96  908D               	bcf	3981,0,c	;volatile
  4852                           
  4853                           ;LibLCDXC8.h: 279: EnviaDato(a);
  4854   001B98  5005               	movf	i2DireccionaLCD@a^0,w,c
  4855   001B9A  ECE9  F00C         	call	i2_EnviaDato
  4856                           
  4857                           ;LibLCDXC8.h: 280: HabilitaLCD();
  4858   001B9E  ECF0  F00D         	call	i2_HabilitaLCD	;wreg free
  4859                           
  4860                           ;LibLCDXC8.h: 281: RetardoLCD(4);
  4861   001BA2  0E04               	movlw	4
  4862   001BA4  EC20  F00C         	call	i2_RetardoLCD
  4863   001BA8  0012               	return		;funcret
  4864   001BAA                     __end_ofi2_DireccionaLCD:
  4865                           	callstack 0
  4866                           
  4867 ;; *************** function i2_BorraLCD *****************
  4868 ;; Defined at:
  4869 ;;		line 105 in file "LibLCDXC8.h"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;		None
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4883 ;;      Params:         0       0       0       0       0       0       0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4886 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4887 ;;Total ram usage:        0 bytes
  4888 ;; Hardware stack levels used: 1
  4889 ;; Hardware stack levels required when called: 2
  4890 ;; This function calls:
  4891 ;;		i2_EnviaDato
  4892 ;;		i2_HabilitaLCD
  4893 ;;		i2_RetardoLCD
  4894 ;; This function is called by:
  4895 ;;		_ISR
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text28
  4900   001BBE                     __ptext28:
  4901                           	callstack 0
  4902   001BBE                     i2_BorraLCD:
  4903                           	callstack 22
  4904                           
  4905                           ;LibLCDXC8.h: 107: LATE0=0;
  4906                           
  4907                           ;incstack = 0
  4908   001BBE  908D               	bcf	3981,0,c	;volatile
  4909                           
  4910                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  4911   001BC0  0E01               	movlw	1
  4912   001BC2  ECE9  F00C         	call	i2_EnviaDato
  4913                           
  4914                           ;LibLCDXC8.h: 109: HabilitaLCD();
  4915   001BC6  ECF0  F00D         	call	i2_HabilitaLCD	;wreg free
  4916                           
  4917                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  4918   001BCA  0E02               	movlw	2
  4919   001BCC  EC20  F00C         	call	i2_RetardoLCD
  4920   001BD0  0012               	return		;funcret
  4921   001BD2                     __end_ofi2_BorraLCD:
  4922                           	callstack 0
  4923                           
  4924 ;; *************** function i2_EnviaDato *****************
  4925 ;; Defined at:
  4926 ;;		line 54 in file "LibLCDXC8.h"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  a               1    wreg     unsigned char 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  a               1    3[COMRAM] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0
  4941 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4942 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4943 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4944 ;;Total ram usage:        2 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; Hardware stack levels required when called: 1
  4947 ;; This function calls:
  4948 ;;		i2_HabilitaLCD
  4949 ;;		i2_RetardoLCD
  4950 ;; This function is called by:
  4951 ;;		i2_BorraLCD
  4952 ;;		i2_EscribeLCD_c
  4953 ;;		i2_DireccionaLCD
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text29
  4958   0019D2                     __ptext29:
  4959                           	callstack 0
  4960   0019D2                     i2_EnviaDato:
  4961                           	callstack 21
  4962                           
  4963                           ;incstack = 0
  4964                           ;i2EnviaDato@a stored from wreg
  4965   0019D2  6E04               	movwf	i2EnviaDato@a^0,c
  4966                           
  4967                           ;LibLCDXC8.h: 55: if(interfaz==4){
  4968   0019D4  0E04               	movlw	4
  4969   0019D6  1849               	xorwf	_interfaz^0,w,c
  4970   0019D8  A4D8               	btfss	status,2,c
  4971   0019DA  D017               	goto	i2l2257
  4972                           
  4973                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4974   0019DC  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4975   0019E0  0EF0               	movlw	240
  4976   0019E2  1603               	andwf	??i2_EnviaDato^0,f,c
  4977   0019E4  508C               	movf	140,w,c	;volatile
  4978   0019E6  0B0F               	andlw	15
  4979   0019E8  1003               	iorwf	??i2_EnviaDato^0,w,c
  4980   0019EA  6E8C               	movwf	140,c	;volatile
  4981                           
  4982                           ;LibLCDXC8.h: 57: HabilitaLCD();
  4983   0019EC  ECF0  F00D         	call	i2_HabilitaLCD	;wreg free
  4984                           
  4985                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  4986   0019F0  0E01               	movlw	1
  4987   0019F2  EC20  F00C         	call	i2_RetardoLCD
  4988                           
  4989                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  4990   0019F6  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4991   0019FA  3A03               	swapf	??i2_EnviaDato^0,f,c
  4992   0019FC  0EF0               	movlw	240
  4993   0019FE  1603               	andwf	??i2_EnviaDato^0,f,c
  4994   001A00  508C               	movf	140,w,c	;volatile
  4995   001A02  0B0F               	andlw	15
  4996   001A04  1003               	iorwf	??i2_EnviaDato^0,w,c
  4997   001A06  6E8C               	movwf	140,c	;volatile
  4998                           
  4999                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  5000   001A08  0012               	return	
  5001   001A0A                     i2l2257:
  5002   001A0A  0E08               	movlw	8
  5003   001A0C  1849               	xorwf	_interfaz^0,w,c
  5004   001A0E  A4D8               	btfss	status,2,c
  5005   001A10  0012               	return	
  5006                           
  5007                           ;LibLCDXC8.h: 61: LATD=a;
  5008   001A12  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  5009   001A16  0012               	return		;funcret
  5010   001A18                     __end_ofi2_EnviaDato:
  5011                           	callstack 0
  5012                           
  5013 ;; *************** function i2_RetardoLCD *****************
  5014 ;; Defined at:
  5015 ;;		line 311 in file "LibLCDXC8.h"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  a               1    wreg     unsigned char 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;  a               1    1[COMRAM] unsigned char 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      void 
  5022 ;; Registers used:
  5023 ;;		wreg, status,2, status,0
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5029 ;;      Params:         0       0       0       0       0       0       0       0       0
  5030 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5031 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5032 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5033 ;;Total ram usage:        2 bytes
  5034 ;; Hardware stack levels used: 1
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		i2_EnviaDato
  5039 ;;		i2_BorraLCD
  5040 ;;		i2_EscribeLCD_c
  5041 ;;		i2_DireccionaLCD
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text30
  5046   001840                     __ptext30:
  5047                           	callstack 0
  5048   001840                     i2_RetardoLCD:
  5049                           	callstack 22
  5050                           
  5051                           ;incstack = 0
  5052                           ;i2RetardoLCD@a stored from wreg
  5053   001840  6E02               	movwf	i2RetardoLCD@a^0,c
  5054                           
  5055                           ;LibLCDXC8.h: 312: switch(a){
  5056   001842  D01B               	goto	i2l2227
  5057   001844                     i2l2217:
  5058   001844  0E05               	movlw	5
  5059   001846  6E01               	movwf	??i2_RetardoLCD^0,c
  5060   001848  0EDE               	movlw	222
  5061   00184A                     i2u530_47:
  5062   00184A  2EE8               	decfsz	wreg,f,c
  5063   00184C  D7FE               	bra	i2u530_47
  5064   00184E  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  5065   001850  D7FC               	bra	i2u530_47
  5066                           
  5067                           ;LibLCDXC8.h: 315: break;
  5068   001852  0012               	return	
  5069   001854                     i2l2219:
  5070   001854  0E53               	movlw	83
  5071   001856                     i2u531_47:
  5072   001856  2EE8               	decfsz	wreg,f,c
  5073   001858  D7FE               	bra	i2u531_47
  5074   00185A  F000               	nop	
  5075                           
  5076                           ;LibLCDXC8.h: 317: _delay((unsigned long)((640)*(1000000/4000000.0)));
  5077   00185C  0E35               	movlw	53
  5078   00185E                     i2u532_47:
  5079   00185E  2EE8               	decfsz	wreg,f,c
  5080   001860  D7FE               	bra	i2u532_47
  5081   001862  F000               	nop	
  5082                           
  5083                           ;LibLCDXC8.h: 319: break;
  5084   001864  0012               	return	
  5085   001866                     i2l2221:
  5086   001866  0E08               	movlw	8
  5087   001868                     i2u533_47:
  5088   001868  2EE8               	decfsz	wreg,f,c
  5089   00186A  D7FE               	bra	i2u533_47
  5090   00186C  F000               	nop	
  5091                           
  5092                           ;LibLCDXC8.h: 322: break;
  5093   00186E  0012               	return	
  5094   001870                     i2l2223:
  5095   001870  0E03               	movlw	3
  5096   001872                     i2u534_47:
  5097   001872  2EE8               	decfsz	wreg,f,c
  5098   001874  D7FE               	bra	i2u534_47
  5099   001876  F000               	nop	
  5100                           
  5101                           ;LibLCDXC8.h: 325: break;
  5102   001878  0012               	return	
  5103   00187A                     i2l2227:
  5104   00187A  5002               	movf	i2RetardoLCD@a^0,w,c
  5105                           
  5106                           ; Switch size 1, requested type "simple"
  5107                           ; Number of cases is 4, Range of values is 1 to 4
  5108                           ; switch strategies available:
  5109                           ; Name         Instructions Cycles
  5110                           ; simple_byte           13     7 (average)
  5111                           ;	Chosen strategy is simple_byte
  5112   00187C  0A01               	xorlw	1	; case 1
  5113   00187E  B4D8               	btfsc	status,2,c
  5114   001880  D7E1               	goto	i2l2217
  5115   001882  0A03               	xorlw	3	; case 2
  5116   001884  B4D8               	btfsc	status,2,c
  5117   001886  D7E6               	goto	i2l2219
  5118   001888  0A01               	xorlw	1	; case 3
  5119   00188A  B4D8               	btfsc	status,2,c
  5120   00188C  D7EC               	goto	i2l2221
  5121   00188E  0A07               	xorlw	7	; case 4
  5122   001890  A4D8               	btfss	status,2,c
  5123   001892  0012               	return	
  5124   001894  D7ED               	goto	i2l2223
  5125   001896                     __end_ofi2_RetardoLCD:
  5126                           	callstack 0
  5127                           
  5128 ;; *************** function i2_HabilitaLCD *****************
  5129 ;; Defined at:
  5130 ;;		line 98 in file "LibLCDXC8.h"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0
  5145 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5147 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5148 ;;Total ram usage:        0 bytes
  5149 ;; Hardware stack levels used: 1
  5150 ;; This function calls:
  5151 ;;		Nothing
  5152 ;; This function is called by:
  5153 ;;		i2_EnviaDato
  5154 ;;		i2_BorraLCD
  5155 ;;		i2_EscribeLCD_c
  5156 ;;		i2_DireccionaLCD
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text31
  5161   001BE0                     __ptext31:
  5162                           	callstack 0
  5163   001BE0                     i2_HabilitaLCD:
  5164                           	callstack 22
  5165                           
  5166                           ;LibLCDXC8.h: 100: LATE1=1;
  5167                           
  5168                           ;incstack = 0
  5169   001BE0  828D               	bsf	3981,1,c	;volatile
  5170                           
  5171                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5172   001BE2  0E03               	movlw	3
  5173   001BE4                     i2u535_47:
  5174   001BE4  2EE8               	decfsz	wreg,f,c
  5175   001BE6  D7FE               	bra	i2u535_47
  5176   001BE8  F000               	nop	
  5177                           
  5178                           ;LibLCDXC8.h: 103: LATE1=0;
  5179   001BEA  928D               	bcf	3981,1,c	;volatile
  5180   001BEC  0012               	return		;funcret
  5181   001BEE                     __end_ofi2_HabilitaLCD:
  5182                           	callstack 0
  5183                           
  5184                           	psect	rparam
  5185   000000                     
  5186                           	psect	temp
  5187   000052                     btemp:
  5188                           	callstack 0
  5189   000052                     	ds	1
  5190   000000                     int$flags	set	btemp
  5191   000000                     wtemp8	set	btemp+1
  5192   000000                     ttemp5	set	btemp+1
  5193   000000                     ttemp6	set	btemp+4
  5194   000000                     ttemp7	set	btemp+8
  5195                           
  5196                           	psect	idloc
  5197                           
  5198                           ;Config register IDLOC0 @ 0x200000
  5199                           ;	unspecified, using default values
  5200   200000                     	org	2097152
  5201   200000  FF                 	db	255
  5202                           
  5203                           ;Config register IDLOC1 @ 0x200001
  5204                           ;	unspecified, using default values
  5205   200001                     	org	2097153
  5206   200001  FF                 	db	255
  5207                           
  5208                           ;Config register IDLOC2 @ 0x200002
  5209                           ;	unspecified, using default values
  5210   200002                     	org	2097154
  5211   200002  FF                 	db	255
  5212                           
  5213                           ;Config register IDLOC3 @ 0x200003
  5214                           ;	unspecified, using default values
  5215   200003                     	org	2097155
  5216   200003  FF                 	db	255
  5217                           
  5218                           ;Config register IDLOC4 @ 0x200004
  5219                           ;	unspecified, using default values
  5220   200004                     	org	2097156
  5221   200004  FF                 	db	255
  5222                           
  5223                           ;Config register IDLOC5 @ 0x200005
  5224                           ;	unspecified, using default values
  5225   200005                     	org	2097157
  5226   200005  FF                 	db	255
  5227                           
  5228                           ;Config register IDLOC6 @ 0x200006
  5229                           ;	unspecified, using default values
  5230   200006                     	org	2097158
  5231   200006  FF                 	db	255
  5232                           
  5233                           ;Config register IDLOC7 @ 0x200007
  5234                           ;	unspecified, using default values
  5235   200007                     	org	2097159
  5236   200007  FF                 	db	255
  5237                           
  5238                           	psect	config
  5239                           
  5240                           ;Config register CONFIG1L @ 0x300000
  5241                           ;	unspecified, using default values
  5242                           ;	PLL Prescaler Selection bits
  5243                           ;	PLLDIV = 0x0, unprogrammed default
  5244                           ;	System Clock Postscaler Selection bits
  5245                           ;	CPUDIV = 0x0, unprogrammed default
  5246                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5247                           ;	USBDIV = 0x0, unprogrammed default
  5248   300000                     	org	3145728
  5249   300000  00                 	db	0
  5250                           
  5251                           ;Config register CONFIG1H @ 0x300001
  5252                           ;	Oscillator Selection bits
  5253                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5254                           ;	Fail-Safe Clock Monitor Enable bit
  5255                           ;	FCMEN = 0x0, unprogrammed default
  5256                           ;	Internal/External Oscillator Switchover bit
  5257                           ;	IESO = 0x0, unprogrammed default
  5258   300001                     	org	3145729
  5259   300001  09                 	db	9
  5260                           
  5261                           ;Config register CONFIG2L @ 0x300002
  5262                           ;	unspecified, using default values
  5263                           ;	Power-up Timer Enable bit
  5264                           ;	PWRT = 0x1, unprogrammed default
  5265                           ;	Brown-out Reset Enable bits
  5266                           ;	BOR = 0x3, unprogrammed default
  5267                           ;	Brown-out Reset Voltage bits
  5268                           ;	BORV = 0x3, unprogrammed default
  5269                           ;	USB Voltage Regulator Enable bit
  5270                           ;	VREGEN = 0x0, unprogrammed default
  5271   300002                     	org	3145730
  5272   300002  1F                 	db	31
  5273                           
  5274                           ;Config register CONFIG2H @ 0x300003
  5275                           ;	Watchdog Timer Enable bit
  5276                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5277                           ;	Watchdog Timer Postscale Select bits
  5278                           ;	WDTPS = 0xF, unprogrammed default
  5279   300003                     	org	3145731
  5280   300003  1E                 	db	30
  5281                           
  5282                           ; Padding undefined space
  5283   300004                     	org	3145732
  5284   300004  FF                 	db	255
  5285                           
  5286                           ;Config register CONFIG3H @ 0x300005
  5287                           ;	CCP2 MUX bit
  5288                           ;	CCP2MX = 0x1, unprogrammed default
  5289                           ;	PORTB A/D Enable bit
  5290                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5291                           ;	Low-Power Timer 1 Oscillator Enable bit
  5292                           ;	LPT1OSC = 0x0, unprogrammed default
  5293                           ;	MCLR Pin Enable bit
  5294                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5295   300005                     	org	3145733
  5296   300005  81                 	db	129
  5297                           
  5298                           ;Config register CONFIG4L @ 0x300006
  5299                           ;	Stack Full/Underflow Reset Enable bit
  5300                           ;	STVREN = 0x1, unprogrammed default
  5301                           ;	Single-Supply ICSP Enable bit
  5302                           ;	LVP = OFF, Single-Supply ICSP disabled
  5303                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5304                           ;	ICPRT = 0x0, unprogrammed default
  5305                           ;	Extended Instruction Set Enable bit
  5306                           ;	XINST = 0x0, unprogrammed default
  5307                           ;	Background Debugger Enable bit
  5308                           ;	DEBUG = 0x1, unprogrammed default
  5309   300006                     	org	3145734
  5310   300006  81                 	db	129
  5311                           
  5312                           ; Padding undefined space
  5313   300007                     	org	3145735
  5314   300007  FF                 	db	255
  5315                           
  5316                           ;Config register CONFIG5L @ 0x300008
  5317                           ;	unspecified, using default values
  5318                           ;	Code Protection bit
  5319                           ;	CP0 = 0x1, unprogrammed default
  5320                           ;	Code Protection bit
  5321                           ;	CP1 = 0x1, unprogrammed default
  5322                           ;	Code Protection bit
  5323                           ;	CP2 = 0x1, unprogrammed default
  5324                           ;	Code Protection bit
  5325                           ;	CP3 = 0x1, unprogrammed default
  5326   300008                     	org	3145736
  5327   300008  0F                 	db	15
  5328                           
  5329                           ;Config register CONFIG5H @ 0x300009
  5330                           ;	unspecified, using default values
  5331                           ;	Boot Block Code Protection bit
  5332                           ;	CPB = 0x1, unprogrammed default
  5333                           ;	Data EEPROM Code Protection bit
  5334                           ;	CPD = 0x1, unprogrammed default
  5335   300009                     	org	3145737
  5336   300009  C0                 	db	192
  5337                           
  5338                           ;Config register CONFIG6L @ 0x30000A
  5339                           ;	unspecified, using default values
  5340                           ;	Write Protection bit
  5341                           ;	WRT0 = 0x1, unprogrammed default
  5342                           ;	Write Protection bit
  5343                           ;	WRT1 = 0x1, unprogrammed default
  5344                           ;	Write Protection bit
  5345                           ;	WRT2 = 0x1, unprogrammed default
  5346                           ;	Write Protection bit
  5347                           ;	WRT3 = 0x1, unprogrammed default
  5348   30000A                     	org	3145738
  5349   30000A  0F                 	db	15
  5350                           
  5351                           ;Config register CONFIG6H @ 0x30000B
  5352                           ;	unspecified, using default values
  5353                           ;	Configuration Register Write Protection bit
  5354                           ;	WRTC = 0x1, unprogrammed default
  5355                           ;	Boot Block Write Protection bit
  5356                           ;	WRTB = 0x1, unprogrammed default
  5357                           ;	Data EEPROM Write Protection bit
  5358                           ;	WRTD = 0x1, unprogrammed default
  5359   30000B                     	org	3145739
  5360   30000B  E0                 	db	224
  5361                           
  5362                           ;Config register CONFIG7L @ 0x30000C
  5363                           ;	unspecified, using default values
  5364                           ;	Table Read Protection bit
  5365                           ;	EBTR0 = 0x1, unprogrammed default
  5366                           ;	Table Read Protection bit
  5367                           ;	EBTR1 = 0x1, unprogrammed default
  5368                           ;	Table Read Protection bit
  5369                           ;	EBTR2 = 0x1, unprogrammed default
  5370                           ;	Table Read Protection bit
  5371                           ;	EBTR3 = 0x1, unprogrammed default
  5372   30000C                     	org	3145740
  5373   30000C  0F                 	db	15
  5374                           
  5375                           ;Config register CONFIG7H @ 0x30000D
  5376                           ;	unspecified, using default values
  5377                           ;	Boot Block Table Read Protection bit
  5378                           ;	EBTRB = 0x1, unprogrammed default
  5379   30000D                     	org	3145741
  5380   30000D  40                 	db	64
  5381                           tosu	equ	0xFFF
  5382                           tosh	equ	0xFFE
  5383                           tosl	equ	0xFFD
  5384                           stkptr	equ	0xFFC
  5385                           pclatu	equ	0xFFB
  5386                           pclath	equ	0xFFA
  5387                           pcl	equ	0xFF9
  5388                           tblptru	equ	0xFF8
  5389                           tblptrh	equ	0xFF7
  5390                           tblptrl	equ	0xFF6
  5391                           tablat	equ	0xFF5
  5392                           prodh	equ	0xFF4
  5393                           prodl	equ	0xFF3
  5394                           indf0	equ	0xFEF
  5395                           postinc0	equ	0xFEE
  5396                           postdec0	equ	0xFED
  5397                           preinc0	equ	0xFEC
  5398                           plusw0	equ	0xFEB
  5399                           fsr0h	equ	0xFEA
  5400                           fsr0l	equ	0xFE9
  5401                           wreg	equ	0xFE8
  5402                           indf1	equ	0xFE7
  5403                           postinc1	equ	0xFE6
  5404                           postdec1	equ	0xFE5
  5405                           preinc1	equ	0xFE4
  5406                           plusw1	equ	0xFE3
  5407                           fsr1h	equ	0xFE2
  5408                           fsr1l	equ	0xFE1
  5409                           bsr	equ	0xFE0
  5410                           indf2	equ	0xFDF
  5411                           postinc2	equ	0xFDE
  5412                           postdec2	equ	0xFDD
  5413                           preinc2	equ	0xFDC
  5414                           plusw2	equ	0xFDB
  5415                           fsr2h	equ	0xFDA
  5416                           fsr2l	equ	0xFD9
  5417                           status	equ	0xFD8

Data Sizes:
    Strings     110
    Constant    0
    Data        20
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      81
    BANK0           160     13      21
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_14(CODE[14]), STR_13(CODE[9]), STR_12(CODE[13]), STR_11(CODE[9]), 
		 -> STR_10(CODE[11]), STR_9(CODE[9]), STR_8(CODE[15]), STR_7(CODE[9]), 
		 -> STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[14]), STR_3(CODE[11]), 
		 -> STR_2(CODE[5]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_14(CODE[14]), STR_13(CODE[9]), STR_12(CODE[13]), STR_11(CODE[9]), 
		 -> STR_10(CODE[11]), STR_9(CODE[9]), STR_8(CODE[15]), STR_7(CODE[9]), 
		 -> STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[14]), STR_3(CODE[11]), 
		 -> STR_2(CODE[5]), STR_1(CODE[8]), 

    NuevoCaracter@mapeo	PTR unsigned char  size(1) Largest target is 8
		 -> persona(BANK0[8]), heart(COMRAM[8]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_14(CODE[14]), STR_13(CODE[9]), STR_12(CODE[13]), STR_11(CODE[9]), 
		 -> STR_10(CODE[11]), STR_9(CODE[9]), STR_8(CODE[15]), STR_7(CODE[9]), 
		 -> STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[14]), STR_3(CODE[11]), 
		 -> STR_2(CODE[5]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Imprimir_Resultado
    _factorial_function->___lmul
    _NuevoCaracter->_EscribeLCD_c
    _ComandoLCD->_RetardoLCD
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _Imprimir_Resultado->___aldiv
    ___lwdiv->___wmul
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_Imprimir_Resultado

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   18420
                                             35 COMRAM     2     2      0
                                             11 BANK0      2     2      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                 _Imprimir_Resultado
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
                      _NuevoCaracter
                             ___lmul
                            ___lwdiv
                             ___wmul
                 _factorial_function
 ---------------------------------------------------------------------------------
 (1) _factorial_function                                   8     4      4    2265
                                             25 COMRAM     8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _NuevoCaracter                                        4     3      1     620
                                             18 COMRAM     4     3      1
                         _ComandoLCD
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           2     2      0      93
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     310
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     155
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Resultado                                  19    15      4    9079
                                             27 COMRAM     8     4      4
                                              0 BANK0     11    11      0
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     772
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     781
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2076
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     613
                                             13 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             13 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1    1823
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     220
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0     124
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      31
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      93
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0     650
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Var                                     4     3      1     408
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Imprimir_Resultado
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
       _EscribeLCD_c
       _strlen
     ___aldiv
     ___almod
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
   _NuevoCaracter
     _ComandoLCD
       _HabilitaLCD
       _RetardoLCD
     _EscribeLCD_c
   ___lmul
   ___lwdiv
   ___wmul
   _factorial_function
     ___lmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_DireccionaLCD
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D      15       5       13.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      51       1       86.2%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      66      29        0.0%
DATA                 0      0      66       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 19 14:24:28 2023

                          _a 0030                            _b 002E                            _i 0038  
                          _m 0042             i2DireccionaLCD@a 0005                           _PD 007E82  
                         _RI 007E84                           _TO 007E83                   EnviaDato@a 0011  
        ___wmul@multiplicand 0010                ??_LeerTeclado 000E                          l300 1456  
                        l301 146E                _InicializaLCD 151E                          l302 145E  
                        l304 1466                          l281 140E                          l275 13E2  
                        l292 1432                          l277 13EA                          l269 13DA  
                        l294 143A                          l286 1416                          l296 1442  
                        l288 141E                          l851 18DE                          l861 1A50  
                        _GIE 007F97                          _RB4 007C0C                          _RB5 007C0D  
                        _RB6 007C0E                          _RB7 007C0F                          _ISR 0008  
                        wreg 000FE8                         ?_ISR 0001             ??i2_EscribeLCD_c 0005  
                       l4101 0D6E                         l4031 0C0C                         l4023 0BF2  
                       l3241 181A                         l4113 0DF2                         l4105 0D8C  
                       l3235 17EE                         l3411 150C                         l3403 14E8  
                       l3331 17B8                         l4131 0E38                         l3237 17FE  
                       l3245 1824                         l3421 18AC                         l3239 1810  
                       l3271 1ACA                         l3343 12F8                         l3407 14F6  
                       l3327 17A4                         l3423 18B4                         l3503 15A4  
                       l4151 0ECA                         l4143 0E90                         l4135 0E4E  
                       l4127 0E1E                         l4119 0E06                         l4055 0C6C  
                       l3257 19C4                         l3273 1ACC                         l3433 18D4  
                       l3441 1A26                         l4153 0EE0                         l3355 1332  
                       l3371 1380                         l3443 1A2E                         l4163 0F00  
                       l4139 0E82                         l4091 0CF6                         l4147 0EA2  
                       l4171 0F6E                         l3357 133E                         l3349 1310  
                       l3605 1426                         l4149 0EC4                         l4093 0D0E  
                       l3375 1396                         l3367 1372                         l3391 14A2  
                       l3463 1530                         l3519 1A70                         l4095 0D44  
                       l4079 0CC2                         l3289 18F2                         l3297 1924  
                       l3449 1A46                         l3713 103C                         l3705 0FD8  
                       l3721 107E                         l3473 154E                         l3633 144A  
                       l3545 13D0                         l4169 0F68                         l3395 14B4  
                       l3387 148E                         l3483 156C                         l3803 1718  
                       l3397 14C0                         l3581 1404                         l3901 0A2C  
                       l3671 1664                         l3751 1140                         l3735 10E2  
                       l3911 0A4A                         l3831 08CA                         l3681 1674  
                       l3673 1668                         l3761 118C                         l3569 13F2  
                       l3675 166C                         l3667 165C                         l3755 114E  
                       l3747 1124                         l3669 1660                         l3685 167A  
                       l3837 08F2                         l3679 1670                         l3687 16BC  
                       l3783 1294                         l3793 12D2                         l3777 1280  
                       l3769 122A                         l3937 0A98                         l3857 096C  
                       l3787 12B0                         l3779 1286                         l3947 0AB6  
                       l3875 09C8                         l3859 0970                         l3973 0B20  
                       l3799 16DC                         l3975 0B26                         l3895 0A14  
                       l3993 0B72                         l3997 0B84                         STR_1 0862  
                       STR_2 086A                         STR_3 0844                         STR_4 0810  
                       STR_5 0830                         STR_6 084F                         STR_7 0830  
                       STR_8 0801                         STR_9 0830                         _LATB 000F8A  
                       _LATC 000F8B                         _LATD 000F8C                         u5000 0CB4  
                       u4210 10F6                         u4220 1108                         u4230 111A  
                       u4160 107C                         u4320 1728                         u4400 09E0  
                       u4250 11C2                         u4170 1092                         u4180 10A4  
                       u4340 08D2                         u3710 14C4                         u4190 10B6  
                       u4350 08DE                         u4342 08D4                         u5207 0928  
                       u4280 1276                         u4520 0ACE                         u4352 08E0  
                       u5217 0960                         u3810 1B4C                         u3650 1342  
                       u5227 0A1E                         u3900 13B6                         u4460 0A62  
                       u5237 0F74                         u3750 18B8                         u5247 17F4  
                       u5257 1800                         u5267 1808                         u3780 1A32  
                       u3860 1A94                         u5277 1812                         u5197 08FC  
                       u4590 0B04                         u5287 181C                         u5297 1BD6  
                       u4690 0B66                         u4790 0BD4                         u4890 0C4E  
                       _RBPU 007F8F                         _TMR0 000FD6               ??_EscribeLCD_c 0012  
                       _main 0870                         fsr2h 000FDA                         indf2 000FDF  
                       fsr1l 000FE1                         fsr2l 000FD9                         btemp 0052  
     NuevoCaracter@ubicacion 0014                         prodh 000FF4                         prodl 000FF3  
                       start 000E                 ___param_bank 000000                        ??_ISR 000A  
            i2_DireccionaLCD 1B94               ?_InicializaLCD 0001              __end_of___aldiv 13A8  
            __end_of___almod 151E                        ?_main 0001                        STR_10 0839  
                      STR_11 0830                        STR_12 082C                        STR_13 0859  
                      STR_14 081E                   _ComandoLCD 1A96                EscribeLCD_c@a 0012  
                      _T0CON 000FD5                        _LATE0 007C68                        _LATE1 007C69  
                      _LATE2 007C6A                        _LATC7 007C5F              __end_of___lwdiv 18E8  
            __end_of___lwmod 1A5A                        i2l340 1634                        i2l337 1632  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _Color 0036                        _Boton 0041  
        ___lmul@multiplicand 0012          __end_of_LeerTeclado 1472                        _heart 004A  
                ?i2_BorraLCD 0001               NuevoCaracter@i 0015                        tablat 000FF5  
                _HabilitaLCD 1BD2                        ttemp5 0053                        ttemp6 0056  
                      ttemp7 005A                        status 000FD8                        wtemp8 0053  
           __end_ofi2_strlen 1B14             __end_of_BorraLCD 1BBE             __end_of_ColorRGB 16C2  
            __initialization 173A                 __end_of_main 0F80             i2_MensajeLCD_Var 193A  
                     ??_main 0024         __end_of_ConfiguraLCD 1B52                __activetblptr 000002  
                 i2strlen@cp 0003           _Imprimir_Resultado 0F80                       _ADCON1 000FC1  
      __end_of_NuevoCaracter 1A96               DireccionaLCD@a 0012                       i2l2221 1866  
                     i2l2223 1870                       i2l2217 1844                       i2l2219 1854  
                     i2l2227 187A                       i2l3213 1602                       i2l3207 15E6  
                     i2l2257 1A0A                       i2l3209 15EE                       i2l2445 1AF2  
                     i2l2447 1AF4                       i2l2815 1944                       i2l2823 1976  
                     _OSCCON 000FD3                       _TMR0IE 007F95                       _TMR0IF 007F92  
                     _TMR0ON 007EAF          ?_Imprimir_Resultado 001C        __end_of_DireccionaLCD 1B7E  
                 _RetardoLCD 17EA      __end_ofi2_DireccionaLCD 1BAA                       ___lmul 1794  
                  ??___aldiv 0016                    ??___almod 0016                       ___wmul 1B14  
                  ??___lwdiv 0018                    ??___lwmod 0012              ??_InicializaLCD 0012  
                     clear_0 1780                       isa$std 000001         ??_Imprimir_Resultado 0020  
       __end_of_EscribeLCD_c 1B68                  ?_ComandoLCD 0001                       _strlen 1AC4  
                _LeerTeclado 13A8                 ?i2_EnviaDato 0001                 __pdataCOMRAM 0046  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8   __end_of_factorial_function 173A        __end_ofi2_HabilitaLCD 1BEE  
                 __accesstop 0060      __end_of__initialization 1786                ___rparam_used 000001  
             __pcstackCOMRAM 0001                 __pidataBANK0 1BFA            __end_of_EnviaDato 19D2  
              _Parte_Decimal 002A                    ?i2_strlen 0001                    ?_BorraLCD 0001  
                  ?_ColorRGB 0001               _MensajeLCD_Var 18E8              MensajeLCD_Var@a 0013  
            MensajeLCD_Var@i 0015       factorial_function@fact 001E                  ?_RetardoLCD 0001  
                RetardoLCD@a 000F             ?i2_DireccionaLCD 0001                      ?___lmul 000E  
                    ?___wmul 000E               ___lmul@product 0016                      ?_strlen 000E  
     __end_of_MensajeLCD_Var 193A                   ??i2_strlen 0003                 ??i2_BorraLCD 0005  
                 ??_BorraLCD 0012                   ??_ColorRGB 000E     __end_ofi2_MensajeLCD_Var 198C  
               ?_HabilitaLCD 0001                 _ConfiguraLCD 1B3A                      __Hparam 0000  
                    __Lparam 0000                      ___aldiv 12DC                      ___almod 1472  
                    ___lwdiv 1896                      ___lwmod 1A18                 __psmallconst 0800  
         __end_ofi2_BorraLCD 1BD2          factorial_function@a 001A                      __pcinit 173A  
                    __ramtop 0800  Imprimir_Resultado@Resultado 001C                      __ptext0 0870  
                    __ptext1 16C2                      __ptext2 1A5A                      __ptext3 1A96  
                    __ptext4 13A8                      __ptext5 151E                      __ptext6 1BAA  
                    __ptext7 0F80                      __ptext8 1B14                      __ptext9 1A18  
           ___aldiv@dividend 000E                      _persona 006D              ?_MensajeLCD_Var 0013  
             __pintcode_body 15BA         end_of_initialization 1786                  _Verificador 0032  
              __Lmediumconst 0000                      int_func 15BA                 _EscribeLCD_c 1B52  
           ___aldiv@quotient 0018                      postdec1 000FE5                      postinc0 000FEE  
                    strlen@s 000E                 ??_ComandoLCD 0010                 ?_LeerTeclado 0001  
            i2EscribeLCD_c@a 0005                ?i2_RetardoLCD 0001           __end_of_ComandoLCD 1AC4  
                  _Factorial 003F           _factorial_function 16C2               __end_of___lmul 17EA  
             __end_of___wmul 1B3A                __pidataCOMRAM 1BEE          ?_factorial_function 001A  
      __end_of_InicializaLCD 15BA                    _EnviaDato 198C               __end_of_strlen 1AEC  
        start_initialization 173A                  __end_of_ISR 1648         ??_factorial_function 001E  
                  i2strlen@s 0001               ??i2_RetardoLCD 0001                 ??_RetardoLCD 000E  
                   ??___lmul 0016                    _Resultado 0026                     ??___wmul 0012  
                __pdataBANK0 006D                     ??_strlen 0010                   ?_EnviaDato 0001  
                __pbssCOMRAM 0026           __end_of_RetardoLCD 1840                __pcstackBANK0 0060  
              _NuevoCaracter 1A5A            ?i2_MensajeLCD_Var 0006           ??i2_MensajeLCD_Var 0007  
              _DireccionaLCD 1B68               i2_EscribeLCD_c 1B7E             ___lwdiv@dividend 0014  
                  __pintcode 0008                     ?___aldiv 000E                     ?___almod 000E  
                   ?___lwdiv 0014                     ?___lwmod 000E             ___almod@dividend 000E  
           ??_MensajeLCD_Var 0014                  __smallconst 0800                _Numero_1_Char 0047  
              _Numero_2_Char 0046             ___lwdiv@quotient 0019               ?_NuevoCaracter 0013  
            ___aldiv@divisor 0012              ___aldiv@counter 0016               ___wmul@product 0012  
              i2_HabilitaLCD 1BE0               ?_DireccionaLCD 0001       __end_ofi2_EscribeLCD_c 1B94  
                   i2u350_45 15FA                     i2u353_40 161C                     i2u354_45 161E  
                   i2u530_47 184A                     i2u531_47 1856                     i2u532_47 185E  
                   i2u349_40 15F8                     i2u533_47 1868                     i2u534_47 1872  
                   i2u535_47 1BE4       Imprimir_Resultado@flag 0060            ___wmul@multiplier 000E  
              ??i2_EnviaDato 0003         __end_ofi2_RetardoLCD 1896                  ??_EnviaDato 0010  
                   i2_strlen 1AEC                     _BorraLCD 1BAA                     _ColorRGB 1648  
          ___lmul@multiplier 000E                    copy_data0 174E                    copy_data1 176E  
                   _Contador 0034                     _Negativo 003E               ?i2_HabilitaLCD 0001  
            ?i2_EscribeLCD_c 0001                     __Hrparam 0000                     _Operador 0048  
                   __Lrparam 0000                     _Numero_1 003C                     _Numero_2 003A  
                   _Potencia 0040           NuevoCaracter@mapeo 0013                 i2EnviaDato@a 0004  
              ConfiguraLCD@a 000E                     _main$167 006B                     _main$168 006C  
            ??_NuevoCaracter 0014            ??i2_DireccionaLCD 0005              ___lwdiv@divisor 0016  
            ___lwdiv@counter 0018                     __ptext10 1896                     __ptext11 1794  
                   __ptext20 1BD2                     __ptext12 1472                     __ptext21 1B3A  
                   __ptext13 12DC                     __ptext30 1840                     __ptext22 1648  
                   __ptext14 18E8                     __ptext31 1BE0                     __ptext15 1AC4  
                   __ptext24 193A                     __ptext16 1B52                     __ptext25 1AEC  
                   __ptext17 1B68                     __ptext26 1B7E                     __ptext18 198C  
                   __ptext27 1B94                     __ptext19 17EA                     __ptext28 1BBE  
                   __ptext29 19D2          __end_ofi2_EnviaDato 1A18              ___almod@divisor 0012  
            ___almod@counter 0016              ??_DireccionaLCD 0012                     _interfaz 0049  
                   isa$xinst 000000                     int$flags 0052   __end_of_Imprimir_Resultado 12DC  
            ??i2_HabilitaLCD 0001                     intlevel2 0000                ??_HabilitaLCD 000E  
 Imprimir_Resultado@Potencia 0067                  ComandoLCD@a 0011             ___lwmod@dividend 000E  
              ?_ConfiguraLCD 0001                i2RetardoLCD@a 0002                  i2_EnviaDato 19D2  
            ___lwmod@divisor 0010                     strlen@cp 0010              ___lwmod@counter 0012  
               ___aldiv@sign 0017          Imprimir_Resultado@i 0063          Imprimir_Resultado@j 0065  
        Imprimir_Resultado@k 0061                   i2_BorraLCD 1BBE                 ___almod@sign 0017  
             ??_ConfiguraLCD 000E                ?_EscribeLCD_c 0001            i2MensajeLCD_Var@a 0006  
          i2MensajeLCD_Var@i 0008                 i2_RetardoLCD 1840          __end_of_HabilitaLCD 1BE0  
