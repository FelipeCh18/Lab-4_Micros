

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 16 07:23:11 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Version 2.40
    31                           ; Generated 04/07/2022 GMT
    32                           ; 
    33                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   000C9A                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _interfaz
    71   000C9A  08                 	db	8
    72   000000                     _PORTB	set	3969
    73   000000                     _LATE	set	3981
    74   000000                     _LATD1	set	31841
    75   000000                     _TMR0IF	set	32658
    76   000000                     _RB7	set	31759
    77   000000                     _RB6	set	31758
    78   000000                     _RB5	set	31757
    79   000000                     _GIE	set	32663
    80   000000                     _RBIE	set	32659
    81   000000                     _LATE1	set	31849
    82   000000                     _LATB	set	3978
    83   000000                     _LATD	set	3980
    84   000000                     _RB4	set	31756
    85   000000                     _TRISB	set	3987
    86   000000                     _TRISD	set	3989
    87   000000                     _ADCON1	set	4033
    88   000000                     _LATE0	set	31848
    89   000000                     _TMR0	set	4054
    90   000000                     _RBPU	set	32655
    91   000000                     _TRISE	set	3990
    92   000000                     _RBIF	set	32656
    93                           
    94                           	psect	smallconst
    95   000800                     __psmallconst:
    96                           	callstack 0
    97   000800  00                 	db	0
    98   000801                     STR_1:
    99   000801  48                 	db	72	;'H'
   100   000802  6F                 	db	111	;'o'
   101   000803  6C                 	db	108	;'l'
   102   000804  61                 	db	97	;'a'
   103   000805  20                 	db	32
   104   000806  6D                 	db	109	;'m'
   105   000807  75                 	db	117	;'u'
   106   000808  6E                 	db	110	;'n'
   107   000809  64                 	db	100	;'d'
   108   00080A  6F                 	db	111	;'o'
   109   00080B  00                 	db	0
   110   00080C                     STR_12:
   111   00080C  31                 	db	49	;'1'
   112   00080D  30                 	db	48	;'0'
   113   00080E  00                 	db	0
   114   00080F                     STR_13:
   115   00080F  31                 	db	49	;'1'
   116   000810  31                 	db	49	;'1'
   117   000811  00                 	db	0
   118   000812                     STR_14:
   119   000812  31                 	db	49	;'1'
   120   000813  32                 	db	50	;'2'
   121   000814  00                 	db	0
   122   000815                     STR_15:
   123   000815  31                 	db	49	;'1'
   124   000816  33                 	db	51	;'3'
   125   000817  00                 	db	0
   126   000818                     STR_16:
   127   000818  31                 	db	49	;'1'
   128   000819  34                 	db	52	;'4'
   129   00081A  00                 	db	0
   130   00081B                     STR_17:
   131   00081B  31                 	db	49	;'1'
   132   00081C  35                 	db	53	;'5'
   133   00081D  00                 	db	0
   134   00081E                     STR_18:
   135   00081E  31                 	db	49	;'1'
   136   00081F  36                 	db	54	;'6'
   137   000820  00                 	db	0
   138   000821                     STR_2:
   139   000821  37                 	db	55	;'7'
   140   000822  00                 	db	0
   141   000823                     STR_10:
   142   000823  38                 	db	56	;'8'
   143   000824  00                 	db	0
   144   000825                     STR_11:
   145   000825  39                 	db	57	;'9'
   146   000826  00                 	db	0
   147   000827  00                 	db	0	; dummy byte at the end
   148   000000                     
   149                           ; #config settings
   150                           
   151                           	psect	cinit
   152   000C12                     __pcinit:
   153                           	callstack 0
   154   000C12                     start_initialization:
   155                           	callstack 0
   156   000C12                     __initialization:
   157                           	callstack 0
   158                           
   159                           ; Initialize objects allocated to COMRAM (1 bytes)
   160                           ; load TBLPTR registers with __pidataCOMRAM
   161   000C12  0E9A               	movlw	low __pidataCOMRAM
   162   000C14  6EF6               	movwf	tblptrl,c
   163   000C16  0E0C               	movlw	high __pidataCOMRAM
   164   000C18  6EF7               	movwf	tblptrh,c
   165   000C1A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   166   000C1C  6EF8               	movwf	tblptru,c
   167   000C1E  0009               	tblrd		*+	;fetch initializer
   168   000C20  CFF5 F010          	movff	tablat,__pdataCOMRAM
   169                           
   170                           ; Clear objects allocated to COMRAM (1 bytes)
   171   000C24  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   172   000C26                     end_of_initialization:
   173                           	callstack 0
   174   000C26                     __end_of__initialization:
   175                           	callstack 0
   176   000C26  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   177   000C28  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   178   000C2A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   179   000C2C  6EF8               	movwf	tblptru,c
   180   000C2E  0100               	movlb	0
   181   000C30  EF7E  F004         	goto	_main	;jump to C main() function
   182                           
   183                           	psect	bssCOMRAM
   184   00000F                     __pbssCOMRAM:
   185                           	callstack 0
   186   00000F                     _Tecla:
   187                           	callstack 0
   188   00000F                     	ds	1
   189                           
   190                           	psect	dataCOMRAM
   191   000010                     __pdataCOMRAM:
   192                           	callstack 0
   193   000010                     _interfaz:
   194                           	callstack 0
   195   000010                     	ds	1
   196                           
   197                           	psect	cstackCOMRAM
   198   000001                     __pcstackCOMRAM:
   199                           	callstack 0
   200   000001                     ??_ISR:
   201                           
   202                           ; 1 bytes @ 0x0
   203   000001                     	ds	1
   204   000002                     ??_RetardoLCD:
   205   000002                     ConfiguraLCD@a:
   206                           	callstack 0
   207                           
   208                           ; 1 bytes @ 0x1
   209   000002                     	ds	1
   210   000003                     RetardoLCD@a:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0x2
   214   000003                     	ds	1
   215   000004                     ??_EnviaDato:
   216                           
   217                           ; 1 bytes @ 0x3
   218   000004                     	ds	1
   219   000005                     EnviaDato@a:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x4
   223   000005                     	ds	1
   224   000006                     EscribeLCD_c@a:
   225                           	callstack 0
   226   000006                     DireccionaLCD@a:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x5
   230   000006                     	ds	1
   231   000007                     MensajeLCD_Var@a:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x6
   235   000007                     	ds	2
   236   000009                     ??_MensajeLCD_Var:
   237                           
   238                           ; 1 bytes @ 0x8
   239   000009                     	ds	2
   240   00000B                     MensajeLCD_Var@i:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0xA
   244   00000B                     	ds	2
   245   00000D                     ??_main:
   246                           
   247                           ; 1 bytes @ 0xC
   248   00000D                     	ds	2
   249                           
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 20 in file "Lab4.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;  i               1    0        unsigned char 
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   269 ;;      Params:         0       0       0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0       0       0
   271 ;;      Temps:          2       0       0       0       0       0       0       0       0
   272 ;;      Totals:         2       0       0       0       0       0       0       0       0
   273 ;;Total ram usage:        2 bytes
   274 ;; Hardware stack levels required when called: 5
   275 ;; This function calls:
   276 ;;		_BorraLCD
   277 ;;		_ConfiguraLCD
   278 ;;		_DireccionaLCD
   279 ;;		_InicializaLCD
   280 ;;		_LeerTeclado
   281 ;;		_MensajeLCD_Var
   282 ;; This function is called by:
   283 ;;		Startup code after reset
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text0
   288   0008FC                     __ptext0:
   289                           	callstack 0
   290   0008FC                     _main:
   291                           	callstack 26
   292                           
   293                           ;Lab4.c: 21: unsigned char i;;Lab4.c: 22: ADCON1=15;
   294                           
   295                           ;incstack = 0
   296   0008FC  0E0F               	movlw	15
   297   0008FE  6EC1               	movwf	193,c	;volatile
   298                           
   299                           ;Lab4.c: 23: TRISD = 0;
   300   000900  0E00               	movlw	0
   301   000902  6E95               	movwf	149,c	;volatile
   302                           
   303                           ;Lab4.c: 24: TRISE = 0;
   304   000904  0E00               	movlw	0
   305   000906  6E96               	movwf	150,c	;volatile
   306                           
   307                           ;Lab4.c: 25: TRISB = 0b11110000;
   308   000908  0EF0               	movlw	240
   309   00090A  6E93               	movwf	147,c	;volatile
   310                           
   311                           ;Lab4.c: 26: LATD = 0;
   312   00090C  0E00               	movlw	0
   313   00090E  6E8C               	movwf	140,c	;volatile
   314                           
   315                           ;Lab4.c: 27: LATE = 0;
   316   000910  0E00               	movlw	0
   317   000912  6E8D               	movwf	141,c	;volatile
   318                           
   319                           ;Lab4.c: 28: LATB = 0;
   320   000914  0E00               	movlw	0
   321   000916  6E8A               	movwf	138,c	;volatile
   322                           
   323                           ;Lab4.c: 29: _delay((unsigned long)((100)*(1000000/4000.0)));
   324   000918  0E21               	movlw	33
   325   00091A  6E0D               	movwf	??_main^0,c
   326   00091C  0E76               	movlw	118
   327   00091E                     u587:
   328   00091E  2EE8               	decfsz	wreg,f,c
   329   000920  D7FE               	bra	u587
   330   000922  2E0D               	decfsz	??_main^0,f,c
   331   000924  D7FC               	bra	u587
   332   000926  D000               	nop2	
   333                           
   334                           ;Lab4.c: 30: RBPU = 0;
   335   000928  9EF1               	bcf	4081,7,c	;volatile
   336                           
   337                           ;Lab4.c: 31: _delay((unsigned long)((100)*(1000000/4000.0)));
   338   00092A  0E21               	movlw	33
   339   00092C  6E0D               	movwf	??_main^0,c
   340   00092E  0E76               	movlw	118
   341   000930                     u597:
   342   000930  2EE8               	decfsz	wreg,f,c
   343   000932  D7FE               	bra	u597
   344   000934  2E0D               	decfsz	??_main^0,f,c
   345   000936  D7FC               	bra	u597
   346   000938  D000               	nop2	
   347                           
   348                           ;Lab4.c: 37: RBIF=0;
   349   00093A  90F2               	bcf	4082,0,c	;volatile
   350                           
   351                           ;Lab4.c: 38: RBIE=1;
   352   00093C  86F2               	bsf	4082,3,c	;volatile
   353                           
   354                           ;Lab4.c: 39: GIE=1;
   355   00093E  8EF2               	bsf	4082,7,c	;volatile
   356                           
   357                           ;Lab4.c: 40: _delay((unsigned long)((1000)*(1000000/4000.0)));
   358   000940  0E02               	movlw	2
   359   000942  6E0E               	movwf	(??_main+1)^0,c
   360   000944  0E45               	movlw	69
   361   000946  6E0D               	movwf	??_main^0,c
   362   000948  0EAA               	movlw	170
   363   00094A                     u607:
   364   00094A  2EE8               	decfsz	wreg,f,c
   365   00094C  D7FE               	bra	u607
   366   00094E  2E0D               	decfsz	??_main^0,f,c
   367   000950  D7FC               	bra	u607
   368   000952  2E0E               	decfsz	(??_main+1)^0,f,c
   369   000954  D7FA               	bra	u607
   370                           
   371                           ;Lab4.c: 41: ConfiguraLCD(4);
   372   000956  0E04               	movlw	4
   373   000958  EC1A  F006         	call	_ConfiguraLCD
   374                           
   375                           ;Lab4.c: 42: InicializaLCD();
   376   00095C  EC2C  F005         	call	_InicializaLCD	;wreg free
   377                           
   378                           ;Lab4.c: 43: BorraLCD();
   379   000960  EC3C  F006         	call	_BorraLCD	;wreg free
   380                           
   381                           ;Lab4.c: 44: MensajeLCD_Var("Hola mundo");
   382   000964  0E01               	movlw	low STR_1
   383   000966  6E07               	movwf	MensajeLCD_Var@a^0,c
   384   000968  5007               	movf	MensajeLCD_Var@a^0,w,c
   385   00096A  A4D8               	btfss	status,2,c
   386   00096C  0E08               	movlw	high __smallconst
   387   00096E  6E08               	movwf	(MensajeLCD_Var@a+1)^0,c
   388   000970  EC7A  F005         	call	_MensajeLCD_Var	;wreg free
   389                           
   390                           ;Lab4.c: 45: DireccionaLCD(0xC0);
   391   000974  0EC0               	movlw	192
   392   000976  EC31  F006         	call	_DireccionaLCD
   393                           
   394                           ;Lab4.c: 46: MensajeLCD_Var("7");
   395   00097A  0E21               	movlw	low STR_2
   396   00097C  6E07               	movwf	MensajeLCD_Var@a^0,c
   397   00097E  5007               	movf	MensajeLCD_Var@a^0,w,c
   398   000980  A4D8               	btfss	status,2,c
   399   000982  0E08               	movlw	high __smallconst
   400   000984  6E08               	movwf	(MensajeLCD_Var@a+1)^0,c
   401   000986  EC7A  F005         	call	_MensajeLCD_Var	;wreg free
   402                           
   403                           ;Lab4.c: 47: _delay((unsigned long)((1000)*(1000000/4000.0)));
   404   00098A  0E02               	movlw	2
   405   00098C  6E0E               	movwf	(??_main+1)^0,c
   406   00098E  0E45               	movlw	69
   407   000990  6E0D               	movwf	??_main^0,c
   408   000992  0EAA               	movlw	170
   409   000994                     u617:
   410   000994  2EE8               	decfsz	wreg,f,c
   411   000996  D7FE               	bra	u617
   412   000998  2E0D               	decfsz	??_main^0,f,c
   413   00099A  D7FC               	bra	u617
   414   00099C  2E0E               	decfsz	(??_main+1)^0,f,c
   415   00099E  D7FA               	bra	u617
   416   0009A0                     l1289:
   417                           
   418                           ;Lab4.c: 49: Tecla=LeerTeclado();
   419   0009A0  ECDD  F004         	call	_LeerTeclado	;wreg free
   420   0009A4  6E0F               	movwf	_Tecla^0,c
   421                           
   422                           ;Lab4.c: 51: MensajeLCD_Var(Tecla);
   423   0009A6  500F               	movf	_Tecla^0,w,c
   424   0009A8  6E0D               	movwf	??_main^0,c
   425   0009AA  6A0E               	clrf	(??_main+1)^0,c
   426   0009AC  C00D  F007         	movff	??_main,MensajeLCD_Var@a
   427   0009B0  C00E  F008         	movff	??_main+1,MensajeLCD_Var@a+1
   428   0009B4  EC7A  F005         	call	_MensajeLCD_Var	;wreg free
   429   0009B8  D7F3               	goto	l1289
   430   0009BA                     __end_of_main:
   431                           	callstack 0
   432                           
   433 ;; *************** function _MensajeLCD_Var *****************
   434 ;; Defined at:
   435 ;;		line 215 in file "LibLCDXC8.h"
   436 ;; Parameters:    Size  Location     Type
   437 ;;  a               2    6[COMRAM] PTR unsigned char 
   438 ;;		 -> RAM(2047), STR_2(2), STR_1(11), 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  i               2   10[COMRAM] int 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   450 ;;      Params:         2       0       0       0       0       0       0       0       0
   451 ;;      Locals:         2       0       0       0       0       0       0       0       0
   452 ;;      Temps:          2       0       0       0       0       0       0       0       0
   453 ;;      Totals:         6       0       0       0       0       0       0       0       0
   454 ;;Total ram usage:        6 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; Hardware stack levels required when called: 4
   457 ;; This function calls:
   458 ;;		_EscribeLCD_c
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text1
   465   000AF4                     __ptext1:
   466                           	callstack 0
   467   000AF4                     _MensajeLCD_Var:
   468                           	callstack 26
   469                           
   470                           ;LibLCDXC8.h: 219: for(int i = 0; i<16; i++){
   471                           
   472                           ;incstack = 0
   473   000AF4  0E00               	movlw	0
   474   000AF6  6E0C               	movwf	(MensajeLCD_Var@i+1)^0,c
   475   000AF8  0E00               	movlw	0
   476   000AFA  6E0B               	movwf	MensajeLCD_Var@i^0,c
   477   000AFC                     l1249:
   478                           
   479                           ;LibLCDXC8.h: 220: if(a[i] == (0)){
   480   000AFC  500B               	movf	MensajeLCD_Var@i^0,w,c
   481   000AFE  2407               	addwf	MensajeLCD_Var@a^0,w,c
   482   000B00  6E09               	movwf	??_MensajeLCD_Var^0,c
   483   000B02  500C               	movf	(MensajeLCD_Var@i+1)^0,w,c
   484   000B04  2008               	addwfc	(MensajeLCD_Var@a+1)^0,w,c
   485   000B06  6E0A               	movwf	(??_MensajeLCD_Var+1)^0,c
   486   000B08  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   487   000B0C  C00A  FFF7         	movff	??_MensajeLCD_Var+1,tblptrh
   488   000B10  6AF8               	clrf	tblptru,c
   489   000B12  0E07               	movlw	(high __ramtop+-1)
   490   000B14  64F7               	cpfsgt	tblptrh,c
   491   000B16  D003               	bra	u547
   492   000B18  0008               	tblrd		*
   493   000B1A  50F5               	movf	tablat,w,c
   494   000B1C  D005               	bra	u540
   495   000B1E                     u547:
   496   000B1E  CFF6 FFE9          	movff	tblptrl,fsr0l
   497   000B22  CFF7 FFEA          	movff	tblptrh,fsr0h
   498   000B26  50EF               	movf	indf0,w,c
   499   000B28                     u540:
   500   000B28  0900               	iorlw	0
   501   000B2A  B4D8               	btfsc	status,2,c
   502   000B2C  0012               	return	
   503                           
   504                           ;LibLCDXC8.h: 222: };LibLCDXC8.h: 223: EscribeLCD_c(a[i]);
   505   000B2E  500B               	movf	MensajeLCD_Var@i^0,w,c
   506   000B30  2407               	addwf	MensajeLCD_Var@a^0,w,c
   507   000B32  6E09               	movwf	??_MensajeLCD_Var^0,c
   508   000B34  500C               	movf	(MensajeLCD_Var@i+1)^0,w,c
   509   000B36  2008               	addwfc	(MensajeLCD_Var@a+1)^0,w,c
   510   000B38  6E0A               	movwf	(??_MensajeLCD_Var+1)^0,c
   511   000B3A  C009  FFF6         	movff	??_MensajeLCD_Var,tblptrl
   512   000B3E  C00A  FFF7         	movff	??_MensajeLCD_Var+1,tblptrh
   513   000B42  6AF8               	clrf	tblptru,c
   514   000B44  0E07               	movlw	(high __ramtop+-1)
   515   000B46  64F7               	cpfsgt	tblptrh,c
   516   000B48  D003               	bra	u567
   517   000B4A  0008               	tblrd		*
   518   000B4C  50F5               	movf	tablat,w,c
   519   000B4E  D005               	bra	u560
   520   000B50                     u567:
   521   000B50  CFF6 FFE9          	movff	tblptrl,fsr0l
   522   000B54  CFF7 FFEA          	movff	tblptrh,fsr0h
   523   000B58  50EF               	movf	indf0,w,c
   524   000B5A                     u560:
   525   000B5A  EC26  F006         	call	_EscribeLCD_c
   526   000B5E  4A0B               	infsnz	MensajeLCD_Var@i^0,f,c
   527   000B60  2A0C               	incf	(MensajeLCD_Var@i+1)^0,f,c
   528   000B62  BE0C               	btfsc	(MensajeLCD_Var@i+1)^0,7,c
   529   000B64  D7CB               	goto	l1249
   530   000B66  500C               	movf	(MensajeLCD_Var@i+1)^0,w,c
   531   000B68  E105               	bnz	u570
   532   000B6A  0E10               	movlw	16
   533   000B6C  5C0B               	subwf	MensajeLCD_Var@i^0,w,c
   534   000B6E  B0D8               	btfsc	status,0,c
   535   000B70  0012               	return	
   536   000B72  D7C4               	goto	l1249
   537   000B74                     u570:
   538   000B74  0012               	return		;funcret
   539   000B76                     __end_of_MensajeLCD_Var:
   540                           	callstack 0
   541                           
   542 ;; *************** function _EscribeLCD_c *****************
   543 ;; Defined at:
   544 ;;		line 116 in file "LibLCDXC8.h"
   545 ;; Parameters:    Size  Location     Type
   546 ;;  a               1    wreg     unsigned char 
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  a               1    5[COMRAM] unsigned char 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   558 ;;      Params:         0       0       0       0       0       0       0       0       0
   559 ;;      Locals:         1       0       0       0       0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0       0       0
   561 ;;      Totals:         1       0       0       0       0       0       0       0       0
   562 ;;Total ram usage:        1 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; Hardware stack levels required when called: 3
   565 ;; This function calls:
   566 ;;		_EnviaDato
   567 ;;		_HabilitaLCD
   568 ;;		_RetardoLCD
   569 ;; This function is called by:
   570 ;;		_MensajeLCD_Var
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text2
   575   000C4C                     __ptext2:
   576                           	callstack 0
   577   000C4C                     _EscribeLCD_c:
   578                           	callstack 26
   579                           
   580                           ;incstack = 0
   581                           ;EscribeLCD_c@a stored from wreg
   582   000C4C  6E06               	movwf	EscribeLCD_c@a^0,c
   583                           
   584                           ;LibLCDXC8.h: 120: LATE0=1;
   585   000C4E  808D               	bsf	3981,0,c	;volatile
   586                           
   587                           ;LibLCDXC8.h: 121: EnviaDato(a);
   588   000C50  5006               	movf	EscribeLCD_c@a^0,w,c
   589   000C52  ECE6  F005         	call	_EnviaDato
   590                           
   591                           ;LibLCDXC8.h: 122: HabilitaLCD();
   592   000C56  EC46  F006         	call	_HabilitaLCD	;wreg free
   593                           
   594                           ;LibLCDXC8.h: 123: RetardoLCD(4);
   595   000C5A  0E04               	movlw	4
   596   000C5C  ECBB  F005         	call	_RetardoLCD
   597   000C60  0012               	return		;funcret
   598   000C62                     __end_of_EscribeLCD_c:
   599                           	callstack 0
   600                           
   601 ;; *************** function _LeerTeclado *****************
   602 ;; Defined at:
   603 ;;		line 55 in file "Lab4.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      unsigned char 
   610 ;; Registers used:
   611 ;;		wreg, status,2
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   617 ;;      Params:         0       0       0       0       0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0       0       0
   620 ;;      Totals:         0       0       0       0       0       0       0       0       0
   621 ;;Total ram usage:        0 bytes
   622 ;; Hardware stack levels used: 1
   623 ;; Hardware stack levels required when called: 1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text3
   632   0009BA                     __ptext3:
   633                           	callstack 0
   634   0009BA                     _LeerTeclado:
   635                           	callstack 29
   636                           
   637                           ;Lab4.c: 115: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
   638                           
   639                           ;incstack = 0
   640   0009BA  B881               	btfsc	3969,4,c	;volatile
   641   0009BC  AA81               	btfss	3969,5,c	;volatile
   642   0009BE  D004               	goto	u160
   643   0009C0  AC81               	btfss	3969,6,c	;volatile
   644   0009C2  D002               	goto	u160
   645   0009C4  BE81               	btfsc	3969,7,c	;volatile
   646   0009C6  D7F9               	goto	__ptext3
   647   0009C8                     u160:
   648                           
   649                           ;Lab4.c: 116: LATB=0b11111110;
   650   0009C8  0EFE               	movlw	254
   651   0009CA  6E8A               	movwf	138,c	;volatile
   652                           
   653                           ;Lab4.c: 117: if(RB4==0) return "1";
   654   0009CC  B881               	btfsc	3969,4,c	;volatile
   655   0009CE  D002               	goto	l122
   656   0009D0  0E10               	movlw	(STR_13+1)& (0+255)
   657   0009D2  0012               	return	
   658   0009D4                     l122:
   659                           
   660                           ;Lab4.c: 118: if(RB5==0) return "2";
   661   0009D4  BA81               	btfsc	3969,5,c	;volatile
   662   0009D6  D002               	goto	l124
   663   0009D8  0E13               	movlw	(STR_14+1)& (0+255)
   664   0009DA  0012               	return	
   665   0009DC                     l124:
   666                           
   667                           ;Lab4.c: 119: if(RB6==0) return "3";
   668   0009DC  BC81               	btfsc	3969,6,c	;volatile
   669   0009DE  D002               	goto	l125
   670   0009E0  0E16               	movlw	(STR_15+1)& (0+255)
   671   0009E2  0012               	return	
   672   0009E4                     l125:
   673                           
   674                           ;Lab4.c: 120: if(RB7==0) return "4";
   675   0009E4  BE81               	btfsc	3969,7,c	;volatile
   676   0009E6  D002               	goto	l1085
   677   0009E8  0E19               	movlw	(STR_16+1)& (0+255)
   678   0009EA  0012               	return	
   679   0009EC                     l1085:
   680                           
   681                           ;Lab4.c: 121: LATB=0b11111101;
   682   0009EC  0EFD               	movlw	253
   683   0009EE  6E8A               	movwf	138,c	;volatile
   684                           
   685                           ;Lab4.c: 122: if(RB4==0) return "5";
   686   0009F0  B881               	btfsc	3969,4,c	;volatile
   687   0009F2  D002               	goto	l127
   688   0009F4  0E1C               	movlw	(STR_17+1)& (0+255)
   689   0009F6  0012               	return	
   690   0009F8                     l127:
   691                           
   692                           ;Lab4.c: 123: if(RB5==0) return "6";
   693   0009F8  BA81               	btfsc	3969,5,c	;volatile
   694   0009FA  D002               	goto	l128
   695   0009FC  0E1F               	movlw	(STR_18+1)& (0+255)
   696   0009FE  0012               	return	
   697   000A00                     l128:
   698                           
   699                           ;Lab4.c: 124: if(RB6==0) return "7";
   700   000A00  BC81               	btfsc	3969,6,c	;volatile
   701   000A02  D002               	goto	l129
   702   000A04  0E21               	movlw	STR_2& (0+255)
   703   000A06  0012               	return	
   704   000A08                     l129:
   705                           
   706                           ;Lab4.c: 125: if(RB7==0) return "8";
   707   000A08  BE81               	btfsc	3969,7,c	;volatile
   708   000A0A  D002               	goto	l1105
   709   000A0C  0E23               	movlw	STR_10& (0+255)
   710   000A0E  0012               	return	
   711   000A10                     l1105:
   712                           
   713                           ;Lab4.c: 126: LATB=0b11111011;
   714   000A10  0EFB               	movlw	251
   715   000A12  6E8A               	movwf	138,c	;volatile
   716                           
   717                           ;Lab4.c: 127: if(RB4==0) return "9";
   718   000A14  B881               	btfsc	3969,4,c	;volatile
   719   000A16  D002               	goto	l131
   720   000A18  0E25               	movlw	STR_11& (0+255)
   721   000A1A  0012               	return	
   722   000A1C                     l131:
   723                           
   724                           ;Lab4.c: 128: if(RB5==0) return "10";
   725   000A1C  BA81               	btfsc	3969,5,c	;volatile
   726   000A1E  D002               	goto	l132
   727   000A20  0E0C               	movlw	STR_12& (0+255)
   728   000A22  0012               	return	
   729   000A24                     l132:
   730                           
   731                           ;Lab4.c: 129: if(RB6==0) return "11";
   732   000A24  BC81               	btfsc	3969,6,c	;volatile
   733   000A26  D002               	goto	l133
   734   000A28  0E0F               	movlw	STR_13& (0+255)
   735   000A2A  0012               	return	
   736   000A2C                     l133:
   737                           
   738                           ;Lab4.c: 130: if(RB7==0) return "12";
   739   000A2C  BE81               	btfsc	3969,7,c	;volatile
   740   000A2E  D002               	goto	l1125
   741   000A30  0E12               	movlw	STR_14& (0+255)
   742   000A32  0012               	return	
   743   000A34                     l1125:
   744                           
   745                           ;Lab4.c: 131: LATB=0b11110111;
   746   000A34  0EF7               	movlw	247
   747   000A36  6E8A               	movwf	138,c	;volatile
   748                           
   749                           ;Lab4.c: 132: if(RB4==0) return "13";
   750   000A38  B881               	btfsc	3969,4,c	;volatile
   751   000A3A  D002               	goto	l135
   752   000A3C  0E15               	movlw	STR_15& (0+255)
   753   000A3E  0012               	return	
   754   000A40                     l135:
   755                           
   756                           ;Lab4.c: 133: if(RB5==0) return "14";
   757   000A40  BA81               	btfsc	3969,5,c	;volatile
   758   000A42  D002               	goto	l136
   759   000A44  0E18               	movlw	STR_16& (0+255)
   760   000A46  0012               	return	
   761   000A48                     l136:
   762                           
   763                           ;Lab4.c: 134: if(RB6==0) return "15";
   764   000A48  BC81               	btfsc	3969,6,c	;volatile
   765   000A4A  D002               	goto	l137
   766   000A4C  0E1B               	movlw	STR_17& (0+255)
   767   000A4E  0012               	return	
   768   000A50                     l137:
   769                           
   770                           ;Lab4.c: 135: if(RB7==0) return "16";
   771   000A50  BE81               	btfsc	3969,7,c	;volatile
   772   000A52  0012               	return	
   773   000A54  0E1E               	movlw	STR_18& (0+255)
   774   000A56  0012               	return		;funcret
   775   000A58                     __end_of_LeerTeclado:
   776                           	callstack 0
   777                           
   778 ;; *************** function _InicializaLCD *****************
   779 ;; Defined at:
   780 ;;		line 61 in file "LibLCDXC8.h"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   794 ;;      Params:         0       0       0       0       0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0       0       0
   797 ;;      Totals:         0       0       0       0       0       0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used: 1
   800 ;; Hardware stack levels required when called: 4
   801 ;; This function calls:
   802 ;;		_BorraLCD
   803 ;;		_EnviaDato
   804 ;;		_HabilitaLCD
   805 ;;		_RetardoLCD
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text4
   812   000A58                     __ptext4:
   813                           	callstack 0
   814   000A58                     _InicializaLCD:
   815                           	callstack 26
   816                           
   817                           ;LibLCDXC8.h: 63: LATE0=0;
   818                           
   819                           ;incstack = 0
   820   000A58  908D               	bcf	3981,0,c	;volatile
   821                           
   822                           ;LibLCDXC8.h: 64: if(interfaz==4)
   823   000A5A  0E04               	movlw	4
   824   000A5C  1810               	xorwf	_interfaz^0,w,c
   825   000A5E  A4D8               	btfss	status,2,c
   826   000A60  D004               	goto	l985
   827                           
   828                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | 0x30;
   829   000A62  508C               	movf	140,w,c	;volatile
   830   000A64  0B0F               	andlw	15
   831   000A66  0930               	iorlw	48
   832   000A68  D001               	goto	L1
   833   000A6A                     l985:
   834                           
   835                           ;LibLCDXC8.h: 66: else;LibLCDXC8.h: 67: LATD=0x3F;
   836   000A6A  0E3F               	movlw	63
   837   000A6C                     L1:
   838   000A6C  6E8C               	movwf	140,c	;volatile
   839                           
   840                           ;LibLCDXC8.h: 68: HabilitaLCD();
   841   000A6E  EC46  F006         	call	_HabilitaLCD	;wreg free
   842                           
   843                           ;LibLCDXC8.h: 69: RetardoLCD(1);
   844   000A72  0E01               	movlw	1
   845   000A74  ECBB  F005         	call	_RetardoLCD
   846                           
   847                           ;LibLCDXC8.h: 70: if(interfaz==4)
   848   000A78  0E04               	movlw	4
   849   000A7A  1810               	xorwf	_interfaz^0,w,c
   850   000A7C  A4D8               	btfss	status,2,c
   851   000A7E  D004               	goto	l995
   852                           
   853                           ;LibLCDXC8.h: 71: LATD=(LATD & 0b00001111) | 0x30;
   854   000A80  508C               	movf	140,w,c	;volatile
   855   000A82  0B0F               	andlw	15
   856   000A84  0930               	iorlw	48
   857   000A86  D001               	goto	L2
   858   000A88                     l995:
   859                           
   860                           ;LibLCDXC8.h: 72: else;LibLCDXC8.h: 73: LATD=0x3F;
   861   000A88  0E3F               	movlw	63
   862   000A8A                     L2:
   863   000A8A  6E8C               	movwf	140,c	;volatile
   864                           
   865                           ;LibLCDXC8.h: 74: HabilitaLCD();
   866   000A8C  EC46  F006         	call	_HabilitaLCD	;wreg free
   867                           
   868                           ;LibLCDXC8.h: 75: RetardoLCD(3);
   869   000A90  0E03               	movlw	3
   870   000A92  ECBB  F005         	call	_RetardoLCD
   871                           
   872                           ;LibLCDXC8.h: 76: if(interfaz==4)
   873   000A96  0E04               	movlw	4
   874   000A98  1810               	xorwf	_interfaz^0,w,c
   875   000A9A  A4D8               	btfss	status,2,c
   876   000A9C  D004               	goto	l1005
   877                           
   878                           ;LibLCDXC8.h: 77: LATD=(LATD & 0b00001111) | 0x30;
   879   000A9E  508C               	movf	140,w,c	;volatile
   880   000AA0  0B0F               	andlw	15
   881   000AA2  0930               	iorlw	48
   882   000AA4  D001               	goto	L3
   883   000AA6                     l1005:
   884                           
   885                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATD=0x3F;
   886   000AA6  0E3F               	movlw	63
   887   000AA8                     L3:
   888   000AA8  6E8C               	movwf	140,c	;volatile
   889                           
   890                           ;LibLCDXC8.h: 80: HabilitaLCD();
   891   000AAA  EC46  F006         	call	_HabilitaLCD	;wreg free
   892                           
   893                           ;LibLCDXC8.h: 81: RetardoLCD(4);
   894   000AAE  0E04               	movlw	4
   895   000AB0  ECBB  F005         	call	_RetardoLCD
   896                           
   897                           ;LibLCDXC8.h: 82: if(interfaz==4){
   898   000AB4  0E04               	movlw	4
   899   000AB6  1810               	xorwf	_interfaz^0,w,c
   900   000AB8  A4D8               	btfss	status,2,c
   901   000ABA  D011               	goto	l1025
   902                           
   903                           ;LibLCDXC8.h: 83: LATD=(LATD & 0b00001111) | 0x20;
   904   000ABC  508C               	movf	140,w,c	;volatile
   905   000ABE  0B0F               	andlw	15
   906   000AC0  0920               	iorlw	32
   907   000AC2  6E8C               	movwf	140,c	;volatile
   908                           
   909                           ;LibLCDXC8.h: 84: HabilitaLCD();
   910   000AC4  EC46  F006         	call	_HabilitaLCD	;wreg free
   911                           
   912                           ;LibLCDXC8.h: 85: RetardoLCD(4);
   913   000AC8  0E04               	movlw	4
   914   000ACA  ECBB  F005         	call	_RetardoLCD
   915                           
   916                           ;LibLCDXC8.h: 86: EnviaDato(0x2F);
   917   000ACE  0E2F               	movlw	47
   918   000AD0  ECE6  F005         	call	_EnviaDato
   919                           
   920                           ;LibLCDXC8.h: 87: HabilitaLCD();
   921   000AD4  EC46  F006         	call	_HabilitaLCD	;wreg free
   922                           
   923                           ;LibLCDXC8.h: 88: RetardoLCD(4);
   924   000AD8  0E04               	movlw	4
   925   000ADA  ECBB  F005         	call	_RetardoLCD
   926   000ADE                     l1025:
   927                           
   928                           ;LibLCDXC8.h: 89: };LibLCDXC8.h: 90: BorraLCD();
   929   000ADE  EC3C  F006         	call	_BorraLCD	;wreg free
   930                           
   931                           ;LibLCDXC8.h: 91: EnviaDato(0xF);
   932   000AE2  0E0F               	movlw	15
   933   000AE4  ECE6  F005         	call	_EnviaDato
   934                           
   935                           ;LibLCDXC8.h: 92: HabilitaLCD();
   936   000AE8  EC46  F006         	call	_HabilitaLCD	;wreg free
   937                           
   938                           ;LibLCDXC8.h: 93: RetardoLCD(4);
   939   000AEC  0E04               	movlw	4
   940   000AEE  ECBB  F005         	call	_RetardoLCD
   941   000AF2  0012               	return		;funcret
   942   000AF4                     __end_of_InicializaLCD:
   943                           	callstack 0
   944                           
   945 ;; *************** function _BorraLCD *****************
   946 ;; Defined at:
   947 ;;		line 102 in file "LibLCDXC8.h"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   961 ;;      Params:         0       0       0       0       0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 3
   968 ;; This function calls:
   969 ;;		_EnviaDato
   970 ;;		_HabilitaLCD
   971 ;;		_RetardoLCD
   972 ;; This function is called by:
   973 ;;		_InicializaLCD
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text5
   979   000C78                     __ptext5:
   980                           	callstack 0
   981   000C78                     _BorraLCD:
   982                           	callstack 26
   983                           
   984                           ;LibLCDXC8.h: 104: LATE0=0;
   985                           
   986                           ;incstack = 0
   987   000C78  908D               	bcf	3981,0,c	;volatile
   988                           
   989                           ;LibLCDXC8.h: 105: EnviaDato(0x01);
   990   000C7A  0E01               	movlw	1
   991   000C7C  ECE6  F005         	call	_EnviaDato
   992                           
   993                           ;LibLCDXC8.h: 106: HabilitaLCD();
   994   000C80  EC46  F006         	call	_HabilitaLCD	;wreg free
   995                           
   996                           ;LibLCDXC8.h: 107: RetardoLCD(2);
   997   000C84  0E02               	movlw	2
   998   000C86  ECBB  F005         	call	_RetardoLCD
   999   000C8A  0012               	return		;funcret
  1000   000C8C                     __end_of_BorraLCD:
  1001                           	callstack 0
  1002                           
  1003 ;; *************** function _DireccionaLCD *****************
  1004 ;; Defined at:
  1005 ;;		line 227 in file "LibLCDXC8.h"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  a               1    wreg     unsigned char 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  a               1    5[COMRAM] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1019 ;;      Params:         0       0       0       0       0       0       0       0       0
  1020 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1022 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1023 ;;Total ram usage:        1 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 3
  1026 ;; This function calls:
  1027 ;;		_EnviaDato
  1028 ;;		_HabilitaLCD
  1029 ;;		_RetardoLCD
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text6
  1036   000C62                     __ptext6:
  1037                           	callstack 0
  1038   000C62                     _DireccionaLCD:
  1039                           	callstack 27
  1040                           
  1041                           ;incstack = 0
  1042                           ;DireccionaLCD@a stored from wreg
  1043   000C62  6E06               	movwf	DireccionaLCD@a^0,c
  1044                           
  1045                           ;LibLCDXC8.h: 230: LATE0=0;
  1046   000C64  908D               	bcf	3981,0,c	;volatile
  1047                           
  1048                           ;LibLCDXC8.h: 231: EnviaDato(a);
  1049   000C66  5006               	movf	DireccionaLCD@a^0,w,c
  1050   000C68  ECE6  F005         	call	_EnviaDato
  1051                           
  1052                           ;LibLCDXC8.h: 232: HabilitaLCD();
  1053   000C6C  EC46  F006         	call	_HabilitaLCD	;wreg free
  1054                           
  1055                           ;LibLCDXC8.h: 233: RetardoLCD(4);
  1056   000C70  0E04               	movlw	4
  1057   000C72  ECBB  F005         	call	_RetardoLCD
  1058   000C76  0012               	return		;funcret
  1059   000C78                     __end_of_DireccionaLCD:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _EnviaDato *****************
  1063 ;; Defined at:
  1064 ;;		line 51 in file "LibLCDXC8.h"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  a               1    wreg     unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  a               1    4[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0
  1079 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1080 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1081 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1082 ;;Total ram usage:        2 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; Hardware stack levels required when called: 2
  1085 ;; This function calls:
  1086 ;;		_HabilitaLCD
  1087 ;;		_RetardoLCD
  1088 ;; This function is called by:
  1089 ;;		_InicializaLCD
  1090 ;;		_BorraLCD
  1091 ;;		_EscribeLCD_c
  1092 ;;		_DireccionaLCD
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text7
  1097   000BCC                     __ptext7:
  1098                           	callstack 0
  1099   000BCC                     _EnviaDato:
  1100                           	callstack 26
  1101                           
  1102                           ;incstack = 0
  1103                           ;EnviaDato@a stored from wreg
  1104   000BCC  6E05               	movwf	EnviaDato@a^0,c
  1105                           
  1106                           ;LibLCDXC8.h: 52: if(interfaz==4){
  1107   000BCE  0E04               	movlw	4
  1108   000BD0  1810               	xorwf	_interfaz^0,w,c
  1109   000BD2  A4D8               	btfss	status,2,c
  1110   000BD4  D017               	goto	l955
  1111                           
  1112                           ;LibLCDXC8.h: 53: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  1113   000BD6  C005  F004         	movff	EnviaDato@a,??_EnviaDato
  1114   000BDA  0EF0               	movlw	240
  1115   000BDC  1604               	andwf	??_EnviaDato^0,f,c
  1116   000BDE  508C               	movf	140,w,c	;volatile
  1117   000BE0  0B0F               	andlw	15
  1118   000BE2  1004               	iorwf	??_EnviaDato^0,w,c
  1119   000BE4  6E8C               	movwf	140,c	;volatile
  1120                           
  1121                           ;LibLCDXC8.h: 54: HabilitaLCD();
  1122   000BE6  EC46  F006         	call	_HabilitaLCD	;wreg free
  1123                           
  1124                           ;LibLCDXC8.h: 55: RetardoLCD(1);
  1125   000BEA  0E01               	movlw	1
  1126   000BEC  ECBB  F005         	call	_RetardoLCD
  1127                           
  1128                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a<<4);
  1129   000BF0  C005  F004         	movff	EnviaDato@a,??_EnviaDato
  1130   000BF4  3A04               	swapf	??_EnviaDato^0,f,c
  1131   000BF6  0EF0               	movlw	240
  1132   000BF8  1604               	andwf	??_EnviaDato^0,f,c
  1133   000BFA  508C               	movf	140,w,c	;volatile
  1134   000BFC  0B0F               	andlw	15
  1135   000BFE  1004               	iorwf	??_EnviaDato^0,w,c
  1136   000C00  6E8C               	movwf	140,c	;volatile
  1137                           
  1138                           ;LibLCDXC8.h: 57: }else if(interfaz==8){
  1139   000C02  0012               	return	
  1140   000C04                     l955:
  1141   000C04  0E08               	movlw	8
  1142   000C06  1810               	xorwf	_interfaz^0,w,c
  1143   000C08  A4D8               	btfss	status,2,c
  1144   000C0A  0012               	return	
  1145                           
  1146                           ;LibLCDXC8.h: 58: LATD=a;
  1147   000C0C  C005  FF8C         	movff	EnviaDato@a,3980	;volatile
  1148   000C10  0012               	return		;funcret
  1149   000C12                     __end_of_EnviaDato:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _RetardoLCD *****************
  1153 ;; Defined at:
  1154 ;;		line 263 in file "LibLCDXC8.h"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  a               1    wreg     unsigned char 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  a               1    2[COMRAM] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0
  1169 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1170 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1171 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1172 ;;Total ram usage:        2 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; Hardware stack levels required when called: 1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_EnviaDato
  1179 ;;		_InicializaLCD
  1180 ;;		_BorraLCD
  1181 ;;		_EscribeLCD_c
  1182 ;;		_DireccionaLCD
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text8
  1187   000B76                     __ptext8:
  1188                           	callstack 0
  1189   000B76                     _RetardoLCD:
  1190                           	callstack 27
  1191                           
  1192                           ;incstack = 0
  1193                           ;RetardoLCD@a stored from wreg
  1194   000B76  6E03               	movwf	RetardoLCD@a^0,c
  1195                           
  1196                           ;LibLCDXC8.h: 264: switch(a){
  1197   000B78  D01B               	goto	l943
  1198   000B7A                     l933:
  1199   000B7A  0E05               	movlw	5
  1200   000B7C  6E02               	movwf	??_RetardoLCD^0,c
  1201   000B7E  0EDE               	movlw	222
  1202   000B80                     u627:
  1203   000B80  2EE8               	decfsz	wreg,f,c
  1204   000B82  D7FE               	bra	u627
  1205   000B84  2E02               	decfsz	??_RetardoLCD^0,f,c
  1206   000B86  D7FC               	bra	u627
  1207                           
  1208                           ;LibLCDXC8.h: 267: break;
  1209   000B88  0012               	return	
  1210   000B8A                     l935:
  1211   000B8A  0E53               	movlw	83
  1212   000B8C                     u637:
  1213   000B8C  2EE8               	decfsz	wreg,f,c
  1214   000B8E  D7FE               	bra	u637
  1215   000B90  F000               	nop	
  1216                           
  1217                           ;LibLCDXC8.h: 269: _delay((unsigned long)((640)*(1000000/4000000.0)));
  1218   000B92  0E35               	movlw	53
  1219   000B94                     u647:
  1220   000B94  2EE8               	decfsz	wreg,f,c
  1221   000B96  D7FE               	bra	u647
  1222   000B98  F000               	nop	
  1223                           
  1224                           ;LibLCDXC8.h: 271: break;
  1225   000B9A  0012               	return	
  1226   000B9C                     l937:
  1227   000B9C  0E08               	movlw	8
  1228   000B9E                     u657:
  1229   000B9E  2EE8               	decfsz	wreg,f,c
  1230   000BA0  D7FE               	bra	u657
  1231   000BA2  F000               	nop	
  1232                           
  1233                           ;LibLCDXC8.h: 274: break;
  1234   000BA4  0012               	return	
  1235   000BA6                     l939:
  1236   000BA6  0E03               	movlw	3
  1237   000BA8                     u667:
  1238   000BA8  2EE8               	decfsz	wreg,f,c
  1239   000BAA  D7FE               	bra	u667
  1240   000BAC  F000               	nop	
  1241                           
  1242                           ;LibLCDXC8.h: 277: break;
  1243   000BAE  0012               	return	
  1244   000BB0                     l943:
  1245   000BB0  5003               	movf	RetardoLCD@a^0,w,c
  1246                           
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 4, Range of values is 1 to 4
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte           13     7 (average)
  1252                           ;	Chosen strategy is simple_byte
  1253   000BB2  0A01               	xorlw	1	; case 1
  1254   000BB4  B4D8               	btfsc	status,2,c
  1255   000BB6  D7E1               	goto	l933
  1256   000BB8  0A03               	xorlw	3	; case 2
  1257   000BBA  B4D8               	btfsc	status,2,c
  1258   000BBC  D7E6               	goto	l935
  1259   000BBE  0A01               	xorlw	1	; case 3
  1260   000BC0  B4D8               	btfsc	status,2,c
  1261   000BC2  D7EC               	goto	l937
  1262   000BC4  0A07               	xorlw	7	; case 4
  1263   000BC6  A4D8               	btfss	status,2,c
  1264   000BC8  0012               	return	
  1265   000BCA  D7ED               	goto	l939
  1266   000BCC                     __end_of_RetardoLCD:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function _HabilitaLCD *****************
  1270 ;; Defined at:
  1271 ;;		line 95 in file "LibLCDXC8.h"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1285 ;;      Params:         0       0       0       0       0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1288 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1289 ;;Total ram usage:        0 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_EnviaDato
  1296 ;;		_InicializaLCD
  1297 ;;		_BorraLCD
  1298 ;;		_EscribeLCD_c
  1299 ;;		_DireccionaLCD
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text9
  1304   000C8C                     __ptext9:
  1305                           	callstack 0
  1306   000C8C                     _HabilitaLCD:
  1307                           	callstack 27
  1308                           
  1309                           ;LibLCDXC8.h: 97: LATE1=1;
  1310                           
  1311                           ;incstack = 0
  1312   000C8C  828D               	bsf	3981,1,c	;volatile
  1313                           
  1314                           ;LibLCDXC8.h: 98: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1315   000C8E  0E03               	movlw	3
  1316   000C90                     u677:
  1317   000C90  2EE8               	decfsz	wreg,f,c
  1318   000C92  D7FE               	bra	u677
  1319   000C94  F000               	nop	
  1320                           
  1321                           ;LibLCDXC8.h: 100: LATE1=0;
  1322   000C96  928D               	bcf	3981,1,c	;volatile
  1323   000C98  0012               	return		;funcret
  1324   000C9A                     __end_of_HabilitaLCD:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _ConfiguraLCD *****************
  1328 ;; Defined at:
  1329 ;;		line 47 in file "LibLCDXC8.h"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  a               1    wreg     unsigned char 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  a               1    1[COMRAM] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1343 ;;      Params:         0       0       0       0       0       0       0       0       0
  1344 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1346 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1347 ;;Total ram usage:        1 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; Hardware stack levels required when called: 1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text10
  1358   000C34                     __ptext10:
  1359                           	callstack 0
  1360   000C34                     _ConfiguraLCD:
  1361                           	callstack 29
  1362                           
  1363                           ;incstack = 0
  1364                           ;ConfiguraLCD@a stored from wreg
  1365   000C34  6E02               	movwf	ConfiguraLCD@a^0,c
  1366                           
  1367                           ;LibLCDXC8.h: 48: if(a==4 | a ==8)
  1368   000C36  0E04               	movlw	4
  1369   000C38  1802               	xorwf	ConfiguraLCD@a^0,w,c
  1370   000C3A  B4D8               	btfsc	status,2,c
  1371   000C3C  D004               	goto	u40
  1372   000C3E  0E08               	movlw	8
  1373   000C40  1802               	xorwf	ConfiguraLCD@a^0,w,c
  1374   000C42  A4D8               	btfss	status,2,c
  1375   000C44  0012               	return	
  1376   000C46                     u40:
  1377                           
  1378                           ;LibLCDXC8.h: 49: interfaz=a;
  1379   000C46  C002  F010         	movff	ConfiguraLCD@a,_interfaz
  1380   000C4A  0012               	return		;funcret
  1381   000C4C                     __end_of_ConfiguraLCD:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _ISR *****************
  1385 ;; Defined at:
  1386 ;;		line 137 in file "Lab4.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1400 ;;      Params:         0       0       0       0       0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1402 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1403 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1404 ;;Total ram usage:        1 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		Interrupt level 2
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	intcode
  1414   000008                     __pintcode:
  1415                           	callstack 0
  1416   000008                     _ISR:
  1417                           	callstack 26
  1418                           
  1419                           ;incstack = 0
  1420   000008  8211               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1421   00000A  ED14  F004         	call	int_func,f	;refresh shadow registers
  1422                           
  1423                           	psect	intcode_body
  1424   000828                     __pintcode_body:
  1425                           	callstack 26
  1426   000828                     int_func:
  1427                           	callstack 26
  1428   000828  0006               	pop		; remove dummy address from shadow register refresh
  1429                           
  1430                           ;Lab4.c: 138: if(RBIF==1){
  1431   00082A  A0F2               	btfss	4082,0,c	;volatile
  1432   00082C  D059               	goto	i2l1235
  1433                           
  1434                           ;Lab4.c: 139: if(PORTB!=0b11110000){
  1435   00082E  0EF0               	movlw	240
  1436   000830  1881               	xorwf	129,w,c	;volatile
  1437   000832  B4D8               	btfsc	status,2,c
  1438   000834  D04C               	goto	i2l1231
  1439                           
  1440                           ;Lab4.c: 140: Tecla=16;
  1441   000836  0E10               	movlw	16
  1442   000838  6E0F               	movwf	_Tecla^0,c
  1443                           
  1444                           ;Lab4.c: 141: LATB=0b11111110;
  1445   00083A  0EFE               	movlw	254
  1446   00083C  6E8A               	movwf	138,c	;volatile
  1447                           
  1448                           ;Lab4.c: 142: if(RB4==0) Tecla="0";
  1449   00083E  B881               	btfsc	3969,4,c	;volatile
  1450   000840  D002               	goto	i2l145
  1451   000842  0E0D               	movlw	low (low (STR_12+1))
  1452   000844  D041               	goto	L18
  1453   000846                     i2l145:
  1454                           
  1455                           ;Lab4.c: 143: else if(RB5==0) Tecla="1";
  1456   000846  BA81               	btfsc	3969,5,c	;volatile
  1457   000848  D002               	goto	i2l147
  1458   00084A  0E10               	movlw	low (low (STR_13+1))
  1459   00084C  D03D               	goto	L18
  1460   00084E                     i2l147:
  1461                           
  1462                           ;Lab4.c: 144: else if(RB6==0) Tecla="2";
  1463   00084E  BC81               	btfsc	3969,6,c	;volatile
  1464   000850  D002               	goto	i2l149
  1465   000852  0E13               	movlw	low (low (STR_14+1))
  1466   000854  D039               	goto	L18
  1467   000856                     i2l149:
  1468                           
  1469                           ;Lab4.c: 145: else if(RB7==0) Tecla="3";
  1470   000856  BE81               	btfsc	3969,7,c	;volatile
  1471   000858  D002               	goto	i2l1195
  1472   00085A  0E16               	movlw	low (low (STR_15+1))
  1473   00085C  D035               	goto	L18
  1474   00085E                     i2l1195:
  1475                           
  1476                           ;Lab4.c: 146: else{;Lab4.c: 147: LATB=0b11111101;
  1477   00085E  0EFD               	movlw	253
  1478   000860  6E8A               	movwf	138,c	;volatile
  1479                           
  1480                           ;Lab4.c: 148: if(RB4==0) Tecla="4";
  1481   000862  B881               	btfsc	3969,4,c	;volatile
  1482   000864  D002               	goto	i2l153
  1483   000866  0E19               	movlw	low (low (STR_16+1))
  1484   000868  D02F               	goto	L18
  1485   00086A                     i2l153:
  1486                           
  1487                           ;Lab4.c: 149: else if(RB5==0) Tecla="5";
  1488   00086A  BA81               	btfsc	3969,5,c	;volatile
  1489   00086C  D002               	goto	i2l155
  1490   00086E  0E1C               	movlw	low (low (STR_17+1))
  1491   000870  D02B               	goto	L18
  1492   000872                     i2l155:
  1493                           
  1494                           ;Lab4.c: 150: else if(RB6==0) Tecla="6";
  1495   000872  BC81               	btfsc	3969,6,c	;volatile
  1496   000874  D002               	goto	i2l157
  1497   000876  0E1F               	movlw	low (low (STR_18+1))
  1498   000878  D027               	goto	L18
  1499   00087A                     i2l157:
  1500                           
  1501                           ;Lab4.c: 151: else if(RB7==0) Tecla="7";
  1502   00087A  BE81               	btfsc	3969,7,c	;volatile
  1503   00087C  D002               	goto	i2l1207
  1504   00087E  0E21               	movlw	low (low STR_2)
  1505   000880  D023               	goto	L18
  1506   000882                     i2l1207:
  1507                           
  1508                           ;Lab4.c: 152: else{;Lab4.c: 153: LATB=0b11111011;
  1509   000882  0EFB               	movlw	251
  1510   000884  6E8A               	movwf	138,c	;volatile
  1511                           
  1512                           ;Lab4.c: 154: if(RB4==0) Tecla="8";
  1513   000886  B881               	btfsc	3969,4,c	;volatile
  1514   000888  D002               	goto	i2l161
  1515   00088A  0E23               	movlw	low (low STR_10)
  1516   00088C  D01D               	goto	L18
  1517   00088E                     i2l161:
  1518                           
  1519                           ;Lab4.c: 155: else if(RB5==0) Tecla="9";
  1520   00088E  BA81               	btfsc	3969,5,c	;volatile
  1521   000890  D002               	goto	i2l163
  1522   000892  0E25               	movlw	low (low STR_11)
  1523   000894  D019               	goto	L18
  1524   000896                     i2l163:
  1525                           
  1526                           ;Lab4.c: 156: else if(RB6==0) Tecla="10";
  1527   000896  BC81               	btfsc	3969,6,c	;volatile
  1528   000898  D002               	goto	i2l165
  1529   00089A  0E0C               	movlw	low (low STR_12)
  1530   00089C  D015               	goto	L18
  1531   00089E                     i2l165:
  1532                           
  1533                           ;Lab4.c: 157: else if(RB7==0) Tecla="11";
  1534   00089E  BE81               	btfsc	3969,7,c	;volatile
  1535   0008A0  D002               	goto	i2l1219
  1536   0008A2  0E0F               	movlw	low (low STR_13)
  1537   0008A4  D011               	goto	L18
  1538   0008A6                     i2l1219:
  1539                           
  1540                           ;Lab4.c: 158: else{;Lab4.c: 159: LATB=0b11110111;
  1541   0008A6  0EF7               	movlw	247
  1542   0008A8  6E8A               	movwf	138,c	;volatile
  1543                           
  1544                           ;Lab4.c: 160: if(RB4==0) Tecla="12";
  1545   0008AA  B881               	btfsc	3969,4,c	;volatile
  1546   0008AC  D002               	goto	i2l169
  1547   0008AE  0E12               	movlw	low (low STR_14)
  1548   0008B0  D00B               	goto	L18
  1549   0008B2                     i2l169:
  1550                           
  1551                           ;Lab4.c: 161: else if(RB5==0) Tecla="13";
  1552   0008B2  BA81               	btfsc	3969,5,c	;volatile
  1553   0008B4  D002               	goto	i2l171
  1554   0008B6  0E15               	movlw	low (low STR_15)
  1555   0008B8  D007               	goto	L18
  1556   0008BA                     i2l171:
  1557                           
  1558                           ;Lab4.c: 162: else if(RB6==0) Tecla="14";
  1559   0008BA  BC81               	btfsc	3969,6,c	;volatile
  1560   0008BC  D002               	goto	i2l173
  1561   0008BE  0E18               	movlw	low (low STR_16)
  1562   0008C0  D003               	goto	L18
  1563   0008C2                     i2l173:
  1564                           
  1565                           ;Lab4.c: 163: else if(RB7==0) Tecla="15";
  1566   0008C2  BE81               	btfsc	3969,7,c	;volatile
  1567   0008C4  D002               	goto	i2l170
  1568   0008C6  0E1B               	movlw	low (low STR_17)
  1569   0008C8                     L18:
  1570   0008C8  6E0F               	movwf	_Tecla^0,c
  1571   0008CA                     i2l170:
  1572                           
  1573                           ;Lab4.c: 164: };Lab4.c: 165: };Lab4.c: 166: };Lab4.c: 167: LATB=0b11110000;
  1574   0008CA  0EF0               	movlw	240
  1575   0008CC  6E8A               	movwf	138,c	;volatile
  1576   0008CE                     i2l1231:
  1577                           
  1578                           ;Lab4.c: 168: };Lab4.c: 169: _delay((unsigned long)((100)*(1000000/4000.0)));
  1579   0008CE  0E21               	movlw	33
  1580   0008D0  6E01               	movwf	??_ISR^0,c
  1581   0008D2  0E76               	movlw	118
  1582   0008D4                     i2u68_47:
  1583   0008D4  2EE8               	decfsz	wreg,f,c
  1584   0008D6  D7FE               	bra	i2u68_47
  1585   0008D8  2E01               	decfsz	??_ISR^0,f,c
  1586   0008DA  D7FC               	bra	i2u68_47
  1587   0008DC  D000               	nop2	
  1588                           
  1589                           ;Lab4.c: 170: RBIF=0;
  1590   0008DE  90F2               	bcf	4082,0,c	;volatile
  1591   0008E0                     i2l1235:
  1592                           
  1593                           ;Lab4.c: 171: };Lab4.c: 172: if(TMR0IF==1){
  1594   0008E0  A4F2               	btfss	4082,2,c	;volatile
  1595   0008E2  D00A               	goto	i2u53_45
  1596                           
  1597                           ;Lab4.c: 173: TMR0IF=0;
  1598   0008E4  94F2               	bcf	4082,2,c	;volatile
  1599                           
  1600                           ;Lab4.c: 174: TMR0=3036;
  1601   0008E6  0E0B               	movlw	11
  1602   0008E8  6ED7               	movwf	215,c	;volatile
  1603   0008EA  0EDC               	movlw	220
  1604   0008EC  6ED6               	movwf	214,c	;volatile
  1605                           
  1606                           ;Lab4.c: 175: LATD1=LATD1^1;
  1607   0008EE  B28C               	btfsc	3980,1,c	;volatile
  1608   0008F0  D002               	goto	i2u52_40
  1609   0008F2  828C               	bsf	3980,1,c	;volatile
  1610   0008F4  D001               	goto	i2u53_45
  1611   0008F6                     i2u52_40:
  1612   0008F6  928C               	bcf	3980,1,c	;volatile
  1613   0008F8                     i2u53_45:
  1614   0008F8  9211               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1615   0008FA  0011               	retfie		f
  1616   0008FC                     __end_of_ISR:
  1617                           	callstack 0
  1618                           
  1619                           	psect	rparam
  1620   000000                     
  1621                           	psect	temp
  1622   000011                     btemp:
  1623                           	callstack 0
  1624   000011                     	ds	1
  1625   000000                     int$flags	set	btemp
  1626   000000                     wtemp8	set	btemp+1
  1627   000000                     ttemp5	set	btemp+1
  1628   000000                     ttemp6	set	btemp+4
  1629   000000                     ttemp7	set	btemp+8
  1630                           
  1631                           	psect	idloc
  1632                           
  1633                           ;Config register IDLOC0 @ 0x200000
  1634                           ;	unspecified, using default values
  1635   200000                     	org	2097152
  1636   200000  FF                 	db	255
  1637                           
  1638                           ;Config register IDLOC1 @ 0x200001
  1639                           ;	unspecified, using default values
  1640   200001                     	org	2097153
  1641   200001  FF                 	db	255
  1642                           
  1643                           ;Config register IDLOC2 @ 0x200002
  1644                           ;	unspecified, using default values
  1645   200002                     	org	2097154
  1646   200002  FF                 	db	255
  1647                           
  1648                           ;Config register IDLOC3 @ 0x200003
  1649                           ;	unspecified, using default values
  1650   200003                     	org	2097155
  1651   200003  FF                 	db	255
  1652                           
  1653                           ;Config register IDLOC4 @ 0x200004
  1654                           ;	unspecified, using default values
  1655   200004                     	org	2097156
  1656   200004  FF                 	db	255
  1657                           
  1658                           ;Config register IDLOC5 @ 0x200005
  1659                           ;	unspecified, using default values
  1660   200005                     	org	2097157
  1661   200005  FF                 	db	255
  1662                           
  1663                           ;Config register IDLOC6 @ 0x200006
  1664                           ;	unspecified, using default values
  1665   200006                     	org	2097158
  1666   200006  FF                 	db	255
  1667                           
  1668                           ;Config register IDLOC7 @ 0x200007
  1669                           ;	unspecified, using default values
  1670   200007                     	org	2097159
  1671   200007  FF                 	db	255
  1672                           
  1673                           	psect	config
  1674                           
  1675                           ;Config register CONFIG1L @ 0x300000
  1676                           ;	unspecified, using default values
  1677                           ;	PLL Prescaler Selection bits
  1678                           ;	PLLDIV = 0x0, unprogrammed default
  1679                           ;	System Clock Postscaler Selection bits
  1680                           ;	CPUDIV = 0x0, unprogrammed default
  1681                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1682                           ;	USBDIV = 0x0, unprogrammed default
  1683   300000                     	org	3145728
  1684   300000  00                 	db	0
  1685                           
  1686                           ;Config register CONFIG1H @ 0x300001
  1687                           ;	Oscillator Selection bits
  1688                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1689                           ;	Fail-Safe Clock Monitor Enable bit
  1690                           ;	FCMEN = 0x0, unprogrammed default
  1691                           ;	Internal/External Oscillator Switchover bit
  1692                           ;	IESO = 0x0, unprogrammed default
  1693   300001                     	org	3145729
  1694   300001  09                 	db	9
  1695                           
  1696                           ;Config register CONFIG2L @ 0x300002
  1697                           ;	unspecified, using default values
  1698                           ;	Power-up Timer Enable bit
  1699                           ;	PWRT = 0x1, unprogrammed default
  1700                           ;	Brown-out Reset Enable bits
  1701                           ;	BOR = 0x3, unprogrammed default
  1702                           ;	Brown-out Reset Voltage bits
  1703                           ;	BORV = 0x3, unprogrammed default
  1704                           ;	USB Voltage Regulator Enable bit
  1705                           ;	VREGEN = 0x0, unprogrammed default
  1706   300002                     	org	3145730
  1707   300002  1F                 	db	31
  1708                           
  1709                           ;Config register CONFIG2H @ 0x300003
  1710                           ;	Watchdog Timer Enable bit
  1711                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1712                           ;	Watchdog Timer Postscale Select bits
  1713                           ;	WDTPS = 0xF, unprogrammed default
  1714   300003                     	org	3145731
  1715   300003  1E                 	db	30
  1716                           
  1717                           ; Padding undefined space
  1718   300004                     	org	3145732
  1719   300004  FF                 	db	255
  1720                           
  1721                           ;Config register CONFIG3H @ 0x300005
  1722                           ;	CCP2 MUX bit
  1723                           ;	CCP2MX = 0x1, unprogrammed default
  1724                           ;	PORTB A/D Enable bit
  1725                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1726                           ;	Low-Power Timer 1 Oscillator Enable bit
  1727                           ;	LPT1OSC = 0x0, unprogrammed default
  1728                           ;	MCLR Pin Enable bit
  1729                           ;	MCLRE = 0x1, unprogrammed default
  1730   300005                     	org	3145733
  1731   300005  81                 	db	129
  1732                           
  1733                           ;Config register CONFIG4L @ 0x300006
  1734                           ;	Stack Full/Underflow Reset Enable bit
  1735                           ;	STVREN = 0x1, unprogrammed default
  1736                           ;	Single-Supply ICSP Enable bit
  1737                           ;	LVP = OFF, Single-Supply ICSP disabled
  1738                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1739                           ;	ICPRT = 0x0, unprogrammed default
  1740                           ;	Extended Instruction Set Enable bit
  1741                           ;	XINST = 0x0, unprogrammed default
  1742                           ;	Background Debugger Enable bit
  1743                           ;	DEBUG = 0x1, unprogrammed default
  1744   300006                     	org	3145734
  1745   300006  81                 	db	129
  1746                           
  1747                           ; Padding undefined space
  1748   300007                     	org	3145735
  1749   300007  FF                 	db	255
  1750                           
  1751                           ;Config register CONFIG5L @ 0x300008
  1752                           ;	unspecified, using default values
  1753                           ;	Code Protection bit
  1754                           ;	CP0 = 0x1, unprogrammed default
  1755                           ;	Code Protection bit
  1756                           ;	CP1 = 0x1, unprogrammed default
  1757                           ;	Code Protection bit
  1758                           ;	CP2 = 0x1, unprogrammed default
  1759                           ;	Code Protection bit
  1760                           ;	CP3 = 0x1, unprogrammed default
  1761   300008                     	org	3145736
  1762   300008  0F                 	db	15
  1763                           
  1764                           ;Config register CONFIG5H @ 0x300009
  1765                           ;	unspecified, using default values
  1766                           ;	Boot Block Code Protection bit
  1767                           ;	CPB = 0x1, unprogrammed default
  1768                           ;	Data EEPROM Code Protection bit
  1769                           ;	CPD = 0x1, unprogrammed default
  1770   300009                     	org	3145737
  1771   300009  C0                 	db	192
  1772                           
  1773                           ;Config register CONFIG6L @ 0x30000A
  1774                           ;	unspecified, using default values
  1775                           ;	Write Protection bit
  1776                           ;	WRT0 = 0x1, unprogrammed default
  1777                           ;	Write Protection bit
  1778                           ;	WRT1 = 0x1, unprogrammed default
  1779                           ;	Write Protection bit
  1780                           ;	WRT2 = 0x1, unprogrammed default
  1781                           ;	Write Protection bit
  1782                           ;	WRT3 = 0x1, unprogrammed default
  1783   30000A                     	org	3145738
  1784   30000A  0F                 	db	15
  1785                           
  1786                           ;Config register CONFIG6H @ 0x30000B
  1787                           ;	unspecified, using default values
  1788                           ;	Configuration Register Write Protection bit
  1789                           ;	WRTC = 0x1, unprogrammed default
  1790                           ;	Boot Block Write Protection bit
  1791                           ;	WRTB = 0x1, unprogrammed default
  1792                           ;	Data EEPROM Write Protection bit
  1793                           ;	WRTD = 0x1, unprogrammed default
  1794   30000B                     	org	3145739
  1795   30000B  E0                 	db	224
  1796                           
  1797                           ;Config register CONFIG7L @ 0x30000C
  1798                           ;	unspecified, using default values
  1799                           ;	Table Read Protection bit
  1800                           ;	EBTR0 = 0x1, unprogrammed default
  1801                           ;	Table Read Protection bit
  1802                           ;	EBTR1 = 0x1, unprogrammed default
  1803                           ;	Table Read Protection bit
  1804                           ;	EBTR2 = 0x1, unprogrammed default
  1805                           ;	Table Read Protection bit
  1806                           ;	EBTR3 = 0x1, unprogrammed default
  1807   30000C                     	org	3145740
  1808   30000C  0F                 	db	15
  1809                           
  1810                           ;Config register CONFIG7H @ 0x30000D
  1811                           ;	unspecified, using default values
  1812                           ;	Boot Block Table Read Protection bit
  1813                           ;	EBTRB = 0x1, unprogrammed default
  1814   30000D                     	org	3145741
  1815   30000D  40                 	db	64
  1816                           tosu	equ	0xFFF
  1817                           tosh	equ	0xFFE
  1818                           tosl	equ	0xFFD
  1819                           stkptr	equ	0xFFC
  1820                           pclatu	equ	0xFFB
  1821                           pclath	equ	0xFFA
  1822                           pcl	equ	0xFF9
  1823                           tblptru	equ	0xFF8
  1824                           tblptrh	equ	0xFF7
  1825                           tblptrl	equ	0xFF6
  1826                           tablat	equ	0xFF5
  1827                           prodh	equ	0xFF4
  1828                           prodl	equ	0xFF3
  1829                           indf0	equ	0xFEF
  1830                           postinc0	equ	0xFEE
  1831                           postdec0	equ	0xFED
  1832                           preinc0	equ	0xFEC
  1833                           plusw0	equ	0xFEB
  1834                           fsr0h	equ	0xFEA
  1835                           fsr0l	equ	0xFE9
  1836                           wreg	equ	0xFE8
  1837                           indf1	equ	0xFE7
  1838                           postinc1	equ	0xFE6
  1839                           postdec1	equ	0xFE5
  1840                           preinc1	equ	0xFE4
  1841                           plusw1	equ	0xFE3
  1842                           fsr1h	equ	0xFE2
  1843                           fsr1l	equ	0xFE1
  1844                           bsr	equ	0xFE0
  1845                           indf2	equ	0xFDF
  1846                           postinc2	equ	0xFDE
  1847                           postdec2	equ	0xFDD
  1848                           preinc2	equ	0xFDC
  1849                           plusw2	equ	0xFDB
  1850                           fsr2h	equ	0xFDA
  1851                           fsr2l	equ	0xFD9
  1852                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Var@a	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), STR_2(CODE[2]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_MensajeLCD_Var
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     812
                                             12 COMRAM     2     2      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       6     4      2     452
                                              6 COMRAM     6     4      2
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              5 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                              3 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
     _EscribeLCD_c
       _EnviaDato
       _HabilitaLCD
       _RetardoLCD

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      E      10       1       17.0%
BITBIGSFRhlh        2A      0       0      23        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhll       14      0       0      22        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      25        0.0%
BITBIGSFRlh          1      0       0      26        0.0%
BITBIGSFRhllh        1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      29        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 16 07:23:11 2023

                     u40 0C46               EnviaDato@a 0005            ??_LeerTeclado 0002  
                    l122 09D4                      l131 0A1C                      l132 0A24  
                    l124 09DC                      l133 0A2C                      l125 09E4  
          _InicializaLCD 0A58                      l135 0A40                      l127 09F8  
                    l136 0A48                      l128 0A00                      l137 0A50  
                    l129 0A08                      l933 0B7A                      l935 0B8A  
                    l943 0BB0                      l937 0B9C                      l939 0BA6  
                    l955 0C04                      l985 0A6A                      l995 0A88  
                    _GIE 007F97                      _RB4 007C0C                      _RB5 007C0D  
                    _RB6 007C0E                      _RB7 007C0F                      u160 09C8  
                    u540 0B28                      _ISR 0008                      u607 094A  
                    u560 0B5A                      u617 0994                      u570 0B74  
                    u627 0B80                      u547 0B1E                      u637 0B8C  
                    u647 0B94                      u567 0B50                      u657 0B9E  
                    u667 0BA8                      u587 091E                      u677 0C90  
                    u597 0930                      wreg 000FE8                     ?_ISR 0001  
                   l1005 0AA6                     l1025 0ADE                     l1105 0A10  
                   l1125 0A34                     l1085 09EC                     l1249 0AFC  
                   l1289 09A0                     STR_1 0801                     STR_2 0821  
                   STR_3 0810                     STR_4 0813                     STR_5 0816  
                   STR_6 0819                     STR_7 081C                     STR_8 081F  
                   STR_9 0821                     _LATB 000F8A                     _LATD 000F8C  
                   _LATE 000F8D                     _RBIE 007F93                     _RBIF 007F90  
                   _RBPU 007F8F                     _TMR0 000FD6           ??_EscribeLCD_c 0006  
                   _main 08FC                     fsr0h 000FEA                     indf0 000FEF  
                   fsr0l 000FE9                     btemp 0011                     start 000E  
           ___param_bank 000000                    ??_ISR 0001           ?_InicializaLCD 0001  
                  ?_main 0001                    STR_10 0823                    STR_11 0825  
                  STR_20 0810                    STR_12 080C                    STR_21 0813  
                  STR_13 080F                    STR_30 080F                    STR_22 0816  
                  STR_14 0812                    STR_31 0812                    STR_23 0819  
                  STR_15 0815                    STR_32 0815                    STR_24 081C  
                  STR_16 0818                    STR_33 0818                    STR_25 081F  
                  STR_17 081B                    STR_34 081B                    STR_26 0821  
                  STR_18 081E                    STR_19 080D                    STR_27 0823  
                  STR_28 0825                    STR_29 080C            EscribeLCD_c@a 0006  
                  _LATD1 007C61                    _LATE0 007C68                    _LATE1 007C69  
                  i2l161 088E                    i2l153 086A                    i2l145 0846  
                  i2l170 08CA                    i2l171 08BA                    i2l163 0896  
                  i2l155 0872                    i2l147 084E                    i2l173 08C2  
                  i2l165 089E                    i2l157 087A                    i2l149 0856  
                  i2l169 08B2                    _PORTB 000F81                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96                    _Tecla 000F  
    __end_of_LeerTeclado 0A58                    tablat 000FF5              _HabilitaLCD 0C8C  
                  ttemp5 0012                    ttemp6 0015                    ttemp7 0019  
                  status 000FD8                    wtemp8 0012         __end_of_BorraLCD 0C8C  
        __initialization 0C12             __end_of_main 09BA                   ??_main 000D  
   __end_of_ConfiguraLCD 0C4C            __activetblptr 000002                   _ADCON1 000FC1  
         DireccionaLCD@a 0006                   i2l1207 0882                   i2l1231 08CE  
                 i2l1219 08A6                   i2l1235 08E0                   i2l1195 085E  
                 _TMR0IF 007F92    __end_of_DireccionaLCD 0C78               _RetardoLCD 0B76  
        ??_InicializaLCD 0006                   isa$std 000001     __end_of_EscribeLCD_c 0C62  
            _LeerTeclado 09BA             __pdataCOMRAM 0010             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0C26            ___rparam_used 000001  
         __pcstackCOMRAM 0001        __end_of_EnviaDato 0C12                ?_BorraLCD 0001  
         _MensajeLCD_Var 0AF4          MensajeLCD_Var@a 0007          MensajeLCD_Var@i 000B  
            ?_RetardoLCD 0001              RetardoLCD@a 0003   __end_of_MensajeLCD_Var 0B76  
                i2u52_40 08F6                  i2u53_45 08F8                  i2u68_47 08D4  
             ??_BorraLCD 0006             ?_HabilitaLCD 0001             _ConfiguraLCD 0C34  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0C12                  __ramtop 0800                  __ptext0 08FC  
                __ptext1 0AF4                  __ptext2 0C4C                  __ptext3 09BA  
                __ptext4 0A58                  __ptext5 0C78                  __ptext6 0C62  
                __ptext7 0BCC                  __ptext8 0B76                  __ptext9 0C8C  
        ?_MensajeLCD_Var 0007           __pintcode_body 0828     end_of_initialization 0C26  
          __Lmediumconst 0000                  int_func 0828             _EscribeLCD_c 0C4C  
           ?_LeerTeclado 0001            __pidataCOMRAM 0C9A    __end_of_InicializaLCD 0AF4  
              _EnviaDato 0BCC      start_initialization 0C12              __end_of_ISR 08FC  
           ??_RetardoLCD 0002               ?_EnviaDato 0001              __pbssCOMRAM 000F  
     __end_of_RetardoLCD 0BCC            _DireccionaLCD 0C62                __pintcode 0008  
       ??_MensajeLCD_Var 0009              __smallconst 0800           ?_DireccionaLCD 0001  
            ??_EnviaDato 0004                 _BorraLCD 0C78                 __Hrparam 0000  
               __Lrparam 0000            ConfiguraLCD@a 0002                 __ptext10 0C34  
        ??_DireccionaLCD 0006                 _interfaz 0010                 isa$xinst 000000  
               int$flags 0011                 intlevel2 0000            ??_HabilitaLCD 0002  
          ?_ConfiguraLCD 0001           ??_ConfiguraLCD 0002            ?_EscribeLCD_c 0001  
    __end_of_HabilitaLCD 0C9A  
