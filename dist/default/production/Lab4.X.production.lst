

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 16 07:51:31 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Version 2.40
    37                           ; Generated 04/07/2022 GMT
    38                           ; 
    39                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     
    72                           	psect	idataCOMRAM
    73   00151E                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _n2c
    77   00151E  20                 	db	32
    78                           
    79                           ;initializer for _n1c
    80   00151F  20                 	db	32
    81                           
    82                           ;initializer for _op
    83   001520  20                 	db	32
    84                           
    85                           ;initializer for _interfaz
    86   001521  08                 	db	8
    87   000000                     _LATE	set	3981
    88   000000                     _RB7	set	31759
    89   000000                     _RB6	set	31758
    90   000000                     _RB5	set	31757
    91   000000                     _LATE1	set	31849
    92   000000                     _LATB	set	3978
    93   000000                     _LATD	set	3980
    94   000000                     _RB4	set	31756
    95   000000                     _TRISB	set	3987
    96   000000                     _TRISD	set	3989
    97   000000                     _ADCON1	set	4033
    98   000000                     _LATE0	set	31848
    99   000000                     _RBPU	set	32655
   100   000000                     _TRISE	set	3990
   101                           
   102                           	psect	smallconst
   103   000800                     __psmallconst:
   104                           	callstack 0
   105   000800  00                 	db	0
   106   000801                     STR_2:
   107   000801  20                 	db	32
   108   000802  20                 	db	32
   109   000803  20                 	db	32
   110   000804  20                 	db	32
   111   000805  20                 	db	32
   112   000806  20                 	db	32
   113   000807  20                 	db	32
   114   000808  20                 	db	32
   115   000809  20                 	db	32
   116   00080A  20                 	db	32
   117   00080B  20                 	db	32
   118   00080C  20                 	db	32
   119   00080D  20                 	db	32
   120   00080E  20                 	db	32
   121   00080F  20                 	db	32
   122   000810  20                 	db	32
   123   000811  00                 	db	0
   124   000812                     STR_1:
   125   000812  48                 	db	72	;'H'
   126   000813  6F                 	db	111	;'o'
   127   000814  6C                 	db	108	;'l'
   128   000815  61                 	db	97	;'a'
   129   000816  20                 	db	32
   130   000817  6D                 	db	109	;'m'
   131   000818  75                 	db	117	;'u'
   132   000819  6E                 	db	110	;'n'
   133   00081A  64                 	db	100	;'d'
   134   00081B  6F                 	db	111	;'o'
   135   00081C  00                 	db	0
   136   00081D  00                 	db	0	; dummy byte at the end
   137   000000                     
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141   001438                     __pcinit:
   142                           	callstack 0
   143   001438                     start_initialization:
   144                           	callstack 0
   145   001438                     __initialization:
   146                           	callstack 0
   147                           
   148                           ; Initialize objects allocated to COMRAM (4 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150   001438  0E1E               	movlw	low __pidataCOMRAM
   151   00143A  6EF6               	movwf	tblptrl,c
   152   00143C  0E15               	movlw	high __pidataCOMRAM
   153   00143E  6EF7               	movwf	tblptrh,c
   154   001440  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155   001442  6EF8               	movwf	tblptru,c
   156   001444  EE00  F04E         	lfsr	0,__pdataCOMRAM
   157   001448  EE10 F004          	lfsr	1,4
   158   00144C                     copy_data0:
   159   00144C  0009               	tblrd		*+
   160   00144E  CFF5 FFEE          	movff	tablat,postinc0
   161   001452  50E5               	movf	postdec1,w,c
   162   001454  50E1               	movf	fsr1l,w,c
   163   001456  E1FA               	bnz	copy_data0
   164                           
   165                           ; Clear objects allocated to COMRAM (18 bytes)
   166   001458  EE00  F03C         	lfsr	0,__pbssCOMRAM
   167   00145C  0E12               	movlw	18
   168   00145E                     clear_0:
   169   00145E  6AEE               	clrf	postinc0,c
   170   001460  06E8               	decf	wreg,f,c
   171   001462  E1FD               	bnz	clear_0
   172   001464                     end_of_initialization:
   173                           	callstack 0
   174   001464                     __end_of__initialization:
   175                           	callstack 0
   176   001464  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177   001466  6EF8               	movwf	tblptru,c
   178   001468  0100               	movlb	0
   179   00146A  EF0F  F004         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssCOMRAM
   182   00003C                     __pbssCOMRAM:
   183                           	callstack 0
   184   00003C                     _r:
   185                           	callstack 0
   186   00003C                     	ds	4
   187   000040                     _partdecl:
   188                           	callstack 0
   189   000040                     	ds	4
   190   000044                     _nodec:
   191                           	callstack 0
   192   000044                     	ds	3
   193   000047                     _i:
   194                           	callstack 0
   195   000047                     	ds	2
   196   000049                     _n2:
   197                           	callstack 0
   198   000049                     	ds	2
   199   00004B                     _n1:
   200                           	callstack 0
   201   00004B                     	ds	2
   202   00004D                     _Tecla:
   203                           	callstack 0
   204   00004D                     	ds	1
   205                           
   206                           	psect	dataCOMRAM
   207   00004E                     __pdataCOMRAM:
   208                           	callstack 0
   209   00004E                     _n2c:
   210                           	callstack 0
   211   00004E                     	ds	1
   212   00004F                     _n1c:
   213                           	callstack 0
   214   00004F                     	ds	1
   215   000050                     _op:
   216                           	callstack 0
   217   000050                     	ds	1
   218   000051                     _interfaz:
   219                           	callstack 0
   220   000051                     	ds	1
   221                           
   222                           	psect	cstackCOMRAM
   223   000001                     __pcstackCOMRAM:
   224                           	callstack 0
   225   000001                     ??_RetardoLCD:
   226   000001                     ?___wmul:
   227                           	callstack 0
   228   000001                     ?___lwdiv:
   229                           	callstack 0
   230   000001                     ?___ftpack:
   231                           	callstack 0
   232   000001                     ConfiguraLCD@a:
   233                           	callstack 0
   234   000001                     ___wmul@multiplier:
   235                           	callstack 0
   236   000001                     ___lwdiv@dividend:
   237                           	callstack 0
   238   000001                     ___ftpack@arg:
   239                           	callstack 0
   240                           
   241                           ; 3 bytes @ 0x0
   242   000001                     	ds	1
   243   000002                     RetardoLCD@a:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x1
   247   000002                     	ds	1
   248   000003                     ??_EnviaDato:
   249   000003                     ___wmul@multiplicand:
   250                           	callstack 0
   251   000003                     ___lwdiv@divisor:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x2
   255   000003                     	ds	1
   256   000004                     EnviaDato@a:
   257                           	callstack 0
   258   000004                     ___ftpack@exp:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x3
   262   000004                     	ds	1
   263   000005                     EscribeLCD_c@a:
   264                           	callstack 0
   265   000005                     DireccionaLCD@a:
   266                           	callstack 0
   267   000005                     ___ftpack@sign:
   268                           	callstack 0
   269   000005                     ___wmul@product:
   270                           	callstack 0
   271   000005                     ___lwdiv@quotient:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x4
   275   000005                     	ds	1
   276   000006                     ??___ftpack:
   277   000006                     MensajeLCD_Var@a:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x5
   281   000006                     	ds	1
   282   000007                     ??_MensajeLCD_Var:
   283   000007                     ___lwdiv@counter:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x6
   287   000007                     	ds	1
   288   000008                     MensajeLCD_Var@i:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x7
   292   000008                     	ds	1
   293   000009                     ?___ftadd:
   294                           	callstack 0
   295   000009                     ?___lltoft:
   296                           	callstack 0
   297   000009                     ?___lwtoft:
   298                           	callstack 0
   299   000009                     ___lwtoft@c:
   300                           	callstack 0
   301   000009                     ___ftadd@f1:
   302                           	callstack 0
   303   000009                     ___lltoft@c:
   304                           	callstack 0
   305                           
   306                           ; 4 bytes @ 0x8
   307   000009                     	ds	3
   308   00000C                     ___ftadd@f2:
   309                           	callstack 0
   310                           
   311                           ; 3 bytes @ 0xB
   312   00000C                     	ds	1
   313   00000D                     ??___lltoft:
   314                           
   315                           ; 1 bytes @ 0xC
   316   00000D                     	ds	2
   317   00000F                     ??___ftadd:
   318                           
   319                           ; 1 bytes @ 0xE
   320   00000F                     	ds	2
   321   000011                     ___lltoft@exp:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x10
   325   000011                     	ds	1
   326   000012                     ___ftadd@sign:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x11
   330   000012                     	ds	1
   331   000013                     ___ftadd@exp2:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x12
   335   000013                     	ds	1
   336   000014                     ___ftadd@exp1:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x13
   340   000014                     	ds	1
   341   000015                     ?___ftsub:
   342                           	callstack 0
   343   000015                     ___ftsub@f1:
   344                           	callstack 0
   345                           
   346                           ; 3 bytes @ 0x14
   347   000015                     	ds	3
   348   000018                     ___ftsub@f2:
   349                           	callstack 0
   350                           
   351                           ; 3 bytes @ 0x17
   352   000018                     	ds	3
   353   00001B                     ?___ftmul:
   354                           	callstack 0
   355   00001B                     ___ftmul@f1:
   356                           	callstack 0
   357                           
   358                           ; 3 bytes @ 0x1A
   359   00001B                     	ds	3
   360   00001E                     ___ftmul@f2:
   361                           	callstack 0
   362                           
   363                           ; 3 bytes @ 0x1D
   364   00001E                     	ds	3
   365   000021                     ??___ftmul:
   366                           
   367                           ; 1 bytes @ 0x20
   368   000021                     	ds	3
   369   000024                     ___ftmul@exp:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x23
   373   000024                     	ds	1
   374   000025                     ___ftmul@f3_as_product:
   375                           	callstack 0
   376                           
   377                           ; 3 bytes @ 0x24
   378   000025                     	ds	3
   379   000028                     ___ftmul@cntr:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x27
   383   000028                     	ds	1
   384   000029                     ___ftmul@sign:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x28
   388   000029                     	ds	1
   389   00002A                     ?___fttol:
   390                           	callstack 0
   391   00002A                     ___fttol@f1:
   392                           	callstack 0
   393                           
   394                           ; 3 bytes @ 0x29
   395   00002A                     	ds	4
   396   00002E                     ??___fttol:
   397                           
   398                           ; 1 bytes @ 0x2D
   399   00002E                     	ds	5
   400   000033                     ___fttol@sign1:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x32
   404   000033                     	ds	1
   405   000034                     ___fttol@lval:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x33
   409   000034                     	ds	4
   410   000038                     ___fttol@exp1:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x37
   414   000038                     	ds	1
   415   000039                     ??_main:
   416                           
   417                           ; 1 bytes @ 0x38
   418   000039                     	ds	2
   419   00003B                     main@i:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x3A
   423   00003B                     	ds	1
   424                           
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 25 in file "Lab4.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  i               1   58[COMRAM] unsigned char 
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   444 ;;      Params:         0       0       0       0       0       0       0       0       0
   445 ;;      Locals:         1       0       0       0       0       0       0       0       0
   446 ;;      Temps:          2       0       0       0       0       0       0       0       0
   447 ;;      Totals:         3       0       0       0       0       0       0       0       0
   448 ;;Total ram usage:        3 bytes
   449 ;; Hardware stack levels required when called: 4
   450 ;; This function calls:
   451 ;;		_BorraLCD
   452 ;;		_ConfiguraLCD
   453 ;;		_DireccionaLCD
   454 ;;		_EscribeLCD_c
   455 ;;		_InicializaLCD
   456 ;;		_LeerTeclado
   457 ;;		_MensajeLCD_Var
   458 ;;		___ftmul
   459 ;;		___ftsub
   460 ;;		___fttol
   461 ;;		___lltoft
   462 ;;		___lwdiv
   463 ;;		___lwtoft
   464 ;;		___wmul
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text0
   471   00081E                     __ptext0:
   472                           	callstack 0
   473   00081E                     _main:
   474                           	callstack 27
   475                           
   476                           ;Lab4.c: 26: unsigned char i;;Lab4.c: 27: ADCON1=15;
   477                           
   478                           ;incstack = 0
   479   00081E  0E0F               	movlw	15
   480   000820  6EC1               	movwf	193,c	;volatile
   481                           
   482                           ;Lab4.c: 28: TRISD = 0;
   483   000822  0E00               	movlw	0
   484   000824  6E95               	movwf	149,c	;volatile
   485                           
   486                           ;Lab4.c: 29: TRISE = 0;
   487   000826  0E00               	movlw	0
   488   000828  6E96               	movwf	150,c	;volatile
   489                           
   490                           ;Lab4.c: 30: TRISB = 0b11110000;
   491   00082A  0EF0               	movlw	240
   492   00082C  6E93               	movwf	147,c	;volatile
   493                           
   494                           ;Lab4.c: 31: LATD = 0;
   495   00082E  0E00               	movlw	0
   496   000830  6E8C               	movwf	140,c	;volatile
   497                           
   498                           ;Lab4.c: 32: LATE = 0;
   499   000832  0E00               	movlw	0
   500   000834  6E8D               	movwf	141,c	;volatile
   501                           
   502                           ;Lab4.c: 33: LATB = 0;
   503   000836  0E00               	movlw	0
   504   000838  6E8A               	movwf	138,c	;volatile
   505                           
   506                           ;Lab4.c: 34: _delay((unsigned long)((100)*(1000000/4000.0)));
   507   00083A  0E21               	movlw	33
   508   00083C  6E39               	movwf	??_main^0,c
   509   00083E  0E76               	movlw	118
   510   000840                     u2017:
   511   000840  2EE8               	decfsz	wreg,f,c
   512   000842  D7FE               	bra	u2017
   513   000844  2E39               	decfsz	??_main^0,f,c
   514   000846  D7FC               	bra	u2017
   515   000848  D000               	nop2	
   516                           
   517                           ;Lab4.c: 35: RBPU = 0;
   518   00084A  9EF1               	bcf	4081,7,c	;volatile
   519                           
   520                           ;Lab4.c: 36: _delay((unsigned long)((100)*(1000000/4000.0)));
   521   00084C  0E21               	movlw	33
   522   00084E  6E39               	movwf	??_main^0,c
   523   000850  0E76               	movlw	118
   524   000852                     u2027:
   525   000852  2EE8               	decfsz	wreg,f,c
   526   000854  D7FE               	bra	u2027
   527   000856  2E39               	decfsz	??_main^0,f,c
   528   000858  D7FC               	bra	u2027
   529   00085A  D000               	nop2	
   530                           
   531                           ;Lab4.c: 37: InicializaLCD();
   532   00085C  ECE2  F008         	call	_InicializaLCD	;wreg free
   533                           
   534                           ;Lab4.c: 38: BorraLCD();
   535   000860  EC7E  F00A         	call	_BorraLCD	;wreg free
   536                           
   537                           ;Lab4.c: 39: MensajeLCD_Var("Hola mundo");
   538   000864  0E12               	movlw	low STR_1
   539   000866  6E06               	movwf	MensajeLCD_Var@a^0,c
   540   000868  ECB2  F009         	call	_MensajeLCD_Var	;wreg free
   541                           
   542                           ;Lab4.c: 40: _delay((unsigned long)((2000)*(1000000/4000.0)));
   543   00086C  0E03               	movlw	3
   544   00086E  6E3A               	movwf	(??_main+1)^0,c
   545   000870  0E8A               	movlw	138
   546   000872  6E39               	movwf	??_main^0,c
   547   000874  0E56               	movlw	86
   548   000876                     u2037:
   549   000876  2EE8               	decfsz	wreg,f,c
   550   000878  D7FE               	bra	u2037
   551   00087A  2E39               	decfsz	??_main^0,f,c
   552   00087C  D7FC               	bra	u2037
   553   00087E  2E3A               	decfsz	(??_main+1)^0,f,c
   554   000880  D7FA               	bra	u2037
   555   000882                     l1928:
   556                           
   557                           ;Lab4.c: 43: LATB=0b00000000;
   558   000882  0E00               	movlw	0
   559   000884  6E8A               	movwf	138,c	;volatile
   560                           
   561                           ;Lab4.c: 44: Tecla = LeerTeclado();
   562   000886  EC91  F008         	call	_LeerTeclado	;wreg free
   563   00088A  6E4D               	movwf	_Tecla^0,c
   564                           
   565                           ;Lab4.c: 45: BorraLCD();
   566   00088C  EC7E  F00A         	call	_BorraLCD	;wreg free
   567                           
   568                           ;Lab4.c: 46: if(Tecla=='C'){
   569   000890  0E43               	movlw	67
   570   000892  184D               	xorwf	_Tecla^0,w,c
   571   000894  A4D8               	btfss	status,2,c
   572   000896  D026               	goto	l1956
   573                           
   574                           ;Lab4.c: 47: DireccionaLCD(0xC0);
   575   000898  0EC0               	movlw	192
   576   00089A  EC73  F00A         	call	_DireccionaLCD
   577                           
   578                           ;Lab4.c: 48: op = ' ';
   579   00089E  0E20               	movlw	32
   580   0008A0  6E50               	movwf	_op^0,c
   581                           
   582                           ;Lab4.c: 49: n1c = ' ';
   583   0008A2  0E20               	movlw	32
   584   0008A4  6E4F               	movwf	_n1c^0,c
   585                           
   586                           ;Lab4.c: 50: n2c = ' ';
   587   0008A6  0E20               	movlw	32
   588   0008A8  6E4E               	movwf	_n2c^0,c
   589                           
   590                           ;Lab4.c: 51: n1 = 0;
   591   0008AA  0E00               	movlw	0
   592   0008AC  6E4C               	movwf	(_n1+1)^0,c
   593   0008AE  0E00               	movlw	0
   594   0008B0  6E4B               	movwf	_n1^0,c
   595                           
   596                           ;Lab4.c: 52: n2 = 0;
   597   0008B2  0E00               	movlw	0
   598   0008B4  6E4A               	movwf	(_n2+1)^0,c
   599   0008B6  0E00               	movlw	0
   600   0008B8  6E49               	movwf	_n2^0,c
   601                           
   602                           ;Lab4.c: 53: i = 0;
   603   0008BA  0E00               	movlw	0
   604   0008BC  6E3B               	movwf	main@i^0,c
   605                           
   606                           ;Lab4.c: 54: ConfiguraLCD(4);
   607   0008BE  0E04               	movlw	4
   608   0008C0  EC5C  F00A         	call	_ConfiguraLCD
   609                           
   610                           ;Lab4.c: 55: InicializaLCD();
   611   0008C4  ECE2  F008         	call	_InicializaLCD	;wreg free
   612                           
   613                           ;Lab4.c: 56: DireccionaLCD(0x80);
   614   0008C8  0E80               	movlw	128
   615   0008CA  EC73  F00A         	call	_DireccionaLCD
   616                           
   617                           ;Lab4.c: 57: MensajeLCD_Var("                ");
   618   0008CE  0E01               	movlw	low STR_2
   619   0008D0  6E06               	movwf	MensajeLCD_Var@a^0,c
   620   0008D2  ECB2  F009         	call	_MensajeLCD_Var	;wreg free
   621                           
   622                           ;Lab4.c: 58: DireccionaLCD(0xC0);
   623   0008D6  0EC0               	movlw	192
   624   0008D8  EC73  F00A         	call	_DireccionaLCD
   625                           
   626                           ;Lab4.c: 59: DireccionaLCD(0x80);
   627   0008DC  0E80               	movlw	128
   628   0008DE  EC73  F00A         	call	_DireccionaLCD
   629                           
   630                           ;Lab4.c: 60: }else{
   631   0008E2  D7CF               	goto	l1928
   632   0008E4                     l1956:
   633                           
   634                           ;Lab4.c: 61: if(n1c==' '|n2c==' '|op==' '){
   635   0008E4  0E20               	movlw	32
   636   0008E6  184F               	xorwf	_n1c^0,w,c
   637   0008E8  B4D8               	btfsc	status,2,c
   638   0008EA  D008               	goto	u1680
   639   0008EC  0E20               	movlw	32
   640   0008EE  184E               	xorwf	_n2c^0,w,c
   641   0008F0  B4D8               	btfsc	status,2,c
   642   0008F2  D004               	goto	u1680
   643   0008F4  0E20               	movlw	32
   644   0008F6  1850               	xorwf	_op^0,w,c
   645   0008F8  A4D8               	btfss	status,2,c
   646   0008FA  D1FC               	goto	l2102
   647   0008FC                     u1680:
   648                           
   649                           ;Lab4.c: 62: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x')){
   650   0008FC  0E20               	movlw	32
   651   0008FE  1850               	xorwf	_op^0,w,c
   652   000900  A4D8               	btfss	status,2,c
   653   000902  D019               	goto	l1976
   654   000904  0E2B               	movlw	43
   655   000906  184D               	xorwf	_Tecla^0,w,c
   656   000908  B4D8               	btfsc	status,2,c
   657   00090A  D00C               	goto	u1730
   658   00090C  0E2D               	movlw	45
   659   00090E  184D               	xorwf	_Tecla^0,w,c
   660   000910  B4D8               	btfsc	status,2,c
   661   000912  D008               	goto	u1730
   662   000914  0E2F               	movlw	47
   663   000916  184D               	xorwf	_Tecla^0,w,c
   664   000918  B4D8               	btfsc	status,2,c
   665   00091A  D004               	goto	u1730
   666   00091C  0E78               	movlw	120
   667   00091E  184D               	xorwf	_Tecla^0,w,c
   668   000920  A4D8               	btfss	status,2,c
   669   000922  D009               	goto	l1976
   670   000924                     u1730:
   671                           
   672                           ;Lab4.c: 63: DireccionaLCD(0x81);
   673   000924  0E81               	movlw	129
   674   000926  EC73  F00A         	call	_DireccionaLCD
   675                           
   676                           ;Lab4.c: 64: EscribeLCD_c(Tecla);
   677   00092A  504D               	movf	_Tecla^0,w,c
   678   00092C  EC68  F00A         	call	_EscribeLCD_c
   679                           
   680                           ;Lab4.c: 65: op = Tecla;
   681   000930  C04D  F050         	movff	_Tecla,_op
   682                           
   683                           ;Lab4.c: 66: }else{
   684   000934  D1DF               	goto	l2102
   685   000936                     l1976:
   686                           
   687                           ;Lab4.c: 67: if(Tecla=='='){
   688   000936  0E3D               	movlw	61
   689   000938  184D               	xorwf	_Tecla^0,w,c
   690   00093A  A4D8               	btfss	status,2,c
   691   00093C  D036               	goto	l2002
   692                           
   693                           ;Lab4.c: 68: if(n1c!=' ' & n2c!=' ' & op==' '){
   694   00093E  0E20               	movlw	32
   695   000940  184F               	xorwf	_n1c^0,w,c
   696   000942  B4D8               	btfsc	status,2,c
   697   000944  D1D7               	goto	l2102
   698   000946  0E20               	movlw	32
   699   000948  184E               	xorwf	_n2c^0,w,c
   700   00094A  B4D8               	btfsc	status,2,c
   701   00094C  D1D3               	goto	l2102
   702   00094E  0E20               	movlw	32
   703   000950  1850               	xorwf	_op^0,w,c
   704   000952  A4D8               	btfss	status,2,c
   705   000954  D1CF               	goto	l2102
   706                           
   707                           ;Lab4.c: 69: if(n1c==' '){
   708   000956  0E20               	movlw	32
   709   000958  184F               	xorwf	_n1c^0,w,c
   710   00095A  A4D8               	btfss	status,2,c
   711   00095C  D00F               	goto	l1992
   712                           
   713                           ;Lab4.c: 70: DireccionaLCD(0x80);
   714   00095E  0E80               	movlw	128
   715   000960  EC73  F00A         	call	_DireccionaLCD
   716                           
   717                           ;Lab4.c: 71: EscribeLCD_c(Tecla);
   718   000964  504D               	movf	_Tecla^0,w,c
   719   000966  EC68  F00A         	call	_EscribeLCD_c
   720   00096A                     l1988:
   721                           
   722                           ;Lab4.c: 72: n1c=Tecla;
   723   00096A  C04D  F04F         	movff	_Tecla,_n1c
   724                           
   725                           ;Lab4.c: 73: n1 = Tecla-'0';
   726   00096E  0ED0               	movlw	208
   727   000970  244D               	addwf	_Tecla^0,w,c
   728   000972  6E4B               	movwf	_n1^0,c
   729   000974  6A4C               	clrf	(_n1+1)^0,c
   730   000976  0EFF               	movlw	255
   731   000978  224C               	addwfc	(_n1+1)^0,f,c
   732                           
   733                           ;Lab4.c: 74: }else{
   734   00097A  D1BC               	goto	l2102
   735   00097C                     l1992:
   736                           
   737                           ;Lab4.c: 75: if(n2c==' ' & op!=' '){
   738   00097C  0E20               	movlw	32
   739   00097E  184E               	xorwf	_n2c^0,w,c
   740   000980  A4D8               	btfss	status,2,c
   741   000982  D1B8               	goto	l2102
   742   000984  0E20               	movlw	32
   743   000986  1850               	xorwf	_op^0,w,c
   744   000988  B4D8               	btfsc	status,2,c
   745   00098A  D1B4               	goto	l2102
   746                           
   747                           ;Lab4.c: 76: DireccionaLCD(0x82);
   748   00098C  0E82               	movlw	130
   749   00098E  EC73  F00A         	call	_DireccionaLCD
   750                           
   751                           ;Lab4.c: 77: EscribeLCD_c(Tecla);
   752   000992  504D               	movf	_Tecla^0,w,c
   753   000994  EC68  F00A         	call	_EscribeLCD_c
   754   000998                     l1998:
   755                           
   756                           ;Lab4.c: 78: n2c=Tecla;
   757   000998  C04D  F04E         	movff	_Tecla,_n2c
   758                           
   759                           ;Lab4.c: 79: n2 = Tecla-'0';
   760   00099C  0ED0               	movlw	208
   761   00099E  244D               	addwf	_Tecla^0,w,c
   762   0009A0  6E49               	movwf	_n2^0,c
   763   0009A2  6A4A               	clrf	(_n2+1)^0,c
   764   0009A4  0EFF               	movlw	255
   765   0009A6  224A               	addwfc	(_n2+1)^0,f,c
   766   0009A8  D1A5               	goto	l2102
   767   0009AA                     l2002:
   768                           
   769                           ;Lab4.c: 85: if(Tecla=='='){
   770   0009AA  0E3D               	movlw	61
   771   0009AC  184D               	xorwf	_Tecla^0,w,c
   772   0009AE  A4D8               	btfss	status,2,c
   773   0009B0  D195               	goto	l2088
   774                           
   775                           ;Lab4.c: 86: if(n1c!=' ' & n2c!=' ' & op!=' '){
   776   0009B2  0E20               	movlw	32
   777   0009B4  184F               	xorwf	_n1c^0,w,c
   778   0009B6  B4D8               	btfsc	status,2,c
   779   0009B8  D0A1               	goto	l132
   780   0009BA  0E20               	movlw	32
   781   0009BC  184E               	xorwf	_n2c^0,w,c
   782   0009BE  B4D8               	btfsc	status,2,c
   783   0009C0  D09D               	goto	l132
   784   0009C2  0E20               	movlw	32
   785   0009C4  1850               	xorwf	_op^0,w,c
   786   0009C6  B4D8               	btfsc	status,2,c
   787   0009C8  D099               	goto	l132
   788                           
   789                           ;Lab4.c: 87: DireccionaLCD(0x83);
   790   0009CA  0E83               	movlw	131
   791   0009CC  EC73  F00A         	call	_DireccionaLCD
   792                           
   793                           ;Lab4.c: 88: EscribeLCD_c('=');
   794   0009D0  0E3D               	movlw	61
   795   0009D2  EC68  F00A         	call	_EscribeLCD_c
   796                           
   797                           ;Lab4.c: 89: switch(op){
   798   0009D6  D080               	goto	l2046
   799   0009D8                     l2012:
   800   0009D8  5049               	movf	_n2^0,w,c
   801   0009DA  244B               	addwf	_n1^0,w,c
   802   0009DC  6E39               	movwf	??_main^0,c
   803   0009DE  504A               	movf	(_n2+1)^0,w,c
   804   0009E0  204C               	addwfc	(_n1+1)^0,w,c
   805   0009E2  6E3A               	movwf	(??_main+1)^0,c
   806   0009E4  C039  F03C         	movff	??_main,_r
   807   0009E8  C03A  F03D         	movff	??_main+1,_r+1
   808   0009EC  6A3E               	clrf	(_r+2)^0,c
   809   0009EE  6A3F               	clrf	(_r+3)^0,c
   810                           
   811                           ;Lab4.c: 91: nodec = r;
   812   0009F0  C03C  F009         	movff	_r,___lltoft@c
   813   0009F4  C03D  F00A         	movff	_r+1,___lltoft@c+1
   814   0009F8  C03E  F00B         	movff	_r+2,___lltoft@c+2
   815   0009FC  C03F  F00C         	movff	_r+3,___lltoft@c+3
   816   000A00  EC30  F009         	call	___lltoft	;wreg free
   817   000A04  C009  F044         	movff	?___lltoft,_nodec
   818   000A08  C00A  F045         	movff	?___lltoft+1,_nodec+1
   819   000A0C  C00B  F046         	movff	?___lltoft+2,_nodec+2
   820                           
   821                           ;Lab4.c: 92: break;
   822   000A10  D071               	goto	l2048
   823   000A12                     l2016:
   824   000A12  5049               	movf	_n2^0,w,c
   825   000A14  5C4B               	subwf	_n1^0,w,c
   826   000A16  6E39               	movwf	??_main^0,c
   827   000A18  504A               	movf	(_n2+1)^0,w,c
   828   000A1A  584C               	subwfb	(_n1+1)^0,w,c
   829   000A1C  D7E2               	goto	L1
   830   000A1E                     l2020:
   831   000A1E  C04B  F001         	movff	_n1,___wmul@multiplier
   832   000A22  C04C  F002         	movff	_n1+1,___wmul@multiplier+1
   833   000A26  C049  F003         	movff	_n2,___wmul@multiplicand
   834   000A2A  C04A  F004         	movff	_n2+1,___wmul@multiplicand+1
   835   000A2E  EC37  F00A         	call	___wmul	;wreg free
   836   000A32  C001  F03C         	movff	?___wmul,_r
   837   000A36  C002  F03D         	movff	?___wmul+1,_r+1
   838   000A3A  D7D8               	goto	L2
   839   000A3C                     l2024:
   840                           
   841                           ;Lab4.c: 100: if(n2!=0){
   842   000A3C  5049               	movf	_n2^0,w,c
   843   000A3E  104A               	iorwf	(_n2+1)^0,w,c
   844   000A40  B4D8               	btfsc	status,2,c
   845   000A42  D02B               	goto	l2030
   846                           
   847                           ;Lab4.c: 101: if(n1!=0){
   848   000A44  504B               	movf	_n1^0,w,c
   849   000A46  104C               	iorwf	(_n1+1)^0,w,c
   850   000A48  B4D8               	btfsc	status,2,c
   851   000A4A  D054               	goto	l2048
   852                           
   853                           ;Lab4.c: 102: r = n1/n2;
   854   000A4C  C04B  F001         	movff	_n1,___lwdiv@dividend
   855   000A50  C04C  F002         	movff	_n1+1,___lwdiv@dividend+1
   856   000A54  C049  F003         	movff	_n2,___lwdiv@divisor
   857   000A58  C04A  F004         	movff	_n2+1,___lwdiv@divisor+1
   858   000A5C  EC89  F009         	call	___lwdiv	;wreg free
   859   000A60  C001  F03C         	movff	?___lwdiv,_r
   860   000A64  C002  F03D         	movff	?___lwdiv+1,_r+1
   861   000A68  6A3E               	clrf	(_r+2)^0,c
   862   000A6A  6A3F               	clrf	(_r+3)^0,c
   863                           
   864                           ;Lab4.c: 103: nodec = n1/n2;
   865   000A6C  C049  F003         	movff	_n2,___lwdiv@divisor
   866   000A70  C04A  F004         	movff	_n2+1,___lwdiv@divisor+1
   867   000A74  C04B  F001         	movff	_n1,___lwdiv@dividend
   868   000A78  C04C  F002         	movff	_n1+1,___lwdiv@dividend+1
   869   000A7C  EC89  F009         	call	___lwdiv	;wreg free
   870   000A80  C001  F009         	movff	?___lwdiv,___lwtoft@c
   871   000A84  C002  F00A         	movff	?___lwdiv+1,___lwtoft@c+1
   872   000A88  EC4A  F00A         	call	___lwtoft	;wreg free
   873   000A8C  C009  F044         	movff	?___lwtoft,_nodec
   874   000A90  C00A  F045         	movff	?___lwtoft+1,_nodec+1
   875   000A94  C00B  F046         	movff	?___lwtoft+2,_nodec+2
   876   000A98  D02D               	goto	l2048
   877   000A9A                     l2030:
   878                           
   879                           ;Lab4.c: 106: if(n1 != 0 & n2 == 0) r = 1000;
   880   000A9A  504B               	movf	_n1^0,w,c
   881   000A9C  104C               	iorwf	(_n1+1)^0,w,c
   882   000A9E  B4D8               	btfsc	status,2,c
   883   000AA0  D006               	goto	l2036
   884   000AA2  5049               	movf	_n2^0,w,c
   885   000AA4  104A               	iorwf	(_n2+1)^0,w,c
   886   000AA6  A4D8               	btfss	status,2,c
   887   000AA8  D002               	goto	l2036
   888   000AAA  0EE8               	movlw	232
   889   000AAC  D009               	goto	L3
   890   000AAE                     l2036:
   891                           
   892                           ;Lab4.c: 107: else if(n1 == 0 & n2 == 0) r = 1001;
   893   000AAE  504B               	movf	_n1^0,w,c
   894   000AB0  104C               	iorwf	(_n1+1)^0,w,c
   895   000AB2  A4D8               	btfss	status,2,c
   896   000AB4  D01F               	goto	l2048
   897   000AB6  5049               	movf	_n2^0,w,c
   898   000AB8  104A               	iorwf	(_n2+1)^0,w,c
   899   000ABA  A4D8               	btfss	status,2,c
   900   000ABC  D01B               	goto	l2048
   901   000ABE  0EE9               	movlw	233
   902   000AC0                     L3:
   903   000AC0  6E3C               	movwf	_r^0,c
   904   000AC2  0E03               	movlw	3
   905   000AC4  D003               	goto	L4
   906   000AC6                     l2042:
   907                           
   908                           ;Lab4.c: 111: r = 0;
   909   000AC6  0E00               	movlw	0
   910   000AC8  6E3C               	movwf	_r^0,c
   911   000ACA  0E00               	movlw	0
   912   000ACC                     L4:
   913   000ACC  6E3D               	movwf	(_r+1)^0,c
   914   000ACE  0E00               	movlw	0
   915   000AD0  6E3E               	movwf	(_r+2)^0,c
   916   000AD2  0E00               	movlw	0
   917   000AD4  6E3F               	movwf	(_r+3)^0,c
   918                           
   919                           ;Lab4.c: 112: break;
   920   000AD6  D00E               	goto	l2048
   921   000AD8                     l2046:
   922   000AD8  5050               	movf	_op^0,w,c
   923                           
   924                           ; Switch size 1, requested type "simple"
   925                           ; Number of cases is 4, Range of values is 43 to 120
   926                           ; switch strategies available:
   927                           ; Name         Instructions Cycles
   928                           ; simple_byte           13     7 (average)
   929                           ;	Chosen strategy is simple_byte
   930   000ADA  0A2B               	xorlw	43	; case 43
   931   000ADC  B4D8               	btfsc	status,2,c
   932   000ADE  D77C               	goto	l2012
   933   000AE0  0A06               	xorlw	6	; case 45
   934   000AE2  B4D8               	btfsc	status,2,c
   935   000AE4  D796               	goto	l2016
   936   000AE6  0A02               	xorlw	2	; case 47
   937   000AE8  B4D8               	btfsc	status,2,c
   938   000AEA  D7A8               	goto	l2024
   939   000AEC  0A57               	xorlw	87	; case 120
   940   000AEE  B4D8               	btfsc	status,2,c
   941   000AF0  D796               	goto	l2020
   942   000AF2  D7E9               	goto	l2042
   943   000AF4                     l2048:
   944                           
   945                           ;Lab4.c: 114: EscribeLCD_c(r+'0');
   946   000AF4  503C               	movf	_r^0,w,c
   947   000AF6  0F30               	addlw	48
   948   000AF8  EC68  F00A         	call	_EscribeLCD_c
   949   000AFC                     l132:
   950                           
   951                           ;Lab4.c: 115: };Lab4.c: 116: DireccionaLCD(0x84);
   952   000AFC  0E84               	movlw	132
   953   000AFE  EC73  F00A         	call	_DireccionaLCD
   954                           
   955                           ;Lab4.c: 117: if (nodec-r){
   956   000B02  C044  F015         	movff	_nodec,___ftsub@f1
   957   000B06  C045  F016         	movff	_nodec+1,___ftsub@f1+1
   958   000B0A  C046  F017         	movff	_nodec+2,___ftsub@f1+2
   959   000B0E  C03C  F009         	movff	_r,___lltoft@c
   960   000B12  C03D  F00A         	movff	_r+1,___lltoft@c+1
   961   000B16  C03E  F00B         	movff	_r+2,___lltoft@c+2
   962   000B1A  C03F  F00C         	movff	_r+3,___lltoft@c+3
   963   000B1E  EC30  F009         	call	___lltoft	;wreg free
   964   000B22  C009  F018         	movff	?___lltoft,___ftsub@f2
   965   000B26  C00A  F019         	movff	?___lltoft+1,___ftsub@f2+1
   966   000B2A  C00B  F01A         	movff	?___lltoft+2,___ftsub@f2+2
   967   000B2E  ECFC  F009         	call	___ftsub	;wreg free
   968   000B32  5015               	movf	?___ftsub^0,w,c
   969   000B34  1016               	iorwf	(?___ftsub+1)^0,w,c
   970   000B36  1017               	iorwf	(?___ftsub+2)^0,w,c
   971   000B38  B4D8               	btfsc	status,2,c
   972   000B3A  D042               	goto	l2052
   973                           
   974                           ;Lab4.c: 118: partdecl = (nodec-r)*100;
   975   000B3C  0E00               	movlw	0
   976   000B3E  6E1E               	movwf	___ftmul@f2^0,c
   977   000B40  0EC8               	movlw	200
   978   000B42  6E1F               	movwf	(___ftmul@f2+1)^0,c
   979   000B44  0E42               	movlw	66
   980   000B46  6E20               	movwf	(___ftmul@f2+2)^0,c
   981   000B48  C03C  F009         	movff	_r,___lltoft@c
   982   000B4C  C03D  F00A         	movff	_r+1,___lltoft@c+1
   983   000B50  C03E  F00B         	movff	_r+2,___lltoft@c+2
   984   000B54  C03F  F00C         	movff	_r+3,___lltoft@c+3
   985   000B58  EC30  F009         	call	___lltoft	;wreg free
   986   000B5C  C009  F018         	movff	?___lltoft,___ftsub@f2
   987   000B60  C00A  F019         	movff	?___lltoft+1,___ftsub@f2+1
   988   000B64  C00B  F01A         	movff	?___lltoft+2,___ftsub@f2+2
   989   000B68  C044  F015         	movff	_nodec,___ftsub@f1
   990   000B6C  C045  F016         	movff	_nodec+1,___ftsub@f1+1
   991   000B70  C046  F017         	movff	_nodec+2,___ftsub@f1+2
   992   000B74  ECFC  F009         	call	___ftsub	;wreg free
   993   000B78  C015  F01B         	movff	?___ftsub,___ftmul@f1
   994   000B7C  C016  F01C         	movff	?___ftsub+1,___ftmul@f1+1
   995   000B80  C017  F01D         	movff	?___ftsub+2,___ftmul@f1+2
   996   000B84  EC57  F007         	call	___ftmul	;wreg free
   997   000B88  C01B  F02A         	movff	?___ftmul,___fttol@f1
   998   000B8C  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   999   000B90  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
  1000   000B94  ECD1  F007         	call	___fttol	;wreg free
  1001   000B98  C02A  F040         	movff	?___fttol,_partdecl
  1002   000B9C  C02B  F041         	movff	?___fttol+1,_partdecl+1
  1003   000BA0  C02C  F042         	movff	?___fttol+2,_partdecl+2
  1004   000BA4  C02D  F043         	movff	?___fttol+3,_partdecl+3
  1005                           
  1006                           ;Lab4.c: 119: EscribeLCD_c(r+'0');
  1007   000BA8  503C               	movf	_r^0,w,c
  1008   000BAA  0F30               	addlw	48
  1009   000BAC  EC68  F00A         	call	_EscribeLCD_c
  1010                           
  1011                           ;Lab4.c: 120: EscribeLCD_c('.');
  1012   000BB0  0E2E               	movlw	46
  1013   000BB2  EC68  F00A         	call	_EscribeLCD_c
  1014                           
  1015                           ;Lab4.c: 121: EscribeLCD_c(partdecl+'0');
  1016   000BB6  5040               	movf	_partdecl^0,w,c
  1017   000BB8  0F30               	addlw	48
  1018   000BBA  EC68  F00A         	call	_EscribeLCD_c
  1019                           
  1020                           ;Lab4.c: 122: }
  1021   000BBE  D09A               	goto	l2102
  1022   000BC0                     l2052:
  1023                           
  1024                           ;Lab4.c: 123: else if(r>0x51 & r!=1000 & r !=1001){
  1025   000BC0  503F               	movf	(_r+3)^0,w,c
  1026   000BC2  103E               	iorwf	(_r+2)^0,w,c
  1027   000BC4  103D               	iorwf	(_r+1)^0,w,c
  1028   000BC6  E104               	bnz	u1920
  1029   000BC8  0E52               	movlw	82
  1030   000BCA  5C3C               	subwf	_r^0,w,c
  1031   000BCC  A0D8               	btfss	status,0,c
  1032   000BCE  D025               	goto	l2064
  1033   000BD0                     u1920:
  1034   000BD0  0EE8               	movlw	232
  1035   000BD2  183C               	xorwf	_r^0,w,c
  1036   000BD4  E106               	bnz	u1930
  1037   000BD6  0E03               	movlw	3
  1038   000BD8  183D               	xorwf	(_r+1)^0,w,c
  1039   000BDA  103E               	iorwf	(_r+2)^0,w,c
  1040   000BDC  103F               	iorwf	(_r+3)^0,w,c
  1041   000BDE  B4D8               	btfsc	status,2,c
  1042   000BE0  D01C               	goto	l2064
  1043   000BE2                     u1930:
  1044   000BE2  0EE9               	movlw	233
  1045   000BE4  183C               	xorwf	_r^0,w,c
  1046   000BE6  E106               	bnz	u1940
  1047   000BE8  0E03               	movlw	3
  1048   000BEA  183D               	xorwf	(_r+1)^0,w,c
  1049   000BEC  103E               	iorwf	(_r+2)^0,w,c
  1050   000BEE  103F               	iorwf	(_r+3)^0,w,c
  1051   000BF0  B4D8               	btfsc	status,2,c
  1052   000BF2  D013               	goto	l2064
  1053   000BF4                     u1940:
  1054                           
  1055                           ;Lab4.c: 124: EscribeLCD_c('-');
  1056   000BF4  0E2D               	movlw	45
  1057   000BF6  EC68  F00A         	call	_EscribeLCD_c
  1058                           
  1059                           ;Lab4.c: 125: DireccionaLCD(0x85);
  1060   000BFA  0E85               	movlw	133
  1061   000BFC  EC73  F00A         	call	_DireccionaLCD
  1062                           
  1063                           ;Lab4.c: 126: r = ~r+1;
  1064   000C00  1E3F               	comf	(_r+3)^0,f,c
  1065   000C02  1E3E               	comf	(_r+2)^0,f,c
  1066   000C04  1E3D               	comf	(_r+1)^0,f,c
  1067   000C06  6C3C               	negf	_r^0,c
  1068   000C08  0E00               	movlw	0
  1069   000C0A  223D               	addwfc	(_r+1)^0,f,c
  1070   000C0C  223E               	addwfc	(_r+2)^0,f,c
  1071   000C0E  223F               	addwfc	(_r+3)^0,f,c
  1072                           
  1073                           ;Lab4.c: 127: EscribeLCD_c(r+'0');
  1074   000C10  503C               	movf	_r^0,w,c
  1075   000C12  0F30               	addlw	48
  1076   000C14  EC68  F00A         	call	_EscribeLCD_c
  1077                           
  1078                           ;Lab4.c: 128: }else{
  1079   000C18  D06D               	goto	l2102
  1080   000C1A                     l2064:
  1081                           
  1082                           ;Lab4.c: 129: if(r>0xA & r!=1000 & r !=1001){
  1083   000C1A  503F               	movf	(_r+3)^0,w,c
  1084   000C1C  103E               	iorwf	(_r+2)^0,w,c
  1085   000C1E  103D               	iorwf	(_r+1)^0,w,c
  1086   000C20  E104               	bnz	u1950
  1087   000C22  0E0B               	movlw	11
  1088   000C24  5C3C               	subwf	_r^0,w,c
  1089   000C26  A0D8               	btfss	status,0,c
  1090   000C28  D034               	goto	l2074
  1091   000C2A                     u1950:
  1092   000C2A  0EE8               	movlw	232
  1093   000C2C  183C               	xorwf	_r^0,w,c
  1094   000C2E  E106               	bnz	u1960
  1095   000C30  0E03               	movlw	3
  1096   000C32  183D               	xorwf	(_r+1)^0,w,c
  1097   000C34  103E               	iorwf	(_r+2)^0,w,c
  1098   000C36  103F               	iorwf	(_r+3)^0,w,c
  1099   000C38  B4D8               	btfsc	status,2,c
  1100   000C3A  D02B               	goto	l2074
  1101   000C3C                     u1960:
  1102   000C3C  0EE9               	movlw	233
  1103   000C3E  183C               	xorwf	_r^0,w,c
  1104   000C40  E106               	bnz	u1970
  1105   000C42  0E03               	movlw	3
  1106   000C44  183D               	xorwf	(_r+1)^0,w,c
  1107   000C46  103E               	iorwf	(_r+2)^0,w,c
  1108   000C48  103F               	iorwf	(_r+3)^0,w,c
  1109   000C4A  B4D8               	btfsc	status,2,c
  1110   000C4C  D022               	goto	l2074
  1111   000C4E                     u1970:
  1112   000C4E                     l2070:
  1113                           
  1114                           ;Lab4.c: 131: i = i+1;
  1115   000C4E  283B               	incf	main@i^0,w,c
  1116   000C50  6E3B               	movwf	main@i^0,c
  1117                           
  1118                           ;Lab4.c: 132: r = r - 10;
  1119   000C52  0EF6               	movlw	246
  1120   000C54  243C               	addwf	_r^0,w,c
  1121   000C56  6E3C               	movwf	_r^0,c
  1122   000C58  0EFF               	movlw	255
  1123   000C5A  203D               	addwfc	(_r+1)^0,w,c
  1124   000C5C  6E3D               	movwf	(_r+1)^0,c
  1125   000C5E  0EFF               	movlw	255
  1126   000C60  203E               	addwfc	(_r+2)^0,w,c
  1127   000C62  6E3E               	movwf	(_r+2)^0,c
  1128   000C64  0EFF               	movlw	255
  1129   000C66  203F               	addwfc	(_r+3)^0,w,c
  1130   000C68  6E3F               	movwf	(_r+3)^0,c
  1131                           
  1132                           ;Lab4.c: 133: }while(r>0xA);
  1133   000C6A  503F               	movf	(_r+3)^0,w,c
  1134   000C6C  103E               	iorwf	(_r+2)^0,w,c
  1135   000C6E  103D               	iorwf	(_r+1)^0,w,c
  1136   000C70  E1EE               	bnz	l2070
  1137   000C72  0E0B               	movlw	11
  1138   000C74  5C3C               	subwf	_r^0,w,c
  1139   000C76  B0D8               	btfsc	status,0,c
  1140   000C78  D7EA               	goto	u1970
  1141                           
  1142                           ;Lab4.c: 134: EscribeLCD_c(i+'0');
  1143   000C7A  503B               	movf	main@i^0,w,c
  1144   000C7C  0F30               	addlw	48
  1145   000C7E  EC68  F00A         	call	_EscribeLCD_c
  1146                           
  1147                           ;Lab4.c: 135: DireccionaLCD(0x85);
  1148   000C82  0E85               	movlw	133
  1149   000C84  EC73  F00A         	call	_DireccionaLCD
  1150                           
  1151                           ;Lab4.c: 136: EscribeLCD_c(r+'0');
  1152   000C88  503C               	movf	_r^0,w,c
  1153   000C8A  0F30               	addlw	48
  1154   000C8C  EC68  F00A         	call	_EscribeLCD_c
  1155                           
  1156                           ;Lab4.c: 137: }else{
  1157   000C90  D031               	goto	l2102
  1158   000C92                     l2074:
  1159                           
  1160                           ;Lab4.c: 138: if(r==1000){
  1161   000C92  0EE8               	movlw	232
  1162   000C94  183C               	xorwf	_r^0,w,c
  1163   000C96  E110               	bnz	l2078
  1164   000C98  0E03               	movlw	3
  1165   000C9A  183D               	xorwf	(_r+1)^0,w,c
  1166   000C9C  103E               	iorwf	(_r+2)^0,w,c
  1167   000C9E  103F               	iorwf	(_r+3)^0,w,c
  1168   000CA0  A4D8               	btfss	status,2,c
  1169   000CA2  D00A               	goto	l2078
  1170                           
  1171                           ;Lab4.c: 139: EscribeLCD_c('I');
  1172   000CA4  0E49               	movlw	73
  1173   000CA6  EC68  F00A         	call	_EscribeLCD_c
  1174                           
  1175                           ;Lab4.c: 140: EscribeLCD_c('N');
  1176   000CAA  0E4E               	movlw	78
  1177   000CAC  EC68  F00A         	call	_EscribeLCD_c
  1178                           
  1179                           ;Lab4.c: 141: EscribeLCD_c('F');
  1180   000CB0  0E46               	movlw	70
  1181   000CB2  EC68  F00A         	call	_EscribeLCD_c
  1182                           
  1183                           ;Lab4.c: 142: }else{
  1184   000CB6  D01E               	goto	l2102
  1185   000CB8                     l2078:
  1186                           
  1187                           ;Lab4.c: 143: if(r=1001){
  1188   000CB8  0EE9               	movlw	233
  1189   000CBA  6E3C               	movwf	_r^0,c
  1190   000CBC  0E03               	movlw	3
  1191   000CBE  6E3D               	movwf	(_r+1)^0,c
  1192   000CC0  0E00               	movlw	0
  1193   000CC2  6E3E               	movwf	(_r+2)^0,c
  1194   000CC4  0E00               	movlw	0
  1195   000CC6  6E3F               	movwf	(_r+3)^0,c
  1196                           
  1197                           ;Lab4.c: 144: EscribeLCD_c('I');
  1198   000CC8  0E49               	movlw	73
  1199   000CCA  EC68  F00A         	call	_EscribeLCD_c
  1200                           
  1201                           ;Lab4.c: 145: EscribeLCD_c('N');
  1202   000CCE  0E4E               	movlw	78
  1203   000CD0  EC68  F00A         	call	_EscribeLCD_c
  1204                           
  1205                           ;Lab4.c: 146: EscribeLCD_c('D');
  1206   000CD4  0E44               	movlw	68
  1207   000CD6  EC68  F00A         	call	_EscribeLCD_c
  1208                           
  1209                           ;Lab4.c: 147: }else{
  1210   000CDA  D00C               	goto	l2102
  1211   000CDC                     l2088:
  1212                           
  1213                           ;Lab4.c: 154: else{;Lab4.c: 155: if(n1c==' '){
  1214   000CDC  0E20               	movlw	32
  1215   000CDE  184F               	xorwf	_n1c^0,w,c
  1216   000CE0  A4D8               	btfss	status,2,c
  1217   000CE2  D004               	goto	l2096
  1218                           
  1219                           ;Lab4.c: 156: EscribeLCD_c(Tecla);
  1220   000CE4  504D               	movf	_Tecla^0,w,c
  1221   000CE6  EC68  F00A         	call	_EscribeLCD_c
  1222   000CEA  D63F               	goto	l1988
  1223   000CEC                     l2096:
  1224                           
  1225                           ;Lab4.c: 160: EscribeLCD_c(Tecla);
  1226   000CEC  504D               	movf	_Tecla^0,w,c
  1227   000CEE  EC68  F00A         	call	_EscribeLCD_c
  1228   000CF2  D652               	goto	l1998
  1229   000CF4                     l2102:
  1230                           
  1231                           ;Lab4.c: 163: };Lab4.c: 164: };Lab4.c: 165: };Lab4.c: 166: };Lab4.c: 167: };Lab4.c: 168:
      +                           _delay((unsigned long)((700)*(1000000/4000.0)));
  1232   000CF4  0EE4               	movlw	228
  1233   000CF6  6E39               	movwf	??_main^0,c
  1234   000CF8  0E44               	movlw	68
  1235   000CFA                     u2047:
  1236   000CFA  2EE8               	decfsz	wreg,f,c
  1237   000CFC  D7FE               	bra	u2047
  1238   000CFE  2E39               	decfsz	??_main^0,f,c
  1239   000D00  D7FC               	bra	u2047
  1240   000D02  D000               	nop2	
  1241   000D04  D5BE               	goto	l1928
  1242   000D06                     __end_of_main:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function ___wmul *****************
  1246 ;; Defined at:
  1247 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  multiplier      2    0[COMRAM] unsigned int 
  1250 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  product         2    4[COMRAM] unsigned int 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  2    0[COMRAM] unsigned int 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0, prodl, prodh
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1262 ;;      Params:         4       0       0       0       0       0       0       0       0
  1263 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1265 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1266 ;;Total ram usage:        6 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text1
  1276   00146E                     __ptext1:
  1277                           	callstack 0
  1278   00146E                     ___wmul:
  1279                           	callstack 30
  1280                           
  1281                           ;incstack = 0
  1282   00146E  5001               	movf	___wmul@multiplier^0,w,c
  1283   001470  0203               	mulwf	___wmul@multiplicand^0,c
  1284   001472  CFF3 F005          	movff	prodl,___wmul@product
  1285   001476  CFF4 F006          	movff	prodh,___wmul@product+1
  1286   00147A  5001               	movf	___wmul@multiplier^0,w,c
  1287   00147C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1288   00147E  50F3               	movf	243,w,c
  1289   001480  2606               	addwf	(___wmul@product+1)^0,f,c
  1290   001482  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1291   001484  0203               	mulwf	___wmul@multiplicand^0,c
  1292   001486  50F3               	movf	243,w,c
  1293   001488  2606               	addwf	(___wmul@product+1)^0,f,c
  1294   00148A  C005  F001         	movff	___wmul@product,?___wmul
  1295   00148E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1296   001492  0012               	return		;funcret
  1297   001494                     __end_of___wmul:
  1298                           	callstack 0
  1299                           
  1300 ;; *************** function ___lwtoft *****************
  1301 ;; Defined at:
  1302 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwtoft.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  c               2    8[COMRAM] unsigned int 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  3    8[COMRAM] float 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1316 ;;      Params:         3       0       0       0       0       0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1319 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1320 ;;Total ram usage:        3 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; Hardware stack levels required when called: 1
  1323 ;; This function calls:
  1324 ;;		___ftpack
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text2
  1331   001494                     __ptext2:
  1332                           	callstack 0
  1333   001494                     ___lwtoft:
  1334                           	callstack 29
  1335                           
  1336                           ;incstack = 0
  1337   001494  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  1338   001498  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  1339   00149C  6A03               	clrf	(___ftpack@arg+2)^0,c
  1340   00149E  0E8E               	movlw	142
  1341   0014A0  6E04               	movwf	___ftpack@exp^0,c
  1342   0014A2  0E00               	movlw	0
  1343   0014A4  6E05               	movwf	___ftpack@sign^0,c
  1344   0014A6  EC3A  F008         	call	___ftpack	;wreg free
  1345   0014AA  C001  F009         	movff	?___ftpack,?___lwtoft
  1346   0014AE  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  1347   0014B2  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  1348   0014B6  0012               	return		;funcret
  1349   0014B8                     __end_of___lwtoft:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function ___lwdiv *****************
  1353 ;; Defined at:
  1354 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  dividend        2    0[COMRAM] unsigned int 
  1357 ;;  divisor         2    2[COMRAM] unsigned int 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  quotient        2    4[COMRAM] unsigned int 
  1360 ;;  counter         1    6[COMRAM] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  2    0[COMRAM] unsigned int 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1370 ;;      Params:         4       0       0       0       0       0       0       0       0
  1371 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1373 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1374 ;;Total ram usage:        7 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text3
  1384   001312                     __ptext3:
  1385                           	callstack 0
  1386   001312                     ___lwdiv:
  1387                           	callstack 30
  1388                           
  1389                           ;incstack = 0
  1390   001312  0E00               	movlw	0
  1391   001314  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1392   001316  0E00               	movlw	0
  1393   001318  6E05               	movwf	___lwdiv@quotient^0,c
  1394   00131A  5003               	movf	___lwdiv@divisor^0,w,c
  1395   00131C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1396   00131E  B4D8               	btfsc	status,2,c
  1397   001320  D01C               	goto	l684
  1398   001322  0E01               	movlw	1
  1399   001324  6E07               	movwf	___lwdiv@counter^0,c
  1400   001326  D004               	goto	l1894
  1401   001328                     l1892:
  1402   001328  90D8               	bcf	status,0,c
  1403   00132A  3603               	rlcf	___lwdiv@divisor^0,f,c
  1404   00132C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1405   00132E  2A07               	incf	___lwdiv@counter^0,f,c
  1406   001330                     l1894:
  1407   001330  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1408   001332  D7FA               	goto	l1892
  1409   001334                     u1630:
  1410   001334  90D8               	bcf	status,0,c
  1411   001336  3605               	rlcf	___lwdiv@quotient^0,f,c
  1412   001338  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1413   00133A  5003               	movf	___lwdiv@divisor^0,w,c
  1414   00133C  5C01               	subwf	___lwdiv@dividend^0,w,c
  1415   00133E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1416   001340  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1417   001342  A0D8               	btfss	status,0,c
  1418   001344  D005               	goto	l1904
  1419   001346  5003               	movf	___lwdiv@divisor^0,w,c
  1420   001348  5E01               	subwf	___lwdiv@dividend^0,f,c
  1421   00134A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1422   00134C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1423   00134E  8005               	bsf	___lwdiv@quotient^0,0,c
  1424   001350                     l1904:
  1425   001350  90D8               	bcf	status,0,c
  1426   001352  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1427   001354  3203               	rrcf	___lwdiv@divisor^0,f,c
  1428   001356  2E07               	decfsz	___lwdiv@counter^0,f,c
  1429   001358  D7ED               	goto	u1630
  1430   00135A                     l684:
  1431   00135A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1432   00135E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1433   001362  0012               	return		;funcret
  1434   001364                     __end_of___lwdiv:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function ___lltoft *****************
  1438 ;; Defined at:
  1439 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lltoft.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  c               4    8[COMRAM] unsigned long 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  exp             1   16[COMRAM] unsigned char 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  3    8[COMRAM] float 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1453 ;;      Params:         4       0       0       0       0       0       0       0       0
  1454 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1455 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1456 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1457 ;;Total ram usage:        9 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 1
  1460 ;; This function calls:
  1461 ;;		___ftpack
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text4
  1468   001260                     __ptext4:
  1469                           	callstack 0
  1470   001260                     ___lltoft:
  1471                           	callstack 29
  1472                           
  1473                           ;incstack = 0
  1474   001260  0E8E               	movlw	142
  1475   001262  6E11               	movwf	___lltoft@exp^0,c
  1476   001264  D006               	goto	l1880
  1477   001266                     l1878:
  1478   001266  90D8               	bcf	status,0,c
  1479   001268  320C               	rrcf	(___lltoft@c+3)^0,f,c
  1480   00126A  320B               	rrcf	(___lltoft@c+2)^0,f,c
  1481   00126C  320A               	rrcf	(___lltoft@c+1)^0,f,c
  1482   00126E  3209               	rrcf	___lltoft@c^0,f,c
  1483   001270  2A11               	incf	___lltoft@exp^0,f,c
  1484   001272                     l1880:
  1485   001272  0E00               	movlw	0
  1486   001274  1409               	andwf	___lltoft@c^0,w,c
  1487   001276  6E0D               	movwf	??___lltoft^0,c
  1488   001278  0E00               	movlw	0
  1489   00127A  140A               	andwf	(___lltoft@c+1)^0,w,c
  1490   00127C  6E0E               	movwf	(??___lltoft+1)^0,c
  1491   00127E  0E00               	movlw	0
  1492   001280  140B               	andwf	(___lltoft@c+2)^0,w,c
  1493   001282  6E0F               	movwf	(??___lltoft+2)^0,c
  1494   001284  0EFF               	movlw	255
  1495   001286  140C               	andwf	(___lltoft@c+3)^0,w,c
  1496   001288  6E10               	movwf	(??___lltoft+3)^0,c
  1497   00128A  500D               	movf	??___lltoft^0,w,c
  1498   00128C  100E               	iorwf	(??___lltoft+1)^0,w,c
  1499   00128E  100F               	iorwf	(??___lltoft+2)^0,w,c
  1500   001290  1010               	iorwf	(??___lltoft+3)^0,w,c
  1501   001292  A4D8               	btfss	status,2,c
  1502   001294  D7E8               	goto	l1878
  1503   001296  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1504   00129A  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1505   00129E  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1506   0012A2  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1507   0012A6  0E00               	movlw	0
  1508   0012A8  6E05               	movwf	___ftpack@sign^0,c
  1509   0012AA  EC3A  F008         	call	___ftpack	;wreg free
  1510   0012AE  C001  F009         	movff	?___ftpack,?___lltoft
  1511   0012B2  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1512   0012B6  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1513   0012BA  0012               	return		;funcret
  1514   0012BC                     __end_of___lltoft:
  1515                           	callstack 0
  1516                           
  1517 ;; *************** function ___fttol *****************
  1518 ;; Defined at:
  1519 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fttol.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  f1              3   41[COMRAM] float 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  lval            4   51[COMRAM] unsigned long 
  1524 ;;  exp1            1   55[COMRAM] unsigned char 
  1525 ;;  sign1           1   50[COMRAM] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  4   41[COMRAM] long 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1535 ;;      Params:         4       0       0       0       0       0       0       0       0
  1536 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1537 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1538 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1539 ;;Total ram usage:       15 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text5
  1549   000FA2                     __ptext5:
  1550                           	callstack 0
  1551   000FA2                     ___fttol:
  1552                           	callstack 30
  1553                           
  1554                           ;incstack = 0
  1555   000FA2  C02C  F02E         	movff	___fttol@f1+2,??___fttol
  1556   000FA6  6A2F               	clrf	(??___fttol+1)^0,c
  1557   000FA8  6A30               	clrf	(??___fttol+2)^0,c
  1558   000FAA  342B               	rlcf	(___fttol@f1+1)^0,w,c
  1559   000FAC  362E               	rlcf	??___fttol^0,f,c
  1560   000FAE  E301               	bnc	u1531
  1561   000FB0  802F               	bsf	(??___fttol+1)^0,0,c
  1562   000FB2                     u1531:
  1563   000FB2  502E               	movf	??___fttol^0,w,c
  1564   000FB4  6E38               	movwf	___fttol@exp1^0,c
  1565   000FB6  5038               	movf	___fttol@exp1^0,w,c
  1566   000FB8  A4D8               	btfss	status,2,c
  1567   000FBA  D009               	goto	l1836
  1568   000FBC                     u1540:
  1569   000FBC  0E00               	movlw	0
  1570   000FBE  6E2A               	movwf	?___fttol^0,c
  1571   000FC0  0E00               	movlw	0
  1572   000FC2  6E2B               	movwf	(?___fttol+1)^0,c
  1573   000FC4  0E00               	movlw	0
  1574   000FC6  6E2C               	movwf	(?___fttol+2)^0,c
  1575   000FC8  0E00               	movlw	0
  1576   000FCA  6E2D               	movwf	(?___fttol+3)^0,c
  1577   000FCC  0012               	return	
  1578   000FCE                     l1836:
  1579   000FCE  0E17               	movlw	23
  1580   000FD0  6E2E               	movwf	??___fttol^0,c
  1581   000FD2  C02A  F02F         	movff	___fttol@f1,??___fttol+1
  1582   000FD6  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
  1583   000FDA  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
  1584   000FDE  282E               	incf	??___fttol^0,w,c
  1585   000FE0  6E32               	movwf	(??___fttol+4)^0,c
  1586   000FE2  D004               	goto	u1550
  1587   000FE4                     u1555:
  1588   000FE4  90D8               	bcf	status,0,c
  1589   000FE6  3231               	rrcf	(??___fttol+3)^0,f,c
  1590   000FE8  3230               	rrcf	(??___fttol+2)^0,f,c
  1591   000FEA  322F               	rrcf	(??___fttol+1)^0,f,c
  1592   000FEC                     u1550:
  1593   000FEC  2E32               	decfsz	(??___fttol+4)^0,f,c
  1594   000FEE  D7FA               	goto	u1555
  1595   000FF0  502F               	movf	(??___fttol+1)^0,w,c
  1596   000FF2  6E33               	movwf	___fttol@sign1^0,c
  1597   000FF4  8E2B               	bsf	(___fttol@f1+1)^0,7,c
  1598   000FF6  0EFF               	movlw	255
  1599   000FF8  162A               	andwf	___fttol@f1^0,f,c
  1600   000FFA  0EFF               	movlw	255
  1601   000FFC  162B               	andwf	(___fttol@f1+1)^0,f,c
  1602   000FFE  0E00               	movlw	0
  1603   001000  162C               	andwf	(___fttol@f1+2)^0,f,c
  1604   001002  502A               	movf	___fttol@f1^0,w,c
  1605   001004  6E34               	movwf	___fttol@lval^0,c
  1606   001006  502B               	movf	(___fttol@f1+1)^0,w,c
  1607   001008  6E35               	movwf	(___fttol@lval+1)^0,c
  1608   00100A  502C               	movf	(___fttol@f1+2)^0,w,c
  1609   00100C  6E36               	movwf	(___fttol@lval+2)^0,c
  1610   00100E  6A37               	clrf	(___fttol@lval+3)^0,c
  1611   001010  0E8E               	movlw	142
  1612   001012  5E38               	subwf	___fttol@exp1^0,f,c
  1613   001014  AE38               	btfss	___fttol@exp1^0,7,c
  1614   001016  D00D               	goto	l1858
  1615   001018  5038               	movf	___fttol@exp1^0,w,c
  1616   00101A  0A80               	xorlw	128
  1617   00101C  0F8F               	addlw	143
  1618   00101E  A0D8               	btfss	status,0,c
  1619   001020  D7CD               	goto	u1540
  1620   001022                     l1854:
  1621   001022  90D8               	bcf	status,0,c
  1622   001024  3237               	rrcf	(___fttol@lval+3)^0,f,c
  1623   001026  3236               	rrcf	(___fttol@lval+2)^0,f,c
  1624   001028  3235               	rrcf	(___fttol@lval+1)^0,f,c
  1625   00102A  3234               	rrcf	___fttol@lval^0,f,c
  1626   00102C  3E38               	incfsz	___fttol@exp1^0,f,c
  1627   00102E  D7F9               	goto	l1854
  1628   001030  D00D               	goto	u1590
  1629   001032                     l1858:
  1630   001032  0E17               	movlw	23
  1631   001034  6438               	cpfsgt	___fttol@exp1^0,c
  1632   001036  D007               	goto	l1866
  1633   001038  D7C1               	goto	u1540
  1634   00103A                     l1864:
  1635   00103A  90D8               	bcf	status,0,c
  1636   00103C  3634               	rlcf	___fttol@lval^0,f,c
  1637   00103E  3635               	rlcf	(___fttol@lval+1)^0,f,c
  1638   001040  3636               	rlcf	(___fttol@lval+2)^0,f,c
  1639   001042  3637               	rlcf	(___fttol@lval+3)^0,f,c
  1640   001044  0638               	decf	___fttol@exp1^0,f,c
  1641   001046                     l1866:
  1642   001046  5038               	movf	___fttol@exp1^0,w,c
  1643   001048  A4D8               	btfss	status,2,c
  1644   00104A  D7F7               	goto	l1864
  1645   00104C                     u1590:
  1646   00104C  5033               	movf	___fttol@sign1^0,w,c
  1647   00104E  B4D8               	btfsc	status,2,c
  1648   001050  D008               	goto	l1872
  1649   001052  1E37               	comf	(___fttol@lval+3)^0,f,c
  1650   001054  1E36               	comf	(___fttol@lval+2)^0,f,c
  1651   001056  1E35               	comf	(___fttol@lval+1)^0,f,c
  1652   001058  6C34               	negf	___fttol@lval^0,c
  1653   00105A  0E00               	movlw	0
  1654   00105C  2235               	addwfc	(___fttol@lval+1)^0,f,c
  1655   00105E  2236               	addwfc	(___fttol@lval+2)^0,f,c
  1656   001060  2237               	addwfc	(___fttol@lval+3)^0,f,c
  1657   001062                     l1872:
  1658   001062  C034  F02A         	movff	___fttol@lval,?___fttol
  1659   001066  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  1660   00106A  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  1661   00106E  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  1662   001072  0012               	return		;funcret
  1663   001074                     __end_of___fttol:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function ___ftsub *****************
  1667 ;; Defined at:
  1668 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftsub.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  f1              3   20[COMRAM] float 
  1671 ;;  f2              3   23[COMRAM] float 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  3   20[COMRAM] float 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1683 ;;      Params:         6       0       0       0       0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1686 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1687 ;;Total ram usage:        6 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 2
  1690 ;; This function calls:
  1691 ;;		___ftadd
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text6
  1698   0013F8                     __ptext6:
  1699                           	callstack 0
  1700   0013F8                     ___ftsub:
  1701                           	callstack 28
  1702                           
  1703                           ;incstack = 0
  1704   0013F8  5018               	movf	___ftsub@f2^0,w,c
  1705   0013FA  1019               	iorwf	(___ftsub@f2+1)^0,w,c
  1706   0013FC  101A               	iorwf	(___ftsub@f2+2)^0,w,c
  1707   0013FE  B4D8               	btfsc	status,2,c
  1708   001400  D006               	goto	l1826
  1709   001402  0E00               	movlw	0
  1710   001404  1A18               	xorwf	___ftsub@f2^0,f,c
  1711   001406  0E00               	movlw	0
  1712   001408  1A19               	xorwf	(___ftsub@f2+1)^0,f,c
  1713   00140A  0E80               	movlw	128
  1714   00140C  1A1A               	xorwf	(___ftsub@f2+2)^0,f,c
  1715   00140E                     l1826:
  1716   00140E  C015  F009         	movff	___ftsub@f1,___ftadd@f1
  1717   001412  C016  F00A         	movff	___ftsub@f1+1,___ftadd@f1+1
  1718   001416  C017  F00B         	movff	___ftsub@f1+2,___ftadd@f1+2
  1719   00141A  C018  F00C         	movff	___ftsub@f2,___ftadd@f2
  1720   00141E  C019  F00D         	movff	___ftsub@f2+1,___ftadd@f2+1
  1721   001422  C01A  F00E         	movff	___ftsub@f2+2,___ftadd@f2+2
  1722   001426  EC83  F006         	call	___ftadd	;wreg free
  1723   00142A  C009  F015         	movff	?___ftadd,?___ftsub
  1724   00142E  C00A  F016         	movff	?___ftadd+1,?___ftsub+1
  1725   001432  C00B  F017         	movff	?___ftadd+2,?___ftsub+2
  1726   001436  0012               	return		;funcret
  1727   001438                     __end_of___ftsub:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function ___ftadd *****************
  1731 ;; Defined at:
  1732 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftadd.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  f1              3    8[COMRAM] float 
  1735 ;;  f2              3   11[COMRAM] float 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  exp1            1   19[COMRAM] unsigned char 
  1738 ;;  exp2            1   18[COMRAM] unsigned char 
  1739 ;;  sign            1   17[COMRAM] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  3    8[COMRAM] float 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1749 ;;      Params:         6       0       0       0       0       0       0       0       0
  1750 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1751 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1752 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1753 ;;Total ram usage:       12 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 1
  1756 ;; This function calls:
  1757 ;;		___ftpack
  1758 ;; This function is called by:
  1759 ;;		___ftsub
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text7
  1764   000D06                     __ptext7:
  1765                           	callstack 0
  1766   000D06                     ___ftadd:
  1767                           	callstack 28
  1768                           
  1769                           ;incstack = 0
  1770   000D06  C00B  F00F         	movff	___ftadd@f1+2,??___ftadd
  1771   000D0A  6A10               	clrf	(??___ftadd+1)^0,c
  1772   000D0C  6A11               	clrf	(??___ftadd+2)^0,c
  1773   000D0E  340A               	rlcf	(___ftadd@f1+1)^0,w,c
  1774   000D10  360F               	rlcf	??___ftadd^0,f,c
  1775   000D12  E301               	bnc	u1231
  1776   000D14  8010               	bsf	(??___ftadd+1)^0,0,c
  1777   000D16                     u1231:
  1778   000D16  500F               	movf	??___ftadd^0,w,c
  1779   000D18  6E14               	movwf	___ftadd@exp1^0,c
  1780   000D1A  C00E  F00F         	movff	___ftadd@f2+2,??___ftadd
  1781   000D1E  6A10               	clrf	(??___ftadd+1)^0,c
  1782   000D20  6A11               	clrf	(??___ftadd+2)^0,c
  1783   000D22  340D               	rlcf	(___ftadd@f2+1)^0,w,c
  1784   000D24  360F               	rlcf	??___ftadd^0,f,c
  1785   000D26  E301               	bnc	u1241
  1786   000D28  8010               	bsf	(??___ftadd+1)^0,0,c
  1787   000D2A                     u1241:
  1788   000D2A  500F               	movf	??___ftadd^0,w,c
  1789   000D2C  6E13               	movwf	___ftadd@exp2^0,c
  1790   000D2E  5014               	movf	___ftadd@exp1^0,w,c
  1791   000D30  B4D8               	btfsc	status,2,c
  1792   000D32  D00A               	goto	u1270
  1793   000D34  5013               	movf	___ftadd@exp2^0,w,c
  1794   000D36  5C14               	subwf	___ftadd@exp1^0,w,c
  1795   000D38  B0D8               	btfsc	status,0,c
  1796   000D3A  D00D               	goto	l1690
  1797   000D3C  5014               	movf	___ftadd@exp1^0,w,c
  1798   000D3E  5C13               	subwf	___ftadd@exp2^0,w,c
  1799   000D40  6E0F               	movwf	??___ftadd^0,c
  1800   000D42  0E18               	movlw	24
  1801   000D44  640F               	cpfsgt	??___ftadd^0,c
  1802   000D46  D007               	goto	l1690
  1803   000D48                     u1270:
  1804   000D48  C00C  F009         	movff	___ftadd@f2,?___ftadd
  1805   000D4C  C00D  F00A         	movff	___ftadd@f2+1,?___ftadd+1
  1806   000D50  C00E  F00B         	movff	___ftadd@f2+2,?___ftadd+2
  1807   000D54  0012               	return	
  1808   000D56                     l1690:
  1809   000D56  5013               	movf	___ftadd@exp2^0,w,c
  1810   000D58  B4D8               	btfsc	status,2,c
  1811   000D5A  D00A               	goto	u1300
  1812   000D5C  5014               	movf	___ftadd@exp1^0,w,c
  1813   000D5E  5C13               	subwf	___ftadd@exp2^0,w,c
  1814   000D60  B0D8               	btfsc	status,0,c
  1815   000D62  D00D               	goto	l1696
  1816   000D64  5013               	movf	___ftadd@exp2^0,w,c
  1817   000D66  5C14               	subwf	___ftadd@exp1^0,w,c
  1818   000D68  6E0F               	movwf	??___ftadd^0,c
  1819   000D6A  0E18               	movlw	24
  1820   000D6C  640F               	cpfsgt	??___ftadd^0,c
  1821   000D6E  D007               	goto	l1696
  1822   000D70                     u1300:
  1823   000D70  C009  F009         	movff	___ftadd@f1,?___ftadd
  1824   000D74  C00A  F00A         	movff	___ftadd@f1+1,?___ftadd+1
  1825   000D78  C00B  F00B         	movff	___ftadd@f1+2,?___ftadd+2
  1826   000D7C  0012               	return	
  1827   000D7E                     l1696:
  1828   000D7E  0E06               	movlw	6
  1829   000D80  6E12               	movwf	___ftadd@sign^0,c
  1830   000D82  BE0B               	btfsc	(___ftadd@f1+2)^0,7,c
  1831   000D84  8E12               	bsf	___ftadd@sign^0,7,c
  1832   000D86  BE0E               	btfsc	(___ftadd@f2+2)^0,7,c
  1833   000D88  8C12               	bsf	___ftadd@sign^0,6,c
  1834   000D8A  8E0A               	bsf	(___ftadd@f1+1)^0,7,c
  1835   000D8C  0EFF               	movlw	255
  1836   000D8E  1609               	andwf	___ftadd@f1^0,f,c
  1837   000D90  0EFF               	movlw	255
  1838   000D92  160A               	andwf	(___ftadd@f1+1)^0,f,c
  1839   000D94  0E00               	movlw	0
  1840   000D96  160B               	andwf	(___ftadd@f1+2)^0,f,c
  1841   000D98  8E0D               	bsf	(___ftadd@f2+1)^0,7,c
  1842   000D9A  0EFF               	movlw	255
  1843   000D9C  160C               	andwf	___ftadd@f2^0,f,c
  1844   000D9E  0EFF               	movlw	255
  1845   000DA0  160D               	andwf	(___ftadd@f2+1)^0,f,c
  1846   000DA2  0E00               	movlw	0
  1847   000DA4  160E               	andwf	(___ftadd@f2+2)^0,f,c
  1848   000DA6  5013               	movf	___ftadd@exp2^0,w,c
  1849   000DA8  5C14               	subwf	___ftadd@exp1^0,w,c
  1850   000DAA  B0D8               	btfsc	status,0,c
  1851   000DAC  D01B               	goto	l1722
  1852   000DAE                     u1330:
  1853   000DAE  90D8               	bcf	status,0,c
  1854   000DB0  360C               	rlcf	___ftadd@f2^0,f,c
  1855   000DB2  360D               	rlcf	(___ftadd@f2+1)^0,f,c
  1856   000DB4  360E               	rlcf	(___ftadd@f2+2)^0,f,c
  1857   000DB6  0613               	decf	___ftadd@exp2^0,f,c
  1858   000DB8  5014               	movf	___ftadd@exp1^0,w,c
  1859   000DBA  1813               	xorwf	___ftadd@exp2^0,w,c
  1860   000DBC  B4D8               	btfsc	status,2,c
  1861   000DBE  D00D               	goto	l1720
  1862   000DC0  0612               	decf	___ftadd@sign^0,f,c
  1863   000DC2  C012  F00F         	movff	___ftadd@sign,??___ftadd
  1864   000DC6  0E07               	movlw	7
  1865   000DC8  160F               	andwf	??___ftadd^0,f,c
  1866   000DCA  B4D8               	btfsc	status,2,c
  1867   000DCC  D006               	goto	l1720
  1868   000DCE  D7EF               	goto	u1330
  1869   000DD0                     l1718:
  1870   000DD0  90D8               	bcf	status,0,c
  1871   000DD2  320B               	rrcf	(___ftadd@f1+2)^0,f,c
  1872   000DD4  320A               	rrcf	(___ftadd@f1+1)^0,f,c
  1873   000DD6  3209               	rrcf	___ftadd@f1^0,f,c
  1874   000DD8  2A14               	incf	___ftadd@exp1^0,f,c
  1875   000DDA                     l1720:
  1876   000DDA  5013               	movf	___ftadd@exp2^0,w,c
  1877   000DDC  1814               	xorwf	___ftadd@exp1^0,w,c
  1878   000DDE  B4D8               	btfsc	status,2,c
  1879   000DE0  D01F               	goto	u1400
  1880   000DE2  D7F6               	goto	l1718
  1881   000DE4                     l1722:
  1882   000DE4  5014               	movf	___ftadd@exp1^0,w,c
  1883   000DE6  5C13               	subwf	___ftadd@exp2^0,w,c
  1884   000DE8  B0D8               	btfsc	status,0,c
  1885   000DEA  D01A               	goto	u1400
  1886   000DEC                     u1370:
  1887   000DEC  90D8               	bcf	status,0,c
  1888   000DEE  3609               	rlcf	___ftadd@f1^0,f,c
  1889   000DF0  360A               	rlcf	(___ftadd@f1+1)^0,f,c
  1890   000DF2  360B               	rlcf	(___ftadd@f1+2)^0,f,c
  1891   000DF4  0614               	decf	___ftadd@exp1^0,f,c
  1892   000DF6  5014               	movf	___ftadd@exp1^0,w,c
  1893   000DF8  1813               	xorwf	___ftadd@exp2^0,w,c
  1894   000DFA  B4D8               	btfsc	status,2,c
  1895   000DFC  D00D               	goto	l1732
  1896   000DFE  0612               	decf	___ftadd@sign^0,f,c
  1897   000E00  C012  F00F         	movff	___ftadd@sign,??___ftadd
  1898   000E04  0E07               	movlw	7
  1899   000E06  160F               	andwf	??___ftadd^0,f,c
  1900   000E08  B4D8               	btfsc	status,2,c
  1901   000E0A  D006               	goto	l1732
  1902   000E0C  D7EF               	goto	u1370
  1903   000E0E                     l1730:
  1904   000E0E  90D8               	bcf	status,0,c
  1905   000E10  320E               	rrcf	(___ftadd@f2+2)^0,f,c
  1906   000E12  320D               	rrcf	(___ftadd@f2+1)^0,f,c
  1907   000E14  320C               	rrcf	___ftadd@f2^0,f,c
  1908   000E16  2A13               	incf	___ftadd@exp2^0,f,c
  1909   000E18                     l1732:
  1910   000E18  5013               	movf	___ftadd@exp2^0,w,c
  1911   000E1A  1814               	xorwf	___ftadd@exp1^0,w,c
  1912   000E1C  A4D8               	btfss	status,2,c
  1913   000E1E  D7F7               	goto	l1730
  1914   000E20                     u1400:
  1915   000E20  AE12               	btfss	___ftadd@sign^0,7,c
  1916   000E22  D00C               	goto	l535
  1917   000E24  0EFF               	movlw	255
  1918   000E26  1A09               	xorwf	___ftadd@f1^0,f,c
  1919   000E28  0EFF               	movlw	255
  1920   000E2A  1A0A               	xorwf	(___ftadd@f1+1)^0,f,c
  1921   000E2C  0EFF               	movlw	255
  1922   000E2E  1A0B               	xorwf	(___ftadd@f1+2)^0,f,c
  1923   000E30  0E01               	movlw	1
  1924   000E32  2609               	addwf	___ftadd@f1^0,f,c
  1925   000E34  0E00               	movlw	0
  1926   000E36  220A               	addwfc	(___ftadd@f1+1)^0,f,c
  1927   000E38  0E00               	movlw	0
  1928   000E3A  220B               	addwfc	(___ftadd@f1+2)^0,f,c
  1929   000E3C                     l535:
  1930   000E3C  AC12               	btfss	___ftadd@sign^0,6,c
  1931   000E3E  D00C               	goto	l1738
  1932   000E40  0EFF               	movlw	255
  1933   000E42  1A0C               	xorwf	___ftadd@f2^0,f,c
  1934   000E44  0EFF               	movlw	255
  1935   000E46  1A0D               	xorwf	(___ftadd@f2+1)^0,f,c
  1936   000E48  0EFF               	movlw	255
  1937   000E4A  1A0E               	xorwf	(___ftadd@f2+2)^0,f,c
  1938   000E4C  0E01               	movlw	1
  1939   000E4E  260C               	addwf	___ftadd@f2^0,f,c
  1940   000E50  0E00               	movlw	0
  1941   000E52  220D               	addwfc	(___ftadd@f2+1)^0,f,c
  1942   000E54  0E00               	movlw	0
  1943   000E56  220E               	addwfc	(___ftadd@f2+2)^0,f,c
  1944   000E58                     l1738:
  1945   000E58  0E00               	movlw	0
  1946   000E5A  6E12               	movwf	___ftadd@sign^0,c
  1947   000E5C  5009               	movf	___ftadd@f1^0,w,c
  1948   000E5E  260C               	addwf	___ftadd@f2^0,f,c
  1949   000E60  500A               	movf	(___ftadd@f1+1)^0,w,c
  1950   000E62  220D               	addwfc	(___ftadd@f2+1)^0,f,c
  1951   000E64  500B               	movf	(___ftadd@f1+2)^0,w,c
  1952   000E66  220E               	addwfc	(___ftadd@f2+2)^0,f,c
  1953   000E68  AE0E               	btfss	(___ftadd@f2+2)^0,7,c
  1954   000E6A  D00E               	goto	l1748
  1955   000E6C  0EFF               	movlw	255
  1956   000E6E  1A0C               	xorwf	___ftadd@f2^0,f,c
  1957   000E70  0EFF               	movlw	255
  1958   000E72  1A0D               	xorwf	(___ftadd@f2+1)^0,f,c
  1959   000E74  0EFF               	movlw	255
  1960   000E76  1A0E               	xorwf	(___ftadd@f2+2)^0,f,c
  1961   000E78  0E01               	movlw	1
  1962   000E7A  260C               	addwf	___ftadd@f2^0,f,c
  1963   000E7C  0E00               	movlw	0
  1964   000E7E  220D               	addwfc	(___ftadd@f2+1)^0,f,c
  1965   000E80  0E00               	movlw	0
  1966   000E82  220E               	addwfc	(___ftadd@f2+2)^0,f,c
  1967   000E84  0E01               	movlw	1
  1968   000E86  6E12               	movwf	___ftadd@sign^0,c
  1969   000E88                     l1748:
  1970   000E88  C00C  F001         	movff	___ftadd@f2,___ftpack@arg
  1971   000E8C  C00D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1972   000E90  C00E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1973   000E94  C014  F004         	movff	___ftadd@exp1,___ftpack@exp
  1974   000E98  C012  F005         	movff	___ftadd@sign,___ftpack@sign
  1975   000E9C  EC3A  F008         	call	___ftpack	;wreg free
  1976   000EA0  C001  F009         	movff	?___ftpack,?___ftadd
  1977   000EA4  C002  F00A         	movff	?___ftpack+1,?___ftadd+1
  1978   000EA8  C003  F00B         	movff	?___ftpack+2,?___ftadd+2
  1979   000EAC  0012               	return		;funcret
  1980   000EAE                     __end_of___ftadd:
  1981                           	callstack 0
  1982                           
  1983 ;; *************** function ___ftmul *****************
  1984 ;; Defined at:
  1985 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftmul.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  f1              3   26[COMRAM] float 
  1988 ;;  f2              3   29[COMRAM] float 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  1991 ;;  sign            1   40[COMRAM] unsigned char 
  1992 ;;  cntr            1   39[COMRAM] unsigned char 
  1993 ;;  exp             1   35[COMRAM] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  3   26[COMRAM] float 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2003 ;;      Params:         6       0       0       0       0       0       0       0       0
  2004 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2005 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2006 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2007 ;;Total ram usage:       15 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 1
  2010 ;; This function calls:
  2011 ;;		___ftpack
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text8
  2018   000EAE                     __ptext8:
  2019                           	callstack 0
  2020   000EAE                     ___ftmul:
  2021                           	callstack 29
  2022                           
  2023                           ;incstack = 0
  2024   000EAE  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  2025   000EB2  6A22               	clrf	(??___ftmul+1)^0,c
  2026   000EB4  6A23               	clrf	(??___ftmul+2)^0,c
  2027   000EB6  341C               	rlcf	(___ftmul@f1+1)^0,w,c
  2028   000EB8  3621               	rlcf	??___ftmul^0,f,c
  2029   000EBA  E301               	bnc	u1461
  2030   000EBC  8022               	bsf	(??___ftmul+1)^0,0,c
  2031   000EBE                     u1461:
  2032   000EBE  5021               	movf	??___ftmul^0,w,c
  2033   000EC0  6E24               	movwf	___ftmul@exp^0,c
  2034   000EC2  5024               	movf	___ftmul@exp^0,w,c
  2035   000EC4  A4D8               	btfss	status,2,c
  2036   000EC6  D007               	goto	l1780
  2037   000EC8  0E00               	movlw	0
  2038   000ECA  6E1B               	movwf	?___ftmul^0,c
  2039   000ECC  0E00               	movlw	0
  2040   000ECE  6E1C               	movwf	(?___ftmul+1)^0,c
  2041   000ED0  0E00               	movlw	0
  2042   000ED2  6E1D               	movwf	(?___ftmul+2)^0,c
  2043   000ED4  0012               	return	
  2044   000ED6                     l1780:
  2045   000ED6  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  2046   000EDA  6A22               	clrf	(??___ftmul+1)^0,c
  2047   000EDC  6A23               	clrf	(??___ftmul+2)^0,c
  2048   000EDE  341F               	rlcf	(___ftmul@f2+1)^0,w,c
  2049   000EE0  3621               	rlcf	??___ftmul^0,f,c
  2050   000EE2  E301               	bnc	u1481
  2051   000EE4  8022               	bsf	(??___ftmul+1)^0,0,c
  2052   000EE6                     u1481:
  2053   000EE6  5021               	movf	??___ftmul^0,w,c
  2054   000EE8  6E29               	movwf	___ftmul@sign^0,c
  2055   000EEA  5029               	movf	___ftmul@sign^0,w,c
  2056   000EEC  A4D8               	btfss	status,2,c
  2057   000EEE  D007               	goto	l1786
  2058   000EF0  0E00               	movlw	0
  2059   000EF2  6E1B               	movwf	?___ftmul^0,c
  2060   000EF4  0E00               	movlw	0
  2061   000EF6  6E1C               	movwf	(?___ftmul+1)^0,c
  2062   000EF8  0E00               	movlw	0
  2063   000EFA  6E1D               	movwf	(?___ftmul+2)^0,c
  2064   000EFC  0012               	return	
  2065   000EFE                     l1786:
  2066   000EFE  5029               	movf	___ftmul@sign^0,w,c
  2067   000F00  0F7B               	addlw	123
  2068   000F02  2624               	addwf	___ftmul@exp^0,f,c
  2069   000F04  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  2070   000F08  5020               	movf	(___ftmul@f2+2)^0,w,c
  2071   000F0A  1A29               	xorwf	___ftmul@sign^0,f,c
  2072   000F0C  0E80               	movlw	128
  2073   000F0E  1629               	andwf	___ftmul@sign^0,f,c
  2074   000F10  8E1C               	bsf	(___ftmul@f1+1)^0,7,c
  2075   000F12  8E1F               	bsf	(___ftmul@f2+1)^0,7,c
  2076   000F14  0EFF               	movlw	255
  2077   000F16  161E               	andwf	___ftmul@f2^0,f,c
  2078   000F18  0EFF               	movlw	255
  2079   000F1A  161F               	andwf	(___ftmul@f2+1)^0,f,c
  2080   000F1C  0E00               	movlw	0
  2081   000F1E  1620               	andwf	(___ftmul@f2+2)^0,f,c
  2082   000F20  0E00               	movlw	0
  2083   000F22  6E25               	movwf	___ftmul@f3_as_product^0,c
  2084   000F24  0E00               	movlw	0
  2085   000F26  6E26               	movwf	(___ftmul@f3_as_product+1)^0,c
  2086   000F28  0E00               	movlw	0
  2087   000F2A  6E27               	movwf	(___ftmul@f3_as_product+2)^0,c
  2088   000F2C  0E07               	movlw	7
  2089   000F2E  6E28               	movwf	___ftmul@cntr^0,c
  2090   000F30                     l1800:
  2091   000F30  A01B               	btfss	___ftmul@f1^0,0,c
  2092   000F32  D006               	goto	l1804
  2093   000F34  501E               	movf	___ftmul@f2^0,w,c
  2094   000F36  2625               	addwf	___ftmul@f3_as_product^0,f,c
  2095   000F38  501F               	movf	(___ftmul@f2+1)^0,w,c
  2096   000F3A  2226               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  2097   000F3C  5020               	movf	(___ftmul@f2+2)^0,w,c
  2098   000F3E  2227               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  2099   000F40                     l1804:
  2100   000F40  90D8               	bcf	status,0,c
  2101   000F42  321D               	rrcf	(___ftmul@f1+2)^0,f,c
  2102   000F44  321C               	rrcf	(___ftmul@f1+1)^0,f,c
  2103   000F46  321B               	rrcf	___ftmul@f1^0,f,c
  2104   000F48  90D8               	bcf	status,0,c
  2105   000F4A  361E               	rlcf	___ftmul@f2^0,f,c
  2106   000F4C  361F               	rlcf	(___ftmul@f2+1)^0,f,c
  2107   000F4E  3620               	rlcf	(___ftmul@f2+2)^0,f,c
  2108   000F50  2E28               	decfsz	___ftmul@cntr^0,f,c
  2109   000F52  D7EE               	goto	l1800
  2110   000F54  0E09               	movlw	9
  2111   000F56  6E28               	movwf	___ftmul@cntr^0,c
  2112   000F58                     l1810:
  2113   000F58  A01B               	btfss	___ftmul@f1^0,0,c
  2114   000F5A  D006               	goto	l1814
  2115   000F5C  501E               	movf	___ftmul@f2^0,w,c
  2116   000F5E  2625               	addwf	___ftmul@f3_as_product^0,f,c
  2117   000F60  501F               	movf	(___ftmul@f2+1)^0,w,c
  2118   000F62  2226               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  2119   000F64  5020               	movf	(___ftmul@f2+2)^0,w,c
  2120   000F66  2227               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  2121   000F68                     l1814:
  2122   000F68  90D8               	bcf	status,0,c
  2123   000F6A  321D               	rrcf	(___ftmul@f1+2)^0,f,c
  2124   000F6C  321C               	rrcf	(___ftmul@f1+1)^0,f,c
  2125   000F6E  321B               	rrcf	___ftmul@f1^0,f,c
  2126   000F70  90D8               	bcf	status,0,c
  2127   000F72  3227               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  2128   000F74  3226               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  2129   000F76  3225               	rrcf	___ftmul@f3_as_product^0,f,c
  2130   000F78  2E28               	decfsz	___ftmul@cntr^0,f,c
  2131   000F7A  D7EE               	goto	l1810
  2132   000F7C  C025  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2133   000F80  C026  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2134   000F84  C027  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2135   000F88  C024  F004         	movff	___ftmul@exp,___ftpack@exp
  2136   000F8C  C029  F005         	movff	___ftmul@sign,___ftpack@sign
  2137   000F90  EC3A  F008         	call	___ftpack	;wreg free
  2138   000F94  C001  F01B         	movff	?___ftpack,?___ftmul
  2139   000F98  C002  F01C         	movff	?___ftpack+1,?___ftmul+1
  2140   000F9C  C003  F01D         	movff	?___ftpack+2,?___ftmul+2
  2141   000FA0  0012               	return		;funcret
  2142   000FA2                     __end_of___ftmul:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function ___ftpack *****************
  2146 ;; Defined at:
  2147 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\float.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  arg             3    0[COMRAM] unsigned um
  2150 ;;  exp             1    3[COMRAM] unsigned char 
  2151 ;;  sign            1    4[COMRAM] unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  3    0[COMRAM] float 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2163 ;;      Params:         5       0       0       0       0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2165 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2166 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2167 ;;Total ram usage:        8 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		___ftadd
  2173 ;;		___ftmul
  2174 ;;		___lltoft
  2175 ;;		___lwtoft
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text9
  2180   001074                     __ptext9:
  2181                           	callstack 0
  2182   001074                     ___ftpack:
  2183                           	callstack 29
  2184                           
  2185                           ;incstack = 0
  2186   001074  5004               	movf	___ftpack@exp^0,w,c
  2187   001076  B4D8               	btfsc	status,2,c
  2188   001078  D005               	goto	u1160
  2189   00107A  5001               	movf	___ftpack@arg^0,w,c
  2190   00107C  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  2191   00107E  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  2192   001080  A4D8               	btfss	status,2,c
  2193   001082  D00C               	goto	l1656
  2194   001084                     u1160:
  2195   001084  0E00               	movlw	0
  2196   001086  6E01               	movwf	?___ftpack^0,c
  2197   001088  0E00               	movlw	0
  2198   00108A  6E02               	movwf	(?___ftpack+1)^0,c
  2199   00108C  0E00               	movlw	0
  2200   00108E  6E03               	movwf	(?___ftpack+2)^0,c
  2201   001090  0012               	return	
  2202   001092                     l1654:
  2203   001092  2A04               	incf	___ftpack@exp^0,f,c
  2204   001094  90D8               	bcf	status,0,c
  2205   001096  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2206   001098  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2207   00109A  3201               	rrcf	___ftpack@arg^0,f,c
  2208   00109C                     l1656:
  2209   00109C  0E00               	movlw	0
  2210   00109E  1401               	andwf	___ftpack@arg^0,w,c
  2211   0010A0  6E06               	movwf	??___ftpack^0,c
  2212   0010A2  0E00               	movlw	0
  2213   0010A4  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2214   0010A6  6E07               	movwf	(??___ftpack+1)^0,c
  2215   0010A8  0EFE               	movlw	254
  2216   0010AA  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2217   0010AC  6E08               	movwf	(??___ftpack+2)^0,c
  2218   0010AE  5006               	movf	??___ftpack^0,w,c
  2219   0010B0  1007               	iorwf	(??___ftpack+1)^0,w,c
  2220   0010B2  1008               	iorwf	(??___ftpack+2)^0,w,c
  2221   0010B4  B4D8               	btfsc	status,2,c
  2222   0010B6  D00C               	goto	l1662
  2223   0010B8  D7EC               	goto	l1654
  2224   0010BA                     l1658:
  2225   0010BA  2A04               	incf	___ftpack@exp^0,f,c
  2226   0010BC  0E01               	movlw	1
  2227   0010BE  2601               	addwf	___ftpack@arg^0,f,c
  2228   0010C0  0E00               	movlw	0
  2229   0010C2  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  2230   0010C4  0E00               	movlw	0
  2231   0010C6  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  2232   0010C8  90D8               	bcf	status,0,c
  2233   0010CA  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  2234   0010CC  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  2235   0010CE  3201               	rrcf	___ftpack@arg^0,f,c
  2236   0010D0                     l1662:
  2237   0010D0  0E00               	movlw	0
  2238   0010D2  1401               	andwf	___ftpack@arg^0,w,c
  2239   0010D4  6E06               	movwf	??___ftpack^0,c
  2240   0010D6  0E00               	movlw	0
  2241   0010D8  1402               	andwf	(___ftpack@arg+1)^0,w,c
  2242   0010DA  6E07               	movwf	(??___ftpack+1)^0,c
  2243   0010DC  0EFF               	movlw	255
  2244   0010DE  1403               	andwf	(___ftpack@arg+2)^0,w,c
  2245   0010E0  6E08               	movwf	(??___ftpack+2)^0,c
  2246   0010E2  5006               	movf	??___ftpack^0,w,c
  2247   0010E4  1007               	iorwf	(??___ftpack+1)^0,w,c
  2248   0010E6  1008               	iorwf	(??___ftpack+2)^0,w,c
  2249   0010E8  B4D8               	btfsc	status,2,c
  2250   0010EA  D006               	goto	l1666
  2251   0010EC  D7E6               	goto	l1658
  2252   0010EE                     l1664:
  2253   0010EE  0604               	decf	___ftpack@exp^0,f,c
  2254   0010F0  90D8               	bcf	status,0,c
  2255   0010F2  3601               	rlcf	___ftpack@arg^0,f,c
  2256   0010F4  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  2257   0010F6  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  2258   0010F8                     l1666:
  2259   0010F8  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  2260   0010FA  D003               	goto	u1200
  2261   0010FC  0E02               	movlw	2
  2262   0010FE  6004               	cpfslt	___ftpack@exp^0,c
  2263   001100  D7F6               	goto	l1664
  2264   001102                     u1200:
  2265   001102  A004               	btfss	___ftpack@exp^0,0,c
  2266   001104  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  2267   001106  90D8               	bcf	status,0,c
  2268   001108  3204               	rrcf	___ftpack@exp^0,f,c
  2269   00110A  5004               	movf	___ftpack@exp^0,w,c
  2270   00110C  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  2271   00110E  5005               	movf	___ftpack@sign^0,w,c
  2272   001110  A4D8               	btfss	status,2,c
  2273   001112  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  2274   001114  C001  F001         	movff	___ftpack@arg,?___ftpack
  2275   001118  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2276   00111C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2277   001120  0012               	return		;funcret
  2278   001122                     __end_of___ftpack:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _MensajeLCD_Var *****************
  2282 ;; Defined at:
  2283 ;;		line 215 in file "LibLCDXC8.h"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  a               1    5[COMRAM] PTR unsigned char 
  2286 ;;		 -> STR_2(17), STR_1(11), 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  i               2    7[COMRAM] int 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2298 ;;      Params:         1       0       0       0       0       0       0       0       0
  2299 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2300 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2301 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2302 ;;Total ram usage:        4 bytes
  2303 ;; Hardware stack levels used: 1
  2304 ;; Hardware stack levels required when called: 3
  2305 ;; This function calls:
  2306 ;;		_EscribeLCD_c
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text10
  2313   001364                     __ptext10:
  2314                           	callstack 0
  2315   001364                     _MensajeLCD_Var:
  2316                           	callstack 27
  2317                           
  2318                           ;LibLCDXC8.h: 219: for(int i = 0; i<16; i++){
  2319                           
  2320                           ;incstack = 0
  2321   001364  0E00               	movlw	0
  2322   001366  6E09               	movwf	(MensajeLCD_Var@i+1)^0,c
  2323   001368  0E00               	movlw	0
  2324   00136A  6E08               	movwf	MensajeLCD_Var@i^0,c
  2325   00136C                     l1758:
  2326                           
  2327                           ;LibLCDXC8.h: 220: if(a[i] == (0)){
  2328   00136C  5006               	movf	MensajeLCD_Var@a^0,w,c
  2329   00136E  2408               	addwf	MensajeLCD_Var@i^0,w,c
  2330   001370  6E07               	movwf	??_MensajeLCD_Var^0,c
  2331   001372  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2332   001376                     	if	1	;There is more than 1 active tblptr byte
  2333   001376  0E08               	movlw	high __smallconst
  2334   001378  6EF7               	movwf	tblptrh,c
  2335   00137A                     	endif
  2336   00137A                     	if	0	;tblptru may be non-zero
  2337   00137A                     	endif
  2338   00137A                     	if	0	;tblptru may be non-zero
  2339   00137A                     	endif
  2340   00137A  0008               	tblrd		*
  2341   00137C  50F5               	movf	tablat,w,c
  2342   00137E  0900               	iorlw	0
  2343   001380  B4D8               	btfsc	status,2,c
  2344   001382  0012               	return	
  2345                           
  2346                           ;LibLCDXC8.h: 222: };LibLCDXC8.h: 223: EscribeLCD_c(a[i]);
  2347   001384  5006               	movf	MensajeLCD_Var@a^0,w,c
  2348   001386  2408               	addwf	MensajeLCD_Var@i^0,w,c
  2349   001388  6E07               	movwf	??_MensajeLCD_Var^0,c
  2350   00138A  C007  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  2351   00138E                     	if	1	;There is more than 1 active tblptr byte
  2352   00138E  0E08               	movlw	high __smallconst
  2353   001390  6EF7               	movwf	tblptrh,c
  2354   001392                     	endif
  2355   001392                     	if	0	;tblptru may be non-zero
  2356   001392                     	endif
  2357   001392                     	if	0	;tblptru may be non-zero
  2358   001392                     	endif
  2359   001392  0008               	tblrd		*
  2360   001394  50F5               	movf	tablat,w,c
  2361   001396  EC68  F00A         	call	_EscribeLCD_c
  2362   00139A  4A08               	infsnz	MensajeLCD_Var@i^0,f,c
  2363   00139C  2A09               	incf	(MensajeLCD_Var@i+1)^0,f,c
  2364   00139E  BE09               	btfsc	(MensajeLCD_Var@i+1)^0,7,c
  2365   0013A0  D7E5               	goto	l1758
  2366   0013A2  5009               	movf	(MensajeLCD_Var@i+1)^0,w,c
  2367   0013A4  E105               	bnz	u1450
  2368   0013A6  0E10               	movlw	16
  2369   0013A8  5C08               	subwf	MensajeLCD_Var@i^0,w,c
  2370   0013AA  B0D8               	btfsc	status,0,c
  2371   0013AC  0012               	return	
  2372   0013AE  D7DE               	goto	l1758
  2373   0013B0                     u1450:
  2374   0013B0  0012               	return		;funcret
  2375   0013B2                     __end_of_MensajeLCD_Var:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function _EscribeLCD_c *****************
  2379 ;; Defined at:
  2380 ;;		line 116 in file "LibLCDXC8.h"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  a               1    wreg     unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  a               1    4[COMRAM] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2394 ;;      Params:         0       0       0       0       0       0       0       0       0
  2395 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2397 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2398 ;;Total ram usage:        1 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 2
  2401 ;; This function calls:
  2402 ;;		_EnviaDato
  2403 ;;		_HabilitaLCD
  2404 ;;		_RetardoLCD
  2405 ;; This function is called by:
  2406 ;;		_MensajeLCD_Var
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text11
  2412   0014D0                     __ptext11:
  2413                           	callstack 0
  2414   0014D0                     _EscribeLCD_c:
  2415                           	callstack 27
  2416                           
  2417                           ;incstack = 0
  2418                           ;EscribeLCD_c@a stored from wreg
  2419   0014D0  6E05               	movwf	EscribeLCD_c@a^0,c
  2420                           
  2421                           ;LibLCDXC8.h: 120: LATE0=1;
  2422   0014D2  808D               	bsf	3981,0,c	;volatile
  2423                           
  2424                           ;LibLCDXC8.h: 121: EnviaDato(a);
  2425   0014D4  5005               	movf	EscribeLCD_c@a^0,w,c
  2426   0014D6  ECD9  F009         	call	_EnviaDato
  2427                           
  2428                           ;LibLCDXC8.h: 122: HabilitaLCD();
  2429   0014DA  EC88  F00A         	call	_HabilitaLCD	;wreg free
  2430                           
  2431                           ;LibLCDXC8.h: 123: RetardoLCD(4);
  2432   0014DE  0E04               	movlw	4
  2433   0014E0  EC5E  F009         	call	_RetardoLCD
  2434   0014E4  0012               	return		;funcret
  2435   0014E6                     __end_of_EscribeLCD_c:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _LeerTeclado *****************
  2439 ;; Defined at:
  2440 ;;		line 172 in file "Lab4.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      unsigned char 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2454 ;;      Params:         0       0       0       0       0       0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2457 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text12
  2468   001122                     __ptext12:
  2469                           	callstack 0
  2470   001122                     _LeerTeclado:
  2471                           	callstack 30
  2472                           
  2473                           ;Lab4.c: 173: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2474                           
  2475                           ;incstack = 0
  2476   001122  B881               	btfsc	3969,4,c	;volatile
  2477   001124  AA81               	btfss	3969,5,c	;volatile
  2478   001126  D004               	goto	u430
  2479   001128  AC81               	btfss	3969,6,c	;volatile
  2480   00112A  D002               	goto	u430
  2481   00112C  BE81               	btfsc	3969,7,c	;volatile
  2482   00112E  D7F9               	goto	__ptext12
  2483   001130                     u430:
  2484                           
  2485                           ;Lab4.c: 174: LATB=0b11111110;
  2486   001130  0EFE               	movlw	254
  2487   001132  6E8A               	movwf	138,c	;volatile
  2488                           
  2489                           ;Lab4.c: 175: if(RB4==0) return '1';
  2490   001134  B881               	btfsc	3969,4,c	;volatile
  2491   001136  D002               	goto	l171
  2492   001138  0E31               	movlw	49
  2493   00113A  0012               	return	
  2494   00113C                     l171:
  2495                           
  2496                           ;Lab4.c: 176: else if(RB5==0) return '2';
  2497   00113C  BA81               	btfsc	3969,5,c	;volatile
  2498   00113E  D002               	goto	l174
  2499   001140  0E32               	movlw	50
  2500   001142  0012               	return	
  2501   001144                     l174:
  2502                           
  2503                           ;Lab4.c: 177: else if(RB6==0) return '3';
  2504   001144  BC81               	btfsc	3969,6,c	;volatile
  2505   001146  D002               	goto	l176
  2506   001148  0E33               	movlw	51
  2507   00114A  0012               	return	
  2508   00114C                     l176:
  2509                           
  2510                           ;Lab4.c: 178: else if(RB7==0) return '+';
  2511   00114C  BE81               	btfsc	3969,7,c	;volatile
  2512   00114E  D002               	goto	l1224
  2513   001150  0E2B               	movlw	43
  2514   001152  0012               	return	
  2515   001154                     l1224:
  2516                           
  2517                           ;Lab4.c: 179: else{;Lab4.c: 180: LATB=0b11111101;
  2518   001154  0EFD               	movlw	253
  2519   001156  6E8A               	movwf	138,c	;volatile
  2520                           
  2521                           ;Lab4.c: 181: if(RB4==0) return '4';
  2522   001158  B881               	btfsc	3969,4,c	;volatile
  2523   00115A  D002               	goto	l180
  2524   00115C  0E34               	movlw	52
  2525   00115E  0012               	return	
  2526   001160                     l180:
  2527                           
  2528                           ;Lab4.c: 182: else if(RB5==0) return '5';
  2529   001160  BA81               	btfsc	3969,5,c	;volatile
  2530   001162  D002               	goto	l182
  2531   001164  0E35               	movlw	53
  2532   001166  0012               	return	
  2533   001168                     l182:
  2534                           
  2535                           ;Lab4.c: 183: else if(RB6==0) return '6';
  2536   001168  BC81               	btfsc	3969,6,c	;volatile
  2537   00116A  D002               	goto	l184
  2538   00116C  0E36               	movlw	54
  2539   00116E  0012               	return	
  2540   001170                     l184:
  2541                           
  2542                           ;Lab4.c: 184: else if(RB7==0) return '-';
  2543   001170  BE81               	btfsc	3969,7,c	;volatile
  2544   001172  D002               	goto	l1252
  2545   001174  0E2D               	movlw	45
  2546   001176  0012               	return	
  2547   001178                     l1252:
  2548                           
  2549                           ;Lab4.c: 185: else{;Lab4.c: 186: LATB=0b11111011;
  2550   001178  0EFB               	movlw	251
  2551   00117A  6E8A               	movwf	138,c	;volatile
  2552                           
  2553                           ;Lab4.c: 187: if(RB4==0) return '7';
  2554   00117C  B881               	btfsc	3969,4,c	;volatile
  2555   00117E  D002               	goto	l188
  2556   001180  0E37               	movlw	55
  2557   001182  0012               	return	
  2558   001184                     l188:
  2559                           
  2560                           ;Lab4.c: 188: else if(RB5==0) return '8';
  2561   001184  BA81               	btfsc	3969,5,c	;volatile
  2562   001186  D002               	goto	l190
  2563   001188  0E38               	movlw	56
  2564   00118A  0012               	return	
  2565   00118C                     l190:
  2566                           
  2567                           ;Lab4.c: 189: else if(RB6==0) return '9';
  2568   00118C  BC81               	btfsc	3969,6,c	;volatile
  2569   00118E  D002               	goto	l192
  2570   001190  0E39               	movlw	57
  2571   001192  0012               	return	
  2572   001194                     l192:
  2573                           
  2574                           ;Lab4.c: 190: else if(RB7==0) return '/';
  2575   001194  BE81               	btfsc	3969,7,c	;volatile
  2576   001196  D002               	goto	l1280
  2577   001198  0E2F               	movlw	47
  2578   00119A  0012               	return	
  2579   00119C                     l1280:
  2580                           
  2581                           ;Lab4.c: 191: else{;Lab4.c: 192: LATB=0b11110111;
  2582   00119C  0EF7               	movlw	247
  2583   00119E  6E8A               	movwf	138,c	;volatile
  2584                           
  2585                           ;Lab4.c: 193: if(RB4==0) return 'C';
  2586   0011A0  B881               	btfsc	3969,4,c	;volatile
  2587   0011A2  D002               	goto	l196
  2588   0011A4  0E43               	movlw	67
  2589   0011A6  0012               	return	
  2590   0011A8                     l196:
  2591                           
  2592                           ;Lab4.c: 194: else if(RB5==0) return '0';
  2593   0011A8  BA81               	btfsc	3969,5,c	;volatile
  2594   0011AA  D002               	goto	l198
  2595   0011AC  0E30               	movlw	48
  2596   0011AE  0012               	return	
  2597   0011B0                     l198:
  2598                           
  2599                           ;Lab4.c: 195: else if(RB6==0) return '=';
  2600   0011B0  BC81               	btfsc	3969,6,c	;volatile
  2601   0011B2  D002               	goto	l200
  2602   0011B4  0E3D               	movlw	61
  2603   0011B6  0012               	return	
  2604   0011B8                     l200:
  2605                           
  2606                           ;Lab4.c: 196: else if(RB7==0) return 'x';
  2607   0011B8  BE81               	btfsc	3969,7,c	;volatile
  2608   0011BA  D002               	goto	l197
  2609   0011BC  0E78               	movlw	120
  2610   0011BE  0012               	return	
  2611   0011C0                     l197:
  2612                           
  2613                           ;Lab4.c: 197: }}};Lab4.c: 198: return '?';
  2614   0011C0  0E3F               	movlw	63
  2615   0011C2  0012               	return		;funcret
  2616   0011C4                     __end_of_LeerTeclado:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _InicializaLCD *****************
  2620 ;; Defined at:
  2621 ;;		line 61 in file "LibLCDXC8.h"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2635 ;;      Params:         0       0       0       0       0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2638 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2639 ;;Total ram usage:        0 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 3
  2642 ;; This function calls:
  2643 ;;		_BorraLCD
  2644 ;;		_EnviaDato
  2645 ;;		_HabilitaLCD
  2646 ;;		_RetardoLCD
  2647 ;; This function is called by:
  2648 ;;		_main
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text13
  2653   0011C4                     __ptext13:
  2654                           	callstack 0
  2655   0011C4                     _InicializaLCD:
  2656                           	callstack 27
  2657                           
  2658                           ;LibLCDXC8.h: 63: LATE0=0;
  2659                           
  2660                           ;incstack = 0
  2661   0011C4  908D               	bcf	3981,0,c	;volatile
  2662                           
  2663                           ;LibLCDXC8.h: 64: if(interfaz==4)
  2664   0011C6  0E04               	movlw	4
  2665   0011C8  1851               	xorwf	_interfaz^0,w,c
  2666   0011CA  A4D8               	btfss	status,2,c
  2667   0011CC  D004               	goto	l1116
  2668                           
  2669                           ;LibLCDXC8.h: 65: LATD=(LATD & 0b00001111) | 0x30;
  2670   0011CE  508C               	movf	140,w,c	;volatile
  2671   0011D0  0B0F               	andlw	15
  2672   0011D2  0930               	iorlw	48
  2673   0011D4  D001               	goto	L5
  2674   0011D6                     l1116:
  2675                           
  2676                           ;LibLCDXC8.h: 66: else;LibLCDXC8.h: 67: LATD=0x3F;
  2677   0011D6  0E3F               	movlw	63
  2678   0011D8                     L5:
  2679   0011D8  6E8C               	movwf	140,c	;volatile
  2680                           
  2681                           ;LibLCDXC8.h: 68: HabilitaLCD();
  2682   0011DA  EC88  F00A         	call	_HabilitaLCD	;wreg free
  2683                           
  2684                           ;LibLCDXC8.h: 69: RetardoLCD(1);
  2685   0011DE  0E01               	movlw	1
  2686   0011E0  EC5E  F009         	call	_RetardoLCD
  2687                           
  2688                           ;LibLCDXC8.h: 70: if(interfaz==4)
  2689   0011E4  0E04               	movlw	4
  2690   0011E6  1851               	xorwf	_interfaz^0,w,c
  2691   0011E8  A4D8               	btfss	status,2,c
  2692   0011EA  D004               	goto	l1126
  2693                           
  2694                           ;LibLCDXC8.h: 71: LATD=(LATD & 0b00001111) | 0x30;
  2695   0011EC  508C               	movf	140,w,c	;volatile
  2696   0011EE  0B0F               	andlw	15
  2697   0011F0  0930               	iorlw	48
  2698   0011F2  D001               	goto	L6
  2699   0011F4                     l1126:
  2700                           
  2701                           ;LibLCDXC8.h: 72: else;LibLCDXC8.h: 73: LATD=0x3F;
  2702   0011F4  0E3F               	movlw	63
  2703   0011F6                     L6:
  2704   0011F6  6E8C               	movwf	140,c	;volatile
  2705                           
  2706                           ;LibLCDXC8.h: 74: HabilitaLCD();
  2707   0011F8  EC88  F00A         	call	_HabilitaLCD	;wreg free
  2708                           
  2709                           ;LibLCDXC8.h: 75: RetardoLCD(3);
  2710   0011FC  0E03               	movlw	3
  2711   0011FE  EC5E  F009         	call	_RetardoLCD
  2712                           
  2713                           ;LibLCDXC8.h: 76: if(interfaz==4)
  2714   001202  0E04               	movlw	4
  2715   001204  1851               	xorwf	_interfaz^0,w,c
  2716   001206  A4D8               	btfss	status,2,c
  2717   001208  D004               	goto	l1136
  2718                           
  2719                           ;LibLCDXC8.h: 77: LATD=(LATD & 0b00001111) | 0x30;
  2720   00120A  508C               	movf	140,w,c	;volatile
  2721   00120C  0B0F               	andlw	15
  2722   00120E  0930               	iorlw	48
  2723   001210  D001               	goto	L7
  2724   001212                     l1136:
  2725                           
  2726                           ;LibLCDXC8.h: 78: else;LibLCDXC8.h: 79: LATD=0x3F;
  2727   001212  0E3F               	movlw	63
  2728   001214                     L7:
  2729   001214  6E8C               	movwf	140,c	;volatile
  2730                           
  2731                           ;LibLCDXC8.h: 80: HabilitaLCD();
  2732   001216  EC88  F00A         	call	_HabilitaLCD	;wreg free
  2733                           
  2734                           ;LibLCDXC8.h: 81: RetardoLCD(4);
  2735   00121A  0E04               	movlw	4
  2736   00121C  EC5E  F009         	call	_RetardoLCD
  2737                           
  2738                           ;LibLCDXC8.h: 82: if(interfaz==4){
  2739   001220  0E04               	movlw	4
  2740   001222  1851               	xorwf	_interfaz^0,w,c
  2741   001224  A4D8               	btfss	status,2,c
  2742   001226  D011               	goto	l1156
  2743                           
  2744                           ;LibLCDXC8.h: 83: LATD=(LATD & 0b00001111) | 0x20;
  2745   001228  508C               	movf	140,w,c	;volatile
  2746   00122A  0B0F               	andlw	15
  2747   00122C  0920               	iorlw	32
  2748   00122E  6E8C               	movwf	140,c	;volatile
  2749                           
  2750                           ;LibLCDXC8.h: 84: HabilitaLCD();
  2751   001230  EC88  F00A         	call	_HabilitaLCD	;wreg free
  2752                           
  2753                           ;LibLCDXC8.h: 85: RetardoLCD(4);
  2754   001234  0E04               	movlw	4
  2755   001236  EC5E  F009         	call	_RetardoLCD
  2756                           
  2757                           ;LibLCDXC8.h: 86: EnviaDato(0x2F);
  2758   00123A  0E2F               	movlw	47
  2759   00123C  ECD9  F009         	call	_EnviaDato
  2760                           
  2761                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2762   001240  EC88  F00A         	call	_HabilitaLCD	;wreg free
  2763                           
  2764                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  2765   001244  0E04               	movlw	4
  2766   001246  EC5E  F009         	call	_RetardoLCD
  2767   00124A                     l1156:
  2768                           
  2769                           ;LibLCDXC8.h: 89: };LibLCDXC8.h: 90: BorraLCD();
  2770   00124A  EC7E  F00A         	call	_BorraLCD	;wreg free
  2771                           
  2772                           ;LibLCDXC8.h: 91: EnviaDato(0xF);
  2773   00124E  0E0F               	movlw	15
  2774   001250  ECD9  F009         	call	_EnviaDato
  2775                           
  2776                           ;LibLCDXC8.h: 92: HabilitaLCD();
  2777   001254  EC88  F00A         	call	_HabilitaLCD	;wreg free
  2778                           
  2779                           ;LibLCDXC8.h: 93: RetardoLCD(4);
  2780   001258  0E04               	movlw	4
  2781   00125A  EC5E  F009         	call	_RetardoLCD
  2782   00125E  0012               	return		;funcret
  2783   001260                     __end_of_InicializaLCD:
  2784                           	callstack 0
  2785                           
  2786 ;; *************** function _BorraLCD *****************
  2787 ;; Defined at:
  2788 ;;		line 102 in file "LibLCDXC8.h"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2805 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 2
  2809 ;; This function calls:
  2810 ;;		_EnviaDato
  2811 ;;		_HabilitaLCD
  2812 ;;		_RetardoLCD
  2813 ;; This function is called by:
  2814 ;;		_InicializaLCD
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text14
  2820   0014FC                     __ptext14:
  2821                           	callstack 0
  2822   0014FC                     _BorraLCD:
  2823                           	callstack 27
  2824                           
  2825                           ;LibLCDXC8.h: 104: LATE0=0;
  2826                           
  2827                           ;incstack = 0
  2828   0014FC  908D               	bcf	3981,0,c	;volatile
  2829                           
  2830                           ;LibLCDXC8.h: 105: EnviaDato(0x01);
  2831   0014FE  0E01               	movlw	1
  2832   001500  ECD9  F009         	call	_EnviaDato
  2833                           
  2834                           ;LibLCDXC8.h: 106: HabilitaLCD();
  2835   001504  EC88  F00A         	call	_HabilitaLCD	;wreg free
  2836                           
  2837                           ;LibLCDXC8.h: 107: RetardoLCD(2);
  2838   001508  0E02               	movlw	2
  2839   00150A  EC5E  F009         	call	_RetardoLCD
  2840   00150E  0012               	return		;funcret
  2841   001510                     __end_of_BorraLCD:
  2842                           	callstack 0
  2843                           
  2844 ;; *************** function _DireccionaLCD *****************
  2845 ;; Defined at:
  2846 ;;		line 227 in file "LibLCDXC8.h"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  a               1    wreg     unsigned char 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  a               1    4[COMRAM] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2860 ;;      Params:         0       0       0       0       0       0       0       0       0
  2861 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2863 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2864 ;;Total ram usage:        1 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 2
  2867 ;; This function calls:
  2868 ;;		_EnviaDato
  2869 ;;		_HabilitaLCD
  2870 ;;		_RetardoLCD
  2871 ;; This function is called by:
  2872 ;;		_main
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text15
  2877   0014E6                     __ptext15:
  2878                           	callstack 0
  2879   0014E6                     _DireccionaLCD:
  2880                           	callstack 28
  2881                           
  2882                           ;incstack = 0
  2883                           ;DireccionaLCD@a stored from wreg
  2884   0014E6  6E05               	movwf	DireccionaLCD@a^0,c
  2885                           
  2886                           ;LibLCDXC8.h: 230: LATE0=0;
  2887   0014E8  908D               	bcf	3981,0,c	;volatile
  2888                           
  2889                           ;LibLCDXC8.h: 231: EnviaDato(a);
  2890   0014EA  5005               	movf	DireccionaLCD@a^0,w,c
  2891   0014EC  ECD9  F009         	call	_EnviaDato
  2892                           
  2893                           ;LibLCDXC8.h: 232: HabilitaLCD();
  2894   0014F0  EC88  F00A         	call	_HabilitaLCD	;wreg free
  2895                           
  2896                           ;LibLCDXC8.h: 233: RetardoLCD(4);
  2897   0014F4  0E04               	movlw	4
  2898   0014F6  EC5E  F009         	call	_RetardoLCD
  2899   0014FA  0012               	return		;funcret
  2900   0014FC                     __end_of_DireccionaLCD:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _EnviaDato *****************
  2904 ;; Defined at:
  2905 ;;		line 51 in file "LibLCDXC8.h"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  a               1    wreg     unsigned char 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  a               1    3[COMRAM] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0
  2920 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2921 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2922 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2923 ;;Total ram usage:        2 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 1
  2926 ;; This function calls:
  2927 ;;		_HabilitaLCD
  2928 ;;		_RetardoLCD
  2929 ;; This function is called by:
  2930 ;;		_InicializaLCD
  2931 ;;		_BorraLCD
  2932 ;;		_EscribeLCD_c
  2933 ;;		_DireccionaLCD
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text16
  2938   0013B2                     __ptext16:
  2939                           	callstack 0
  2940   0013B2                     _EnviaDato:
  2941                           	callstack 27
  2942                           
  2943                           ;incstack = 0
  2944                           ;EnviaDato@a stored from wreg
  2945   0013B2  6E04               	movwf	EnviaDato@a^0,c
  2946                           
  2947                           ;LibLCDXC8.h: 52: if(interfaz==4){
  2948   0013B4  0E04               	movlw	4
  2949   0013B6  1851               	xorwf	_interfaz^0,w,c
  2950   0013B8  A4D8               	btfss	status,2,c
  2951   0013BA  D017               	goto	l980
  2952                           
  2953                           ;LibLCDXC8.h: 53: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2954   0013BC  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  2955   0013C0  0EF0               	movlw	240
  2956   0013C2  1603               	andwf	??_EnviaDato^0,f,c
  2957   0013C4  508C               	movf	140,w,c	;volatile
  2958   0013C6  0B0F               	andlw	15
  2959   0013C8  1003               	iorwf	??_EnviaDato^0,w,c
  2960   0013CA  6E8C               	movwf	140,c	;volatile
  2961                           
  2962                           ;LibLCDXC8.h: 54: HabilitaLCD();
  2963   0013CC  EC88  F00A         	call	_HabilitaLCD	;wreg free
  2964                           
  2965                           ;LibLCDXC8.h: 55: RetardoLCD(1);
  2966   0013D0  0E01               	movlw	1
  2967   0013D2  EC5E  F009         	call	_RetardoLCD
  2968                           
  2969                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a<<4);
  2970   0013D6  C004  F003         	movff	EnviaDato@a,??_EnviaDato
  2971   0013DA  3A03               	swapf	??_EnviaDato^0,f,c
  2972   0013DC  0EF0               	movlw	240
  2973   0013DE  1603               	andwf	??_EnviaDato^0,f,c
  2974   0013E0  508C               	movf	140,w,c	;volatile
  2975   0013E2  0B0F               	andlw	15
  2976   0013E4  1003               	iorwf	??_EnviaDato^0,w,c
  2977   0013E6  6E8C               	movwf	140,c	;volatile
  2978                           
  2979                           ;LibLCDXC8.h: 57: }else if(interfaz==8){
  2980   0013E8  0012               	return	
  2981   0013EA                     l980:
  2982   0013EA  0E08               	movlw	8
  2983   0013EC  1851               	xorwf	_interfaz^0,w,c
  2984   0013EE  A4D8               	btfss	status,2,c
  2985   0013F0  0012               	return	
  2986                           
  2987                           ;LibLCDXC8.h: 58: LATD=a;
  2988   0013F2  C004  FF8C         	movff	EnviaDato@a,3980	;volatile
  2989   0013F6  0012               	return		;funcret
  2990   0013F8                     __end_of_EnviaDato:
  2991                           	callstack 0
  2992                           
  2993 ;; *************** function _RetardoLCD *****************
  2994 ;; Defined at:
  2995 ;;		line 263 in file "LibLCDXC8.h"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  a               1    wreg     unsigned char 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  a               1    1[COMRAM] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0
  3010 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3011 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3012 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3013 ;;Total ram usage:        2 bytes
  3014 ;; Hardware stack levels used: 1
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_EnviaDato
  3019 ;;		_InicializaLCD
  3020 ;;		_BorraLCD
  3021 ;;		_EscribeLCD_c
  3022 ;;		_DireccionaLCD
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text17
  3027   0012BC                     __ptext17:
  3028                           	callstack 0
  3029   0012BC                     _RetardoLCD:
  3030                           	callstack 28
  3031                           
  3032                           ;incstack = 0
  3033                           ;RetardoLCD@a stored from wreg
  3034   0012BC  6E02               	movwf	RetardoLCD@a^0,c
  3035                           
  3036                           ;LibLCDXC8.h: 264: switch(a){
  3037   0012BE  D01B               	goto	l968
  3038   0012C0                     l958:
  3039   0012C0  0E05               	movlw	5
  3040   0012C2  6E01               	movwf	??_RetardoLCD^0,c
  3041   0012C4  0EDE               	movlw	222
  3042   0012C6                     u2057:
  3043   0012C6  2EE8               	decfsz	wreg,f,c
  3044   0012C8  D7FE               	bra	u2057
  3045   0012CA  2E01               	decfsz	??_RetardoLCD^0,f,c
  3046   0012CC  D7FC               	bra	u2057
  3047                           
  3048                           ;LibLCDXC8.h: 267: break;
  3049   0012CE  0012               	return	
  3050   0012D0                     l960:
  3051   0012D0  0E53               	movlw	83
  3052   0012D2                     u2067:
  3053   0012D2  2EE8               	decfsz	wreg,f,c
  3054   0012D4  D7FE               	bra	u2067
  3055   0012D6  F000               	nop	
  3056                           
  3057                           ;LibLCDXC8.h: 269: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3058   0012D8  0E35               	movlw	53
  3059   0012DA                     u2077:
  3060   0012DA  2EE8               	decfsz	wreg,f,c
  3061   0012DC  D7FE               	bra	u2077
  3062   0012DE  F000               	nop	
  3063                           
  3064                           ;LibLCDXC8.h: 271: break;
  3065   0012E0  0012               	return	
  3066   0012E2                     l962:
  3067   0012E2  0E08               	movlw	8
  3068   0012E4                     u2087:
  3069   0012E4  2EE8               	decfsz	wreg,f,c
  3070   0012E6  D7FE               	bra	u2087
  3071   0012E8  F000               	nop	
  3072                           
  3073                           ;LibLCDXC8.h: 274: break;
  3074   0012EA  0012               	return	
  3075   0012EC                     l964:
  3076   0012EC  0E03               	movlw	3
  3077   0012EE                     u2097:
  3078   0012EE  2EE8               	decfsz	wreg,f,c
  3079   0012F0  D7FE               	bra	u2097
  3080   0012F2  F000               	nop	
  3081                           
  3082                           ;LibLCDXC8.h: 277: break;
  3083   0012F4  0012               	return	
  3084   0012F6                     l968:
  3085   0012F6  5002               	movf	RetardoLCD@a^0,w,c
  3086                           
  3087                           ; Switch size 1, requested type "simple"
  3088                           ; Number of cases is 4, Range of values is 1 to 4
  3089                           ; switch strategies available:
  3090                           ; Name         Instructions Cycles
  3091                           ; simple_byte           13     7 (average)
  3092                           ;	Chosen strategy is simple_byte
  3093   0012F8  0A01               	xorlw	1	; case 1
  3094   0012FA  B4D8               	btfsc	status,2,c
  3095   0012FC  D7E1               	goto	l958
  3096   0012FE  0A03               	xorlw	3	; case 2
  3097   001300  B4D8               	btfsc	status,2,c
  3098   001302  D7E6               	goto	l960
  3099   001304  0A01               	xorlw	1	; case 3
  3100   001306  B4D8               	btfsc	status,2,c
  3101   001308  D7EC               	goto	l962
  3102   00130A  0A07               	xorlw	7	; case 4
  3103   00130C  A4D8               	btfss	status,2,c
  3104   00130E  0012               	return	
  3105   001310  D7ED               	goto	l964
  3106   001312                     __end_of_RetardoLCD:
  3107                           	callstack 0
  3108                           
  3109 ;; *************** function _HabilitaLCD *****************
  3110 ;; Defined at:
  3111 ;;		line 95 in file "LibLCDXC8.h"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3125 ;;      Params:         0       0       0       0       0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3128 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3129 ;;Total ram usage:        0 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_EnviaDato
  3135 ;;		_InicializaLCD
  3136 ;;		_BorraLCD
  3137 ;;		_EscribeLCD_c
  3138 ;;		_DireccionaLCD
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text18
  3143   001510                     __ptext18:
  3144                           	callstack 0
  3145   001510                     _HabilitaLCD:
  3146                           	callstack 28
  3147                           
  3148                           ;LibLCDXC8.h: 97: LATE1=1;
  3149                           
  3150                           ;incstack = 0
  3151   001510  828D               	bsf	3981,1,c	;volatile
  3152                           
  3153                           ;LibLCDXC8.h: 98: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3154   001512  0E03               	movlw	3
  3155   001514                     u2107:
  3156   001514  2EE8               	decfsz	wreg,f,c
  3157   001516  D7FE               	bra	u2107
  3158   001518  F000               	nop	
  3159                           
  3160                           ;LibLCDXC8.h: 100: LATE1=0;
  3161   00151A  928D               	bcf	3981,1,c	;volatile
  3162   00151C  0012               	return		;funcret
  3163   00151E                     __end_of_HabilitaLCD:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _ConfiguraLCD *****************
  3167 ;; Defined at:
  3168 ;;		line 47 in file "LibLCDXC8.h"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  a               1    wreg     unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  a               1    0[COMRAM] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0
  3183 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3185 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        1 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text19
  3196   0014B8                     __ptext19:
  3197                           	callstack 0
  3198   0014B8                     _ConfiguraLCD:
  3199                           	callstack 30
  3200                           
  3201                           ;incstack = 0
  3202                           ;ConfiguraLCD@a stored from wreg
  3203   0014B8  6E01               	movwf	ConfiguraLCD@a^0,c
  3204                           
  3205                           ;LibLCDXC8.h: 48: if(a==4 | a ==8)
  3206   0014BA  0E04               	movlw	4
  3207   0014BC  1801               	xorwf	ConfiguraLCD@a^0,w,c
  3208   0014BE  B4D8               	btfsc	status,2,c
  3209   0014C0  D004               	goto	u330
  3210   0014C2  0E08               	movlw	8
  3211   0014C4  1801               	xorwf	ConfiguraLCD@a^0,w,c
  3212   0014C6  A4D8               	btfss	status,2,c
  3213   0014C8  0012               	return	
  3214   0014CA                     u330:
  3215                           
  3216                           ;LibLCDXC8.h: 49: interfaz=a;
  3217   0014CA  C001  F051         	movff	ConfiguraLCD@a,_interfaz
  3218   0014CE  0012               	return		;funcret
  3219   0014D0                     __end_of_ConfiguraLCD:
  3220                           	callstack 0
  3221                           
  3222                           	psect	rparam
  3223   000000                     
  3224                           	psect	idloc
  3225                           
  3226                           ;Config register IDLOC0 @ 0x200000
  3227                           ;	unspecified, using default values
  3228   200000                     	org	2097152
  3229   200000  FF                 	db	255
  3230                           
  3231                           ;Config register IDLOC1 @ 0x200001
  3232                           ;	unspecified, using default values
  3233   200001                     	org	2097153
  3234   200001  FF                 	db	255
  3235                           
  3236                           ;Config register IDLOC2 @ 0x200002
  3237                           ;	unspecified, using default values
  3238   200002                     	org	2097154
  3239   200002  FF                 	db	255
  3240                           
  3241                           ;Config register IDLOC3 @ 0x200003
  3242                           ;	unspecified, using default values
  3243   200003                     	org	2097155
  3244   200003  FF                 	db	255
  3245                           
  3246                           ;Config register IDLOC4 @ 0x200004
  3247                           ;	unspecified, using default values
  3248   200004                     	org	2097156
  3249   200004  FF                 	db	255
  3250                           
  3251                           ;Config register IDLOC5 @ 0x200005
  3252                           ;	unspecified, using default values
  3253   200005                     	org	2097157
  3254   200005  FF                 	db	255
  3255                           
  3256                           ;Config register IDLOC6 @ 0x200006
  3257                           ;	unspecified, using default values
  3258   200006                     	org	2097158
  3259   200006  FF                 	db	255
  3260                           
  3261                           ;Config register IDLOC7 @ 0x200007
  3262                           ;	unspecified, using default values
  3263   200007                     	org	2097159
  3264   200007  FF                 	db	255
  3265                           
  3266                           	psect	config
  3267                           
  3268                           ;Config register CONFIG1L @ 0x300000
  3269                           ;	unspecified, using default values
  3270                           ;	PLL Prescaler Selection bits
  3271                           ;	PLLDIV = 0x0, unprogrammed default
  3272                           ;	System Clock Postscaler Selection bits
  3273                           ;	CPUDIV = 0x0, unprogrammed default
  3274                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3275                           ;	USBDIV = 0x0, unprogrammed default
  3276   300000                     	org	3145728
  3277   300000  00                 	db	0
  3278                           
  3279                           ;Config register CONFIG1H @ 0x300001
  3280                           ;	Oscillator Selection bits
  3281                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3282                           ;	Fail-Safe Clock Monitor Enable bit
  3283                           ;	FCMEN = 0x0, unprogrammed default
  3284                           ;	Internal/External Oscillator Switchover bit
  3285                           ;	IESO = 0x0, unprogrammed default
  3286   300001                     	org	3145729
  3287   300001  09                 	db	9
  3288                           
  3289                           ;Config register CONFIG2L @ 0x300002
  3290                           ;	unspecified, using default values
  3291                           ;	Power-up Timer Enable bit
  3292                           ;	PWRT = 0x1, unprogrammed default
  3293                           ;	Brown-out Reset Enable bits
  3294                           ;	BOR = 0x3, unprogrammed default
  3295                           ;	Brown-out Reset Voltage bits
  3296                           ;	BORV = 0x3, unprogrammed default
  3297                           ;	USB Voltage Regulator Enable bit
  3298                           ;	VREGEN = 0x0, unprogrammed default
  3299   300002                     	org	3145730
  3300   300002  1F                 	db	31
  3301                           
  3302                           ;Config register CONFIG2H @ 0x300003
  3303                           ;	Watchdog Timer Enable bit
  3304                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3305                           ;	Watchdog Timer Postscale Select bits
  3306                           ;	WDTPS = 0xF, unprogrammed default
  3307   300003                     	org	3145731
  3308   300003  1E                 	db	30
  3309                           
  3310                           ; Padding undefined space
  3311   300004                     	org	3145732
  3312   300004  FF                 	db	255
  3313                           
  3314                           ;Config register CONFIG3H @ 0x300005
  3315                           ;	CCP2 MUX bit
  3316                           ;	CCP2MX = 0x1, unprogrammed default
  3317                           ;	PORTB A/D Enable bit
  3318                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3319                           ;	Low-Power Timer 1 Oscillator Enable bit
  3320                           ;	LPT1OSC = 0x0, unprogrammed default
  3321                           ;	MCLR Pin Enable bit
  3322                           ;	MCLRE = 0x1, unprogrammed default
  3323   300005                     	org	3145733
  3324   300005  81                 	db	129
  3325                           
  3326                           ;Config register CONFIG4L @ 0x300006
  3327                           ;	Stack Full/Underflow Reset Enable bit
  3328                           ;	STVREN = 0x1, unprogrammed default
  3329                           ;	Single-Supply ICSP Enable bit
  3330                           ;	LVP = OFF, Single-Supply ICSP disabled
  3331                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3332                           ;	ICPRT = 0x0, unprogrammed default
  3333                           ;	Extended Instruction Set Enable bit
  3334                           ;	XINST = 0x0, unprogrammed default
  3335                           ;	Background Debugger Enable bit
  3336                           ;	DEBUG = 0x1, unprogrammed default
  3337   300006                     	org	3145734
  3338   300006  81                 	db	129
  3339                           
  3340                           ; Padding undefined space
  3341   300007                     	org	3145735
  3342   300007  FF                 	db	255
  3343                           
  3344                           ;Config register CONFIG5L @ 0x300008
  3345                           ;	unspecified, using default values
  3346                           ;	Code Protection bit
  3347                           ;	CP0 = 0x1, unprogrammed default
  3348                           ;	Code Protection bit
  3349                           ;	CP1 = 0x1, unprogrammed default
  3350                           ;	Code Protection bit
  3351                           ;	CP2 = 0x1, unprogrammed default
  3352                           ;	Code Protection bit
  3353                           ;	CP3 = 0x1, unprogrammed default
  3354   300008                     	org	3145736
  3355   300008  0F                 	db	15
  3356                           
  3357                           ;Config register CONFIG5H @ 0x300009
  3358                           ;	unspecified, using default values
  3359                           ;	Boot Block Code Protection bit
  3360                           ;	CPB = 0x1, unprogrammed default
  3361                           ;	Data EEPROM Code Protection bit
  3362                           ;	CPD = 0x1, unprogrammed default
  3363   300009                     	org	3145737
  3364   300009  C0                 	db	192
  3365                           
  3366                           ;Config register CONFIG6L @ 0x30000A
  3367                           ;	unspecified, using default values
  3368                           ;	Write Protection bit
  3369                           ;	WRT0 = 0x1, unprogrammed default
  3370                           ;	Write Protection bit
  3371                           ;	WRT1 = 0x1, unprogrammed default
  3372                           ;	Write Protection bit
  3373                           ;	WRT2 = 0x1, unprogrammed default
  3374                           ;	Write Protection bit
  3375                           ;	WRT3 = 0x1, unprogrammed default
  3376   30000A                     	org	3145738
  3377   30000A  0F                 	db	15
  3378                           
  3379                           ;Config register CONFIG6H @ 0x30000B
  3380                           ;	unspecified, using default values
  3381                           ;	Configuration Register Write Protection bit
  3382                           ;	WRTC = 0x1, unprogrammed default
  3383                           ;	Boot Block Write Protection bit
  3384                           ;	WRTB = 0x1, unprogrammed default
  3385                           ;	Data EEPROM Write Protection bit
  3386                           ;	WRTD = 0x1, unprogrammed default
  3387   30000B                     	org	3145739
  3388   30000B  E0                 	db	224
  3389                           
  3390                           ;Config register CONFIG7L @ 0x30000C
  3391                           ;	unspecified, using default values
  3392                           ;	Table Read Protection bit
  3393                           ;	EBTR0 = 0x1, unprogrammed default
  3394                           ;	Table Read Protection bit
  3395                           ;	EBTR1 = 0x1, unprogrammed default
  3396                           ;	Table Read Protection bit
  3397                           ;	EBTR2 = 0x1, unprogrammed default
  3398                           ;	Table Read Protection bit
  3399                           ;	EBTR3 = 0x1, unprogrammed default
  3400   30000C                     	org	3145740
  3401   30000C  0F                 	db	15
  3402                           
  3403                           ;Config register CONFIG7H @ 0x30000D
  3404                           ;	unspecified, using default values
  3405                           ;	Boot Block Table Read Protection bit
  3406                           ;	EBTRB = 0x1, unprogrammed default
  3407   30000D                     	org	3145741
  3408   30000D  40                 	db	64
  3409                           tosu	equ	0xFFF
  3410                           tosh	equ	0xFFE
  3411                           tosl	equ	0xFFD
  3412                           stkptr	equ	0xFFC
  3413                           pclatu	equ	0xFFB
  3414                           pclath	equ	0xFFA
  3415                           pcl	equ	0xFF9
  3416                           tblptru	equ	0xFF8
  3417                           tblptrh	equ	0xFF7
  3418                           tblptrl	equ	0xFF6
  3419                           tablat	equ	0xFF5
  3420                           prodh	equ	0xFF4
  3421                           prodl	equ	0xFF3
  3422                           indf0	equ	0xFEF
  3423                           postinc0	equ	0xFEE
  3424                           postdec0	equ	0xFED
  3425                           preinc0	equ	0xFEC
  3426                           plusw0	equ	0xFEB
  3427                           fsr0h	equ	0xFEA
  3428                           fsr0l	equ	0xFE9
  3429                           wreg	equ	0xFE8
  3430                           indf1	equ	0xFE7
  3431                           postinc1	equ	0xFE6
  3432                           postdec1	equ	0xFE5
  3433                           preinc1	equ	0xFE4
  3434                           plusw1	equ	0xFE3
  3435                           fsr1h	equ	0xFE2
  3436                           fsr1l	equ	0xFE1
  3437                           bsr	equ	0xFE0
  3438                           indf2	equ	0xFDF
  3439                           postinc2	equ	0xFDE
  3440                           postdec2	equ	0xFDD
  3441                           preinc2	equ	0xFDC
  3442                           plusw2	equ	0xFDB
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8

Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     59      81
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    ___lwtoft->___ftpack
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftsub
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16121
                                             56 COMRAM     3     3      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lltoft
                            ___lwdiv
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2942
                                              8 COMRAM     3     0      3
                           ___ftpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             9     5      4    3293
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                             41 COMRAM    15    11      4
                            ___ftmul (ARG)
                            ___ftsub (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4459
                                             20 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3962
                                              8 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3450
                                             26 COMRAM    15     9      6
                           ___ftpack
                            ___ftsub (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2844
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1     376
                                              5 COMRAM     4     3      1
                       _EscribeLCD_c
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _DireccionaLCD                                        1     1      0      90
                                              4 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      60
                                              2 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
     _EscribeLCD_c
   ___ftmul
     ___ftpack
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___lltoft (ARG)
   ___ftsub
   ___fttol
     ___ftmul (ARG)
     ___ftsub (ARG)
     ___lltoft (ARG)
   ___lltoft
   ___lwdiv
   ___lwtoft
     ___ftpack
     ___lwdiv (ARG)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3B      51       1       85.3%
BITBIGSFRhhl        2F      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BITBIGSFRlh          1      0       0      25        0.0%
BITBIGSFRhllh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51      28        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 16 07:51:31 2023

                      _i 0047                        _r 003C                       _n1 004B  
                     _n2 0049               EnviaDato@a 0004                       _op 0050  
    ___wmul@multiplicand 0003             ___ftadd@exp1 0014             ___ftadd@exp2 0013  
          ??_LeerTeclado 0001             ___ftadd@sign 0012                      l200 11B8  
                    l132 0AFC            _InicializaLCD 11C4                      l171 113C  
                    l180 1160                      l190 118C                      l182 1168  
                    l174 1144                      l192 1194                      l184 1170  
                    l176 114C                      l196 11A8                      l188 1184  
                    l197 11C0                      l198 11B0                      l535 0E3C  
                    l684 135A                      l960 12D0                      l962 12E2  
                    l964 12EC                      l980 13EA                      l958 12C0  
                    l968 12F6                      _RB4 007C0C                      _RB5 007C0D  
                    _RB6 007C0E                      _RB7 007C0F                      u330 14CA  
                    u430 1130                      _n1c 004F                      _n2c 004E  
                    wreg 000FE8                     l2002 09AA                     l1116 11D6  
                   l2020 0A1E                     l2012 09D8                     l1126 11F4  
                   l2030 0A9A                     l2102 0CF4                     l1136 1212  
                   l1224 1154                     l2024 0A3C                     l2016 0A12  
                   l2042 0AC6                     l1156 124A                     l1252 1178  
                   l2052 0BC0                     l2036 0AAE                     l2070 0C4E  
                   l2046 0AD8                     l1280 119C                     l2064 0C1A  
                   l2048 0AF4                     l2074 0C92                     l2078 0CB8  
                   l1800 0F30                     l1720 0DDA                     l2096 0CEC  
                   l2088 0CDC                     l1810 0F58                     l1730 0E0E  
                   l1722 0DE4                     l1804 0F40                     l1732 0E18  
                   l1662 10D0                     l1654 1092                     l1814 0F68  
                   l1718 0DD0                     l1664 10EE                     l1656 109C  
                   l1904 1350                     l1666 10F8                     l1658 10BA  
                   l1738 0E58                     l1690 0D56                     l1826 140E  
                   l1780 0ED6                     l1748 0E88                     l1836 0FCE  
                   l1758 136C                     l1854 1022                     l1696 0D7E  
                   l1872 1062                     l1864 103A                     l1880 1272  
                   l1928 0882                     l1786 0EFE                     l1866 1046  
                   l1858 1032                     l1892 1328                     l1956 08E4  
                   l1878 1266                     l1894 1330                     l1992 097C  
                   l1976 0936                     l1988 096A                     l1998 0998  
                   STR_1 0812                     STR_2 0801                     u1200 1102  
                   u1300 0D70                     u1231 0D16                     u1160 1084  
                   u1400 0E20                     u1241 0D2A                     u2017 0840  
                   u1330 0DAE                     u2107 1514                     u2027 0852  
                   u2037 0876                     u1270 0D48                     _LATB 000F8A  
                   u2047 0CFA                     _LATD 000F8C                     u2057 12C6  
                   _LATE 000F8D                     u1450 13B0                     u1370 0DEC  
                   u2067 12D2                     u1531 0FB2                     u1540 0FBC  
                   u2077 12DA                     u1461 0EBE                     u1550 0FEC  
                   u1630 1334                     u2087 12E4                     u2097 12EE  
                   u1481 0EE6                     u1730 0924                     u1555 0FE4  
                   u1590 104C                     u1920 0BD0                     u1680 08FC  
                   u1930 0BE2                     u1940 0BF4                     u1950 0C2A  
                   u1960 0C3C                     u1970 0C4E                     _RBPU 007F8F  
         ??_EscribeLCD_c 0005                     _main 081E             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     fsr1l 000FE1                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___ftmul@cntr 0028  
           ___param_bank 000000             ___ftmul@sign 0029             ___fttol@exp1 0038  
           ___fttol@lval 0034           ?_InicializaLCD 0001                    ?_main 0001  
        __end_of___ftadd 0EAE            EscribeLCD_c@a 0005          __end_of___ftmul 0FA2  
        __end_of___ftsub 1438          __end_of___fttol 1074                    _LATE0 007C68  
                  _LATE1 007C69          __end_of___lwdiv 1364                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96             ___lltoft@exp 0011  
                  _Tecla 004D      __end_of_LeerTeclado 11C4                    _nodec 0044  
          ___ftpack@sign 0005                    main@i 003B                    tablat 000FF5  
            _HabilitaLCD 1510                    status 000FD8         __end_of_BorraLCD 1510  
        __initialization 1438             __end_of_main 0D06                   ??_main 0039  
   __end_of_ConfiguraLCD 14D0            ___fttol@sign1 0033            __activetblptr 000002  
                 _ADCON1 000FC1           DireccionaLCD@a 0005         __end_of___ftpack 1122  
       __end_of___lltoft 12BC         __end_of___lwtoft 14B8    __end_of_DireccionaLCD 14FC  
             _RetardoLCD 12BC                   ___wmul 146E                ??___ftadd 000F  
              ??___ftmul 0021                ??___ftsub 001B                ??___fttol 002E  
              ??___lwdiv 0005          ??_InicializaLCD 0005                   clear_0 145E  
                 isa$std 000001     __end_of_EscribeLCD_c 14E6              _LeerTeclado 1122  
  ___ftmul@f3_as_product 0025             __pdataCOMRAM 004E             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 1464               ___ftadd@f1 0009  
             ___ftadd@f2 000C            ___rparam_used 000001               ___ftmul@f1 001B  
             ___ftmul@f2 001E               ___ftsub@f1 0015               ___ftsub@f2 0018  
             ___fttol@f1 002A           __pcstackCOMRAM 0001               ___lltoft@c 0009  
      __end_of_EnviaDato 13F8               ___lwtoft@c 0009                ?_BorraLCD 0001  
         _MensajeLCD_Var 1364          MensajeLCD_Var@a 0006          MensajeLCD_Var@i 0008  
            ?_RetardoLCD 0001              RetardoLCD@a 0002                  ?___wmul 0001  
              ?___ftpack 0001                ?___lltoft 0009                ?___lwtoft 0009  
 __end_of_MensajeLCD_Var 13B2               ??_BorraLCD 0005             ?_HabilitaLCD 0001  
           _ConfiguraLCD 14B8                  __Hparam 0000                  __Lparam 0000  
                ___ftadd 0D06                  ___ftmul 0EAE                  ___ftsub 13F8  
                ___fttol 0FA2                  ___lwdiv 1312             __psmallconst 0800  
                __pcinit 1438               ??___ftpack 0006                  __ramtop 0800  
             ??___lltoft 000D                  __ptext0 081E                  __ptext1 146E  
                __ptext2 1494                  __ptext3 1312                  __ptext4 1260  
                __ptext5 0FA2                  __ptext6 13F8                  __ptext7 0D06  
                __ptext8 0EAE                  __ptext9 1074               ??___lwtoft 000C  
        ?_MensajeLCD_Var 0006     end_of_initialization 1464            __Lmediumconst 0000  
           _EscribeLCD_c 14D0                  postdec1 000FE5                  postinc0 000FEE  
           ?_LeerTeclado 0001              ___ftmul@exp 0024           __end_of___wmul 1494  
          __pidataCOMRAM 151E    __end_of_InicializaLCD 1260                _EnviaDato 13B2  
    start_initialization 1438             ??_RetardoLCD 0001                 ??___wmul 0005  
             ?_EnviaDato 0001              __pbssCOMRAM 003C       __end_of_RetardoLCD 1312  
          _DireccionaLCD 14E6         ___lwdiv@dividend 0001                 ?___ftadd 0009  
               ?___ftmul 001B                 ?___ftsub 0015                 ?___fttol 002A  
               ?___lwdiv 0001         ??_MensajeLCD_Var 0007              __smallconst 0800  
       ___lwdiv@quotient 0005           ___wmul@product 0005           ?_DireccionaLCD 0001  
      ___wmul@multiplier 0001              ??_EnviaDato 0003                 _BorraLCD 14FC  
              copy_data0 144C                 __Hrparam 0000                 __Lrparam 0000  
               ___ftpack 1074                 ___lltoft 1260                 ___lwtoft 1494  
          ConfiguraLCD@a 0001          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 1364                 __ptext11 14D0                 __ptext12 1122  
               __ptext13 11C4                 __ptext14 14FC                 __ptext15 14E6  
               __ptext16 13B2                 __ptext17 12BC                 __ptext18 1510  
               __ptext19 14B8          ??_DireccionaLCD 0005                 _interfaz 0051  
               _partdecl 0040                 isa$xinst 000000            ??_HabilitaLCD 0001  
          ?_ConfiguraLCD 0001           ??_ConfiguraLCD 0001            ?_EscribeLCD_c 0001  
    __end_of_HabilitaLCD 151E  
