

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 18 11:30:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Version 2.40
    50                           ; Generated 04/07/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   001A96                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for _n2c
    90   001A96  20                 	db	32
    91                           
    92                           ;initializer for _n1c
    93   001A97  20                 	db	32
    94                           
    95                           ;initializer for _op
    96   001A98  20                 	db	32
    97                           
    98                           ;initializer for _interfaz
    99   001A99  08                 	db	8
   100   000000                     _LATC	set	3979
   101   000000                     _TRISC	set	3988
   102   000000                     _LATC7	set	31839
   103   000000                     _LATE2	set	31850
   104   000000                     _RB7	set	31759
   105   000000                     _RB6	set	31758
   106   000000                     _RB5	set	31757
   107   000000                     _POR	set	32385
   108   000000                     _PD	set	32386
   109   000000                     _TMR0ON	set	32431
   110   000000                     _GIE	set	32663
   111   000000                     _TMR0IE	set	32661
   112   000000                     _LATE1	set	31849
   113   000000                     _LATB	set	3978
   114   000000                     _LATD	set	3980
   115   000000                     _RB4	set	31756
   116   000000                     _TRISB	set	3987
   117   000000                     _TRISD	set	3989
   118   000000                     _ADCON1	set	4033
   119   000000                     _LATE0	set	31848
   120   000000                     _OSCCON	set	4051
   121   000000                     _T0CON	set	4053
   122   000000                     _TO	set	32387
   123   000000                     _RBPU	set	32655
   124   000000                     _TRISE	set	3990
   125   000000                     _TMR0IF	set	32658
   126   000000                     _TMR0	set	4054
   127                           
   128                           	psect	smallconst
   129   000800                     __psmallconst:
   130                           	callstack 0
   131   000800  00                 	db	0
   132   000801                     STR_7:
   133   000801  4D                 	db	77	;'M'
   134   000802  6F                 	db	111	;'o'
   135   000803  64                 	db	100	;'d'
   136   000804  6F                 	db	111	;'o'
   137   000805  20                 	db	32
   138   000806  46                 	db	70	;'F'
   139   000807  61                 	db	97	;'a'
   140   000808  63                 	db	99	;'c'
   141   000809  74                 	db	116	;'t'
   142   00080A  6F                 	db	111	;'o'
   143   00080B  72                 	db	114	;'r'
   144   00080C  69                 	db	105	;'i'
   145   00080D  61                 	db	97	;'a'
   146   00080E  6C                 	db	108	;'l'
   147   00080F  00                 	db	0
   148   000810                     STR_3:
   149   000810  4D                 	db	77	;'M'
   150   000811  6F                 	db	111	;'o'
   151   000812  64                 	db	100	;'d'
   152   000813  6F                 	db	111	;'o'
   153   000814  20                 	db	32
   154   000815  50                 	db	80	;'P'
   155   000816  6F                 	db	111	;'o'
   156   000817  74                 	db	116	;'t'
   157   000818  65                 	db	101	;'e'
   158   000819  6E                 	db	110	;'n'
   159   00081A  63                 	db	99	;'c'
   160   00081B  69                 	db	105	;'i'
   161   00081C  61                 	db	97	;'a'
   162   00081D  00                 	db	0
   163   00081E                     STR_15:
   164   00081E  49                 	db	73	;'I'
   165   00081F  6E                 	db	110	;'n'
   166   000820  64                 	db	100	;'d'
   167   000821  65                 	db	101	;'e'
   168   000822  74                 	db	116	;'t'
   169   000823  65                 	db	101	;'e'
   170   000824  72                 	db	114	;'r'
   171   000825  6D                 	db	109	;'m'
   172   000826  69                 	db	105	;'i'
   173   000827  6E                 	db	110	;'n'
   174   000828  61                 	db	97	;'a'
   175   000829  64                 	db	100	;'d'
   176   00082A  6F                 	db	111	;'o'
   177   00082B  00                 	db	0
   178   00082C                     STR_11:
   179   00082C  4C                 	db	76	;'L'
   180   00082D  56                 	db	86	;'V'
   181   00082E  50                 	db	80	;'P'
   182   00082F  20                 	db	32
   183   000830  41                 	db	65	;'A'
   184   000831  63                 	db	99	;'c'
   185   000832  74                 	db	116	;'t'
   186   000833  69                 	db	105	;'i'
   187   000834  76                 	db	118	;'v'
   188   000835  61                 	db	97	;'a'
   189   000836  64                 	db	100	;'d'
   190   000837  6F                 	db	111	;'o'
   191   000838  00                 	db	0
   192   000839                     STR_13:
   193   000839  64                 	db	100	;'d'
   194   00083A  65                 	db	101	;'e'
   195   00083B  20                 	db	32
   196   00083C  63                 	db	99	;'c'
   197   00083D  61                 	db	97	;'a'
   198   00083E  6C                 	db	108	;'l'
   199   00083F  63                 	db	99	;'c'
   200   000840  75                 	db	117	;'u'
   201   000841  6C                 	db	108	;'l'
   202   000842  61                 	db	97	;'a'
   203   000843  72                 	db	114	;'r'
   204   000844  00                 	db	0
   205   000845                     STR_9:
   206   000845  4D                 	db	77	;'M'
   207   000846  6F                 	db	111	;'o'
   208   000847  64                 	db	100	;'d'
   209   000848  6F                 	db	111	;'o'
   210   000849  20                 	db	32
   211   00084A  52                 	db	82	;'R'
   212   00084B  65                 	db	101	;'e'
   213   00084C  73                 	db	115	;'s'
   214   00084D  74                 	db	116	;'t'
   215   00084E  61                 	db	97	;'a'
   216   00084F  00                 	db	0
   217   000850                     STR_5:
   218   000850  4D                 	db	77	;'M'
   219   000851  6F                 	db	111	;'o'
   220   000852  64                 	db	100	;'d'
   221   000853  6F                 	db	111	;'o'
   222   000854  20                 	db	32
   223   000855  53                 	db	83	;'S'
   224   000856  75                 	db	117	;'u'
   225   000857  6D                 	db	109	;'m'
   226   000858  61                 	db	97	;'a'
   227   000859  00                 	db	0
   228   00085A                     STR_12:
   229   00085A  49                 	db	73	;'I'
   230   00085B  6D                 	db	109	;'m'
   231   00085C  70                 	db	112	;'p'
   232   00085D  6F                 	db	111	;'o'
   233   00085E  73                 	db	115	;'s'
   234   00085F  69                 	db	105	;'i'
   235   000860  62                 	db	98	;'b'
   236   000861  6C                 	db	108	;'l'
   237   000862  65                 	db	101	;'e'
   238   000863  00                 	db	0
   239   000864                     STR_14:
   240   000864  49                 	db	73	;'I'
   241   000865  6E                 	db	110	;'n'
   242   000866  66                 	db	102	;'f'
   243   000867  69                 	db	105	;'i'
   244   000868  6E                 	db	110	;'n'
   245   000869  69                 	db	105	;'i'
   246   00086A  74                 	db	116	;'t'
   247   00086B  6F                 	db	111	;'o'
   248   00086C  00                 	db	0
   249   00086D                     STR_1:
   250   00086D  45                 	db	69	;'E'
   251   00086E  6E                 	db	110	;'n'
   252   00086F  65                 	db	101	;'e'
   253   000870  72                 	db	114	;'r'
   254   000871  67                 	db	103	;'g'
   255   000872  69                 	db	105	;'i'
   256   000873  61                 	db	97	;'a'
   257   000874  00                 	db	0
   258   000875                     STR_2:
   259   000875  4D                 	db	77	;'M'
   260   000876  43                 	db	67	;'C'
   261   000877  4C                 	db	76	;'L'
   262   000878  52                 	db	82	;'R'
   263   000879  00                 	db	0
   264   00087A  00                 	db	0	; dummy byte at the end
   265   000000                     
   266                           ; #config settings
   267                           
   268                           	psect	cinit
   269   001932                     __pcinit:
   270                           	callstack 0
   271   001932                     start_initialization:
   272                           	callstack 0
   273   001932                     __initialization:
   274                           	callstack 0
   275                           
   276                           ; Initialize objects allocated to COMRAM (4 bytes)
   277                           ; load TBLPTR registers with __pidataCOMRAM
   278   001932  0E96               	movlw	low __pidataCOMRAM
   279   001934  6EF6               	movwf	tblptrl,c
   280   001936  0E1A               	movlw	high __pidataCOMRAM
   281   001938  6EF7               	movwf	tblptrh,c
   282   00193A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   283   00193C  6EF8               	movwf	tblptru,c
   284   00193E  EE00  F04D         	lfsr	0,__pdataCOMRAM
   285   001942  EE10 F004          	lfsr	1,4
   286   001946                     copy_data0:
   287   001946  0009               	tblrd		*+
   288   001948  CFF5 FFEE          	movff	tablat,postinc0
   289   00194C  50E5               	movf	postdec1,w,c
   290   00194E  50E1               	movf	fsr1l,w,c
   291   001950  E1FA               	bnz	copy_data0
   292                           
   293                           ; Clear objects allocated to COMRAM (37 bytes)
   294   001952  EE00  F028         	lfsr	0,__pbssCOMRAM
   295   001956  0E25               	movlw	37
   296   001958                     clear_0:
   297   001958  6AEE               	clrf	postinc0,c
   298   00195A  06E8               	decf	wreg,f,c
   299   00195C  E1FD               	bnz	clear_0
   300   00195E                     end_of_initialization:
   301                           	callstack 0
   302   00195E                     __end_of__initialization:
   303                           	callstack 0
   304   00195E  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   305   001960  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   306   001962  0E00               	movlw	low (__Lmediumconst shr (0+16))
   307   001964  6EF8               	movwf	tblptru,c
   308   001966  0100               	movlb	0
   309   001968  EF3E  F004         	goto	_main	;jump to C main() function
   310                           
   311                           	psect	bssCOMRAM
   312   000028                     __pbssCOMRAM:
   313                           	callstack 0
   314   000028                     _res:
   315                           	callstack 0
   316   000028                     	ds	4
   317   00002C                     _r:
   318                           	callstack 0
   319   00002C                     	ds	4
   320   000030                     _partdecl:
   321                           	callstack 0
   322   000030                     	ds	4
   323   000034                     _b:
   324                           	callstack 0
   325   000034                     	ds	2
   326   000036                     _a:
   327                           	callstack 0
   328   000036                     	ds	2
   329   000038                     _verificador:
   330                           	callstack 0
   331   000038                     	ds	2
   332   00003A                     _contador_digitos:
   333                           	callstack 0
   334   00003A                     	ds	2
   335   00003C                     _contador:
   336                           	callstack 0
   337   00003C                     	ds	2
   338   00003E                     _color:
   339                           	callstack 0
   340   00003E                     	ds	2
   341   000040                     _i:
   342                           	callstack 0
   343   000040                     	ds	2
   344   000042                     _n2:
   345                           	callstack 0
   346   000042                     	ds	2
   347   000044                     _n1:
   348                           	callstack 0
   349   000044                     	ds	2
   350   000046                     _factorial:
   351                           	callstack 0
   352   000046                     	ds	1
   353   000047                     _potencia:
   354                           	callstack 0
   355   000047                     	ds	1
   356   000048                     _Tecla:
   357                           	callstack 0
   358   000048                     	ds	1
   359   000049                     _m:
   360                           	callstack 0
   361   000049                     	ds	4
   362                           
   363                           	psect	dataCOMRAM
   364   00004D                     __pdataCOMRAM:
   365                           	callstack 0
   366   00004D                     _n2c:
   367                           	callstack 0
   368   00004D                     	ds	1
   369   00004E                     _n1c:
   370                           	callstack 0
   371   00004E                     	ds	1
   372   00004F                     _op:
   373                           	callstack 0
   374   00004F                     	ds	1
   375   000050                     _interfaz:
   376                           	callstack 0
   377   000050                     	ds	1
   378                           
   379                           	psect	cstackBANK0
   380   000060                     __pcstackBANK0:
   381                           	callstack 0
   382   000060                     Imprimir_Resultado@flag:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x0
   386   000060                     	ds	1
   387   000061                     Imprimir_Resultado@k:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x1
   391   000061                     	ds	2
   392   000063                     Imprimir_Resultado@i:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x3
   396   000063                     	ds	2
   397   000065                     Imprimir_Resultado@j:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x5
   401   000065                     	ds	2
   402   000067                     Imprimir_Resultado@potencia:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x7
   406   000067                     	ds	4
   407                           
   408                           	psect	cstackCOMRAM
   409   000001                     __pcstackCOMRAM:
   410                           	callstack 0
   411   000001                     ??i2_RetardoLCD:
   412   000001                     ?i2_strlen:
   413                           	callstack 0
   414   000001                     i2strlen@s:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x0
   418   000001                     	ds	1
   419   000002                     i2RetardoLCD@a:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x1
   423   000002                     	ds	1
   424   000003                     ??i2_EnviaDato:
   425   000003                     i2strlen@cp:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x2
   429   000003                     	ds	1
   430   000004                     i2EnviaDato@a:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x3
   434   000004                     	ds	1
   435   000005                     i2EscribeLCD_c@a:
   436                           	callstack 0
   437   000005                     i2DireccionaLCD@a:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x4
   441   000005                     	ds	1
   442   000006                     i2MensajeLCD_Var@a:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x5
   446   000006                     	ds	1
   447   000007                     ??i2_MensajeLCD_Var:
   448                           
   449                           ; 1 bytes @ 0x6
   450   000007                     	ds	1
   451   000008                     i2MensajeLCD_Var@i:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x7
   455   000008                     	ds	2
   456   00000A                     ??_ISR:
   457                           
   458                           ; 1 bytes @ 0x9
   459   00000A                     	ds	4
   460   00000E                     ??_RetardoLCD:
   461   00000E                     ??_ColorRGB:
   462   00000E                     ?_strlen:
   463                           	callstack 0
   464   00000E                     ?___wmul:
   465                           	callstack 0
   466   00000E                     ?___lwmod:
   467                           	callstack 0
   468   00000E                     ?___lmul:
   469                           	callstack 0
   470   00000E                     ?___aldiv:
   471                           	callstack 0
   472   00000E                     ?___almod:
   473                           	callstack 0
   474   00000E                     ConfiguraLCD@a:
   475                           	callstack 0
   476   00000E                     strlen@s:
   477                           	callstack 0
   478   00000E                     ___wmul@multiplier:
   479                           	callstack 0
   480   00000E                     ___lwmod@dividend:
   481                           	callstack 0
   482   00000E                     ___lmul@multiplier:
   483                           	callstack 0
   484   00000E                     ___aldiv@dividend:
   485                           	callstack 0
   486   00000E                     ___almod@dividend:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0xD
   490   00000E                     	ds	1
   491   00000F                     RetardoLCD@a:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0xE
   495   00000F                     	ds	1
   496   000010                     ??_EnviaDato:
   497   000010                     strlen@cp:
   498                           	callstack 0
   499   000010                     ___wmul@multiplicand:
   500                           	callstack 0
   501   000010                     ___lwmod@divisor:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xF
   505   000010                     	ds	1
   506   000011                     EnviaDato@a:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x10
   510   000011                     	ds	1
   511   000012                     EscribeLCD_c@a:
   512                           	callstack 0
   513   000012                     DireccionaLCD@a:
   514                           	callstack 0
   515   000012                     ___lwmod@counter:
   516                           	callstack 0
   517   000012                     ___wmul@product:
   518                           	callstack 0
   519   000012                     ___lmul@multiplicand:
   520                           	callstack 0
   521   000012                     ___aldiv@divisor:
   522                           	callstack 0
   523   000012                     ___almod@divisor:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x11
   527   000012                     	ds	1
   528   000013                     MensajeLCD_Var@a:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x12
   532   000013                     	ds	1
   533   000014                     ??_MensajeLCD_Var:
   534   000014                     ?___lwdiv:
   535                           	callstack 0
   536   000014                     ?_factorial_function:
   537                           	callstack 0
   538   000014                     factorial_function@a:
   539                           	callstack 0
   540   000014                     ___lwdiv@dividend:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x13
   544   000014                     	ds	1
   545   000015                     MensajeLCD_Var@i:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x14
   549   000015                     	ds	1
   550   000016                     ___aldiv@counter:
   551                           	callstack 0
   552   000016                     ___almod@counter:
   553                           	callstack 0
   554   000016                     ___lwdiv@divisor:
   555                           	callstack 0
   556   000016                     ___lmul@product:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x15
   560   000016                     	ds	1
   561   000017                     ___aldiv@sign:
   562                           	callstack 0
   563   000017                     ___almod@sign:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x16
   567   000017                     	ds	1
   568   000018                     ___lwdiv@counter:
   569                           	callstack 0
   570   000018                     factorial_function@fact:
   571                           	callstack 0
   572   000018                     ___aldiv@quotient:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x17
   576   000018                     	ds	1
   577   000019                     ___lwdiv@quotient:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x18
   581   000019                     	ds	3
   582   00001C                     Imprimir_Resultado@r:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x1B
   586   00001C                     	ds	4
   587   000020                     ??_Imprimir_Resultado:
   588                           
   589                           ; 1 bytes @ 0x1F
   590   000020                     	ds	4
   591   000024                     ??_main:
   592                           
   593                           ; 1 bytes @ 0x23
   594   000024                     	ds	2
   595   000026                     _main$157:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x25
   599   000026                     	ds	1
   600   000027                     _main$158:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x26
   604   000027                     	ds	1
   605                           
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 37 in file "Lab4.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   625 ;;      Params:         0       0       0       0       0       0       0       0       0
   626 ;;      Locals:         2       0       0       0       0       0       0       0       0
   627 ;;      Temps:          2       0       0       0       0       0       0       0       0
   628 ;;      Totals:         4       0       0       0       0       0       0       0       0
   629 ;;Total ram usage:        4 bytes
   630 ;; Hardware stack levels required when called: 10
   631 ;; This function calls:
   632 ;;		_BorraLCD
   633 ;;		_ColorRGB
   634 ;;		_ConfiguraLCD
   635 ;;		_DireccionaLCD
   636 ;;		_EscribeLCD_c
   637 ;;		_Imprimir_Resultado
   638 ;;		_InicializaLCD
   639 ;;		_LeerTeclado
   640 ;;		_MensajeLCD_Var
   641 ;;		___lmul
   642 ;;		___lwdiv
   643 ;;		___wmul
   644 ;;		_factorial_function
   645 ;; This function is called by:
   646 ;;		Startup code after reset
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text0
   651   00087C                     __ptext0:
   652                           	callstack 0
   653   00087C                     _main:
   654                           	callstack 21
   655                           
   656                           ;Lab4.c: 38: ADCON1=15;
   657                           
   658                           ;incstack = 0
   659   00087C  0E0F               	movlw	15
   660   00087E  6EC1               	movwf	193,c	;volatile
   661                           
   662                           ;Lab4.c: 39: TRISD=0;
   663   000880  0E00               	movlw	0
   664   000882  6E95               	movwf	149,c	;volatile
   665                           
   666                           ;Lab4.c: 40: TRISB=0b11110000;
   667   000884  0EF0               	movlw	240
   668   000886  6E93               	movwf	147,c	;volatile
   669                           
   670                           ;Lab4.c: 41: TRISE=0;
   671   000888  0E00               	movlw	0
   672   00088A  6E96               	movwf	150,c	;volatile
   673                           
   674                           ;Lab4.c: 42: TRISC=0;
   675   00088C  0E00               	movlw	0
   676   00088E  6E94               	movwf	148,c	;volatile
   677                           
   678                           ;Lab4.c: 43: RBPU=0;
   679   000890  9EF1               	bcf	4081,7,c	;volatile
   680                           
   681                           ;Lab4.c: 44: ConfiguraLCD(4);
   682   000892  0E04               	movlw	4
   683   000894  ECF1  F00C         	call	_ConfiguraLCD
   684                           
   685                           ;Lab4.c: 45: InicializaLCD();
   686   000898  EC36  F00A         	call	_InicializaLCD	;wreg free
   687                           
   688                           ;Lab4.c: 47: T0CON=0b10000010;
   689   00089C  0E82               	movlw	130
   690   00089E  6ED5               	movwf	213,c	;volatile
   691                           
   692                           ;Lab4.c: 48: TMR0IF=0;
   693   0008A0  94F2               	bcf	4082,2,c	;volatile
   694                           
   695                           ;Lab4.c: 49: TMR0=49911;
   696   0008A2  0EC2               	movlw	194
   697   0008A4  6ED7               	movwf	215,c	;volatile
   698   0008A6  0EF7               	movlw	247
   699   0008A8  6ED6               	movwf	214,c	;volatile
   700                           
   701                           ;Lab4.c: 50: TMR0IE=1;
   702   0008AA  8AF2               	bsf	4082,5,c	;volatile
   703                           
   704                           ;Lab4.c: 51: GIE=1;
   705   0008AC  8EF2               	bsf	4082,7,c	;volatile
   706                           
   707                           ;Lab4.c: 52: TMR0ON=1;
   708   0008AE  8ED5               	bsf	4053,7,c	;volatile
   709                           
   710                           ;Lab4.c: 55: OSCCON = 0b11000100;
   711   0008B0  0EC4               	movlw	196
   712   0008B2  6ED3               	movwf	211,c	;volatile
   713                           
   714                           ;Lab4.c: 57: BorraLCD();
   715   0008B4  EC29  F00D         	call	_BorraLCD	;wreg free
   716                           
   717                           ;Lab4.c: 58: if(TO == 1 && PD == 1){
   718   0008B8  B6D0               	btfsc	4048,3,c	;volatile
   719   0008BA  A4D0               	btfss	4048,2,c	;volatile
   720   0008BC  D007               	goto	l179
   721                           
   722                           ;Lab4.c: 59: BorraLCD();
   723   0008BE  EC29  F00D         	call	_BorraLCD	;wreg free
   724                           
   725                           ;Lab4.c: 60: MensajeLCD_Var("Energia");
   726   0008C2  0E6D               	movlw	low STR_1
   727   0008C4  6E13               	movwf	MensajeLCD_Var@a^0,c
   728   0008C6  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
   729                           
   730                           ;Lab4.c: 61: }else{
   731   0008CA  D008               	goto	l3534
   732   0008CC                     l179:
   733                           
   734                           ;Lab4.c: 62: if(POR==0){
   735   0008CC  B2D0               	btfsc	4048,1,c	;volatile
   736   0008CE  D006               	goto	l3534
   737                           
   738                           ;Lab4.c: 63: BorraLCD();
   739   0008D0  EC29  F00D         	call	_BorraLCD	;wreg free
   740                           
   741                           ;Lab4.c: 64: MensajeLCD_Var("MCLR");
   742   0008D4  0E75               	movlw	low STR_2
   743   0008D6  6E13               	movwf	MensajeLCD_Var@a^0,c
   744   0008D8  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
   745   0008DC                     l3534:
   746                           
   747                           ;Lab4.c: 65: };Lab4.c: 66: };Lab4.c: 67: _delay((unsigned long)((2000)*(1000000/4000.0))
      +                          );
   748   0008DC  0E03               	movlw	3
   749   0008DE  6E25               	movwf	(??_main+1)^0,c
   750   0008E0  0E8A               	movlw	138
   751   0008E2  6E24               	movwf	??_main^0,c
   752   0008E4  0E56               	movlw	86
   753   0008E6                     u4777:
   754   0008E6  2EE8               	decfsz	wreg,f,c
   755   0008E8  D7FE               	bra	u4777
   756   0008EA  2E24               	decfsz	??_main^0,f,c
   757   0008EC  D7FC               	bra	u4777
   758   0008EE  2E25               	decfsz	(??_main+1)^0,f,c
   759   0008F0  D7FA               	bra	u4777
   760   0008F2                     l3536:
   761                           
   762                           ;Lab4.c: 68: BorraLCD();
   763   0008F2  EC29  F00D         	call	_BorraLCD	;wreg free
   764   0008F6                     l3538:
   765                           
   766                           ;Lab4.c: 70: LATB=0b00000000;
   767   0008F6  0E00               	movlw	0
   768   0008F8  6E8A               	movwf	138,c	;volatile
   769                           
   770                           ;Lab4.c: 71: verificador = 0;
   771   0008FA  0E00               	movlw	0
   772   0008FC  6E39               	movwf	(_verificador+1)^0,c
   773   0008FE  0E00               	movlw	0
   774   000900  6E38               	movwf	_verificador^0,c
   775                           
   776                           ;Lab4.c: 72: Tecla = LeerTeclado();
   777   000902  EC7B  F009         	call	_LeerTeclado	;wreg free
   778   000906  6E48               	movwf	_Tecla^0,c
   779                           
   780                           ;Lab4.c: 73: ColorRGB();
   781   000908  ECCD  F00A         	call	_ColorRGB	;wreg free
   782                           
   783                           ;Lab4.c: 74: if(Tecla=='C'){
   784   00090C  0E43               	movlw	67
   785   00090E  1848               	xorwf	_Tecla^0,w,c
   786   000910  A4D8               	btfss	status,2,c
   787   000912  D01B               	goto	l3552
   788                           
   789                           ;Lab4.c: 76: op = ' ';
   790   000914  0E20               	movlw	32
   791   000916  6E4F               	movwf	_op^0,c
   792                           
   793                           ;Lab4.c: 77: n1c = ' ';
   794   000918  0E20               	movlw	32
   795   00091A  6E4E               	movwf	_n1c^0,c
   796                           
   797                           ;Lab4.c: 78: n2c = ' ';
   798   00091C  0E20               	movlw	32
   799   00091E  6E4D               	movwf	_n2c^0,c
   800                           
   801                           ;Lab4.c: 79: n1 = 0;
   802   000920  0E00               	movlw	0
   803   000922  6E45               	movwf	(_n1+1)^0,c
   804   000924  0E00               	movlw	0
   805   000926  6E44               	movwf	_n1^0,c
   806                           
   807                           ;Lab4.c: 80: n2 = 0;
   808   000928  0E00               	movlw	0
   809   00092A  6E43               	movwf	(_n2+1)^0,c
   810   00092C  0E00               	movlw	0
   811   00092E  6E42               	movwf	_n2^0,c
   812                           
   813                           ;Lab4.c: 81: i = 0;
   814   000930  0E00               	movlw	0
   815   000932  6E41               	movwf	(_i+1)^0,c
   816   000934  0E00               	movlw	0
   817   000936  6E40               	movwf	_i^0,c
   818                           
   819                           ;Lab4.c: 82: partdecl = 0;
   820   000938  0E00               	movlw	0
   821   00093A  6E30               	movwf	_partdecl^0,c
   822   00093C  0E00               	movlw	0
   823   00093E  6E31               	movwf	(_partdecl+1)^0,c
   824   000940  0E00               	movlw	0
   825   000942  6E32               	movwf	(_partdecl+2)^0,c
   826   000944  0E00               	movlw	0
   827   000946  6E33               	movwf	(_partdecl+3)^0,c
   828   000948  D7D4               	goto	l3536
   829   00094A                     l3552:
   830   00094A  0E20               	movlw	32
   831   00094C  184F               	xorwf	_op^0,w,c
   832   00094E  A4D8               	btfss	status,2,c
   833   000950  D03D               	goto	l3588
   834   000952  0E2B               	movlw	43
   835   000954  1848               	xorwf	_Tecla^0,w,c
   836   000956  B4D8               	btfsc	status,2,c
   837   000958  D004               	goto	u4000
   838   00095A  0E5E               	movlw	94
   839   00095C  1848               	xorwf	_Tecla^0,w,c
   840   00095E  A4D8               	btfss	status,2,c
   841   000960  D035               	goto	l3588
   842   000962                     u4000:
   843   000962  0E20               	movlw	32
   844   000964  184E               	xorwf	_n1c^0,w,c
   845   000966  A4D8               	btfss	status,2,c
   846   000968  D031               	goto	l3588
   847   00096A  0E20               	movlw	32
   848   00096C  184D               	xorwf	_n2c^0,w,c
   849   00096E  A4D8               	btfss	status,2,c
   850   000970  D02D               	goto	l3588
   851                           
   852                           ;Lab4.c: 85: potencia=~potencia;
   853   000972  1E47               	comf	_potencia^0,f,c
   854                           
   855                           ;Lab4.c: 86: if(potencia){
   856   000974  5047               	movf	_potencia^0,w,c
   857   000976  B4D8               	btfsc	status,2,c
   858   000978  D01A               	goto	l3578
   859                           
   860                           ;Lab4.c: 87: DireccionaLCD(0x80);
   861   00097A  0E80               	movlw	128
   862   00097C  EC08  F00D         	call	_DireccionaLCD
   863                           
   864                           ;Lab4.c: 88: MensajeLCD_Var("Modo Potencia");
   865   000980  0E10               	movlw	low STR_3
   866   000982  6E13               	movwf	MensajeLCD_Var@a^0,c
   867   000984  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
   868                           
   869                           ;Lab4.c: 89: DireccionaLCD(0xC0);
   870   000988  0EC0               	movlw	192
   871   00098A  EC08  F00D         	call	_DireccionaLCD
   872                           
   873                           ;Lab4.c: 90: MensajeLCD_Var("Activado");
   874   00098E  0E30               	movlw	low (STR_11+4)
   875   000990  6E13               	movwf	MensajeLCD_Var@a^0,c
   876   000992  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
   877   000996                     l3572:
   878                           
   879                           ;Lab4.c: 91: _delay((unsigned long)((1000)*(1000000/4000.0)));
   880   000996  0E02               	movlw	2
   881   000998  6E25               	movwf	(??_main+1)^0,c
   882   00099A  0E45               	movlw	69
   883   00099C  6E24               	movwf	??_main^0,c
   884   00099E  0EAA               	movlw	170
   885   0009A0                     u4787:
   886   0009A0  2EE8               	decfsz	wreg,f,c
   887   0009A2  D7FE               	bra	u4787
   888   0009A4  2E24               	decfsz	??_main^0,f,c
   889   0009A6  D7FC               	bra	u4787
   890   0009A8  2E25               	decfsz	(??_main+1)^0,f,c
   891   0009AA  D7FA               	bra	u4787
   892   0009AC  D7A2               	goto	l3536
   893   0009AE                     l3578:
   894                           
   895                           ;Lab4.c: 95: DireccionaLCD(0x80);
   896   0009AE  0E80               	movlw	128
   897   0009B0  EC08  F00D         	call	_DireccionaLCD
   898                           
   899                           ;Lab4.c: 96: MensajeLCD_Var("Modo Suma");
   900   0009B4  0E50               	movlw	low STR_5
   901   0009B6  6E13               	movwf	MensajeLCD_Var@a^0,c
   902   0009B8  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
   903                           
   904                           ;Lab4.c: 97: DireccionaLCD(0xC0);
   905   0009BC  0EC0               	movlw	192
   906   0009BE  EC08  F00D         	call	_DireccionaLCD
   907                           
   908                           ;Lab4.c: 98: MensajeLCD_Var("Activado");
   909   0009C2  0E30               	movlw	low (STR_11+4)
   910   0009C4  6E13               	movwf	MensajeLCD_Var@a^0,c
   911   0009C6  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
   912   0009CA  D7E5               	goto	l3572
   913   0009CC                     l3588:
   914   0009CC  0E20               	movlw	32
   915   0009CE  184F               	xorwf	_op^0,w,c
   916   0009D0  A4D8               	btfss	status,2,c
   917   0009D2  D032               	goto	l3624
   918   0009D4  0E2D               	movlw	45
   919   0009D6  1848               	xorwf	_Tecla^0,w,c
   920   0009D8  B4D8               	btfsc	status,2,c
   921   0009DA  D004               	goto	u4060
   922   0009DC  0E21               	movlw	33
   923   0009DE  1848               	xorwf	_Tecla^0,w,c
   924   0009E0  A4D8               	btfss	status,2,c
   925   0009E2  D02A               	goto	l3624
   926   0009E4                     u4060:
   927   0009E4  0E20               	movlw	32
   928   0009E6  184E               	xorwf	_n1c^0,w,c
   929   0009E8  A4D8               	btfss	status,2,c
   930   0009EA  D026               	goto	l3624
   931   0009EC  0E20               	movlw	32
   932   0009EE  184D               	xorwf	_n2c^0,w,c
   933   0009F0  A4D8               	btfss	status,2,c
   934   0009F2  D022               	goto	l3624
   935                           
   936                           ;Lab4.c: 104: factorial=~factorial;
   937   0009F4  1E46               	comf	_factorial^0,f,c
   938                           
   939                           ;Lab4.c: 105: if(factorial){
   940   0009F6  5046               	movf	_factorial^0,w,c
   941   0009F8  B4D8               	btfsc	status,2,c
   942   0009FA  D00F               	goto	l3614
   943                           
   944                           ;Lab4.c: 106: DireccionaLCD(0x80);
   945   0009FC  0E80               	movlw	128
   946   0009FE  EC08  F00D         	call	_DireccionaLCD
   947                           
   948                           ;Lab4.c: 107: MensajeLCD_Var("Modo Factorial");
   949   000A02  0E01               	movlw	low STR_7
   950   000A04  6E13               	movwf	MensajeLCD_Var@a^0,c
   951   000A06  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
   952                           
   953                           ;Lab4.c: 108: DireccionaLCD(0xC0);
   954   000A0A  0EC0               	movlw	192
   955   000A0C  EC08  F00D         	call	_DireccionaLCD
   956                           
   957                           ;Lab4.c: 109: MensajeLCD_Var("Activado");
   958   000A10  0E30               	movlw	low (STR_11+4)
   959   000A12  6E13               	movwf	MensajeLCD_Var@a^0,c
   960   000A14  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
   961   000A18  D7BE               	goto	l3572
   962   000A1A                     l3614:
   963                           
   964                           ;Lab4.c: 114: DireccionaLCD(0x80);
   965   000A1A  0E80               	movlw	128
   966   000A1C  EC08  F00D         	call	_DireccionaLCD
   967                           
   968                           ;Lab4.c: 115: MensajeLCD_Var("Modo Resta");
   969   000A20  0E45               	movlw	low STR_9
   970   000A22  6E13               	movwf	MensajeLCD_Var@a^0,c
   971   000A24  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
   972                           
   973                           ;Lab4.c: 116: DireccionaLCD(0xC0);
   974   000A28  0EC0               	movlw	192
   975   000A2A  EC08  F00D         	call	_DireccionaLCD
   976                           
   977                           ;Lab4.c: 117: MensajeLCD_Var("Activado");
   978   000A2E  0E30               	movlw	low (STR_11+4)
   979   000A30  6E13               	movwf	MensajeLCD_Var@a^0,c
   980   000A32  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
   981   000A36  D7AF               	goto	l3572
   982   000A38                     l3624:
   983                           
   984                           ;Lab4.c: 123: if((n1c==' '|n2c==' '|op==' ') & !factorial){
   985   000A38  0E20               	movlw	32
   986   000A3A  184E               	xorwf	_n1c^0,w,c
   987   000A3C  B4D8               	btfsc	status,2,c
   988   000A3E  D008               	goto	u4120
   989   000A40  0E20               	movlw	32
   990   000A42  184D               	xorwf	_n2c^0,w,c
   991   000A44  B4D8               	btfsc	status,2,c
   992   000A46  D004               	goto	u4120
   993   000A48  0E20               	movlw	32
   994   000A4A  184F               	xorwf	_op^0,w,c
   995   000A4C  A4D8               	btfss	status,2,c
   996   000A4E  D092               	goto	l3700
   997   000A50                     u4120:
   998   000A50  5046               	movf	_factorial^0,w,c
   999   000A52  A4D8               	btfss	status,2,c
  1000   000A54  D08F               	goto	l3700
  1001                           
  1002                           ;Lab4.c: 124: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='^') & n1
      +                          c != ' ' & n2c ==' '){
  1003   000A56  0E20               	movlw	32
  1004   000A58  184F               	xorwf	_op^0,w,c
  1005   000A5A  A4D8               	btfss	status,2,c
  1006   000A5C  D025               	goto	l3652
  1007   000A5E  0E2B               	movlw	43
  1008   000A60  1848               	xorwf	_Tecla^0,w,c
  1009   000A62  B4D8               	btfsc	status,2,c
  1010   000A64  D010               	goto	u4190
  1011   000A66  0E2D               	movlw	45
  1012   000A68  1848               	xorwf	_Tecla^0,w,c
  1013   000A6A  B4D8               	btfsc	status,2,c
  1014   000A6C  D00C               	goto	u4190
  1015   000A6E  0E2F               	movlw	47
  1016   000A70  1848               	xorwf	_Tecla^0,w,c
  1017   000A72  B4D8               	btfsc	status,2,c
  1018   000A74  D008               	goto	u4190
  1019   000A76  0E78               	movlw	120
  1020   000A78  1848               	xorwf	_Tecla^0,w,c
  1021   000A7A  B4D8               	btfsc	status,2,c
  1022   000A7C  D004               	goto	u4190
  1023   000A7E  0E5E               	movlw	94
  1024   000A80  1848               	xorwf	_Tecla^0,w,c
  1025   000A82  A4D8               	btfss	status,2,c
  1026   000A84  D011               	goto	l3652
  1027   000A86                     u4190:
  1028   000A86  0E20               	movlw	32
  1029   000A88  184E               	xorwf	_n1c^0,w,c
  1030   000A8A  B4D8               	btfsc	status,2,c
  1031   000A8C  D00D               	goto	l3652
  1032   000A8E  0E20               	movlw	32
  1033   000A90  184D               	xorwf	_n2c^0,w,c
  1034   000A92  A4D8               	btfss	status,2,c
  1035   000A94  D009               	goto	l3652
  1036                           
  1037                           ;Lab4.c: 125: DireccionaLCD(0x81);
  1038   000A96  0E81               	movlw	129
  1039   000A98  EC08  F00D         	call	_DireccionaLCD
  1040                           
  1041                           ;Lab4.c: 126: EscribeLCD_c(Tecla);
  1042   000A9C  5048               	movf	_Tecla^0,w,c
  1043   000A9E  ECFD  F00C         	call	_EscribeLCD_c
  1044   000AA2                     l3650:
  1045                           
  1046                           ;Lab4.c: 127: op = Tecla;
  1047   000AA2  C048  F04F         	movff	_Tecla,_op
  1048                           
  1049                           ;Lab4.c: 128: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|Tecla!=
      +                          '='|Tecla!='C'|Tecla!='^')){
  1050   000AA6  D20F               	goto	l3848
  1051   000AA8                     l3652:
  1052   000AA8  0E20               	movlw	32
  1053   000AAA  184E               	xorwf	_n1c^0,w,c
  1054   000AAC  A4D8               	btfss	status,2,c
  1055   000AAE  D02B               	goto	l3674
  1056   000AB0  0E2B               	movlw	43
  1057   000AB2  1848               	xorwf	_Tecla^0,w,c
  1058   000AB4  A4D8               	btfss	status,2,c
  1059   000AB6  D018               	goto	u4290
  1060   000AB8  0E2D               	movlw	45
  1061   000ABA  1848               	xorwf	_Tecla^0,w,c
  1062   000ABC  A4D8               	btfss	status,2,c
  1063   000ABE  D014               	goto	u4290
  1064   000AC0  0E2F               	movlw	47
  1065   000AC2  1848               	xorwf	_Tecla^0,w,c
  1066   000AC4  A4D8               	btfss	status,2,c
  1067   000AC6  D010               	goto	u4290
  1068   000AC8  0E78               	movlw	120
  1069   000ACA  1848               	xorwf	_Tecla^0,w,c
  1070   000ACC  A4D8               	btfss	status,2,c
  1071   000ACE  D00C               	goto	u4290
  1072   000AD0  0E3D               	movlw	61
  1073   000AD2  1848               	xorwf	_Tecla^0,w,c
  1074   000AD4  A4D8               	btfss	status,2,c
  1075   000AD6  D008               	goto	u4290
  1076   000AD8  0E43               	movlw	67
  1077   000ADA  1848               	xorwf	_Tecla^0,w,c
  1078   000ADC  A4D8               	btfss	status,2,c
  1079   000ADE  D004               	goto	u4290
  1080   000AE0  0E5E               	movlw	94
  1081   000AE2  1848               	xorwf	_Tecla^0,w,c
  1082   000AE4  B4D8               	btfsc	status,2,c
  1083   000AE6  D00F               	goto	l3674
  1084   000AE8                     u4290:
  1085                           
  1086                           ;Lab4.c: 129: DireccionaLCD(0x80);
  1087   000AE8  0E80               	movlw	128
  1088   000AEA  EC08  F00D         	call	_DireccionaLCD
  1089                           
  1090                           ;Lab4.c: 130: EscribeLCD_c(Tecla);
  1091   000AEE  5048               	movf	_Tecla^0,w,c
  1092   000AF0  ECFD  F00C         	call	_EscribeLCD_c
  1093   000AF4                     l3670:
  1094                           
  1095                           ;Lab4.c: 131: n1c=Tecla;
  1096   000AF4  C048  F04E         	movff	_Tecla,_n1c
  1097                           
  1098                           ;Lab4.c: 132: n1 = Tecla-'0';
  1099   000AF8  0ED0               	movlw	208
  1100   000AFA  2448               	addwf	_Tecla^0,w,c
  1101   000AFC  6E44               	movwf	_n1^0,c
  1102   000AFE  6A45               	clrf	(_n1+1)^0,c
  1103   000B00  0EFF               	movlw	255
  1104   000B02  2245               	addwfc	(_n1+1)^0,f,c
  1105                           
  1106                           ;Lab4.c: 133: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='
      +                          /'|Tecla!='x'|Tecla!='='|Tecla!='C'|Tecla!='^')){
  1107   000B04  D1E0               	goto	l3848
  1108   000B06                     l3674:
  1109   000B06  0E20               	movlw	32
  1110   000B08  184D               	xorwf	_n2c^0,w,c
  1111   000B0A  A4D8               	btfss	status,2,c
  1112   000B0C  D1DC               	goto	l3848
  1113   000B0E  0E20               	movlw	32
  1114   000B10  184F               	xorwf	_op^0,w,c
  1115   000B12  B4D8               	btfsc	status,2,c
  1116   000B14  D1D8               	goto	l3848
  1117   000B16  0E20               	movlw	32
  1118   000B18  184E               	xorwf	_n1c^0,w,c
  1119   000B1A  B4D8               	btfsc	status,2,c
  1120   000B1C  D1D4               	goto	l3848
  1121   000B1E  0E2B               	movlw	43
  1122   000B20  1848               	xorwf	_Tecla^0,w,c
  1123   000B22  A4D8               	btfss	status,2,c
  1124   000B24  D018               	goto	u4390
  1125   000B26  0E2D               	movlw	45
  1126   000B28  1848               	xorwf	_Tecla^0,w,c
  1127   000B2A  A4D8               	btfss	status,2,c
  1128   000B2C  D014               	goto	u4390
  1129   000B2E  0E2F               	movlw	47
  1130   000B30  1848               	xorwf	_Tecla^0,w,c
  1131   000B32  A4D8               	btfss	status,2,c
  1132   000B34  D010               	goto	u4390
  1133   000B36  0E78               	movlw	120
  1134   000B38  1848               	xorwf	_Tecla^0,w,c
  1135   000B3A  A4D8               	btfss	status,2,c
  1136   000B3C  D00C               	goto	u4390
  1137   000B3E  0E3D               	movlw	61
  1138   000B40  1848               	xorwf	_Tecla^0,w,c
  1139   000B42  A4D8               	btfss	status,2,c
  1140   000B44  D008               	goto	u4390
  1141   000B46  0E43               	movlw	67
  1142   000B48  1848               	xorwf	_Tecla^0,w,c
  1143   000B4A  A4D8               	btfss	status,2,c
  1144   000B4C  D004               	goto	u4390
  1145   000B4E  0E5E               	movlw	94
  1146   000B50  1848               	xorwf	_Tecla^0,w,c
  1147   000B52  B4D8               	btfsc	status,2,c
  1148   000B54  D1B8               	goto	l3848
  1149   000B56                     u4390:
  1150                           
  1151                           ;Lab4.c: 134: DireccionaLCD(0x82);
  1152   000B56  0E82               	movlw	130
  1153   000B58  EC08  F00D         	call	_DireccionaLCD
  1154                           
  1155                           ;Lab4.c: 135: EscribeLCD_c(Tecla);
  1156   000B5C  5048               	movf	_Tecla^0,w,c
  1157   000B5E  ECFD  F00C         	call	_EscribeLCD_c
  1158                           
  1159                           ;Lab4.c: 136: n2c=Tecla;
  1160   000B62  C048  F04D         	movff	_Tecla,_n2c
  1161                           
  1162                           ;Lab4.c: 137: n2 = Tecla-'0';
  1163   000B66  0ED0               	movlw	208
  1164   000B68  2448               	addwf	_Tecla^0,w,c
  1165   000B6A  6E42               	movwf	_n2^0,c
  1166   000B6C  6A43               	clrf	(_n2+1)^0,c
  1167   000B6E  0EFF               	movlw	255
  1168   000B70  2243               	addwfc	(_n2+1)^0,f,c
  1169                           
  1170                           ;Lab4.c: 138: };Lab4.c: 139: }else if ((n1c==' '|op==' ') & factorial){
  1171   000B72  D1A9               	goto	l3848
  1172   000B74                     l3700:
  1173   000B74  0E01               	movlw	1
  1174   000B76  6E26               	movwf	_main$157^0,c
  1175   000B78  0E20               	movlw	32
  1176   000B7A  184E               	xorwf	_n1c^0,w,c
  1177   000B7C  B4D8               	btfsc	status,2,c
  1178   000B7E  D006               	goto	l3708
  1179   000B80  0E20               	movlw	32
  1180   000B82  184F               	xorwf	_op^0,w,c
  1181   000B84  B4D8               	btfsc	status,2,c
  1182   000B86  D002               	goto	l3708
  1183   000B88  0E00               	movlw	0
  1184   000B8A  6E26               	movwf	_main$157^0,c
  1185   000B8C                     l3708:
  1186   000B8C  5026               	movf	_main$157^0,w,c
  1187   000B8E  1446               	andwf	_factorial^0,w,c
  1188   000B90  0900               	iorlw	0
  1189   000B92  B4D8               	btfsc	status,2,c
  1190   000B94  D056               	goto	l3756
  1191                           
  1192                           ;Lab4.c: 140: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='^'|Tecla
      +                          =='!') & n1c != ' ' & n2c ==' '){
  1193   000B96  0E20               	movlw	32
  1194   000B98  184F               	xorwf	_op^0,w,c
  1195   000B9A  A4D8               	btfss	status,2,c
  1196   000B9C  D027               	goto	l3732
  1197   000B9E  0E2B               	movlw	43
  1198   000BA0  1848               	xorwf	_Tecla^0,w,c
  1199   000BA2  B4D8               	btfsc	status,2,c
  1200   000BA4  D014               	goto	u4490
  1201   000BA6  0E2D               	movlw	45
  1202   000BA8  1848               	xorwf	_Tecla^0,w,c
  1203   000BAA  B4D8               	btfsc	status,2,c
  1204   000BAC  D010               	goto	u4490
  1205   000BAE  0E2F               	movlw	47
  1206   000BB0  1848               	xorwf	_Tecla^0,w,c
  1207   000BB2  B4D8               	btfsc	status,2,c
  1208   000BB4  D00C               	goto	u4490
  1209   000BB6  0E78               	movlw	120
  1210   000BB8  1848               	xorwf	_Tecla^0,w,c
  1211   000BBA  B4D8               	btfsc	status,2,c
  1212   000BBC  D008               	goto	u4490
  1213   000BBE  0E5E               	movlw	94
  1214   000BC0  1848               	xorwf	_Tecla^0,w,c
  1215   000BC2  B4D8               	btfsc	status,2,c
  1216   000BC4  D004               	goto	u4490
  1217   000BC6  0E21               	movlw	33
  1218   000BC8  1848               	xorwf	_Tecla^0,w,c
  1219   000BCA  A4D8               	btfss	status,2,c
  1220   000BCC  D00F               	goto	l3732
  1221   000BCE                     u4490:
  1222   000BCE  0E20               	movlw	32
  1223   000BD0  184E               	xorwf	_n1c^0,w,c
  1224   000BD2  B4D8               	btfsc	status,2,c
  1225   000BD4  D00B               	goto	l3732
  1226   000BD6  0E20               	movlw	32
  1227   000BD8  184D               	xorwf	_n2c^0,w,c
  1228   000BDA  A4D8               	btfss	status,2,c
  1229   000BDC  D007               	goto	l3732
  1230                           
  1231                           ;Lab4.c: 141: DireccionaLCD(0x81);
  1232   000BDE  0E81               	movlw	129
  1233   000BE0  EC08  F00D         	call	_DireccionaLCD
  1234                           
  1235                           ;Lab4.c: 142: EscribeLCD_c(Tecla);
  1236   000BE4  5048               	movf	_Tecla^0,w,c
  1237   000BE6  ECFD  F00C         	call	_EscribeLCD_c
  1238   000BEA  D75B               	goto	l3650
  1239   000BEC                     l3732:
  1240   000BEC  0E20               	movlw	32
  1241   000BEE  184E               	xorwf	_n1c^0,w,c
  1242   000BF0  A4D8               	btfss	status,2,c
  1243   000BF2  D169               	goto	l3848
  1244   000BF4  0E2B               	movlw	43
  1245   000BF6  1848               	xorwf	_Tecla^0,w,c
  1246   000BF8  A4D8               	btfss	status,2,c
  1247   000BFA  D01C               	goto	u4600
  1248   000BFC  0E2D               	movlw	45
  1249   000BFE  1848               	xorwf	_Tecla^0,w,c
  1250   000C00  A4D8               	btfss	status,2,c
  1251   000C02  D018               	goto	u4600
  1252   000C04  0E2F               	movlw	47
  1253   000C06  1848               	xorwf	_Tecla^0,w,c
  1254   000C08  A4D8               	btfss	status,2,c
  1255   000C0A  D014               	goto	u4600
  1256   000C0C  0E78               	movlw	120
  1257   000C0E  1848               	xorwf	_Tecla^0,w,c
  1258   000C10  A4D8               	btfss	status,2,c
  1259   000C12  D010               	goto	u4600
  1260   000C14  0E3D               	movlw	61
  1261   000C16  1848               	xorwf	_Tecla^0,w,c
  1262   000C18  A4D8               	btfss	status,2,c
  1263   000C1A  D00C               	goto	u4600
  1264   000C1C  0E43               	movlw	67
  1265   000C1E  1848               	xorwf	_Tecla^0,w,c
  1266   000C20  A4D8               	btfss	status,2,c
  1267   000C22  D008               	goto	u4600
  1268   000C24  0E5E               	movlw	94
  1269   000C26  1848               	xorwf	_Tecla^0,w,c
  1270   000C28  A4D8               	btfss	status,2,c
  1271   000C2A  D004               	goto	u4600
  1272   000C2C  0E21               	movlw	33
  1273   000C2E  1848               	xorwf	_Tecla^0,w,c
  1274   000C30  B4D8               	btfsc	status,2,c
  1275   000C32  D149               	goto	l3848
  1276   000C34                     u4600:
  1277                           
  1278                           ;Lab4.c: 145: DireccionaLCD(0x80);
  1279   000C34  0E80               	movlw	128
  1280   000C36  EC08  F00D         	call	_DireccionaLCD
  1281                           
  1282                           ;Lab4.c: 146: EscribeLCD_c(Tecla);
  1283   000C3A  5048               	movf	_Tecla^0,w,c
  1284   000C3C  ECFD  F00C         	call	_EscribeLCD_c
  1285   000C40  D759               	goto	l3670
  1286   000C42                     l3756:
  1287   000C42  0E3D               	movlw	61
  1288   000C44  1848               	xorwf	_Tecla^0,w,c
  1289   000C46  A4D8               	btfss	status,2,c
  1290   000C48  D0F4               	goto	l3824
  1291   000C4A  0E20               	movlw	32
  1292   000C4C  184D               	xorwf	_n2c^0,w,c
  1293   000C4E  B4D8               	btfsc	status,2,c
  1294   000C50  D0F0               	goto	l3824
  1295   000C52  0E20               	movlw	32
  1296   000C54  184F               	xorwf	_op^0,w,c
  1297   000C56  B4D8               	btfsc	status,2,c
  1298   000C58  D0EC               	goto	l3824
  1299   000C5A  0E20               	movlw	32
  1300   000C5C  184E               	xorwf	_n1c^0,w,c
  1301   000C5E  B4D8               	btfsc	status,2,c
  1302   000C60  D0E8               	goto	l3824
  1303   000C62  5046               	movf	_factorial^0,w,c
  1304   000C64  A4D8               	btfss	status,2,c
  1305   000C66  D0E5               	goto	l3824
  1306                           
  1307                           ;Lab4.c: 151: DireccionaLCD(0x83);
  1308   000C68  0E83               	movlw	131
  1309   000C6A  EC08  F00D         	call	_DireccionaLCD
  1310                           
  1311                           ;Lab4.c: 152: EscribeLCD_c('=');
  1312   000C6E  0E3D               	movlw	61
  1313   000C70  ECFD  F00C         	call	_EscribeLCD_c
  1314                           
  1315                           ;Lab4.c: 153: switch(op){
  1316   000C74  D0BF               	goto	l3818
  1317   000C76                     l3768:
  1318                           
  1319                           ;Lab4.c: 155: r = n1 + n2;
  1320   000C76  5042               	movf	_n2^0,w,c
  1321   000C78  2444               	addwf	_n1^0,w,c
  1322   000C7A  6E24               	movwf	??_main^0,c
  1323   000C7C  5043               	movf	(_n2+1)^0,w,c
  1324   000C7E  2045               	addwfc	(_n1+1)^0,w,c
  1325   000C80  6E25               	movwf	(??_main+1)^0,c
  1326   000C82  C024  F02C         	movff	??_main,_r
  1327   000C86  C025  F02D         	movff	??_main+1,_r+1
  1328   000C8A  6A2E               	clrf	(_r+2)^0,c
  1329   000C8C  6A2F               	clrf	(_r+3)^0,c
  1330   000C8E                     l3770:
  1331                           
  1332                           ;Lab4.c: 156: partdecl = r*100;
  1333   000C8E  C02C  F00E         	movff	_r,___lmul@multiplier
  1334   000C92  C02D  F00F         	movff	_r+1,___lmul@multiplier+1
  1335   000C96  C02E  F010         	movff	_r+2,___lmul@multiplier+2
  1336   000C9A  C02F  F011         	movff	_r+3,___lmul@multiplier+3
  1337   000C9E  0E64               	movlw	100
  1338   000CA0  6E12               	movwf	___lmul@multiplicand^0,c
  1339   000CA2  0E00               	movlw	0
  1340   000CA4  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1341   000CA6  0E00               	movlw	0
  1342   000CA8  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1343   000CAA  0E00               	movlw	0
  1344   000CAC  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1345   000CAE  EC36  F00B         	call	___lmul	;wreg free
  1346   000CB2  C00E  F030         	movff	?___lmul,_partdecl
  1347   000CB6  C00F  F031         	movff	?___lmul+1,_partdecl+1
  1348   000CBA  C010  F032         	movff	?___lmul+2,_partdecl+2
  1349   000CBE  C011  F033         	movff	?___lmul+3,_partdecl+3
  1350                           
  1351                           ;Lab4.c: 157: break;
  1352   000CC2  D0A9               	goto	l3820
  1353   000CC4                     l3772:
  1354                           
  1355                           ;Lab4.c: 159: r = n1 - n2;
  1356   000CC4  5042               	movf	_n2^0,w,c
  1357   000CC6  5C44               	subwf	_n1^0,w,c
  1358   000CC8  6E24               	movwf	??_main^0,c
  1359   000CCA  5043               	movf	(_n2+1)^0,w,c
  1360   000CCC  5845               	subwfb	(_n1+1)^0,w,c
  1361   000CCE  D7D8               	goto	L1
  1362   000CD0                     l3776:
  1363                           
  1364                           ;Lab4.c: 163: r = n1*n2;
  1365   000CD0  C044  F00E         	movff	_n1,___wmul@multiplier
  1366   000CD4  C045  F00F         	movff	_n1+1,___wmul@multiplier+1
  1367   000CD8  C042  F010         	movff	_n2,___wmul@multiplicand
  1368   000CDC  C043  F011         	movff	_n2+1,___wmul@multiplicand+1
  1369   000CE0  ECDE  F00C         	call	___wmul	;wreg free
  1370   000CE4  C00E  F02C         	movff	?___wmul,_r
  1371   000CE8  C00F  F02D         	movff	?___wmul+1,_r+1
  1372   000CEC  D7CE               	goto	L2
  1373   000CEE                     l3780:
  1374                           
  1375                           ;Lab4.c: 167: if(n2!=0){
  1376   000CEE  5042               	movf	_n2^0,w,c
  1377   000CF0  1043               	iorwf	(_n2+1)^0,w,c
  1378   000CF2  B4D8               	btfsc	status,2,c
  1379   000CF4  D02F               	goto	l3788
  1380                           
  1381                           ;Lab4.c: 168: if(n1!=0){
  1382   000CF6  5044               	movf	_n1^0,w,c
  1383   000CF8  1045               	iorwf	(_n1+1)^0,w,c
  1384   000CFA  B4D8               	btfsc	status,2,c
  1385   000CFC  D08C               	goto	l3820
  1386                           
  1387                           ;Lab4.c: 169: r = n1/n2;
  1388   000CFE  C044  F014         	movff	_n1,___lwdiv@dividend
  1389   000D02  C045  F015         	movff	_n1+1,___lwdiv@dividend+1
  1390   000D06  C042  F016         	movff	_n2,___lwdiv@divisor
  1391   000D0A  C043  F017         	movff	_n2+1,___lwdiv@divisor+1
  1392   000D0E  ECB7  F00B         	call	___lwdiv	;wreg free
  1393   000D12  C014  F02C         	movff	?___lwdiv,_r
  1394   000D16  C015  F02D         	movff	?___lwdiv+1,_r+1
  1395   000D1A  6A2E               	clrf	(_r+2)^0,c
  1396   000D1C  6A2F               	clrf	(_r+3)^0,c
  1397                           
  1398                           ;Lab4.c: 170: partdecl = (n1*100)/n2;
  1399   000D1E  C044  F00E         	movff	_n1,___wmul@multiplier
  1400   000D22  C045  F00F         	movff	_n1+1,___wmul@multiplier+1
  1401   000D26  0E00               	movlw	0
  1402   000D28  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1403   000D2A  0E64               	movlw	100
  1404   000D2C  6E10               	movwf	___wmul@multiplicand^0,c
  1405   000D2E  ECDE  F00C         	call	___wmul	;wreg free
  1406   000D32  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1407   000D36  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1408   000D3A  C042  F016         	movff	_n2,___lwdiv@divisor
  1409   000D3E  C043  F017         	movff	_n2+1,___lwdiv@divisor+1
  1410   000D42  ECB7  F00B         	call	___lwdiv	;wreg free
  1411   000D46  C014  F030         	movff	?___lwdiv,_partdecl
  1412   000D4A  C015  F031         	movff	?___lwdiv+1,_partdecl+1
  1413   000D4E  6A32               	clrf	(_partdecl+2)^0,c
  1414   000D50  6A33               	clrf	(_partdecl+3)^0,c
  1415   000D52  D061               	goto	l3820
  1416   000D54                     l3788:
  1417                           
  1418                           ;Lab4.c: 173: if(n1 != 0 & n2 == 0) r = 1000;
  1419   000D54  5044               	movf	_n1^0,w,c
  1420   000D56  1045               	iorwf	(_n1+1)^0,w,c
  1421   000D58  B4D8               	btfsc	status,2,c
  1422   000D5A  D006               	goto	l3794
  1423   000D5C  5042               	movf	_n2^0,w,c
  1424   000D5E  1043               	iorwf	(_n2+1)^0,w,c
  1425   000D60  A4D8               	btfss	status,2,c
  1426   000D62  D002               	goto	l3794
  1427   000D64  0EE8               	movlw	232
  1428   000D66  D009               	goto	L3
  1429   000D68                     l3794:
  1430                           
  1431                           ;Lab4.c: 174: else if(n1 == 0 & n2 == 0) r = 1001;
  1432   000D68  5044               	movf	_n1^0,w,c
  1433   000D6A  1045               	iorwf	(_n1+1)^0,w,c
  1434   000D6C  A4D8               	btfss	status,2,c
  1435   000D6E  D78F               	goto	l3770
  1436   000D70  5042               	movf	_n2^0,w,c
  1437   000D72  1043               	iorwf	(_n2+1)^0,w,c
  1438   000D74  A4D8               	btfss	status,2,c
  1439   000D76  D78B               	goto	l3770
  1440   000D78  0EE9               	movlw	233
  1441   000D7A                     L3:
  1442   000D7A  6E2C               	movwf	_r^0,c
  1443   000D7C  0E03               	movlw	3
  1444   000D7E  6E2D               	movwf	(_r+1)^0,c
  1445   000D80  0E00               	movlw	0
  1446   000D82  6E2E               	movwf	(_r+2)^0,c
  1447   000D84  0E00               	movlw	0
  1448   000D86  6E2F               	movwf	(_r+3)^0,c
  1449   000D88  D782               	goto	l3770
  1450   000D8A                     l3802:
  1451                           
  1452                           ;Lab4.c: 179: r=n1;
  1453   000D8A  C044  F02C         	movff	_n1,_r
  1454   000D8E  C045  F02D         	movff	_n1+1,_r+1
  1455   000D92  6A2E               	clrf	(_r+2)^0,c
  1456   000D94  6A2F               	clrf	(_r+3)^0,c
  1457                           
  1458                           ;Lab4.c: 180: for(i=1;i<n2;i++){
  1459   000D96  0E00               	movlw	0
  1460   000D98  6E41               	movwf	(_i+1)^0,c
  1461   000D9A  0E01               	movlw	1
  1462   000D9C  6E40               	movwf	_i^0,c
  1463   000D9E  D01A               	goto	l3810
  1464   000DA0                     l3806:
  1465                           
  1466                           ;Lab4.c: 181: r=r*n1;
  1467   000DA0  C044  F00E         	movff	_n1,___lmul@multiplier
  1468   000DA4  C045  F00F         	movff	_n1+1,___lmul@multiplier+1
  1469   000DA8  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1470   000DAA  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1471   000DAC  C02C  F012         	movff	_r,___lmul@multiplicand
  1472   000DB0  C02D  F013         	movff	_r+1,___lmul@multiplicand+1
  1473   000DB4  C02E  F014         	movff	_r+2,___lmul@multiplicand+2
  1474   000DB8  C02F  F015         	movff	_r+3,___lmul@multiplicand+3
  1475   000DBC  EC36  F00B         	call	___lmul	;wreg free
  1476   000DC0  C00E  F02C         	movff	?___lmul,_r
  1477   000DC4  C00F  F02D         	movff	?___lmul+1,_r+1
  1478   000DC8  C010  F02E         	movff	?___lmul+2,_r+2
  1479   000DCC  C011  F02F         	movff	?___lmul+3,_r+3
  1480   000DD0  4A40               	infsnz	_i^0,f,c
  1481   000DD2  2A41               	incf	(_i+1)^0,f,c
  1482   000DD4                     l3810:
  1483   000DD4  5042               	movf	_n2^0,w,c
  1484   000DD6  5C40               	subwf	_i^0,w,c
  1485   000DD8  5043               	movf	(_n2+1)^0,w,c
  1486   000DDA  5841               	subwfb	(_i+1)^0,w,c
  1487   000DDC  B0D8               	btfsc	status,0,c
  1488   000DDE  D757               	goto	l3770
  1489   000DE0  D7DF               	goto	l3806
  1490   000DE2                     l3814:
  1491                           
  1492                           ;Lab4.c: 186: r = 0;
  1493   000DE2  0E00               	movlw	0
  1494   000DE4  6E2C               	movwf	_r^0,c
  1495   000DE6  0E00               	movlw	0
  1496   000DE8  6E2D               	movwf	(_r+1)^0,c
  1497   000DEA  0E00               	movlw	0
  1498   000DEC  6E2E               	movwf	(_r+2)^0,c
  1499   000DEE  0E00               	movlw	0
  1500   000DF0  6E2F               	movwf	(_r+3)^0,c
  1501                           
  1502                           ;Lab4.c: 187: break;
  1503   000DF2  D011               	goto	l3820
  1504   000DF4                     l3818:
  1505   000DF4  504F               	movf	_op^0,w,c
  1506                           
  1507                           ; Switch size 1, requested type "simple"
  1508                           ; Number of cases is 5, Range of values is 43 to 120
  1509                           ; switch strategies available:
  1510                           ; Name         Instructions Cycles
  1511                           ; simple_byte           16     9 (average)
  1512                           ;	Chosen strategy is simple_byte
  1513   000DF6  0A2B               	xorlw	43	; case 43
  1514   000DF8  B4D8               	btfsc	status,2,c
  1515   000DFA  D73D               	goto	l3768
  1516   000DFC  0A06               	xorlw	6	; case 45
  1517   000DFE  B4D8               	btfsc	status,2,c
  1518   000E00  D761               	goto	l3772
  1519   000E02  0A02               	xorlw	2	; case 47
  1520   000E04  B4D8               	btfsc	status,2,c
  1521   000E06  D773               	goto	l3780
  1522   000E08  0A71               	xorlw	113	; case 94
  1523   000E0A  B4D8               	btfsc	status,2,c
  1524   000E0C  D7BE               	goto	l3802
  1525   000E0E  0A26               	xorlw	38	; case 120
  1526   000E10  B4D8               	btfsc	status,2,c
  1527   000E12  D75E               	goto	l3776
  1528   000E14  D7E6               	goto	l3814
  1529   000E16                     l3820:
  1530                           
  1531                           ;Lab4.c: 189: DireccionaLCD(0x84);
  1532   000E16  0E84               	movlw	132
  1533   000E18  EC08  F00D         	call	_DireccionaLCD
  1534   000E1C                     l3822:
  1535                           
  1536                           ;Lab4.c: 190: Imprimir_Resultado(r);
  1537   000E1C  C02C  F01C         	movff	_r,Imprimir_Resultado@r
  1538   000E20  C02D  F01D         	movff	_r+1,Imprimir_Resultado@r+1
  1539   000E24  C02E  F01E         	movff	_r+2,Imprimir_Resultado@r+2
  1540   000E28  C02F  F01F         	movff	_r+3,Imprimir_Resultado@r+3
  1541   000E2C  EC6C  F007         	call	_Imprimir_Resultado	;wreg free
  1542                           
  1543                           ;Lab4.c: 191: }else if((Tecla=='=' & op=='!' & n1c != ' ') & factorial) {
  1544   000E30  D04A               	goto	l3848
  1545   000E32                     l3824:
  1546   000E32  0E00               	movlw	0
  1547   000E34  6E27               	movwf	_main$158^0,c
  1548   000E36  0E3D               	movlw	61
  1549   000E38  1848               	xorwf	_Tecla^0,w,c
  1550   000E3A  A4D8               	btfss	status,2,c
  1551   000E3C  D00A               	goto	l3834
  1552   000E3E  0E21               	movlw	33
  1553   000E40  184F               	xorwf	_op^0,w,c
  1554   000E42  A4D8               	btfss	status,2,c
  1555   000E44  D006               	goto	l3834
  1556   000E46  0E20               	movlw	32
  1557   000E48  184E               	xorwf	_n1c^0,w,c
  1558   000E4A  B4D8               	btfsc	status,2,c
  1559   000E4C  D002               	goto	l3834
  1560   000E4E  0E01               	movlw	1
  1561   000E50  6E27               	movwf	_main$158^0,c
  1562   000E52                     l3834:
  1563   000E52  5027               	movf	_main$158^0,w,c
  1564   000E54  1446               	andwf	_factorial^0,w,c
  1565   000E56  0900               	iorlw	0
  1566   000E58  B4D8               	btfsc	status,2,c
  1567   000E5A  D032               	goto	l3846
  1568                           
  1569                           ;Lab4.c: 192: DireccionaLCD(0x82);
  1570   000E5C  0E82               	movlw	130
  1571   000E5E  EC08  F00D         	call	_DireccionaLCD
  1572                           
  1573                           ;Lab4.c: 193: EscribeLCD_c('=');
  1574   000E62  0E3D               	movlw	61
  1575   000E64  ECFD  F00C         	call	_EscribeLCD_c
  1576                           
  1577                           ;Lab4.c: 194: r=factorial_function(n1);
  1578   000E68  C044  F014         	movff	_n1,factorial_function@a
  1579   000E6C  C045  F015         	movff	_n1+1,factorial_function@a+1
  1580   000E70  EC0A  F00B         	call	_factorial_function	;wreg free
  1581   000E74  C014  F02C         	movff	?_factorial_function,_r
  1582   000E78  C015  F02D         	movff	?_factorial_function+1,_r+1
  1583   000E7C  C016  F02E         	movff	?_factorial_function+2,_r+2
  1584   000E80  C017  F02F         	movff	?_factorial_function+3,_r+3
  1585                           
  1586                           ;Lab4.c: 195: partdecl = r*100;
  1587   000E84  C02C  F00E         	movff	_r,___lmul@multiplier
  1588   000E88  C02D  F00F         	movff	_r+1,___lmul@multiplier+1
  1589   000E8C  C02E  F010         	movff	_r+2,___lmul@multiplier+2
  1590   000E90  C02F  F011         	movff	_r+3,___lmul@multiplier+3
  1591   000E94  0E64               	movlw	100
  1592   000E96  6E12               	movwf	___lmul@multiplicand^0,c
  1593   000E98  0E00               	movlw	0
  1594   000E9A  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1595   000E9C  0E00               	movlw	0
  1596   000E9E  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1597   000EA0  0E00               	movlw	0
  1598   000EA2  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1599   000EA4  EC36  F00B         	call	___lmul	;wreg free
  1600   000EA8  C00E  F030         	movff	?___lmul,_partdecl
  1601   000EAC  C00F  F031         	movff	?___lmul+1,_partdecl+1
  1602   000EB0  C010  F032         	movff	?___lmul+2,_partdecl+2
  1603   000EB4  C011  F033         	movff	?___lmul+3,_partdecl+3
  1604                           
  1605                           ;Lab4.c: 196: DireccionaLCD(0x83);
  1606   000EB8  0E83               	movlw	131
  1607   000EBA  EC08  F00D         	call	_DireccionaLCD
  1608   000EBE  D7AE               	goto	l3822
  1609   000EC0                     l3846:
  1610                           
  1611                           ;Lab4.c: 199: EscribeLCD_c('W');
  1612   000EC0  0E57               	movlw	87
  1613   000EC2  ECFD  F00C         	call	_EscribeLCD_c
  1614   000EC6                     l3848:
  1615                           
  1616                           ;Lab4.c: 200: };Lab4.c: 201: _delay((unsigned long)((700)*(1000000/4000.0)));
  1617   000EC6  0EE4               	movlw	228
  1618   000EC8  6E24               	movwf	??_main^0,c
  1619   000ECA  0E44               	movlw	68
  1620   000ECC                     u4797:
  1621   000ECC  2EE8               	decfsz	wreg,f,c
  1622   000ECE  D7FE               	bra	u4797
  1623   000ED0  2E24               	decfsz	??_main^0,f,c
  1624   000ED2  D7FC               	bra	u4797
  1625   000ED4  D000               	nop2	
  1626   000ED6  D50F               	goto	l3538
  1627   000ED8                     __end_of_main:
  1628                           	callstack 0
  1629                           
  1630 ;; *************** function _factorial_function *****************
  1631 ;; Defined at:
  1632 ;;		line 278 in file "Lab4.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  a               2   19[COMRAM] int 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  fact            2   23[COMRAM] int 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  4   19[COMRAM] unsigned long 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1646 ;;      Params:         4       0       0       0       0       0       0       0       0
  1647 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1649 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1650 ;;Total ram usage:        6 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 6
  1653 ;; This function calls:
  1654 ;;		___wmul
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text1
  1661   001614                     __ptext1:
  1662                           	callstack 0
  1663   001614                     _factorial_function:
  1664                           	callstack 24
  1665                           
  1666                           ;Lab4.c: 279: int fact = 1;
  1667                           
  1668                           ;incstack = 0
  1669   001614  0E00               	movlw	0
  1670   001616  6E19               	movwf	(factorial_function@fact+1)^0,c
  1671   001618  0E01               	movlw	1
  1672   00161A  6E18               	movwf	factorial_function@fact^0,c
  1673                           
  1674                           ;Lab4.c: 280: for (b = a; b > 1; b--){
  1675   00161C  C014  F034         	movff	factorial_function@a,_b
  1676   001620  C015  F035         	movff	factorial_function@a+1,_b+1
  1677   001624  D011               	goto	l3498
  1678   001626                     l3494:
  1679                           
  1680                           ;Lab4.c: 281: fact = fact * b;
  1681   001626  C018  F00E         	movff	factorial_function@fact,___wmul@multiplier
  1682   00162A  C019  F00F         	movff	factorial_function@fact+1,___wmul@multiplier+1
  1683   00162E  C034  F010         	movff	_b,___wmul@multiplicand
  1684   001632  C035  F011         	movff	_b+1,___wmul@multiplicand+1
  1685   001636  ECDE  F00C         	call	___wmul	;wreg free
  1686   00163A  C00E  F018         	movff	?___wmul,factorial_function@fact
  1687   00163E  C00F  F019         	movff	?___wmul+1,factorial_function@fact+1
  1688   001642  0634               	decf	_b^0,f,c
  1689   001644  A0D8               	btfss	status,0,c
  1690   001646  0635               	decf	(_b+1)^0,f,c
  1691   001648                     l3498:
  1692   001648  BE35               	btfsc	(_b+1)^0,7,c
  1693   00164A  D006               	goto	u3930
  1694   00164C  5035               	movf	(_b+1)^0,w,c
  1695   00164E  E1EB               	bnz	l3494
  1696   001650  0E02               	movlw	2
  1697   001652  5C34               	subwf	_b^0,w,c
  1698   001654  B0D8               	btfsc	status,0,c
  1699   001656  D7E7               	goto	l3494
  1700   001658                     u3930:
  1701                           
  1702                           ;Lab4.c: 282: };Lab4.c: 283: return fact;
  1703   001658  C018  F014         	movff	factorial_function@fact,?_factorial_function
  1704   00165C  C019  F015         	movff	factorial_function@fact+1,?_factorial_function+1
  1705   001660  0E00               	movlw	0
  1706   001662  BE15               	btfsc	(?_factorial_function+1)^0,7,c
  1707   001664  0EFF               	movlw	-1
  1708   001666  6E16               	movwf	(?_factorial_function+2)^0,c
  1709   001668  6E17               	movwf	(?_factorial_function+3)^0,c
  1710   00166A  0012               	return		;funcret
  1711   00166C                     __end_of_factorial_function:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _LeerTeclado *****************
  1715 ;; Defined at:
  1716 ;;		line 207 in file "Lab4.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      unsigned char 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 5
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text2
  1745   0012F6                     __ptext2:
  1746                           	callstack 0
  1747   0012F6                     _LeerTeclado:
  1748                           	callstack 25
  1749                           
  1750                           ;Lab4.c: 208: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1751                           
  1752                           ;incstack = 0
  1753   0012F6  B881               	btfsc	3969,4,c	;volatile
  1754   0012F8  AA81               	btfss	3969,5,c	;volatile
  1755   0012FA  D004               	goto	u2100
  1756   0012FC  AC81               	btfss	3969,6,c	;volatile
  1757   0012FE  D002               	goto	u2100
  1758   001300  BE81               	btfsc	3969,7,c	;volatile
  1759   001302  D7F9               	goto	__ptext2
  1760   001304                     u2100:
  1761                           
  1762                           ;Lab4.c: 209: verificador = 1;
  1763   001304  0E00               	movlw	0
  1764   001306  6E39               	movwf	(_verificador+1)^0,c
  1765   001308  0E01               	movlw	1
  1766   00130A  6E38               	movwf	_verificador^0,c
  1767                           
  1768                           ;Lab4.c: 210: LATB=0b11111110;
  1769   00130C  0EFE               	movlw	254
  1770   00130E  6E8A               	movwf	138,c	;volatile
  1771                           
  1772                           ;Lab4.c: 211: if(RB4==0){
  1773   001310  B881               	btfsc	3969,4,c	;volatile
  1774   001312  D00A               	goto	l256
  1775                           
  1776                           ;Lab4.c: 212: if(!potencia) return '+';
  1777   001314  5047               	movf	_potencia^0,w,c
  1778   001316  A4D8               	btfss	status,2,c
  1779   001318  D002               	goto	l2460
  1780   00131A  0E2B               	movlw	43
  1781   00131C  0012               	return	
  1782   00131E                     l2460:
  1783                           
  1784                           ;Lab4.c: 213: else if(potencia) return '^';
  1785   00131E  5047               	movf	_potencia^0,w,c
  1786   001320  B4D8               	btfsc	status,2,c
  1787   001322  D04C               	goto	l288
  1788   001324  0E5E               	movlw	94
  1789   001326  0012               	return	
  1790   001328                     l256:
  1791                           
  1792                           ;Lab4.c: 215: else if(RB5==0) return '=';
  1793   001328  BA81               	btfsc	3969,5,c	;volatile
  1794   00132A  D002               	goto	l262
  1795   00132C  0E3D               	movlw	61
  1796   00132E  0012               	return	
  1797   001330                     l262:
  1798                           
  1799                           ;Lab4.c: 216: else if(RB6==0) return '0';
  1800   001330  BC81               	btfsc	3969,6,c	;volatile
  1801   001332  D002               	goto	l264
  1802   001334  0E30               	movlw	48
  1803   001336  0012               	return	
  1804   001338                     l264:
  1805                           
  1806                           ;Lab4.c: 217: else if(RB7==0) return 'C';
  1807   001338  BE81               	btfsc	3969,7,c	;volatile
  1808   00133A  D002               	goto	l2484
  1809   00133C  0E43               	movlw	67
  1810   00133E  0012               	return	
  1811   001340                     l2484:
  1812                           
  1813                           ;Lab4.c: 218: else{;Lab4.c: 219: LATB=0b11111101;
  1814   001340  0EFD               	movlw	253
  1815   001342  6E8A               	movwf	138,c	;volatile
  1816                           
  1817                           ;Lab4.c: 220: if(RB4==0){
  1818   001344  B881               	btfsc	3969,4,c	;volatile
  1819   001346  D00A               	goto	l268
  1820                           
  1821                           ;Lab4.c: 221: if(!factorial) return '-';
  1822   001348  5046               	movf	_factorial^0,w,c
  1823   00134A  A4D8               	btfss	status,2,c
  1824   00134C  D002               	goto	l2496
  1825   00134E  0E2D               	movlw	45
  1826   001350  0012               	return	
  1827   001352                     l2496:
  1828                           
  1829                           ;Lab4.c: 222: else if(factorial) return '!';
  1830   001352  5046               	movf	_factorial^0,w,c
  1831   001354  B4D8               	btfsc	status,2,c
  1832   001356  D032               	goto	l288
  1833   001358  0E21               	movlw	33
  1834   00135A  0012               	return	
  1835   00135C                     l268:
  1836                           
  1837                           ;Lab4.c: 224: else if(RB5==0) return '9';
  1838   00135C  BA81               	btfsc	3969,5,c	;volatile
  1839   00135E  D002               	goto	l273
  1840   001360  0E39               	movlw	57
  1841   001362  0012               	return	
  1842   001364                     l273:
  1843                           
  1844                           ;Lab4.c: 225: else if(RB6==0) return '8';
  1845   001364  BC81               	btfsc	3969,6,c	;volatile
  1846   001366  D002               	goto	l275
  1847   001368  0E38               	movlw	56
  1848   00136A  0012               	return	
  1849   00136C                     l275:
  1850                           
  1851                           ;Lab4.c: 226: else if(RB7==0) return '7';
  1852   00136C  BE81               	btfsc	3969,7,c	;volatile
  1853   00136E  D002               	goto	l2520
  1854   001370  0E37               	movlw	55
  1855   001372  0012               	return	
  1856   001374                     l2520:
  1857                           
  1858                           ;Lab4.c: 227: else{;Lab4.c: 228: LATB=0b11111011;
  1859   001374  0EFB               	movlw	251
  1860   001376  6E8A               	movwf	138,c	;volatile
  1861                           
  1862                           ;Lab4.c: 229: if(RB4==0) return 'x';
  1863   001378  B881               	btfsc	3969,4,c	;volatile
  1864   00137A  D002               	goto	l279
  1865   00137C  0E78               	movlw	120
  1866   00137E  0012               	return	
  1867   001380                     l279:
  1868                           
  1869                           ;Lab4.c: 230: else if(RB5==0) return '6';
  1870   001380  BA81               	btfsc	3969,5,c	;volatile
  1871   001382  D002               	goto	l281
  1872   001384  0E36               	movlw	54
  1873   001386  0012               	return	
  1874   001388                     l281:
  1875                           
  1876                           ;Lab4.c: 231: else if(RB6==0) return '5';
  1877   001388  BC81               	btfsc	3969,6,c	;volatile
  1878   00138A  D002               	goto	l283
  1879   00138C  0E35               	movlw	53
  1880   00138E  0012               	return	
  1881   001390                     l283:
  1882                           
  1883                           ;Lab4.c: 232: else if(RB7==0) return '4';
  1884   001390  BE81               	btfsc	3969,7,c	;volatile
  1885   001392  D002               	goto	l2548
  1886   001394  0E34               	movlw	52
  1887   001396  0012               	return	
  1888   001398                     l2548:
  1889                           
  1890                           ;Lab4.c: 233: else{;Lab4.c: 234: LATB=0b11110111;
  1891   001398  0EF7               	movlw	247
  1892   00139A  6E8A               	movwf	138,c	;volatile
  1893                           
  1894                           ;Lab4.c: 235: if(RB4==0) return '/';
  1895   00139C  B881               	btfsc	3969,4,c	;volatile
  1896   00139E  D002               	goto	l287
  1897   0013A0  0E2F               	movlw	47
  1898   0013A2  0012               	return	
  1899   0013A4                     l287:
  1900                           
  1901                           ;Lab4.c: 236: else if(RB5==0) return '3';
  1902   0013A4  BA81               	btfsc	3969,5,c	;volatile
  1903   0013A6  D002               	goto	l289
  1904   0013A8  0E33               	movlw	51
  1905   0013AA  0012               	return	
  1906   0013AC                     l289:
  1907                           
  1908                           ;Lab4.c: 237: else if(RB6==0) return '2';
  1909   0013AC  BC81               	btfsc	3969,6,c	;volatile
  1910   0013AE  D002               	goto	l291
  1911   0013B0  0E32               	movlw	50
  1912   0013B2  0012               	return	
  1913   0013B4                     l291:
  1914                           
  1915                           ;Lab4.c: 238: else if(RB7==0) return '1';
  1916   0013B4  BE81               	btfsc	3969,7,c	;volatile
  1917   0013B6  D002               	goto	l288
  1918   0013B8  0E31               	movlw	49
  1919   0013BA  0012               	return	
  1920   0013BC                     l288:
  1921                           
  1922                           ;Lab4.c: 239: };Lab4.c: 240: };Lab4.c: 241: };Lab4.c: 242: return '?';
  1923   0013BC  0E3F               	movlw	63
  1924   0013BE  0012               	return		;funcret
  1925   0013C0                     __end_of_LeerTeclado:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _InicializaLCD *****************
  1929 ;; Defined at:
  1930 ;;		line 62 in file "LibLCDXC8.h"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1947 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 8
  1951 ;; This function calls:
  1952 ;;		_BorraLCD
  1953 ;;		_EnviaDato
  1954 ;;		_HabilitaLCD
  1955 ;;		_RetardoLCD
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text3
  1962   00146C                     __ptext3:
  1963                           	callstack 0
  1964   00146C                     _InicializaLCD:
  1965                           	callstack 22
  1966                           
  1967                           ;LibLCDXC8.h: 64: LATE0=0;
  1968                           
  1969                           ;incstack = 0
  1970   00146C  908D               	bcf	3981,0,c	;volatile
  1971                           
  1972                           ;LibLCDXC8.h: 65: if(interfaz==4)
  1973   00146E  0E04               	movlw	4
  1974   001470  1850               	xorwf	_interfaz^0,w,c
  1975   001472  A4D8               	btfss	status,2,c
  1976   001474  D004               	goto	l3342
  1977                           
  1978                           ;LibLCDXC8.h: 66: LATD=(LATD & 0b00001111) | 0x30;
  1979   001476  508C               	movf	140,w,c	;volatile
  1980   001478  0B0F               	andlw	15
  1981   00147A  0930               	iorlw	48
  1982   00147C  D001               	goto	L4
  1983   00147E                     l3342:
  1984                           
  1985                           ;LibLCDXC8.h: 67: else;LibLCDXC8.h: 68: LATD=0x3F;
  1986   00147E  0E3F               	movlw	63
  1987   001480                     L4:
  1988   001480  6E8C               	movwf	140,c	;volatile
  1989                           
  1990                           ;LibLCDXC8.h: 69: HabilitaLCD();
  1991   001482  EC3D  F00D         	call	_HabilitaLCD	;wreg free
  1992                           
  1993                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  1994   001486  0E01               	movlw	1
  1995   001488  EC61  F00B         	call	_RetardoLCD
  1996                           
  1997                           ;LibLCDXC8.h: 71: if(interfaz==4)
  1998   00148C  0E04               	movlw	4
  1999   00148E  1850               	xorwf	_interfaz^0,w,c
  2000   001490  A4D8               	btfss	status,2,c
  2001   001492  D004               	goto	l3352
  2002                           
  2003                           ;LibLCDXC8.h: 72: LATD=(LATD & 0b00001111) | 0x30;
  2004   001494  508C               	movf	140,w,c	;volatile
  2005   001496  0B0F               	andlw	15
  2006   001498  0930               	iorlw	48
  2007   00149A  D001               	goto	L5
  2008   00149C                     l3352:
  2009                           
  2010                           ;LibLCDXC8.h: 73: else;LibLCDXC8.h: 74: LATD=0x3F;
  2011   00149C  0E3F               	movlw	63
  2012   00149E                     L5:
  2013   00149E  6E8C               	movwf	140,c	;volatile
  2014                           
  2015                           ;LibLCDXC8.h: 75: HabilitaLCD();
  2016   0014A0  EC3D  F00D         	call	_HabilitaLCD	;wreg free
  2017                           
  2018                           ;LibLCDXC8.h: 76: RetardoLCD(3);
  2019   0014A4  0E03               	movlw	3
  2020   0014A6  EC61  F00B         	call	_RetardoLCD
  2021                           
  2022                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2023   0014AA  0E04               	movlw	4
  2024   0014AC  1850               	xorwf	_interfaz^0,w,c
  2025   0014AE  A4D8               	btfss	status,2,c
  2026   0014B0  D004               	goto	l3362
  2027                           
  2028                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2029   0014B2  508C               	movf	140,w,c	;volatile
  2030   0014B4  0B0F               	andlw	15
  2031   0014B6  0930               	iorlw	48
  2032   0014B8  D001               	goto	L6
  2033   0014BA                     l3362:
  2034                           
  2035                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2036   0014BA  0E3F               	movlw	63
  2037   0014BC                     L6:
  2038   0014BC  6E8C               	movwf	140,c	;volatile
  2039                           
  2040                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2041   0014BE  EC3D  F00D         	call	_HabilitaLCD	;wreg free
  2042                           
  2043                           ;LibLCDXC8.h: 82: RetardoLCD(4);
  2044   0014C2  0E04               	movlw	4
  2045   0014C4  EC61  F00B         	call	_RetardoLCD
  2046                           
  2047                           ;LibLCDXC8.h: 83: if(interfaz==4){
  2048   0014C8  0E04               	movlw	4
  2049   0014CA  1850               	xorwf	_interfaz^0,w,c
  2050   0014CC  A4D8               	btfss	status,2,c
  2051   0014CE  D011               	goto	l3382
  2052                           
  2053                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x20;
  2054   0014D0  508C               	movf	140,w,c	;volatile
  2055   0014D2  0B0F               	andlw	15
  2056   0014D4  0920               	iorlw	32
  2057   0014D6  6E8C               	movwf	140,c	;volatile
  2058                           
  2059                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2060   0014D8  EC3D  F00D         	call	_HabilitaLCD	;wreg free
  2061                           
  2062                           ;LibLCDXC8.h: 86: RetardoLCD(4);
  2063   0014DC  0E04               	movlw	4
  2064   0014DE  EC61  F00B         	call	_RetardoLCD
  2065                           
  2066                           ;LibLCDXC8.h: 87: EnviaDato(0x2F);
  2067   0014E2  0E2F               	movlw	47
  2068   0014E4  EC32  F00C         	call	_EnviaDato
  2069                           
  2070                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2071   0014E8  EC3D  F00D         	call	_HabilitaLCD	;wreg free
  2072                           
  2073                           ;LibLCDXC8.h: 89: RetardoLCD(4);
  2074   0014EC  0E04               	movlw	4
  2075   0014EE  EC61  F00B         	call	_RetardoLCD
  2076   0014F2                     l3382:
  2077                           
  2078                           ;LibLCDXC8.h: 90: };LibLCDXC8.h: 91: BorraLCD();
  2079   0014F2  EC29  F00D         	call	_BorraLCD	;wreg free
  2080                           
  2081                           ;LibLCDXC8.h: 92: EnviaDato(0xF);
  2082   0014F6  0E0F               	movlw	15
  2083   0014F8  EC32  F00C         	call	_EnviaDato
  2084                           
  2085                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2086   0014FC  EC3D  F00D         	call	_HabilitaLCD	;wreg free
  2087                           
  2088                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2089   001500  0E04               	movlw	4
  2090   001502  EC61  F00B         	call	_RetardoLCD
  2091   001506  0012               	return		;funcret
  2092   001508                     __end_of_InicializaLCD:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _BorraLCD *****************
  2096 ;; Defined at:
  2097 ;;		line 103 in file "LibLCDXC8.h"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2111 ;;      Params:         0       0       0       0       0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 7
  2118 ;; This function calls:
  2119 ;;		_EnviaDato
  2120 ;;		_HabilitaLCD
  2121 ;;		_RetardoLCD
  2122 ;; This function is called by:
  2123 ;;		_InicializaLCD
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text4
  2129   001A52                     __ptext4:
  2130                           	callstack 0
  2131   001A52                     _BorraLCD:
  2132                           	callstack 22
  2133                           
  2134                           ;LibLCDXC8.h: 105: LATE0=0;
  2135                           
  2136                           ;incstack = 0
  2137   001A52  908D               	bcf	3981,0,c	;volatile
  2138                           
  2139                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  2140   001A54  0E01               	movlw	1
  2141   001A56  EC32  F00C         	call	_EnviaDato
  2142                           
  2143                           ;LibLCDXC8.h: 107: HabilitaLCD();
  2144   001A5A  EC3D  F00D         	call	_HabilitaLCD	;wreg free
  2145                           
  2146                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  2147   001A5E  0E02               	movlw	2
  2148   001A60  EC61  F00B         	call	_RetardoLCD
  2149   001A64  0012               	return		;funcret
  2150   001A66                     __end_of_BorraLCD:
  2151                           	callstack 0
  2152                           
  2153 ;; *************** function _Imprimir_Resultado *****************
  2154 ;; Defined at:
  2155 ;;		line 308 in file "Lab4.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  r               4   27[COMRAM] long 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  k               2    1[BANK0 ] int 
  2160 ;;  j               2    5[BANK0 ] int 
  2161 ;;  i               2    3[BANK0 ] int 
  2162 ;;  potencia        4    7[BANK0 ] long 
  2163 ;;  flag            1    0[BANK0 ] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2173 ;;      Params:         4       0       0       0       0       0       0       0       0
  2174 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2175 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2176 ;;      Totals:         8      11       0       0       0       0       0       0       0
  2177 ;;Total ram usage:       19 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 9
  2180 ;; This function calls:
  2181 ;;		_DireccionaLCD
  2182 ;;		_EscribeLCD_c
  2183 ;;		_MensajeLCD_Var
  2184 ;;		___aldiv
  2185 ;;		___almod
  2186 ;;		___lmul
  2187 ;;		___lwdiv
  2188 ;;		___lwmod
  2189 ;;		___wmul
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text5
  2196   000ED8                     __ptext5:
  2197                           	callstack 0
  2198   000ED8                     _Imprimir_Resultado:
  2199                           	callstack 21
  2200                           
  2201                           ;Lab4.c: 310: bool flag=0;
  2202                           
  2203                           ;incstack = 0
  2204   000ED8  0E00               	movlw	0
  2205   000EDA  0100               	movlb	0	; () banked
  2206   000EDC  6F60               	movwf	Imprimir_Resultado@flag& (0+255),b
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;Lab4.c: 311: if ((partdecl-(r*100))>0 | (partdecl-(r*100))<0){
  2210   000EDE  C01C  F00E         	movff	Imprimir_Resultado@r,___lmul@multiplier
  2211   000EE2  C01D  F00F         	movff	Imprimir_Resultado@r+1,___lmul@multiplier+1
  2212   000EE6  C01E  F010         	movff	Imprimir_Resultado@r+2,___lmul@multiplier+2
  2213   000EEA  C01F  F011         	movff	Imprimir_Resultado@r+3,___lmul@multiplier+3
  2214   000EEE  0E9C               	movlw	156
  2215   000EF0  6E12               	movwf	___lmul@multiplicand^0,c
  2216   000EF2  0EFF               	movlw	255
  2217   000EF4  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2218   000EF6  0EFF               	movlw	255
  2219   000EF8  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2220   000EFA  0EFF               	movlw	255
  2221   000EFC  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2222   000EFE  EC36  F00B         	call	___lmul	;wreg free
  2223   000F02  5030               	movf	_partdecl^0,w,c
  2224   000F04  240E               	addwf	?___lmul^0,w,c
  2225   000F06  6E20               	movwf	??_Imprimir_Resultado^0,c
  2226   000F08  5031               	movf	(_partdecl+1)^0,w,c
  2227   000F0A  200F               	addwfc	(?___lmul+1)^0,w,c
  2228   000F0C  6E21               	movwf	(??_Imprimir_Resultado+1)^0,c
  2229   000F0E  5032               	movf	(_partdecl+2)^0,w,c
  2230   000F10  2010               	addwfc	(?___lmul+2)^0,w,c
  2231   000F12  6E22               	movwf	(??_Imprimir_Resultado+2)^0,c
  2232   000F14  5033               	movf	(_partdecl+3)^0,w,c
  2233   000F16  2011               	addwfc	(?___lmul+3)^0,w,c
  2234   000F18  6E23               	movwf	(??_Imprimir_Resultado+3)^0,c
  2235   000F1A  5020               	movf	??_Imprimir_Resultado^0,w,c
  2236   000F1C  1021               	iorwf	(??_Imprimir_Resultado+1)^0,w,c
  2237   000F1E  1022               	iorwf	(??_Imprimir_Resultado+2)^0,w,c
  2238   000F20  1023               	iorwf	(??_Imprimir_Resultado+3)^0,w,c
  2239   000F22  B4D8               	btfsc	status,2,c
  2240   000F24  D058               	goto	l3418
  2241                           
  2242                           ;Lab4.c: 312: for (int i = 0; i < 3; i++) {
  2243   000F26  0E00               	movlw	0
  2244   000F28  0100               	movlb	0	; () banked
  2245   000F2A  6F64               	movwf	(Imprimir_Resultado@i+1)& (0+255),b
  2246   000F2C  0E00               	movlw	0
  2247   000F2E  6F63               	movwf	Imprimir_Resultado@i& (0+255),b
  2248   000F30                     l3402:
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;Lab4.c: 313: r = n1 / n2;
  2252   000F30  C044  F014         	movff	_n1,___lwdiv@dividend
  2253   000F34  C045  F015         	movff	_n1+1,___lwdiv@dividend+1
  2254   000F38  C042  F016         	movff	_n2,___lwdiv@divisor
  2255   000F3C  C043  F017         	movff	_n2+1,___lwdiv@divisor+1
  2256   000F40  ECB7  F00B         	call	___lwdiv	;wreg free
  2257   000F44  C014  F01C         	movff	?___lwdiv,Imprimir_Resultado@r
  2258   000F48  C015  F01D         	movff	?___lwdiv+1,Imprimir_Resultado@r+1
  2259   000F4C  6A1E               	clrf	(Imprimir_Resultado@r+2)^0,c
  2260   000F4E  6A1F               	clrf	(Imprimir_Resultado@r+3)^0,c
  2261                           
  2262                           ;Lab4.c: 314: m = n1 % n2;
  2263   000F50  C044  F00E         	movff	_n1,___lwmod@dividend
  2264   000F54  C045  F00F         	movff	_n1+1,___lwmod@dividend+1
  2265   000F58  C042  F010         	movff	_n2,___lwmod@divisor
  2266   000F5C  C043  F011         	movff	_n2+1,___lwmod@divisor+1
  2267   000F60  EC78  F00C         	call	___lwmod	;wreg free
  2268   000F64  C00E  F049         	movff	?___lwmod,_m
  2269   000F68  C00F  F04A         	movff	?___lwmod+1,_m+1
  2270   000F6C  6A4B               	clrf	(_m+2)^0,c
  2271   000F6E  6A4C               	clrf	(_m+3)^0,c
  2272                           
  2273                           ;Lab4.c: 315: EscribeLCD_c(r+'0');
  2274   000F70  501C               	movf	Imprimir_Resultado@r^0,w,c
  2275   000F72  0F30               	addlw	48
  2276   000F74  ECFD  F00C         	call	_EscribeLCD_c
  2277                           
  2278                           ;Lab4.c: 316: if(i == 0 && m != 0) {
  2279   000F78  0100               	movlb	0	; () banked
  2280   000F7A  5163               	movf	Imprimir_Resultado@i& (0+255),w,b
  2281   000F7C  1164               	iorwf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2282   000F7E  A4D8               	btfss	status,2,c
  2283   000F80  D009               	goto	l3410
  2284                           
  2285                           ; BSR set to: 0
  2286   000F82  5049               	movf	_m^0,w,c
  2287   000F84  104A               	iorwf	(_m+1)^0,w,c
  2288   000F86  104B               	iorwf	(_m+2)^0,w,c
  2289   000F88  104C               	iorwf	(_m+3)^0,w,c
  2290   000F8A  B4D8               	btfsc	status,2,c
  2291   000F8C  D003               	goto	l3410
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;Lab4.c: 317: EscribeLCD_c(',');
  2295   000F8E  0E2C               	movlw	44
  2296   000F90  ECFD  F00C         	call	_EscribeLCD_c
  2297   000F94                     l3410:
  2298                           
  2299                           ;Lab4.c: 318: };Lab4.c: 320: if (m != 0) {
  2300   000F94  5049               	movf	_m^0,w,c
  2301   000F96  104A               	iorwf	(_m+1)^0,w,c
  2302   000F98  104B               	iorwf	(_m+2)^0,w,c
  2303   000F9A  104C               	iorwf	(_m+3)^0,w,c
  2304   000F9C  B4D8               	btfsc	status,2,c
  2305   000F9E  0012               	return	
  2306                           
  2307                           ;Lab4.c: 321: n1 = m * 10;
  2308   000FA0  C049  F00E         	movff	_m,___wmul@multiplier
  2309   000FA4  C04A  F00F         	movff	_m+1,___wmul@multiplier+1
  2310   000FA8  0E00               	movlw	0
  2311   000FAA  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  2312   000FAC  0E0A               	movlw	10
  2313   000FAE  6E10               	movwf	___wmul@multiplicand^0,c
  2314   000FB0  ECDE  F00C         	call	___wmul	;wreg free
  2315   000FB4  C00E  F044         	movff	?___wmul,_n1
  2316   000FB8  C00F  F045         	movff	?___wmul+1,_n1+1
  2317                           
  2318                           ;Lab4.c: 322: } else {
  2319   000FBC  0100               	movlb	0	; () banked
  2320   000FBE  4B63               	infsnz	Imprimir_Resultado@i& (0+255),f,b
  2321   000FC0  2B64               	incf	(Imprimir_Resultado@i+1)& (0+255),f,b
  2322                           
  2323                           ; BSR set to: 0
  2324   000FC2  BF64               	btfsc	(Imprimir_Resultado@i+1)& (0+255),7,b
  2325   000FC4  D7B5               	goto	l3402
  2326   000FC6  5164               	movf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2327   000FC8  E105               	bnz	u3780
  2328   000FCA  0E03               	movlw	3
  2329   000FCC  5D63               	subwf	Imprimir_Resultado@i& (0+255),w,b
  2330   000FCE  B0D8               	btfsc	status,0,c
  2331   000FD0  0012               	return	
  2332   000FD2  D7AE               	goto	l3402
  2333   000FD4                     u3780:
  2334   000FD4  0012               	return	
  2335   000FD6                     l3418:
  2336                           
  2337                           ;Lab4.c: 328: if(r>0x17179149 & r!=1000 & r !=1001){
  2338   000FD6  BE1F               	btfsc	(Imprimir_Resultado@r+3)^0,7,c
  2339   000FD8  D02B               	goto	l3430
  2340   000FDA  0E4A               	movlw	74
  2341   000FDC  5C1C               	subwf	Imprimir_Resultado@r^0,w,c
  2342   000FDE  0E91               	movlw	145
  2343   000FE0  581D               	subwfb	(Imprimir_Resultado@r+1)^0,w,c
  2344   000FE2  0E17               	movlw	23
  2345   000FE4  581E               	subwfb	(Imprimir_Resultado@r+2)^0,w,c
  2346   000FE6  0E17               	movlw	23
  2347   000FE8  581F               	subwfb	(Imprimir_Resultado@r+3)^0,w,c
  2348   000FEA  A0D8               	btfss	status,0,c
  2349   000FEC  D021               	goto	l3430
  2350   000FEE  0EE8               	movlw	232
  2351   000FF0  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2352   000FF2  E106               	bnz	u3800
  2353   000FF4  0E03               	movlw	3
  2354   000FF6  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2355   000FF8  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2356   000FFA  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2357   000FFC  B4D8               	btfsc	status,2,c
  2358   000FFE  D018               	goto	l3430
  2359   001000                     u3800:
  2360   001000  0EE9               	movlw	233
  2361   001002  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2362   001004  E106               	bnz	u3810
  2363   001006  0E03               	movlw	3
  2364   001008  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2365   00100A  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2366   00100C  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2367   00100E  B4D8               	btfsc	status,2,c
  2368   001010  D00F               	goto	l3430
  2369   001012                     u3810:
  2370                           
  2371                           ;Lab4.c: 329: DireccionaLCD(0x85);
  2372   001012  0E85               	movlw	133
  2373   001014  EC08  F00D         	call	_DireccionaLCD
  2374                           
  2375                           ;Lab4.c: 330: MensajeLCD_Var("Imposible");
  2376   001018  0E5A               	movlw	low STR_12
  2377   00101A  6E13               	movwf	MensajeLCD_Var@a^0,c
  2378   00101C  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
  2379                           
  2380                           ;Lab4.c: 331: DireccionaLCD(0xC0);
  2381   001020  0EC0               	movlw	192
  2382   001022  EC08  F00D         	call	_DireccionaLCD
  2383                           
  2384                           ;Lab4.c: 332: MensajeLCD_Var("de calcular");
  2385   001026  0E39               	movlw	low STR_13
  2386   001028  6E13               	movwf	MensajeLCD_Var@a^0,c
  2387   00102A  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
  2388                           
  2389                           ;Lab4.c: 333: }else{
  2390   00102E  0012               	return	
  2391   001030                     l3430:
  2392                           
  2393                           ;Lab4.c: 334: if(r>=0xA & r!=1000 & r !=1001){
  2394   001030  BE1F               	btfsc	(Imprimir_Resultado@r+3)^0,7,c
  2395   001032  D0D7               	goto	l3478
  2396   001034  501F               	movf	(Imprimir_Resultado@r+3)^0,w,c
  2397   001036  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2398   001038  101D               	iorwf	(Imprimir_Resultado@r+1)^0,w,c
  2399   00103A  E104               	bnz	u3820
  2400   00103C  0E0A               	movlw	10
  2401   00103E  5C1C               	subwf	Imprimir_Resultado@r^0,w,c
  2402   001040  A0D8               	btfss	status,0,c
  2403   001042  D0CF               	goto	l3478
  2404   001044                     u3820:
  2405   001044  0EE8               	movlw	232
  2406   001046  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2407   001048  E106               	bnz	u3830
  2408   00104A  0E03               	movlw	3
  2409   00104C  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2410   00104E  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2411   001050  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2412   001052  B4D8               	btfsc	status,2,c
  2413   001054  D0C6               	goto	l3478
  2414   001056                     u3830:
  2415   001056  0EE9               	movlw	233
  2416   001058  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2417   00105A  E106               	bnz	u3840
  2418   00105C  0E03               	movlw	3
  2419   00105E  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2420   001060  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2421   001062  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2422   001064  B4D8               	btfsc	status,2,c
  2423   001066  D0BD               	goto	l3478
  2424   001068                     u3840:
  2425                           
  2426                           ;Lab4.c: 358: for(int j=9;j>=0;j--){
  2427   001068  0E00               	movlw	0
  2428   00106A  0100               	movlb	0	; () banked
  2429   00106C  6F66               	movwf	(Imprimir_Resultado@j+1)& (0+255),b
  2430   00106E  0E09               	movlw	9
  2431   001070  6F65               	movwf	Imprimir_Resultado@j& (0+255),b
  2432   001072                     l3442:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;Lab4.c: 359: potencia = 10;
  2436   001072  0E0A               	movlw	10
  2437   001074  6F67               	movwf	Imprimir_Resultado@potencia& (0+255),b
  2438   001076  0E00               	movlw	0
  2439   001078  6F68               	movwf	(Imprimir_Resultado@potencia+1)& (0+255),b
  2440   00107A  0E00               	movlw	0
  2441   00107C  6F69               	movwf	(Imprimir_Resultado@potencia+2)& (0+255),b
  2442   00107E  0E00               	movlw	0
  2443   001080  6F6A               	movwf	(Imprimir_Resultado@potencia+3)& (0+255),b
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;Lab4.c: 360: for(int k=j-1;k>0;k--){
  2447   001082  0EFF               	movlw	255
  2448   001084  2565               	addwf	Imprimir_Resultado@j& (0+255),w,b
  2449   001086  6F61               	movwf	Imprimir_Resultado@k& (0+255),b
  2450   001088  0EFF               	movlw	255
  2451   00108A  2166               	addwfc	(Imprimir_Resultado@j+1)& (0+255),w,b
  2452   00108C  6F62               	movwf	(Imprimir_Resultado@k+1)& (0+255),b
  2453   00108E                     l3446:
  2454                           
  2455                           ; BSR set to: 0
  2456   00108E  BF62               	btfsc	(Imprimir_Resultado@k+1)& (0+255),7,b
  2457   001090  D024               	goto	l3456
  2458   001092  5162               	movf	(Imprimir_Resultado@k+1)& (0+255),w,b
  2459   001094  E103               	bnz	l3450
  2460   001096  0561               	decf	Imprimir_Resultado@k& (0+255),w,b
  2461   001098  A0D8               	btfss	status,0,c
  2462   00109A  D01F               	goto	l3456
  2463   00109C                     l3450:
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;Lab4.c: 361: potencia = potencia*10;
  2467   00109C  C067  F00E         	movff	Imprimir_Resultado@potencia,___lmul@multiplier
  2468   0010A0  C068  F00F         	movff	Imprimir_Resultado@potencia+1,___lmul@multiplier+1
  2469   0010A4  C069  F010         	movff	Imprimir_Resultado@potencia+2,___lmul@multiplier+2
  2470   0010A8  C06A  F011         	movff	Imprimir_Resultado@potencia+3,___lmul@multiplier+3
  2471   0010AC  0E0A               	movlw	10
  2472   0010AE  6E12               	movwf	___lmul@multiplicand^0,c
  2473   0010B0  0E00               	movlw	0
  2474   0010B2  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2475   0010B4  0E00               	movlw	0
  2476   0010B6  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2477   0010B8  0E00               	movlw	0
  2478   0010BA  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2479   0010BC  EC36  F00B         	call	___lmul	;wreg free
  2480   0010C0  C00E  F067         	movff	?___lmul,Imprimir_Resultado@potencia
  2481   0010C4  C00F  F068         	movff	?___lmul+1,Imprimir_Resultado@potencia+1
  2482   0010C8  C010  F069         	movff	?___lmul+2,Imprimir_Resultado@potencia+2
  2483   0010CC  C011  F06A         	movff	?___lmul+3,Imprimir_Resultado@potencia+3
  2484   0010D0  0100               	movlb	0	; () banked
  2485   0010D2  0761               	decf	Imprimir_Resultado@k& (0+255),f,b
  2486   0010D4  A0D8               	btfss	status,0,c
  2487   0010D6  0762               	decf	(Imprimir_Resultado@k+1)& (0+255),f,b
  2488   0010D8  D7DA               	goto	l3446
  2489   0010DA                     l3456:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;Lab4.c: 362: };Lab4.c: 363: if(r/potencia>0){
  2493   0010DA  C01C  F00E         	movff	Imprimir_Resultado@r,___aldiv@dividend
  2494   0010DE  C01D  F00F         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  2495   0010E2  C01E  F010         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  2496   0010E6  C01F  F011         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  2497   0010EA  C067  F012         	movff	Imprimir_Resultado@potencia,___aldiv@divisor
  2498   0010EE  C068  F013         	movff	Imprimir_Resultado@potencia+1,___aldiv@divisor+1
  2499   0010F2  C069  F014         	movff	Imprimir_Resultado@potencia+2,___aldiv@divisor+2
  2500   0010F6  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___aldiv@divisor+3
  2501   0010FA  EC15  F009         	call	___aldiv	;wreg free
  2502   0010FE  BE11               	btfsc	(?___aldiv+3)^0,7,c
  2503   001100  D03B               	goto	l3464
  2504   001102  5011               	movf	(?___aldiv+3)^0,w,c
  2505   001104  1010               	iorwf	(?___aldiv+2)^0,w,c
  2506   001106  100F               	iorwf	(?___aldiv+1)^0,w,c
  2507   001108  E103               	bnz	u3860
  2508   00110A  040E               	decf	?___aldiv^0,w,c
  2509   00110C  A0D8               	btfss	status,0,c
  2510   00110E  D034               	goto	l3464
  2511   001110                     u3860:
  2512                           
  2513                           ;Lab4.c: 364: flag = 1;
  2514   001110  0E01               	movlw	1
  2515   001112  0100               	movlb	0	; () banked
  2516   001114  6F60               	movwf	Imprimir_Resultado@flag& (0+255),b
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;Lab4.c: 365: EscribeLCD_c(r/potencia+48);
  2520   001116  C01C  F00E         	movff	Imprimir_Resultado@r,___aldiv@dividend
  2521   00111A  C01D  F00F         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  2522   00111E  C01E  F010         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  2523   001122  C01F  F011         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  2524   001126  C067  F012         	movff	Imprimir_Resultado@potencia,___aldiv@divisor
  2525   00112A  C068  F013         	movff	Imprimir_Resultado@potencia+1,___aldiv@divisor+1
  2526   00112E  C069  F014         	movff	Imprimir_Resultado@potencia+2,___aldiv@divisor+2
  2527   001132  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___aldiv@divisor+3
  2528   001136  EC15  F009         	call	___aldiv	;wreg free
  2529   00113A  500E               	movf	?___aldiv^0,w,c
  2530   00113C  0F30               	addlw	48
  2531   00113E  ECFD  F00C         	call	_EscribeLCD_c
  2532                           
  2533                           ;Lab4.c: 366: r=r%potencia;
  2534   001142  C01C  F00E         	movff	Imprimir_Resultado@r,___almod@dividend
  2535   001146  C01D  F00F         	movff	Imprimir_Resultado@r+1,___almod@dividend+1
  2536   00114A  C01E  F010         	movff	Imprimir_Resultado@r+2,___almod@dividend+2
  2537   00114E  C01F  F011         	movff	Imprimir_Resultado@r+3,___almod@dividend+3
  2538   001152  C067  F012         	movff	Imprimir_Resultado@potencia,___almod@divisor
  2539   001156  C068  F013         	movff	Imprimir_Resultado@potencia+1,___almod@divisor+1
  2540   00115A  C069  F014         	movff	Imprimir_Resultado@potencia+2,___almod@divisor+2
  2541   00115E  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___almod@divisor+3
  2542   001162  ECE0  F009         	call	___almod	;wreg free
  2543   001166  C00E  F01C         	movff	?___almod,Imprimir_Resultado@r
  2544   00116A  C00F  F01D         	movff	?___almod+1,Imprimir_Resultado@r+1
  2545   00116E  C010  F01E         	movff	?___almod+2,Imprimir_Resultado@r+2
  2546   001172  C011  F01F         	movff	?___almod+3,Imprimir_Resultado@r+3
  2547                           
  2548                           ;Lab4.c: 367: }else if( (r/potencia)==0 && flag){
  2549   001176  D02E               	goto	l3474
  2550   001178                     l3464:
  2551   001178  C01C  F00E         	movff	Imprimir_Resultado@r,___aldiv@dividend
  2552   00117C  C01D  F00F         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  2553   001180  C01E  F010         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  2554   001184  C01F  F011         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  2555   001188  C067  F012         	movff	Imprimir_Resultado@potencia,___aldiv@divisor
  2556   00118C  C068  F013         	movff	Imprimir_Resultado@potencia+1,___aldiv@divisor+1
  2557   001190  C069  F014         	movff	Imprimir_Resultado@potencia+2,___aldiv@divisor+2
  2558   001194  C06A  F015         	movff	Imprimir_Resultado@potencia+3,___aldiv@divisor+3
  2559   001198  EC15  F009         	call	___aldiv	;wreg free
  2560   00119C  500E               	movf	?___aldiv^0,w,c
  2561   00119E  100F               	iorwf	(?___aldiv+1)^0,w,c
  2562   0011A0  1010               	iorwf	(?___aldiv+2)^0,w,c
  2563   0011A2  1011               	iorwf	(?___aldiv+3)^0,w,c
  2564   0011A4  A4D8               	btfss	status,2,c
  2565   0011A6  D016               	goto	l3474
  2566   0011A8  0100               	movlb	0	; () banked
  2567   0011AA  5160               	movf	Imprimir_Resultado@flag& (0+255),w,b
  2568   0011AC  B4D8               	btfsc	status,2,c
  2569   0011AE  D012               	goto	l3474
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;Lab4.c: 368: if(r<10) EscribeLCD_c(r+48);
  2573   0011B0  BE1F               	btfsc	(Imprimir_Resultado@r+3)^0,7,c
  2574   0011B2  D008               	goto	u3890
  2575   0011B4  501F               	movf	(Imprimir_Resultado@r+3)^0,w,c
  2576   0011B6  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2577   0011B8  101D               	iorwf	(Imprimir_Resultado@r+1)^0,w,c
  2578   0011BA  E109               	bnz	l3472
  2579   0011BC  0E0A               	movlw	10
  2580   0011BE  5C1C               	subwf	Imprimir_Resultado@r^0,w,c
  2581   0011C0  B0D8               	btfsc	status,0,c
  2582   0011C2  D005               	goto	l3472
  2583   0011C4                     u3890:
  2584                           
  2585                           ; BSR set to: 0
  2586   0011C4  501C               	movf	Imprimir_Resultado@r^0,w,c
  2587   0011C6  0F30               	addlw	48
  2588   0011C8  ECFD  F00C         	call	_EscribeLCD_c
  2589   0011CC  D003               	goto	l3474
  2590   0011CE                     l3472:
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;Lab4.c: 369: else EscribeLCD_c(48);
  2594   0011CE  0E30               	movlw	48
  2595   0011D0  ECFD  F00C         	call	_EscribeLCD_c
  2596   0011D4                     l3474:
  2597   0011D4  0100               	movlb	0	; () banked
  2598   0011D6  0765               	decf	Imprimir_Resultado@j& (0+255),f,b
  2599   0011D8  A0D8               	btfss	status,0,c
  2600   0011DA  0766               	decf	(Imprimir_Resultado@j+1)& (0+255),f,b
  2601                           
  2602                           ; BSR set to: 0
  2603   0011DC  BF66               	btfsc	(Imprimir_Resultado@j+1)& (0+255),7,b
  2604   0011DE  0012               	return	
  2605   0011E0  D748               	goto	l3442
  2606   0011E2                     l3478:
  2607                           
  2608                           ;Lab4.c: 373: if(r==1000){
  2609   0011E2  0EE8               	movlw	232
  2610   0011E4  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2611   0011E6  E10B               	bnz	l3482
  2612   0011E8  0E03               	movlw	3
  2613   0011EA  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2614   0011EC  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2615   0011EE  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2616   0011F0  A4D8               	btfss	status,2,c
  2617   0011F2  D005               	goto	l3482
  2618                           
  2619                           ;Lab4.c: 374: MensajeLCD_Var("Infinito");
  2620   0011F4  0E64               	movlw	low STR_14
  2621   0011F6  6E13               	movwf	MensajeLCD_Var@a^0,c
  2622   0011F8  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
  2623                           
  2624                           ;Lab4.c: 375: }else{
  2625   0011FC  0012               	return	
  2626   0011FE                     l3482:
  2627                           
  2628                           ;Lab4.c: 376: if(r==1001){
  2629   0011FE  0EE9               	movlw	233
  2630   001200  181C               	xorwf	Imprimir_Resultado@r^0,w,c
  2631   001202  E10E               	bnz	l3488
  2632   001204  0E03               	movlw	3
  2633   001206  181D               	xorwf	(Imprimir_Resultado@r+1)^0,w,c
  2634   001208  101E               	iorwf	(Imprimir_Resultado@r+2)^0,w,c
  2635   00120A  101F               	iorwf	(Imprimir_Resultado@r+3)^0,w,c
  2636   00120C  A4D8               	btfss	status,2,c
  2637   00120E  D008               	goto	l3488
  2638                           
  2639                           ;Lab4.c: 377: DireccionaLCD(0xC1);
  2640   001210  0EC1               	movlw	193
  2641   001212  EC08  F00D         	call	_DireccionaLCD
  2642                           
  2643                           ;Lab4.c: 378: MensajeLCD_Var("Indeterminado");
  2644   001216  0E1E               	movlw	low STR_15
  2645   001218  6E13               	movwf	MensajeLCD_Var@a^0,c
  2646   00121A  ECE0  F00B         	call	_MensajeLCD_Var	;wreg free
  2647                           
  2648                           ;Lab4.c: 379: }else{
  2649   00121E  0012               	return	
  2650   001220                     l3488:
  2651                           
  2652                           ;Lab4.c: 380: EscribeLCD_c(r+'0');
  2653   001220  501C               	movf	Imprimir_Resultado@r^0,w,c
  2654   001222  0F30               	addlw	48
  2655   001224  ECFD  F00C         	call	_EscribeLCD_c
  2656   001228  0012               	return		;funcret
  2657   00122A                     __end_of_Imprimir_Resultado:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function ___wmul *****************
  2661 ;; Defined at:
  2662 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  multiplier      2   13[COMRAM] unsigned int 
  2665 ;;  multiplicand    2   15[COMRAM] unsigned int 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  product         2   17[COMRAM] unsigned int 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  2   13[COMRAM] unsigned int 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, prodl, prodh
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2677 ;;      Params:         4       0       0       0       0       0       0       0       0
  2678 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2680 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2681 ;;Total ram usage:        6 bytes
  2682 ;; Hardware stack levels used: 1
  2683 ;; Hardware stack levels required when called: 5
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_main
  2688 ;;		_factorial_function
  2689 ;;		_Imprimir_Resultado
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text6
  2694   0019BC                     __ptext6:
  2695                           	callstack 0
  2696   0019BC                     ___wmul:
  2697                           	callstack 24
  2698                           
  2699                           ;incstack = 0
  2700   0019BC  500E               	movf	___wmul@multiplier^0,w,c
  2701   0019BE  0210               	mulwf	___wmul@multiplicand^0,c
  2702   0019C0  CFF3 F012          	movff	prodl,___wmul@product
  2703   0019C4  CFF4 F013          	movff	prodh,___wmul@product+1
  2704   0019C8  500E               	movf	___wmul@multiplier^0,w,c
  2705   0019CA  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  2706   0019CC  50F3               	movf	243,w,c
  2707   0019CE  2613               	addwf	(___wmul@product+1)^0,f,c
  2708   0019D0  500F               	movf	(___wmul@multiplier+1)^0,w,c
  2709   0019D2  0210               	mulwf	___wmul@multiplicand^0,c
  2710   0019D4  50F3               	movf	243,w,c
  2711   0019D6  2613               	addwf	(___wmul@product+1)^0,f,c
  2712   0019D8  C012  F00E         	movff	___wmul@product,?___wmul
  2713   0019DC  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  2714   0019E0  0012               	return		;funcret
  2715   0019E2                     __end_of___wmul:
  2716                           	callstack 0
  2717                           
  2718 ;; *************** function ___lwmod *****************
  2719 ;; Defined at:
  2720 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  dividend        2   13[COMRAM] unsigned int 
  2723 ;;  divisor         2   15[COMRAM] unsigned int 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  counter         1   17[COMRAM] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  2   13[COMRAM] unsigned int 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2735 ;;      Params:         4       0       0       0       0       0       0       0       0
  2736 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2738 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2739 ;;Total ram usage:        5 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 5
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_Imprimir_Resultado
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text7
  2750   0018F0                     __ptext7:
  2751                           	callstack 0
  2752   0018F0                     ___lwmod:
  2753                           	callstack 24
  2754                           
  2755                           ;incstack = 0
  2756   0018F0  5010               	movf	___lwmod@divisor^0,w,c
  2757   0018F2  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  2758   0018F4  B4D8               	btfsc	status,2,c
  2759   0018F6  D018               	goto	l848
  2760   0018F8  0E01               	movlw	1
  2761   0018FA  6E12               	movwf	___lwmod@counter^0,c
  2762   0018FC  D004               	goto	l3326
  2763   0018FE                     l3324:
  2764   0018FE  90D8               	bcf	status,0,c
  2765   001900  3610               	rlcf	___lwmod@divisor^0,f,c
  2766   001902  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  2767   001904  2A12               	incf	___lwmod@counter^0,f,c
  2768   001906                     l3326:
  2769   001906  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  2770   001908  D7FA               	goto	l3324
  2771   00190A                     u3680:
  2772   00190A  5010               	movf	___lwmod@divisor^0,w,c
  2773   00190C  5C0E               	subwf	___lwmod@dividend^0,w,c
  2774   00190E  5011               	movf	(___lwmod@divisor+1)^0,w,c
  2775   001910  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  2776   001912  A0D8               	btfss	status,0,c
  2777   001914  D004               	goto	l3332
  2778   001916  5010               	movf	___lwmod@divisor^0,w,c
  2779   001918  5E0E               	subwf	___lwmod@dividend^0,f,c
  2780   00191A  5011               	movf	(___lwmod@divisor+1)^0,w,c
  2781   00191C  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  2782   00191E                     l3332:
  2783   00191E  90D8               	bcf	status,0,c
  2784   001920  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  2785   001922  3210               	rrcf	___lwmod@divisor^0,f,c
  2786   001924  2E12               	decfsz	___lwmod@counter^0,f,c
  2787   001926  D7F1               	goto	u3680
  2788   001928                     l848:
  2789   001928  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  2790   00192C  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  2791   001930  0012               	return		;funcret
  2792   001932                     __end_of___lwmod:
  2793                           	callstack 0
  2794                           
  2795 ;; *************** function ___lwdiv *****************
  2796 ;; Defined at:
  2797 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  dividend        2   19[COMRAM] unsigned int 
  2800 ;;  divisor         2   21[COMRAM] unsigned int 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  quotient        2   24[COMRAM] unsigned int 
  2803 ;;  counter         1   23[COMRAM] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  2   19[COMRAM] unsigned int 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2813 ;;      Params:         4       0       0       0       0       0       0       0       0
  2814 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2816 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2817 ;;Total ram usage:        7 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; Hardware stack levels required when called: 5
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_main
  2824 ;;		_Imprimir_Resultado
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text8
  2829   00176E                     __ptext8:
  2830                           	callstack 0
  2831   00176E                     ___lwdiv:
  2832                           	callstack 25
  2833                           
  2834                           ;incstack = 0
  2835   00176E  0E00               	movlw	0
  2836   001770  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  2837   001772  0E00               	movlw	0
  2838   001774  6E19               	movwf	___lwdiv@quotient^0,c
  2839   001776  5016               	movf	___lwdiv@divisor^0,w,c
  2840   001778  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2841   00177A  B4D8               	btfsc	status,2,c
  2842   00177C  D01C               	goto	l838
  2843   00177E  0E01               	movlw	1
  2844   001780  6E18               	movwf	___lwdiv@counter^0,c
  2845   001782  D004               	goto	l3306
  2846   001784                     l3304:
  2847   001784  90D8               	bcf	status,0,c
  2848   001786  3616               	rlcf	___lwdiv@divisor^0,f,c
  2849   001788  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2850   00178A  2A18               	incf	___lwdiv@counter^0,f,c
  2851   00178C                     l3306:
  2852   00178C  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  2853   00178E  D7FA               	goto	l3304
  2854   001790                     u3650:
  2855   001790  90D8               	bcf	status,0,c
  2856   001792  3619               	rlcf	___lwdiv@quotient^0,f,c
  2857   001794  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2858   001796  5016               	movf	___lwdiv@divisor^0,w,c
  2859   001798  5C14               	subwf	___lwdiv@dividend^0,w,c
  2860   00179A  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2861   00179C  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2862   00179E  A0D8               	btfss	status,0,c
  2863   0017A0  D005               	goto	l3316
  2864   0017A2  5016               	movf	___lwdiv@divisor^0,w,c
  2865   0017A4  5E14               	subwf	___lwdiv@dividend^0,f,c
  2866   0017A6  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2867   0017A8  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2868   0017AA  8019               	bsf	___lwdiv@quotient^0,0,c
  2869   0017AC                     l3316:
  2870   0017AC  90D8               	bcf	status,0,c
  2871   0017AE  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2872   0017B0  3216               	rrcf	___lwdiv@divisor^0,f,c
  2873   0017B2  2E18               	decfsz	___lwdiv@counter^0,f,c
  2874   0017B4  D7ED               	goto	u3650
  2875   0017B6                     l838:
  2876   0017B6  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  2877   0017BA  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2878   0017BE  0012               	return		;funcret
  2879   0017C0                     __end_of___lwdiv:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function ___lmul *****************
  2883 ;; Defined at:
  2884 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  multiplier      4   13[COMRAM] unsigned long 
  2887 ;;  multiplicand    4   17[COMRAM] unsigned long 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  product         4   21[COMRAM] unsigned long 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  4   13[COMRAM] unsigned long 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2899 ;;      Params:         8       0       0       0       0       0       0       0       0
  2900 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2902 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2903 ;;Total ram usage:       12 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 5
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;;		_Imprimir_Resultado
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text9
  2915   00166C                     __ptext9:
  2916                           	callstack 0
  2917   00166C                     ___lmul:
  2918                           	callstack 25
  2919                           
  2920                           ;incstack = 0
  2921   00166C  0E00               	movlw	0
  2922   00166E  6E16               	movwf	___lmul@product^0,c
  2923   001670  0E00               	movlw	0
  2924   001672  6E17               	movwf	(___lmul@product+1)^0,c
  2925   001674  0E00               	movlw	0
  2926   001676  6E18               	movwf	(___lmul@product+2)^0,c
  2927   001678  0E00               	movlw	0
  2928   00167A  6E19               	movwf	(___lmul@product+3)^0,c
  2929   00167C                     l3210:
  2930   00167C  A00E               	btfss	___lmul@multiplier^0,0,c
  2931   00167E  D008               	goto	l3214
  2932   001680  5012               	movf	___lmul@multiplicand^0,w,c
  2933   001682  2616               	addwf	___lmul@product^0,f,c
  2934   001684  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  2935   001686  2217               	addwfc	(___lmul@product+1)^0,f,c
  2936   001688  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  2937   00168A  2218               	addwfc	(___lmul@product+2)^0,f,c
  2938   00168C  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  2939   00168E  2219               	addwfc	(___lmul@product+3)^0,f,c
  2940   001690                     l3214:
  2941   001690  90D8               	bcf	status,0,c
  2942   001692  3612               	rlcf	___lmul@multiplicand^0,f,c
  2943   001694  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2944   001696  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2945   001698  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2946   00169A  90D8               	bcf	status,0,c
  2947   00169C  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  2948   00169E  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  2949   0016A0  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  2950   0016A2  320E               	rrcf	___lmul@multiplier^0,f,c
  2951   0016A4  500E               	movf	___lmul@multiplier^0,w,c
  2952   0016A6  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  2953   0016A8  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  2954   0016AA  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  2955   0016AC  A4D8               	btfss	status,2,c
  2956   0016AE  D7E6               	goto	l3210
  2957   0016B0  C016  F00E         	movff	___lmul@product,?___lmul
  2958   0016B4  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  2959   0016B8  C018  F010         	movff	___lmul@product+2,?___lmul+2
  2960   0016BC  C019  F011         	movff	___lmul@product+3,?___lmul+3
  2961   0016C0  0012               	return		;funcret
  2962   0016C2                     __end_of___lmul:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function ___almod *****************
  2966 ;; Defined at:
  2967 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  dividend        4   13[COMRAM] long 
  2970 ;;  divisor         4   17[COMRAM] long 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  sign            1   22[COMRAM] unsigned char 
  2973 ;;  counter         1   21[COMRAM] unsigned char 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  4   13[COMRAM] long 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2983 ;;      Params:         8       0       0       0       0       0       0       0       0
  2984 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2986 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2987 ;;Total ram usage:       10 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 5
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_Imprimir_Resultado
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text10
  2998   0013C0                     __ptext10:
  2999                           	callstack 0
  3000   0013C0                     ___almod:
  3001                           	callstack 24
  3002                           
  3003                           ;incstack = 0
  3004   0013C0  0E00               	movlw	0
  3005   0013C2  6E17               	movwf	___almod@sign^0,c
  3006   0013C4  AE11               	btfss	(___almod@dividend+3)^0,7,c
  3007   0013C6  D00A               	goto	l3270
  3008   0013C8  1E11               	comf	(___almod@dividend+3)^0,f,c
  3009   0013CA  1E10               	comf	(___almod@dividend+2)^0,f,c
  3010   0013CC  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3011   0013CE  6C0E               	negf	___almod@dividend^0,c
  3012   0013D0  0E00               	movlw	0
  3013   0013D2  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3014   0013D4  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3015   0013D6  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3016   0013D8  0E01               	movlw	1
  3017   0013DA  6E17               	movwf	___almod@sign^0,c
  3018   0013DC                     l3270:
  3019   0013DC  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3020   0013DE  D008               	goto	l3274
  3021   0013E0  1E15               	comf	(___almod@divisor+3)^0,f,c
  3022   0013E2  1E14               	comf	(___almod@divisor+2)^0,f,c
  3023   0013E4  1E13               	comf	(___almod@divisor+1)^0,f,c
  3024   0013E6  6C12               	negf	___almod@divisor^0,c
  3025   0013E8  0E00               	movlw	0
  3026   0013EA  2213               	addwfc	(___almod@divisor+1)^0,f,c
  3027   0013EC  2214               	addwfc	(___almod@divisor+2)^0,f,c
  3028   0013EE  2215               	addwfc	(___almod@divisor+3)^0,f,c
  3029   0013F0                     l3274:
  3030   0013F0  5012               	movf	___almod@divisor^0,w,c
  3031   0013F2  1013               	iorwf	(___almod@divisor+1)^0,w,c
  3032   0013F4  1014               	iorwf	(___almod@divisor+2)^0,w,c
  3033   0013F6  1015               	iorwf	(___almod@divisor+3)^0,w,c
  3034   0013F8  B4D8               	btfsc	status,2,c
  3035   0013FA  D024               	goto	l3290
  3036   0013FC  0E01               	movlw	1
  3037   0013FE  6E16               	movwf	___almod@counter^0,c
  3038   001400  D006               	goto	l3280
  3039   001402                     l3278:
  3040   001402  90D8               	bcf	status,0,c
  3041   001404  3612               	rlcf	___almod@divisor^0,f,c
  3042   001406  3613               	rlcf	(___almod@divisor+1)^0,f,c
  3043   001408  3614               	rlcf	(___almod@divisor+2)^0,f,c
  3044   00140A  3615               	rlcf	(___almod@divisor+3)^0,f,c
  3045   00140C  2A16               	incf	___almod@counter^0,f,c
  3046   00140E                     l3280:
  3047   00140E  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3048   001410  D7F8               	goto	l3278
  3049   001412                     u3610:
  3050   001412  5012               	movf	___almod@divisor^0,w,c
  3051   001414  5C0E               	subwf	___almod@dividend^0,w,c
  3052   001416  5013               	movf	(___almod@divisor+1)^0,w,c
  3053   001418  580F               	subwfb	(___almod@dividend+1)^0,w,c
  3054   00141A  5014               	movf	(___almod@divisor+2)^0,w,c
  3055   00141C  5810               	subwfb	(___almod@dividend+2)^0,w,c
  3056   00141E  5015               	movf	(___almod@divisor+3)^0,w,c
  3057   001420  5811               	subwfb	(___almod@dividend+3)^0,w,c
  3058   001422  A0D8               	btfss	status,0,c
  3059   001424  D008               	goto	l3286
  3060   001426  5012               	movf	___almod@divisor^0,w,c
  3061   001428  5E0E               	subwf	___almod@dividend^0,f,c
  3062   00142A  5013               	movf	(___almod@divisor+1)^0,w,c
  3063   00142C  5A0F               	subwfb	(___almod@dividend+1)^0,f,c
  3064   00142E  5014               	movf	(___almod@divisor+2)^0,w,c
  3065   001430  5A10               	subwfb	(___almod@dividend+2)^0,f,c
  3066   001432  5015               	movf	(___almod@divisor+3)^0,w,c
  3067   001434  5A11               	subwfb	(___almod@dividend+3)^0,f,c
  3068   001436                     l3286:
  3069   001436  90D8               	bcf	status,0,c
  3070   001438  3215               	rrcf	(___almod@divisor+3)^0,f,c
  3071   00143A  3214               	rrcf	(___almod@divisor+2)^0,f,c
  3072   00143C  3213               	rrcf	(___almod@divisor+1)^0,f,c
  3073   00143E  3212               	rrcf	___almod@divisor^0,f,c
  3074   001440  2E16               	decfsz	___almod@counter^0,f,c
  3075   001442  D7E7               	goto	u3610
  3076   001444                     l3290:
  3077   001444  5017               	movf	___almod@sign^0,w,c
  3078   001446  B4D8               	btfsc	status,2,c
  3079   001448  D008               	goto	l3294
  3080   00144A  1E11               	comf	(___almod@dividend+3)^0,f,c
  3081   00144C  1E10               	comf	(___almod@dividend+2)^0,f,c
  3082   00144E  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3083   001450  6C0E               	negf	___almod@dividend^0,c
  3084   001452  0E00               	movlw	0
  3085   001454  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3086   001456  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3087   001458  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3088   00145A                     l3294:
  3089   00145A  C00E  F00E         	movff	___almod@dividend,?___almod
  3090   00145E  C00F  F00F         	movff	___almod@dividend+1,?___almod+1
  3091   001462  C010  F010         	movff	___almod@dividend+2,?___almod+2
  3092   001466  C011  F011         	movff	___almod@dividend+3,?___almod+3
  3093   00146A  0012               	return		;funcret
  3094   00146C                     __end_of___almod:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function ___aldiv *****************
  3098 ;; Defined at:
  3099 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  dividend        4   13[COMRAM] long 
  3102 ;;  divisor         4   17[COMRAM] long 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  quotient        4   23[COMRAM] long 
  3105 ;;  sign            1   22[COMRAM] unsigned char 
  3106 ;;  counter         1   21[COMRAM] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  4   13[COMRAM] long 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3116 ;;      Params:         8       0       0       0       0       0       0       0       0
  3117 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3119 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3120 ;;Total ram usage:       14 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 5
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_Imprimir_Resultado
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text11
  3131   00122A                     __ptext11:
  3132                           	callstack 0
  3133   00122A                     ___aldiv:
  3134                           	callstack 24
  3135                           
  3136                           ;incstack = 0
  3137   00122A  0E00               	movlw	0
  3138   00122C  6E17               	movwf	___aldiv@sign^0,c
  3139   00122E  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3140   001230  D00A               	goto	l3226
  3141   001232  1E15               	comf	(___aldiv@divisor+3)^0,f,c
  3142   001234  1E14               	comf	(___aldiv@divisor+2)^0,f,c
  3143   001236  1E13               	comf	(___aldiv@divisor+1)^0,f,c
  3144   001238  6C12               	negf	___aldiv@divisor^0,c
  3145   00123A  0E00               	movlw	0
  3146   00123C  2213               	addwfc	(___aldiv@divisor+1)^0,f,c
  3147   00123E  2214               	addwfc	(___aldiv@divisor+2)^0,f,c
  3148   001240  2215               	addwfc	(___aldiv@divisor+3)^0,f,c
  3149   001242  0E01               	movlw	1
  3150   001244  6E17               	movwf	___aldiv@sign^0,c
  3151   001246                     l3226:
  3152   001246  AE11               	btfss	(___aldiv@dividend+3)^0,7,c
  3153   001248  D00A               	goto	l3232
  3154   00124A  1E11               	comf	(___aldiv@dividend+3)^0,f,c
  3155   00124C  1E10               	comf	(___aldiv@dividend+2)^0,f,c
  3156   00124E  1E0F               	comf	(___aldiv@dividend+1)^0,f,c
  3157   001250  6C0E               	negf	___aldiv@dividend^0,c
  3158   001252  0E00               	movlw	0
  3159   001254  220F               	addwfc	(___aldiv@dividend+1)^0,f,c
  3160   001256  2210               	addwfc	(___aldiv@dividend+2)^0,f,c
  3161   001258  2211               	addwfc	(___aldiv@dividend+3)^0,f,c
  3162   00125A  0E01               	movlw	1
  3163   00125C  1A17               	xorwf	___aldiv@sign^0,f,c
  3164   00125E                     l3232:
  3165   00125E  0E00               	movlw	0
  3166   001260  6E18               	movwf	___aldiv@quotient^0,c
  3167   001262  0E00               	movlw	0
  3168   001264  6E19               	movwf	(___aldiv@quotient+1)^0,c
  3169   001266  0E00               	movlw	0
  3170   001268  6E1A               	movwf	(___aldiv@quotient+2)^0,c
  3171   00126A  0E00               	movlw	0
  3172   00126C  6E1B               	movwf	(___aldiv@quotient+3)^0,c
  3173   00126E  5012               	movf	___aldiv@divisor^0,w,c
  3174   001270  1013               	iorwf	(___aldiv@divisor+1)^0,w,c
  3175   001272  1014               	iorwf	(___aldiv@divisor+2)^0,w,c
  3176   001274  1015               	iorwf	(___aldiv@divisor+3)^0,w,c
  3177   001276  B4D8               	btfsc	status,2,c
  3178   001278  D02A               	goto	l3254
  3179   00127A  0E01               	movlw	1
  3180   00127C  6E16               	movwf	___aldiv@counter^0,c
  3181   00127E  D006               	goto	l3240
  3182   001280                     l3238:
  3183   001280  90D8               	bcf	status,0,c
  3184   001282  3612               	rlcf	___aldiv@divisor^0,f,c
  3185   001284  3613               	rlcf	(___aldiv@divisor+1)^0,f,c
  3186   001286  3614               	rlcf	(___aldiv@divisor+2)^0,f,c
  3187   001288  3615               	rlcf	(___aldiv@divisor+3)^0,f,c
  3188   00128A  2A16               	incf	___aldiv@counter^0,f,c
  3189   00128C                     l3240:
  3190   00128C  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3191   00128E  D7F8               	goto	l3238
  3192   001290                     u3550:
  3193   001290  90D8               	bcf	status,0,c
  3194   001292  3618               	rlcf	___aldiv@quotient^0,f,c
  3195   001294  3619               	rlcf	(___aldiv@quotient+1)^0,f,c
  3196   001296  361A               	rlcf	(___aldiv@quotient+2)^0,f,c
  3197   001298  361B               	rlcf	(___aldiv@quotient+3)^0,f,c
  3198   00129A  5012               	movf	___aldiv@divisor^0,w,c
  3199   00129C  5C0E               	subwf	___aldiv@dividend^0,w,c
  3200   00129E  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3201   0012A0  580F               	subwfb	(___aldiv@dividend+1)^0,w,c
  3202   0012A2  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3203   0012A4  5810               	subwfb	(___aldiv@dividend+2)^0,w,c
  3204   0012A6  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3205   0012A8  5811               	subwfb	(___aldiv@dividend+3)^0,w,c
  3206   0012AA  A0D8               	btfss	status,0,c
  3207   0012AC  D009               	goto	l3250
  3208   0012AE  5012               	movf	___aldiv@divisor^0,w,c
  3209   0012B0  5E0E               	subwf	___aldiv@dividend^0,f,c
  3210   0012B2  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3211   0012B4  5A0F               	subwfb	(___aldiv@dividend+1)^0,f,c
  3212   0012B6  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3213   0012B8  5A10               	subwfb	(___aldiv@dividend+2)^0,f,c
  3214   0012BA  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3215   0012BC  5A11               	subwfb	(___aldiv@dividend+3)^0,f,c
  3216   0012BE  8018               	bsf	___aldiv@quotient^0,0,c
  3217   0012C0                     l3250:
  3218   0012C0  90D8               	bcf	status,0,c
  3219   0012C2  3215               	rrcf	(___aldiv@divisor+3)^0,f,c
  3220   0012C4  3214               	rrcf	(___aldiv@divisor+2)^0,f,c
  3221   0012C6  3213               	rrcf	(___aldiv@divisor+1)^0,f,c
  3222   0012C8  3212               	rrcf	___aldiv@divisor^0,f,c
  3223   0012CA  2E16               	decfsz	___aldiv@counter^0,f,c
  3224   0012CC  D7E1               	goto	u3550
  3225   0012CE                     l3254:
  3226   0012CE  5017               	movf	___aldiv@sign^0,w,c
  3227   0012D0  B4D8               	btfsc	status,2,c
  3228   0012D2  D008               	goto	l3258
  3229   0012D4  1E1B               	comf	(___aldiv@quotient+3)^0,f,c
  3230   0012D6  1E1A               	comf	(___aldiv@quotient+2)^0,f,c
  3231   0012D8  1E19               	comf	(___aldiv@quotient+1)^0,f,c
  3232   0012DA  6C18               	negf	___aldiv@quotient^0,c
  3233   0012DC  0E00               	movlw	0
  3234   0012DE  2219               	addwfc	(___aldiv@quotient+1)^0,f,c
  3235   0012E0  221A               	addwfc	(___aldiv@quotient+2)^0,f,c
  3236   0012E2  221B               	addwfc	(___aldiv@quotient+3)^0,f,c
  3237   0012E4                     l3258:
  3238   0012E4  C018  F00E         	movff	___aldiv@quotient,?___aldiv
  3239   0012E8  C019  F00F         	movff	___aldiv@quotient+1,?___aldiv+1
  3240   0012EC  C01A  F010         	movff	___aldiv@quotient+2,?___aldiv+2
  3241   0012F0  C01B  F011         	movff	___aldiv@quotient+3,?___aldiv+3
  3242   0012F4  0012               	return		;funcret
  3243   0012F6                     __end_of___aldiv:
  3244                           	callstack 0
  3245                           
  3246 ;; *************** function _MensajeLCD_Var *****************
  3247 ;; Defined at:
  3248 ;;		line 261 in file "LibLCDXC8.h"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  a               1   18[COMRAM] PTR unsigned char 
  3251 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  3252 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  3253 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  3254 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  i               2   20[COMRAM] int 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3266 ;;      Params:         1       0       0       0       0       0       0       0       0
  3267 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3268 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3269 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3270 ;;Total ram usage:        4 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 8
  3273 ;; This function calls:
  3274 ;;		_EscribeLCD_c
  3275 ;;		_strlen
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;;		_Imprimir_Resultado
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text12
  3283   0017C0                     __ptext12:
  3284                           	callstack 0
  3285   0017C0                     _MensajeLCD_Var:
  3286                           	callstack 22
  3287                           
  3288                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  3289                           
  3290                           ;incstack = 0
  3291   0017C0  0E00               	movlw	0
  3292   0017C2  6E16               	movwf	(MensajeLCD_Var@i+1)^0,c
  3293   0017C4  0E00               	movlw	0
  3294   0017C6  6E15               	movwf	MensajeLCD_Var@i^0,c
  3295   0017C8  D019               	goto	l3192
  3296   0017CA                     l3184:
  3297                           
  3298                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  3299   0017CA  5013               	movf	MensajeLCD_Var@a^0,w,c
  3300   0017CC  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3301   0017CE  6E14               	movwf	??_MensajeLCD_Var^0,c
  3302   0017D0  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3303   0017D4                     	if	1	;There is more than 1 active tblptr byte
  3304   0017D4  0E08               	movlw	high __smallconst
  3305   0017D6  6EF7               	movwf	tblptrh,c
  3306   0017D8                     	endif
  3307   0017D8                     	if	0	;tblptru may be non-zero
  3308   0017D8                     	endif
  3309   0017D8                     	if	0	;tblptru may be non-zero
  3310   0017D8                     	endif
  3311   0017D8  0008               	tblrd		*
  3312   0017DA  50F5               	movf	tablat,w,c
  3313   0017DC  0900               	iorlw	0
  3314   0017DE  B4D8               	btfsc	status,2,c
  3315   0017E0  0012               	return	
  3316                           
  3317                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  3318   0017E2  5013               	movf	MensajeLCD_Var@a^0,w,c
  3319   0017E4  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3320   0017E6  6E14               	movwf	??_MensajeLCD_Var^0,c
  3321   0017E8  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3322   0017EC                     	if	1	;There is more than 1 active tblptr byte
  3323   0017EC  0E08               	movlw	high __smallconst
  3324   0017EE  6EF7               	movwf	tblptrh,c
  3325   0017F0                     	endif
  3326   0017F0                     	if	0	;tblptru may be non-zero
  3327   0017F0                     	endif
  3328   0017F0                     	if	0	;tblptru may be non-zero
  3329   0017F0                     	endif
  3330   0017F0  0008               	tblrd		*
  3331   0017F2  50F5               	movf	tablat,w,c
  3332   0017F4  ECFD  F00C         	call	_EscribeLCD_c
  3333   0017F8  4A15               	infsnz	MensajeLCD_Var@i^0,f,c
  3334   0017FA  2A16               	incf	(MensajeLCD_Var@i+1)^0,f,c
  3335   0017FC                     l3192:
  3336   0017FC  C013  F00E         	movff	MensajeLCD_Var@a,strlen@s
  3337   001800  ECB6  F00C         	call	_strlen	;wreg free
  3338   001804  500E               	movf	?_strlen^0,w,c
  3339   001806  5C15               	subwf	MensajeLCD_Var@i^0,w,c
  3340   001808  500F               	movf	(?_strlen+1)^0,w,c
  3341   00180A  5816               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  3342   00180C  B0D8               	btfsc	status,0,c
  3343   00180E  0012               	return	
  3344   001810  D7DC               	goto	l3184
  3345   001812                     __end_of_MensajeLCD_Var:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _strlen *****************
  3349 ;; Defined at:
  3350 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  s               1   13[COMRAM] PTR const unsigned char 
  3353 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  3354 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  3355 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  3356 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  cp              1   15[COMRAM] PTR const unsigned char 
  3359 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  3360 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  3361 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  3362 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2   13[COMRAM] unsigned int 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3372 ;;      Params:         2       0       0       0       0       0       0       0       0
  3373 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3375 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3376 ;;Total ram usage:        3 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 5
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_MensajeLCD_Var
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text13
  3387   00196C                     __ptext13:
  3388                           	callstack 0
  3389   00196C                     _strlen:
  3390                           	callstack 24
  3391                           
  3392                           ;incstack = 0
  3393   00196C  C00E  F010         	movff	strlen@s,strlen@cp
  3394   001970  D001               	goto	l3168
  3395   001972                     l3166:
  3396   001972  2A10               	incf	strlen@cp^0,f,c
  3397   001974                     l3168:
  3398   001974  C010  FFF6         	movff	strlen@cp,tblptrl
  3399   001978                     	if	1	;There is more than 1 active tblptr byte
  3400   001978  0E08               	movlw	high __smallconst
  3401   00197A  6EF7               	movwf	tblptrh,c
  3402   00197C                     	endif
  3403   00197C                     	if	0	;tblptru may be non-zero
  3404   00197C                     	endif
  3405   00197C                     	if	0	;tblptru may be non-zero
  3406   00197C                     	endif
  3407   00197C  0008               	tblrd		*
  3408   00197E  50F5               	movf	tablat,w,c
  3409   001980  0900               	iorlw	0
  3410   001982  A4D8               	btfss	status,2,c
  3411   001984  D7F6               	goto	l3166
  3412   001986  500E               	movf	strlen@s^0,w,c
  3413   001988  5C10               	subwf	strlen@cp^0,w,c
  3414   00198A  6E0E               	movwf	?_strlen^0,c
  3415   00198C  6A0F               	clrf	(?_strlen+1)^0,c
  3416   00198E  BE0E               	btfsc	?_strlen^0,7,c
  3417   001990  060F               	decf	(?_strlen+1)^0,f,c
  3418   001992  0012               	return		;funcret
  3419   001994                     __end_of_strlen:
  3420                           	callstack 0
  3421                           
  3422 ;; *************** function _EscribeLCD_c *****************
  3423 ;; Defined at:
  3424 ;;		line 117 in file "LibLCDXC8.h"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  a               1    wreg     unsigned char 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  a               1   17[COMRAM] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3438 ;;      Params:         0       0       0       0       0       0       0       0       0
  3439 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3441 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3442 ;;Total ram usage:        1 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; Hardware stack levels required when called: 7
  3445 ;; This function calls:
  3446 ;;		_EnviaDato
  3447 ;;		_HabilitaLCD
  3448 ;;		_RetardoLCD
  3449 ;; This function is called by:
  3450 ;;		_MensajeLCD_Var
  3451 ;;		_main
  3452 ;;		_Imprimir_Resultado
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text14
  3457   0019FA                     __ptext14:
  3458                           	callstack 0
  3459   0019FA                     _EscribeLCD_c:
  3460                           	callstack 22
  3461                           
  3462                           ;incstack = 0
  3463                           ;EscribeLCD_c@a stored from wreg
  3464   0019FA  6E12               	movwf	EscribeLCD_c@a^0,c
  3465                           
  3466                           ;LibLCDXC8.h: 121: LATE0=1;
  3467   0019FC  808D               	bsf	3981,0,c	;volatile
  3468                           
  3469                           ;LibLCDXC8.h: 122: EnviaDato(a);
  3470   0019FE  5012               	movf	EscribeLCD_c@a^0,w,c
  3471   001A00  EC32  F00C         	call	_EnviaDato
  3472                           
  3473                           ;LibLCDXC8.h: 123: HabilitaLCD();
  3474   001A04  EC3D  F00D         	call	_HabilitaLCD	;wreg free
  3475                           
  3476                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  3477   001A08  0E04               	movlw	4
  3478   001A0A  EC61  F00B         	call	_RetardoLCD
  3479   001A0E  0012               	return		;funcret
  3480   001A10                     __end_of_EscribeLCD_c:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _DireccionaLCD *****************
  3484 ;; Defined at:
  3485 ;;		line 273 in file "LibLCDXC8.h"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  a               1    wreg     unsigned char 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  a               1   17[COMRAM] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3499 ;;      Params:         0       0       0       0       0       0       0       0       0
  3500 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3502 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3503 ;;Total ram usage:        1 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; Hardware stack levels required when called: 7
  3506 ;; This function calls:
  3507 ;;		_EnviaDato
  3508 ;;		_HabilitaLCD
  3509 ;;		_RetardoLCD
  3510 ;; This function is called by:
  3511 ;;		_main
  3512 ;;		_Imprimir_Resultado
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text15
  3517   001A10                     __ptext15:
  3518                           	callstack 0
  3519   001A10                     _DireccionaLCD:
  3520                           	callstack 22
  3521                           
  3522                           ;incstack = 0
  3523                           ;DireccionaLCD@a stored from wreg
  3524   001A10  6E12               	movwf	DireccionaLCD@a^0,c
  3525                           
  3526                           ;LibLCDXC8.h: 276: LATE0=0;
  3527   001A12  908D               	bcf	3981,0,c	;volatile
  3528                           
  3529                           ;LibLCDXC8.h: 277: EnviaDato(a);
  3530   001A14  5012               	movf	DireccionaLCD@a^0,w,c
  3531   001A16  EC32  F00C         	call	_EnviaDato
  3532                           
  3533                           ;LibLCDXC8.h: 278: HabilitaLCD();
  3534   001A1A  EC3D  F00D         	call	_HabilitaLCD	;wreg free
  3535                           
  3536                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  3537   001A1E  0E04               	movlw	4
  3538   001A20  EC61  F00B         	call	_RetardoLCD
  3539   001A24  0012               	return		;funcret
  3540   001A26                     __end_of_DireccionaLCD:
  3541                           	callstack 0
  3542                           
  3543 ;; *************** function _EnviaDato *****************
  3544 ;; Defined at:
  3545 ;;		line 52 in file "LibLCDXC8.h"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  a               1    wreg     unsigned char 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  a               1   16[COMRAM] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3559 ;;      Params:         0       0       0       0       0       0       0       0       0
  3560 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3561 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3562 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3563 ;;Total ram usage:        2 bytes
  3564 ;; Hardware stack levels used: 1
  3565 ;; Hardware stack levels required when called: 6
  3566 ;; This function calls:
  3567 ;;		_HabilitaLCD
  3568 ;;		_RetardoLCD
  3569 ;; This function is called by:
  3570 ;;		_InicializaLCD
  3571 ;;		_BorraLCD
  3572 ;;		_EscribeLCD_c
  3573 ;;		_DireccionaLCD
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text16
  3578   001864                     __ptext16:
  3579                           	callstack 0
  3580   001864                     _EnviaDato:
  3581                           	callstack 22
  3582                           
  3583                           ;incstack = 0
  3584                           ;EnviaDato@a stored from wreg
  3585   001864  6E11               	movwf	EnviaDato@a^0,c
  3586                           
  3587                           ;LibLCDXC8.h: 53: if(interfaz==4){
  3588   001866  0E04               	movlw	4
  3589   001868  1850               	xorwf	_interfaz^0,w,c
  3590   00186A  A4D8               	btfss	status,2,c
  3591   00186C  D017               	goto	l3152
  3592                           
  3593                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3594   00186E  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3595   001872  0EF0               	movlw	240
  3596   001874  1610               	andwf	??_EnviaDato^0,f,c
  3597   001876  508C               	movf	140,w,c	;volatile
  3598   001878  0B0F               	andlw	15
  3599   00187A  1010               	iorwf	??_EnviaDato^0,w,c
  3600   00187C  6E8C               	movwf	140,c	;volatile
  3601                           
  3602                           ;LibLCDXC8.h: 55: HabilitaLCD();
  3603   00187E  EC3D  F00D         	call	_HabilitaLCD	;wreg free
  3604                           
  3605                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  3606   001882  0E01               	movlw	1
  3607   001884  EC61  F00B         	call	_RetardoLCD
  3608                           
  3609                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  3610   001888  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3611   00188C  3A10               	swapf	??_EnviaDato^0,f,c
  3612   00188E  0EF0               	movlw	240
  3613   001890  1610               	andwf	??_EnviaDato^0,f,c
  3614   001892  508C               	movf	140,w,c	;volatile
  3615   001894  0B0F               	andlw	15
  3616   001896  1010               	iorwf	??_EnviaDato^0,w,c
  3617   001898  6E8C               	movwf	140,c	;volatile
  3618                           
  3619                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  3620   00189A  0012               	return	
  3621   00189C                     l3152:
  3622   00189C  0E08               	movlw	8
  3623   00189E  1850               	xorwf	_interfaz^0,w,c
  3624   0018A0  A4D8               	btfss	status,2,c
  3625   0018A2  0012               	return	
  3626                           
  3627                           ;LibLCDXC8.h: 59: LATD=a;
  3628   0018A4  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  3629   0018A8  0012               	return		;funcret
  3630   0018AA                     __end_of_EnviaDato:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _RetardoLCD *****************
  3634 ;; Defined at:
  3635 ;;		line 309 in file "LibLCDXC8.h"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  a               1    wreg     unsigned char 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  a               1   14[COMRAM] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0
  3650 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3651 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3652 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3653 ;;Total ram usage:        2 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 5
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_EnviaDato
  3660 ;;		_InicializaLCD
  3661 ;;		_BorraLCD
  3662 ;;		_EscribeLCD_c
  3663 ;;		_DireccionaLCD
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text17
  3668   0016C2                     __ptext17:
  3669                           	callstack 0
  3670   0016C2                     _RetardoLCD:
  3671                           	callstack 23
  3672                           
  3673                           ;incstack = 0
  3674                           ;RetardoLCD@a stored from wreg
  3675   0016C2  6E0F               	movwf	RetardoLCD@a^0,c
  3676                           
  3677                           ;LibLCDXC8.h: 310: switch(a){
  3678   0016C4  D01B               	goto	l3140
  3679   0016C6                     l3130:
  3680   0016C6  0E05               	movlw	5
  3681   0016C8  6E0E               	movwf	??_RetardoLCD^0,c
  3682   0016CA  0EDE               	movlw	222
  3683   0016CC                     u4807:
  3684   0016CC  2EE8               	decfsz	wreg,f,c
  3685   0016CE  D7FE               	bra	u4807
  3686   0016D0  2E0E               	decfsz	??_RetardoLCD^0,f,c
  3687   0016D2  D7FC               	bra	u4807
  3688                           
  3689                           ;LibLCDXC8.h: 313: break;
  3690   0016D4  0012               	return	
  3691   0016D6                     l3132:
  3692   0016D6  0E53               	movlw	83
  3693   0016D8                     u4817:
  3694   0016D8  2EE8               	decfsz	wreg,f,c
  3695   0016DA  D7FE               	bra	u4817
  3696   0016DC  F000               	nop	
  3697                           
  3698                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3699   0016DE  0E35               	movlw	53
  3700   0016E0                     u4827:
  3701   0016E0  2EE8               	decfsz	wreg,f,c
  3702   0016E2  D7FE               	bra	u4827
  3703   0016E4  F000               	nop	
  3704                           
  3705                           ;LibLCDXC8.h: 317: break;
  3706   0016E6  0012               	return	
  3707   0016E8                     l3134:
  3708   0016E8  0E08               	movlw	8
  3709   0016EA                     u4837:
  3710   0016EA  2EE8               	decfsz	wreg,f,c
  3711   0016EC  D7FE               	bra	u4837
  3712   0016EE  F000               	nop	
  3713                           
  3714                           ;LibLCDXC8.h: 320: break;
  3715   0016F0  0012               	return	
  3716   0016F2                     l3136:
  3717   0016F2  0E03               	movlw	3
  3718   0016F4                     u4847:
  3719   0016F4  2EE8               	decfsz	wreg,f,c
  3720   0016F6  D7FE               	bra	u4847
  3721   0016F8  F000               	nop	
  3722                           
  3723                           ;LibLCDXC8.h: 323: break;
  3724   0016FA  0012               	return	
  3725   0016FC                     l3140:
  3726   0016FC  500F               	movf	RetardoLCD@a^0,w,c
  3727                           
  3728                           ; Switch size 1, requested type "simple"
  3729                           ; Number of cases is 4, Range of values is 1 to 4
  3730                           ; switch strategies available:
  3731                           ; Name         Instructions Cycles
  3732                           ; simple_byte           13     7 (average)
  3733                           ;	Chosen strategy is simple_byte
  3734   0016FE  0A01               	xorlw	1	; case 1
  3735   001700  B4D8               	btfsc	status,2,c
  3736   001702  D7E1               	goto	l3130
  3737   001704  0A03               	xorlw	3	; case 2
  3738   001706  B4D8               	btfsc	status,2,c
  3739   001708  D7E6               	goto	l3132
  3740   00170A  0A01               	xorlw	1	; case 3
  3741   00170C  B4D8               	btfsc	status,2,c
  3742   00170E  D7EC               	goto	l3134
  3743   001710  0A07               	xorlw	7	; case 4
  3744   001712  A4D8               	btfss	status,2,c
  3745   001714  0012               	return	
  3746   001716  D7ED               	goto	l3136
  3747   001718                     __end_of_RetardoLCD:
  3748                           	callstack 0
  3749                           
  3750 ;; *************** function _HabilitaLCD *****************
  3751 ;; Defined at:
  3752 ;;		line 96 in file "LibLCDXC8.h"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;		None
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3766 ;;      Params:         0       0       0       0       0       0       0       0       0
  3767 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3769 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3770 ;;Total ram usage:        0 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; Hardware stack levels required when called: 5
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_EnviaDato
  3777 ;;		_InicializaLCD
  3778 ;;		_BorraLCD
  3779 ;;		_EscribeLCD_c
  3780 ;;		_DireccionaLCD
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text18
  3785   001A7A                     __ptext18:
  3786                           	callstack 0
  3787   001A7A                     _HabilitaLCD:
  3788                           	callstack 23
  3789                           
  3790                           ;LibLCDXC8.h: 98: LATE1=1;
  3791                           
  3792                           ;incstack = 0
  3793   001A7A  828D               	bsf	3981,1,c	;volatile
  3794                           
  3795                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3796   001A7C  0E03               	movlw	3
  3797   001A7E                     u4857:
  3798   001A7E  2EE8               	decfsz	wreg,f,c
  3799   001A80  D7FE               	bra	u4857
  3800   001A82  F000               	nop	
  3801                           
  3802                           ;LibLCDXC8.h: 101: LATE1=0;
  3803   001A84  928D               	bcf	3981,1,c	;volatile
  3804   001A86  0012               	return		;funcret
  3805   001A88                     __end_of_HabilitaLCD:
  3806                           	callstack 0
  3807                           
  3808 ;; *************** function _ConfiguraLCD *****************
  3809 ;; Defined at:
  3810 ;;		line 48 in file "LibLCDXC8.h"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  a               1    wreg     unsigned char 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  a               1   13[COMRAM] unsigned char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3824 ;;      Params:         0       0       0       0       0       0       0       0       0
  3825 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3827 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3828 ;;Total ram usage:        1 bytes
  3829 ;; Hardware stack levels used: 1
  3830 ;; Hardware stack levels required when called: 5
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		_main
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	text19
  3839   0019E2                     __ptext19:
  3840                           	callstack 0
  3841   0019E2                     _ConfiguraLCD:
  3842                           	callstack 25
  3843                           
  3844                           ;incstack = 0
  3845                           ;ConfiguraLCD@a stored from wreg
  3846   0019E2  6E0E               	movwf	ConfiguraLCD@a^0,c
  3847                           
  3848                           ;LibLCDXC8.h: 49: if(a==4 | a ==8)
  3849   0019E4  0E04               	movlw	4
  3850   0019E6  180E               	xorwf	ConfiguraLCD@a^0,w,c
  3851   0019E8  B4D8               	btfsc	status,2,c
  3852   0019EA  D004               	goto	u2020
  3853   0019EC  0E08               	movlw	8
  3854   0019EE  180E               	xorwf	ConfiguraLCD@a^0,w,c
  3855   0019F0  A4D8               	btfss	status,2,c
  3856   0019F2  0012               	return	
  3857   0019F4                     u2020:
  3858                           
  3859                           ;LibLCDXC8.h: 50: interfaz=a;
  3860   0019F4  C00E  F050         	movff	ConfiguraLCD@a,_interfaz
  3861   0019F8  0012               	return		;funcret
  3862   0019FA                     __end_of_ConfiguraLCD:
  3863                           	callstack 0
  3864                           
  3865 ;; *************** function _ColorRGB *****************
  3866 ;; Defined at:
  3867 ;;		line 245 in file "Lab4.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3881 ;;      Params:         0       0       0       0       0       0       0       0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3883 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3884 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3885 ;;Total ram usage:        2 bytes
  3886 ;; Hardware stack levels used: 1
  3887 ;; Hardware stack levels required when called: 5
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_main
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text20
  3896   00159A                     __ptext20:
  3897                           	callstack 0
  3898   00159A                     _ColorRGB:
  3899                           	callstack 25
  3900                           
  3901                           ;Lab4.c: 246: if(color==8) color = 0;
  3902                           
  3903                           ;incstack = 0
  3904   00159A  0E08               	movlw	8
  3905   00159C  183E               	xorwf	_color^0,w,c
  3906   00159E  103F               	iorwf	(_color+1)^0,w,c
  3907   0015A0  A4D8               	btfss	status,2,c
  3908   0015A2  D014               	goto	l2600
  3909   0015A4  0E00               	movlw	0
  3910   0015A6  6E3F               	movwf	(_color+1)^0,c
  3911   0015A8  0E00               	movlw	0
  3912   0015AA  6E3E               	movwf	_color^0,c
  3913   0015AC  D00F               	goto	l2600
  3914   0015AE                     l2582:
  3915                           
  3916                           ;Lab4.c: 249: LATC = 0b00000000;
  3917   0015AE  0E00               	movlw	0
  3918   0015B0  D00B               	goto	L12
  3919   0015B2                     l2584:
  3920                           
  3921                           ;Lab4.c: 252: LATC = 0b00000101;
  3922   0015B2  0E05               	movlw	5
  3923   0015B4  D009               	goto	L12
  3924   0015B6                     l2586:
  3925                           
  3926                           ;Lab4.c: 255: LATC = 0b00000110;
  3927   0015B6  0E06               	movlw	6
  3928   0015B8  D007               	goto	L12
  3929   0015BA                     l2588:
  3930                           
  3931                           ;Lab4.c: 258: LATC = 0b00000011;
  3932   0015BA  0E03               	movlw	3
  3933   0015BC  D005               	goto	L12
  3934   0015BE                     l2590:
  3935                           
  3936                           ;Lab4.c: 261: LATC = 0b00000010;
  3937   0015BE  0E02               	movlw	2
  3938   0015C0  D003               	goto	L12
  3939   0015C2                     l2594:
  3940                           
  3941                           ;Lab4.c: 267: LATC = 0b00000100;
  3942   0015C2  0E04               	movlw	4
  3943   0015C4  D001               	goto	L12
  3944   0015C6                     l2596:
  3945                           
  3946                           ;Lab4.c: 270: LATC = 0b00000111;
  3947   0015C6  0E07               	movlw	7
  3948   0015C8                     L12:
  3949   0015C8  6E8B               	movwf	139,c	;volatile
  3950                           
  3951                           ;Lab4.c: 271: break;
  3952   0015CA  D021               	goto	l2602
  3953   0015CC                     l2600:
  3954   0015CC  C03E  F00E         	movff	_color,??_ColorRGB
  3955   0015D0  C03F  F00F         	movff	_color+1,??_ColorRGB+1
  3956                           
  3957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3958                           ; Switch size 1, requested type "simple"
  3959                           ; Number of cases is 1, Range of values is 0 to 0
  3960                           ; switch strategies available:
  3961                           ; Name         Instructions Cycles
  3962                           ; simple_byte            4     3 (average)
  3963                           ;	Chosen strategy is simple_byte
  3964   0015D4  500F               	movf	(??_ColorRGB+1)^0,w,c
  3965   0015D6  0A00               	xorlw	0	; case 0
  3966   0015D8  A4D8               	btfss	status,2,c
  3967   0015DA  D019               	goto	l2602
  3968                           
  3969                           ; Switch size 1, requested type "simple"
  3970                           ; Number of cases is 8, Range of values is 0 to 7
  3971                           ; switch strategies available:
  3972                           ; Name         Instructions Cycles
  3973                           ; simple_byte           25    13 (average)
  3974                           ;	Chosen strategy is simple_byte
  3975   0015DC  500E               	movf	??_ColorRGB^0,w,c
  3976   0015DE  0A00               	xorlw	0	; case 0
  3977   0015E0  B4D8               	btfsc	status,2,c
  3978   0015E2  D7E5               	goto	l2582
  3979   0015E4  0A01               	xorlw	1	; case 1
  3980   0015E6  B4D8               	btfsc	status,2,c
  3981   0015E8  D7E4               	goto	l2584
  3982   0015EA  0A03               	xorlw	3	; case 2
  3983   0015EC  B4D8               	btfsc	status,2,c
  3984   0015EE  D7E3               	goto	l2586
  3985   0015F0  0A01               	xorlw	1	; case 3
  3986   0015F2  B4D8               	btfsc	status,2,c
  3987   0015F4  D7E2               	goto	l2588
  3988   0015F6  0A07               	xorlw	7	; case 4
  3989   0015F8  B4D8               	btfsc	status,2,c
  3990   0015FA  D7E1               	goto	l2590
  3991   0015FC  0A01               	xorlw	1	; case 5
  3992   0015FE  B4D8               	btfsc	status,2,c
  3993   001600  D7DA               	goto	l2586
  3994   001602  0A03               	xorlw	3	; case 6
  3995   001604  B4D8               	btfsc	status,2,c
  3996   001606  D7DD               	goto	l2594
  3997   001608  0A01               	xorlw	1	; case 7
  3998   00160A  B4D8               	btfsc	status,2,c
  3999   00160C  D7DC               	goto	l2596
  4000   00160E                     l2602:
  4001                           
  4002                           ;Lab4.c: 275: color += 1;
  4003   00160E  4A3E               	infsnz	_color^0,f,c
  4004   001610  2A3F               	incf	(_color+1)^0,f,c
  4005   001612  0012               	return		;funcret
  4006   001614                     __end_of_ColorRGB:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function _ISR *****************
  4010 ;; Defined at:
  4011 ;;		line 286 in file "Lab4.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4025 ;;      Params:         0       0       0       0       0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4027 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4028 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4029 ;;Total ram usage:        4 bytes
  4030 ;; Hardware stack levels used: 1
  4031 ;; Hardware stack levels required when called: 4
  4032 ;; This function calls:
  4033 ;;		i2_BorraLCD
  4034 ;;		i2_DireccionaLCD
  4035 ;;		i2_MensajeLCD_Var
  4036 ;; This function is called by:
  4037 ;;		Interrupt level 2
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	intcode
  4042   000008                     __pintcode:
  4043                           	callstack 0
  4044   000008                     _ISR:
  4045                           	callstack 21
  4046                           
  4047                           ;incstack = 0
  4048   000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4049   00000A  ED84  F00A         	call	int_func,f	;refresh shadow registers
  4050                           
  4051                           	psect	intcode_body
  4052   001508                     __pintcode_body:
  4053                           	callstack 21
  4054   001508                     int_func:
  4055                           	callstack 21
  4056   001508  0006               	pop		; remove dummy address from shadow register refresh
  4057   00150A  CFF6 F00A          	movff	tblptrl,??_ISR
  4058   00150E  CFF7 F00B          	movff	tblptrh,??_ISR+1
  4059   001512  CFF8 F00C          	movff	tblptru,??_ISR+2
  4060   001516  CFF5 F00D          	movff	tablat,??_ISR+3
  4061                           
  4062                           ;Lab4.c: 287: if(TMR0IF==1){
  4063   00151A  A4F2               	btfss	4082,2,c	;volatile
  4064   00151C  D019               	goto	i2l3108
  4065                           
  4066                           ;Lab4.c: 288: if(!verificador) contador = contador +1;
  4067   00151E  5038               	movf	_verificador^0,w,c
  4068   001520  1039               	iorwf	(_verificador+1)^0,w,c
  4069   001522  A4D8               	btfss	status,2,c
  4070   001524  D007               	goto	i2l3102
  4071   001526  0E01               	movlw	1
  4072   001528  243C               	addwf	_contador^0,w,c
  4073   00152A  6E3C               	movwf	_contador^0,c
  4074   00152C  0E00               	movlw	0
  4075   00152E  203D               	addwfc	(_contador+1)^0,w,c
  4076   001530  6E3D               	movwf	(_contador+1)^0,c
  4077   001532  D004               	goto	i2l3104
  4078   001534                     i2l3102:
  4079                           
  4080                           ;Lab4.c: 289: else contador = 0;
  4081   001534  0E00               	movlw	0
  4082   001536  6E3D               	movwf	(_contador+1)^0,c
  4083   001538  0E00               	movlw	0
  4084   00153A  6E3C               	movwf	_contador^0,c
  4085   00153C                     i2l3104:
  4086                           
  4087                           ;Lab4.c: 290: TMR0IF=0;
  4088   00153C  94F2               	bcf	4082,2,c	;volatile
  4089                           
  4090                           ;Lab4.c: 291: LATE2 = !LATE2;
  4091   00153E  B48D               	btfsc	3981,2,c	;volatile
  4092   001540  D002               	goto	i2u339_40
  4093   001542  848D               	bsf	3981,2,c	;volatile
  4094   001544  D001               	goto	i2u340_45
  4095   001546                     i2u339_40:
  4096   001546  948D               	bcf	3981,2,c	;volatile
  4097   001548                     i2u340_45:
  4098                           
  4099                           ;Lab4.c: 292: TMR0 = 49911;
  4100   001548  0EC2               	movlw	194
  4101   00154A  6ED7               	movwf	215,c	;volatile
  4102   00154C  0EF7               	movlw	247
  4103   00154E  6ED6               	movwf	214,c	;volatile
  4104   001550                     i2l3108:
  4105                           
  4106                           ;Lab4.c: 293: };Lab4.c: 295: if(contador == 2100){
  4107   001550  0E34               	movlw	52
  4108   001552  183C               	xorwf	_contador^0,w,c
  4109   001554  E118               	bnz	i2l327
  4110   001556  0E08               	movlw	8
  4111   001558  183D               	xorwf	(_contador+1)^0,w,c
  4112   00155A  A4D8               	btfss	status,2,c
  4113   00155C  D014               	goto	i2l327
  4114                           
  4115                           ;Lab4.c: 296: if(!verificador){
  4116   00155E  5038               	movf	_verificador^0,w,c
  4117   001560  1039               	iorwf	(_verificador+1)^0,w,c
  4118   001562  A4D8               	btfss	status,2,c
  4119   001564  D010               	goto	i2l327
  4120                           
  4121                           ;Lab4.c: 297: LATC7 = !LATC7;
  4122   001566  BE8B               	btfsc	3979,7,c	;volatile
  4123   001568  D002               	goto	i2u343_40
  4124   00156A  8E8B               	bsf	3979,7,c	;volatile
  4125   00156C  D001               	goto	i2u344_45
  4126   00156E                     i2u343_40:
  4127   00156E  9E8B               	bcf	3979,7,c	;volatile
  4128   001570                     i2u344_45:
  4129                           
  4130                           ;Lab4.c: 298: BorraLCD();
  4131   001570  EC33  F00D         	call	i2_BorraLCD	;wreg free
  4132                           
  4133                           ;Lab4.c: 299: DireccionaLCD(0x82);
  4134   001574  0E82               	movlw	130
  4135   001576  EC1E  F00D         	call	i2_DireccionaLCD
  4136                           
  4137                           ;Lab4.c: 300: MensajeLCD_Var("LVP Activado");
  4138   00157A  0E2C               	movlw	low STR_11
  4139   00157C  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4140   00157E  EC09  F00C         	call	i2_MensajeLCD_Var	;wreg free
  4141   001582  0003               	sleep		;# 
  4142   001584                     i2l324:
  4143   001584  D7FF               	goto	i2l324
  4144   001586                     i2l327:
  4145   001586  C00D  FFF5         	movff	??_ISR+3,tablat
  4146   00158A  C00C  FFF8         	movff	??_ISR+2,tblptru
  4147   00158E  C00B  FFF7         	movff	??_ISR+1,tblptrh
  4148   001592  C00A  FFF6         	movff	??_ISR,tblptrl
  4149   001596  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4150   001598  0011               	retfie		f
  4151   00159A                     __end_of_ISR:
  4152                           	callstack 0
  4153                           
  4154 ;; *************** function i2_MensajeLCD_Var *****************
  4155 ;; Defined at:
  4156 ;;		line 261 in file "LibLCDXC8.h"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  a               1    5[COMRAM] PTR unsigned char 
  4159 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  4160 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  4161 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  4162 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  i               2    7[COMRAM] int 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4174 ;;      Params:         1       0       0       0       0       0       0       0       0
  4175 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4176 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4177 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4178 ;;Total ram usage:        4 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; Hardware stack levels required when called: 3
  4181 ;; This function calls:
  4182 ;;		i2_EscribeLCD_c
  4183 ;;		i2_strlen
  4184 ;; This function is called by:
  4185 ;;		_ISR
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text22
  4190   001812                     __ptext22:
  4191                           	callstack 0
  4192   001812                     i2_MensajeLCD_Var:
  4193                           	callstack 21
  4194                           
  4195                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  4196                           
  4197                           ;incstack = 0
  4198   001812  0E00               	movlw	0
  4199   001814  6E09               	movwf	(i2MensajeLCD_Var@i+1)^0,c
  4200   001816  0E00               	movlw	0
  4201   001818  6E08               	movwf	i2MensajeLCD_Var@i^0,c
  4202   00181A  D019               	goto	i2l2740
  4203   00181C                     i2l2732:
  4204                           
  4205                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  4206   00181C  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4207   00181E  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4208   001820  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4209   001822  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4210   001826                     	if	1	;There is more than 1 active tblptr byte
  4211   001826  0E08               	movlw	high __smallconst
  4212   001828  6EF7               	movwf	tblptrh,c
  4213   00182A                     	endif
  4214   00182A                     	if	0	;tblptru may be non-zero
  4215   00182A                     	endif
  4216   00182A                     	if	0	;tblptru may be non-zero
  4217   00182A                     	endif
  4218   00182A  0008               	tblrd		*
  4219   00182C  50F5               	movf	tablat,w,c
  4220   00182E  0900               	iorlw	0
  4221   001830  B4D8               	btfsc	status,2,c
  4222   001832  0012               	return	
  4223                           
  4224                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  4225   001834  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4226   001836  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4227   001838  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4228   00183A  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4229   00183E                     	if	1	;There is more than 1 active tblptr byte
  4230   00183E  0E08               	movlw	high __smallconst
  4231   001840  6EF7               	movwf	tblptrh,c
  4232   001842                     	endif
  4233   001842                     	if	0	;tblptru may be non-zero
  4234   001842                     	endif
  4235   001842                     	if	0	;tblptru may be non-zero
  4236   001842                     	endif
  4237   001842  0008               	tblrd		*
  4238   001844  50F5               	movf	tablat,w,c
  4239   001846  EC13  F00D         	call	i2_EscribeLCD_c
  4240   00184A  4A08               	infsnz	i2MensajeLCD_Var@i^0,f,c
  4241   00184C  2A09               	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  4242   00184E                     i2l2740:
  4243   00184E  C006  F001         	movff	i2MensajeLCD_Var@a,i2strlen@s
  4244   001852  ECCA  F00C         	call	i2_strlen	;wreg free
  4245   001856  5001               	movf	?i2_strlen^0,w,c
  4246   001858  5C08               	subwf	i2MensajeLCD_Var@i^0,w,c
  4247   00185A  5002               	movf	(?i2_strlen+1)^0,w,c
  4248   00185C  5809               	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  4249   00185E  B0D8               	btfsc	status,0,c
  4250   001860  0012               	return	
  4251   001862  D7DC               	goto	i2l2732
  4252   001864                     __end_ofi2_MensajeLCD_Var:
  4253                           	callstack 0
  4254                           
  4255 ;; *************** function i2_strlen *****************
  4256 ;; Defined at:
  4257 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  s               1    0[COMRAM] PTR const unsigned char 
  4260 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  4261 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  4262 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  4263 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  4266 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  4267 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  4268 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  4269 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  2    0[COMRAM] unsigned int 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4279 ;;      Params:         2       0       0       0       0       0       0       0       0
  4280 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4282 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4283 ;;Total ram usage:        3 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		i2_MensajeLCD_Var
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text23
  4293   001994                     __ptext23:
  4294                           	callstack 0
  4295   001994                     i2_strlen:
  4296                           	callstack 23
  4297                           
  4298                           ;incstack = 0
  4299   001994  C001  F003         	movff	i2strlen@s,i2strlen@cp
  4300   001998  D001               	goto	i2l2376
  4301   00199A                     i2l2374:
  4302   00199A  2A03               	incf	i2strlen@cp^0,f,c
  4303   00199C                     i2l2376:
  4304   00199C  C003  FFF6         	movff	i2strlen@cp,tblptrl
  4305   0019A0                     	if	1	;There is more than 1 active tblptr byte
  4306   0019A0  0E08               	movlw	high __smallconst
  4307   0019A2  6EF7               	movwf	tblptrh,c
  4308   0019A4                     	endif
  4309   0019A4                     	if	0	;tblptru may be non-zero
  4310   0019A4                     	endif
  4311   0019A4                     	if	0	;tblptru may be non-zero
  4312   0019A4                     	endif
  4313   0019A4  0008               	tblrd		*
  4314   0019A6  50F5               	movf	tablat,w,c
  4315   0019A8  0900               	iorlw	0
  4316   0019AA  A4D8               	btfss	status,2,c
  4317   0019AC  D7F6               	goto	i2l2374
  4318   0019AE  5001               	movf	i2strlen@s^0,w,c
  4319   0019B0  5C03               	subwf	i2strlen@cp^0,w,c
  4320   0019B2  6E01               	movwf	?i2_strlen^0,c
  4321   0019B4  6A02               	clrf	(?i2_strlen+1)^0,c
  4322   0019B6  BE01               	btfsc	?i2_strlen^0,7,c
  4323   0019B8  0602               	decf	(?i2_strlen+1)^0,f,c
  4324   0019BA  0012               	return		;funcret
  4325   0019BC                     __end_ofi2_strlen:
  4326                           	callstack 0
  4327                           
  4328 ;; *************** function i2_EscribeLCD_c *****************
  4329 ;; Defined at:
  4330 ;;		line 117 in file "LibLCDXC8.h"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  a               1    wreg     unsigned char 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  a               1    4[COMRAM] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0
  4345 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4347 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4348 ;;Total ram usage:        1 bytes
  4349 ;; Hardware stack levels used: 1
  4350 ;; Hardware stack levels required when called: 2
  4351 ;; This function calls:
  4352 ;;		i2_EnviaDato
  4353 ;;		i2_HabilitaLCD
  4354 ;;		i2_RetardoLCD
  4355 ;; This function is called by:
  4356 ;;		i2_MensajeLCD_Var
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text24
  4361   001A26                     __ptext24:
  4362                           	callstack 0
  4363   001A26                     i2_EscribeLCD_c:
  4364                           	callstack 21
  4365                           
  4366                           ;incstack = 0
  4367                           ;i2EscribeLCD_c@a stored from wreg
  4368   001A26  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4369                           
  4370                           ;LibLCDXC8.h: 121: LATE0=1;
  4371   001A28  808D               	bsf	3981,0,c	;volatile
  4372                           
  4373                           ;LibLCDXC8.h: 122: EnviaDato(a);
  4374   001A2A  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4375   001A2C  EC55  F00C         	call	i2_EnviaDato
  4376                           
  4377                           ;LibLCDXC8.h: 123: HabilitaLCD();
  4378   001A30  EC44  F00D         	call	i2_HabilitaLCD	;wreg free
  4379                           
  4380                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  4381   001A34  0E04               	movlw	4
  4382   001A36  EC8C  F00B         	call	i2_RetardoLCD
  4383   001A3A  0012               	return		;funcret
  4384   001A3C                     __end_ofi2_EscribeLCD_c:
  4385                           	callstack 0
  4386                           
  4387 ;; *************** function i2_DireccionaLCD *****************
  4388 ;; Defined at:
  4389 ;;		line 273 in file "LibLCDXC8.h"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  a               1    wreg     unsigned char 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  a               1    4[COMRAM] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      void 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4403 ;;      Params:         0       0       0       0       0       0       0       0       0
  4404 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4406 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4407 ;;Total ram usage:        1 bytes
  4408 ;; Hardware stack levels used: 1
  4409 ;; Hardware stack levels required when called: 2
  4410 ;; This function calls:
  4411 ;;		i2_EnviaDato
  4412 ;;		i2_HabilitaLCD
  4413 ;;		i2_RetardoLCD
  4414 ;; This function is called by:
  4415 ;;		_ISR
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text25
  4420   001A3C                     __ptext25:
  4421                           	callstack 0
  4422   001A3C                     i2_DireccionaLCD:
  4423                           	callstack 22
  4424                           
  4425                           ;incstack = 0
  4426                           ;i2DireccionaLCD@a stored from wreg
  4427   001A3C  6E05               	movwf	i2DireccionaLCD@a^0,c
  4428                           
  4429                           ;LibLCDXC8.h: 276: LATE0=0;
  4430   001A3E  908D               	bcf	3981,0,c	;volatile
  4431                           
  4432                           ;LibLCDXC8.h: 277: EnviaDato(a);
  4433   001A40  5005               	movf	i2DireccionaLCD@a^0,w,c
  4434   001A42  EC55  F00C         	call	i2_EnviaDato
  4435                           
  4436                           ;LibLCDXC8.h: 278: HabilitaLCD();
  4437   001A46  EC44  F00D         	call	i2_HabilitaLCD	;wreg free
  4438                           
  4439                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  4440   001A4A  0E04               	movlw	4
  4441   001A4C  EC8C  F00B         	call	i2_RetardoLCD
  4442   001A50  0012               	return		;funcret
  4443   001A52                     __end_ofi2_DireccionaLCD:
  4444                           	callstack 0
  4445                           
  4446 ;; *************** function i2_BorraLCD *****************
  4447 ;; Defined at:
  4448 ;;		line 103 in file "LibLCDXC8.h"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4465 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4466 ;;Total ram usage:        0 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; Hardware stack levels required when called: 2
  4469 ;; This function calls:
  4470 ;;		i2_EnviaDato
  4471 ;;		i2_HabilitaLCD
  4472 ;;		i2_RetardoLCD
  4473 ;; This function is called by:
  4474 ;;		_ISR
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text26
  4479   001A66                     __ptext26:
  4480                           	callstack 0
  4481   001A66                     i2_BorraLCD:
  4482                           	callstack 22
  4483                           
  4484                           ;LibLCDXC8.h: 105: LATE0=0;
  4485                           
  4486                           ;incstack = 0
  4487   001A66  908D               	bcf	3981,0,c	;volatile
  4488                           
  4489                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  4490   001A68  0E01               	movlw	1
  4491   001A6A  EC55  F00C         	call	i2_EnviaDato
  4492                           
  4493                           ;LibLCDXC8.h: 107: HabilitaLCD();
  4494   001A6E  EC44  F00D         	call	i2_HabilitaLCD	;wreg free
  4495                           
  4496                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  4497   001A72  0E02               	movlw	2
  4498   001A74  EC8C  F00B         	call	i2_RetardoLCD
  4499   001A78  0012               	return		;funcret
  4500   001A7A                     __end_ofi2_BorraLCD:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function i2_EnviaDato *****************
  4504 ;; Defined at:
  4505 ;;		line 52 in file "LibLCDXC8.h"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  a               1    wreg     unsigned char 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  a               1    3[COMRAM] unsigned char 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, status,0, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4519 ;;      Params:         0       0       0       0       0       0       0       0       0
  4520 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4521 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4522 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4523 ;;Total ram usage:        2 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; Hardware stack levels required when called: 1
  4526 ;; This function calls:
  4527 ;;		i2_HabilitaLCD
  4528 ;;		i2_RetardoLCD
  4529 ;; This function is called by:
  4530 ;;		i2_BorraLCD
  4531 ;;		i2_EscribeLCD_c
  4532 ;;		i2_DireccionaLCD
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text27
  4537   0018AA                     __ptext27:
  4538                           	callstack 0
  4539   0018AA                     i2_EnviaDato:
  4540                           	callstack 21
  4541                           
  4542                           ;incstack = 0
  4543                           ;i2EnviaDato@a stored from wreg
  4544   0018AA  6E04               	movwf	i2EnviaDato@a^0,c
  4545                           
  4546                           ;LibLCDXC8.h: 53: if(interfaz==4){
  4547   0018AC  0E04               	movlw	4
  4548   0018AE  1850               	xorwf	_interfaz^0,w,c
  4549   0018B0  A4D8               	btfss	status,2,c
  4550   0018B2  D017               	goto	i2l2198
  4551                           
  4552                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4553   0018B4  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4554   0018B8  0EF0               	movlw	240
  4555   0018BA  1603               	andwf	??i2_EnviaDato^0,f,c
  4556   0018BC  508C               	movf	140,w,c	;volatile
  4557   0018BE  0B0F               	andlw	15
  4558   0018C0  1003               	iorwf	??i2_EnviaDato^0,w,c
  4559   0018C2  6E8C               	movwf	140,c	;volatile
  4560                           
  4561                           ;LibLCDXC8.h: 55: HabilitaLCD();
  4562   0018C4  EC44  F00D         	call	i2_HabilitaLCD	;wreg free
  4563                           
  4564                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  4565   0018C8  0E01               	movlw	1
  4566   0018CA  EC8C  F00B         	call	i2_RetardoLCD
  4567                           
  4568                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  4569   0018CE  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4570   0018D2  3A03               	swapf	??i2_EnviaDato^0,f,c
  4571   0018D4  0EF0               	movlw	240
  4572   0018D6  1603               	andwf	??i2_EnviaDato^0,f,c
  4573   0018D8  508C               	movf	140,w,c	;volatile
  4574   0018DA  0B0F               	andlw	15
  4575   0018DC  1003               	iorwf	??i2_EnviaDato^0,w,c
  4576   0018DE  6E8C               	movwf	140,c	;volatile
  4577                           
  4578                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  4579   0018E0  0012               	return	
  4580   0018E2                     i2l2198:
  4581   0018E2  0E08               	movlw	8
  4582   0018E4  1850               	xorwf	_interfaz^0,w,c
  4583   0018E6  A4D8               	btfss	status,2,c
  4584   0018E8  0012               	return	
  4585                           
  4586                           ;LibLCDXC8.h: 59: LATD=a;
  4587   0018EA  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4588   0018EE  0012               	return		;funcret
  4589   0018F0                     __end_ofi2_EnviaDato:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function i2_RetardoLCD *****************
  4593 ;; Defined at:
  4594 ;;		line 309 in file "LibLCDXC8.h"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  a               1    wreg     unsigned char 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  a               1    1[COMRAM] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, status,0
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0
  4609 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4610 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4611 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4612 ;;Total ram usage:        2 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		i2_EnviaDato
  4618 ;;		i2_BorraLCD
  4619 ;;		i2_EscribeLCD_c
  4620 ;;		i2_DireccionaLCD
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text28
  4625   001718                     __ptext28:
  4626                           	callstack 0
  4627   001718                     i2_RetardoLCD:
  4628                           	callstack 22
  4629                           
  4630                           ;incstack = 0
  4631                           ;i2RetardoLCD@a stored from wreg
  4632   001718  6E02               	movwf	i2RetardoLCD@a^0,c
  4633                           
  4634                           ;LibLCDXC8.h: 310: switch(a){
  4635   00171A  D01B               	goto	i2l2168
  4636   00171C                     i2l2158:
  4637   00171C  0E05               	movlw	5
  4638   00171E  6E01               	movwf	??i2_RetardoLCD^0,c
  4639   001720  0EDE               	movlw	222
  4640   001722                     i2u486_47:
  4641   001722  2EE8               	decfsz	wreg,f,c
  4642   001724  D7FE               	bra	i2u486_47
  4643   001726  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4644   001728  D7FC               	bra	i2u486_47
  4645                           
  4646                           ;LibLCDXC8.h: 313: break;
  4647   00172A  0012               	return	
  4648   00172C                     i2l2160:
  4649   00172C  0E53               	movlw	83
  4650   00172E                     i2u487_47:
  4651   00172E  2EE8               	decfsz	wreg,f,c
  4652   001730  D7FE               	bra	i2u487_47
  4653   001732  F000               	nop	
  4654                           
  4655                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4656   001734  0E35               	movlw	53
  4657   001736                     i2u488_47:
  4658   001736  2EE8               	decfsz	wreg,f,c
  4659   001738  D7FE               	bra	i2u488_47
  4660   00173A  F000               	nop	
  4661                           
  4662                           ;LibLCDXC8.h: 317: break;
  4663   00173C  0012               	return	
  4664   00173E                     i2l2162:
  4665   00173E  0E08               	movlw	8
  4666   001740                     i2u489_47:
  4667   001740  2EE8               	decfsz	wreg,f,c
  4668   001742  D7FE               	bra	i2u489_47
  4669   001744  F000               	nop	
  4670                           
  4671                           ;LibLCDXC8.h: 320: break;
  4672   001746  0012               	return	
  4673   001748                     i2l2164:
  4674   001748  0E03               	movlw	3
  4675   00174A                     i2u490_47:
  4676   00174A  2EE8               	decfsz	wreg,f,c
  4677   00174C  D7FE               	bra	i2u490_47
  4678   00174E  F000               	nop	
  4679                           
  4680                           ;LibLCDXC8.h: 323: break;
  4681   001750  0012               	return	
  4682   001752                     i2l2168:
  4683   001752  5002               	movf	i2RetardoLCD@a^0,w,c
  4684                           
  4685                           ; Switch size 1, requested type "simple"
  4686                           ; Number of cases is 4, Range of values is 1 to 4
  4687                           ; switch strategies available:
  4688                           ; Name         Instructions Cycles
  4689                           ; simple_byte           13     7 (average)
  4690                           ;	Chosen strategy is simple_byte
  4691   001754  0A01               	xorlw	1	; case 1
  4692   001756  B4D8               	btfsc	status,2,c
  4693   001758  D7E1               	goto	i2l2158
  4694   00175A  0A03               	xorlw	3	; case 2
  4695   00175C  B4D8               	btfsc	status,2,c
  4696   00175E  D7E6               	goto	i2l2160
  4697   001760  0A01               	xorlw	1	; case 3
  4698   001762  B4D8               	btfsc	status,2,c
  4699   001764  D7EC               	goto	i2l2162
  4700   001766  0A07               	xorlw	7	; case 4
  4701   001768  A4D8               	btfss	status,2,c
  4702   00176A  0012               	return	
  4703   00176C  D7ED               	goto	i2l2164
  4704   00176E                     __end_ofi2_RetardoLCD:
  4705                           	callstack 0
  4706                           
  4707 ;; *************** function i2_HabilitaLCD *****************
  4708 ;; Defined at:
  4709 ;;		line 96 in file "LibLCDXC8.h"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      void 
  4716 ;; Registers used:
  4717 ;;		wreg
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4723 ;;      Params:         0       0       0       0       0       0       0       0       0
  4724 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4726 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4727 ;;Total ram usage:        0 bytes
  4728 ;; Hardware stack levels used: 1
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		i2_EnviaDato
  4733 ;;		i2_BorraLCD
  4734 ;;		i2_EscribeLCD_c
  4735 ;;		i2_DireccionaLCD
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text29
  4740   001A88                     __ptext29:
  4741                           	callstack 0
  4742   001A88                     i2_HabilitaLCD:
  4743                           	callstack 22
  4744                           
  4745                           ;LibLCDXC8.h: 98: LATE1=1;
  4746                           
  4747                           ;incstack = 0
  4748   001A88  828D               	bsf	3981,1,c	;volatile
  4749                           
  4750                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4751   001A8A  0E03               	movlw	3
  4752   001A8C                     i2u491_47:
  4753   001A8C  2EE8               	decfsz	wreg,f,c
  4754   001A8E  D7FE               	bra	i2u491_47
  4755   001A90  F000               	nop	
  4756                           
  4757                           ;LibLCDXC8.h: 101: LATE1=0;
  4758   001A92  928D               	bcf	3981,1,c	;volatile
  4759   001A94  0012               	return		;funcret
  4760   001A96                     __end_ofi2_HabilitaLCD:
  4761                           	callstack 0
  4762                           
  4763                           	psect	rparam
  4764   000000                     
  4765                           	psect	temp
  4766   000051                     btemp:
  4767                           	callstack 0
  4768   000051                     	ds	1
  4769   000000                     int$flags	set	btemp
  4770   000000                     wtemp8	set	btemp+1
  4771   000000                     ttemp5	set	btemp+1
  4772   000000                     ttemp6	set	btemp+4
  4773   000000                     ttemp7	set	btemp+8
  4774                           
  4775                           	psect	idloc
  4776                           
  4777                           ;Config register IDLOC0 @ 0x200000
  4778                           ;	unspecified, using default values
  4779   200000                     	org	2097152
  4780   200000  FF                 	db	255
  4781                           
  4782                           ;Config register IDLOC1 @ 0x200001
  4783                           ;	unspecified, using default values
  4784   200001                     	org	2097153
  4785   200001  FF                 	db	255
  4786                           
  4787                           ;Config register IDLOC2 @ 0x200002
  4788                           ;	unspecified, using default values
  4789   200002                     	org	2097154
  4790   200002  FF                 	db	255
  4791                           
  4792                           ;Config register IDLOC3 @ 0x200003
  4793                           ;	unspecified, using default values
  4794   200003                     	org	2097155
  4795   200003  FF                 	db	255
  4796                           
  4797                           ;Config register IDLOC4 @ 0x200004
  4798                           ;	unspecified, using default values
  4799   200004                     	org	2097156
  4800   200004  FF                 	db	255
  4801                           
  4802                           ;Config register IDLOC5 @ 0x200005
  4803                           ;	unspecified, using default values
  4804   200005                     	org	2097157
  4805   200005  FF                 	db	255
  4806                           
  4807                           ;Config register IDLOC6 @ 0x200006
  4808                           ;	unspecified, using default values
  4809   200006                     	org	2097158
  4810   200006  FF                 	db	255
  4811                           
  4812                           ;Config register IDLOC7 @ 0x200007
  4813                           ;	unspecified, using default values
  4814   200007                     	org	2097159
  4815   200007  FF                 	db	255
  4816                           
  4817                           	psect	config
  4818                           
  4819                           ;Config register CONFIG1L @ 0x300000
  4820                           ;	unspecified, using default values
  4821                           ;	PLL Prescaler Selection bits
  4822                           ;	PLLDIV = 0x0, unprogrammed default
  4823                           ;	System Clock Postscaler Selection bits
  4824                           ;	CPUDIV = 0x0, unprogrammed default
  4825                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4826                           ;	USBDIV = 0x0, unprogrammed default
  4827   300000                     	org	3145728
  4828   300000  00                 	db	0
  4829                           
  4830                           ;Config register CONFIG1H @ 0x300001
  4831                           ;	Oscillator Selection bits
  4832                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4833                           ;	Fail-Safe Clock Monitor Enable bit
  4834                           ;	FCMEN = 0x0, unprogrammed default
  4835                           ;	Internal/External Oscillator Switchover bit
  4836                           ;	IESO = 0x0, unprogrammed default
  4837   300001                     	org	3145729
  4838   300001  09                 	db	9
  4839                           
  4840                           ;Config register CONFIG2L @ 0x300002
  4841                           ;	unspecified, using default values
  4842                           ;	Power-up Timer Enable bit
  4843                           ;	PWRT = 0x1, unprogrammed default
  4844                           ;	Brown-out Reset Enable bits
  4845                           ;	BOR = 0x3, unprogrammed default
  4846                           ;	Brown-out Reset Voltage bits
  4847                           ;	BORV = 0x3, unprogrammed default
  4848                           ;	USB Voltage Regulator Enable bit
  4849                           ;	VREGEN = 0x0, unprogrammed default
  4850   300002                     	org	3145730
  4851   300002  1F                 	db	31
  4852                           
  4853                           ;Config register CONFIG2H @ 0x300003
  4854                           ;	Watchdog Timer Enable bit
  4855                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4856                           ;	Watchdog Timer Postscale Select bits
  4857                           ;	WDTPS = 0xF, unprogrammed default
  4858   300003                     	org	3145731
  4859   300003  1E                 	db	30
  4860                           
  4861                           ; Padding undefined space
  4862   300004                     	org	3145732
  4863   300004  FF                 	db	255
  4864                           
  4865                           ;Config register CONFIG3H @ 0x300005
  4866                           ;	CCP2 MUX bit
  4867                           ;	CCP2MX = 0x1, unprogrammed default
  4868                           ;	PORTB A/D Enable bit
  4869                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4870                           ;	Low-Power Timer 1 Oscillator Enable bit
  4871                           ;	LPT1OSC = 0x0, unprogrammed default
  4872                           ;	MCLR Pin Enable bit
  4873                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4874   300005                     	org	3145733
  4875   300005  81                 	db	129
  4876                           
  4877                           ;Config register CONFIG4L @ 0x300006
  4878                           ;	Stack Full/Underflow Reset Enable bit
  4879                           ;	STVREN = 0x1, unprogrammed default
  4880                           ;	Single-Supply ICSP Enable bit
  4881                           ;	LVP = OFF, Single-Supply ICSP disabled
  4882                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4883                           ;	ICPRT = 0x0, unprogrammed default
  4884                           ;	Extended Instruction Set Enable bit
  4885                           ;	XINST = 0x0, unprogrammed default
  4886                           ;	Background Debugger Enable bit
  4887                           ;	DEBUG = 0x1, unprogrammed default
  4888   300006                     	org	3145734
  4889   300006  81                 	db	129
  4890                           
  4891                           ; Padding undefined space
  4892   300007                     	org	3145735
  4893   300007  FF                 	db	255
  4894                           
  4895                           ;Config register CONFIG5L @ 0x300008
  4896                           ;	unspecified, using default values
  4897                           ;	Code Protection bit
  4898                           ;	CP0 = 0x1, unprogrammed default
  4899                           ;	Code Protection bit
  4900                           ;	CP1 = 0x1, unprogrammed default
  4901                           ;	Code Protection bit
  4902                           ;	CP2 = 0x1, unprogrammed default
  4903                           ;	Code Protection bit
  4904                           ;	CP3 = 0x1, unprogrammed default
  4905   300008                     	org	3145736
  4906   300008  0F                 	db	15
  4907                           
  4908                           ;Config register CONFIG5H @ 0x300009
  4909                           ;	unspecified, using default values
  4910                           ;	Boot Block Code Protection bit
  4911                           ;	CPB = 0x1, unprogrammed default
  4912                           ;	Data EEPROM Code Protection bit
  4913                           ;	CPD = 0x1, unprogrammed default
  4914   300009                     	org	3145737
  4915   300009  C0                 	db	192
  4916                           
  4917                           ;Config register CONFIG6L @ 0x30000A
  4918                           ;	unspecified, using default values
  4919                           ;	Write Protection bit
  4920                           ;	WRT0 = 0x1, unprogrammed default
  4921                           ;	Write Protection bit
  4922                           ;	WRT1 = 0x1, unprogrammed default
  4923                           ;	Write Protection bit
  4924                           ;	WRT2 = 0x1, unprogrammed default
  4925                           ;	Write Protection bit
  4926                           ;	WRT3 = 0x1, unprogrammed default
  4927   30000A                     	org	3145738
  4928   30000A  0F                 	db	15
  4929                           
  4930                           ;Config register CONFIG6H @ 0x30000B
  4931                           ;	unspecified, using default values
  4932                           ;	Configuration Register Write Protection bit
  4933                           ;	WRTC = 0x1, unprogrammed default
  4934                           ;	Boot Block Write Protection bit
  4935                           ;	WRTB = 0x1, unprogrammed default
  4936                           ;	Data EEPROM Write Protection bit
  4937                           ;	WRTD = 0x1, unprogrammed default
  4938   30000B                     	org	3145739
  4939   30000B  E0                 	db	224
  4940                           
  4941                           ;Config register CONFIG7L @ 0x30000C
  4942                           ;	unspecified, using default values
  4943                           ;	Table Read Protection bit
  4944                           ;	EBTR0 = 0x1, unprogrammed default
  4945                           ;	Table Read Protection bit
  4946                           ;	EBTR1 = 0x1, unprogrammed default
  4947                           ;	Table Read Protection bit
  4948                           ;	EBTR2 = 0x1, unprogrammed default
  4949                           ;	Table Read Protection bit
  4950                           ;	EBTR3 = 0x1, unprogrammed default
  4951   30000C                     	org	3145740
  4952   30000C  0F                 	db	15
  4953                           
  4954                           ;Config register CONFIG7H @ 0x30000D
  4955                           ;	unspecified, using default values
  4956                           ;	Boot Block Table Read Protection bit
  4957                           ;	EBTRB = 0x1, unprogrammed default
  4958   30000D                     	org	3145741
  4959   30000D  40                 	db	64
  4960                           tosu	equ	0xFFF
  4961                           tosh	equ	0xFFE
  4962                           tosl	equ	0xFFD
  4963                           stkptr	equ	0xFFC
  4964                           pclatu	equ	0xFFB
  4965                           pclath	equ	0xFFA
  4966                           pcl	equ	0xFF9
  4967                           tblptru	equ	0xFF8
  4968                           tblptrh	equ	0xFF7
  4969                           tblptrl	equ	0xFF6
  4970                           tablat	equ	0xFF5
  4971                           prodh	equ	0xFF4
  4972                           prodl	equ	0xFF3
  4973                           indf0	equ	0xFEF
  4974                           postinc0	equ	0xFEE
  4975                           postdec0	equ	0xFED
  4976                           preinc0	equ	0xFEC
  4977                           plusw0	equ	0xFEB
  4978                           fsr0h	equ	0xFEA
  4979                           fsr0l	equ	0xFE9
  4980                           wreg	equ	0xFE8
  4981                           indf1	equ	0xFE7
  4982                           postinc1	equ	0xFE6
  4983                           postdec1	equ	0xFE5
  4984                           preinc1	equ	0xFE4
  4985                           plusw1	equ	0xFE3
  4986                           fsr1h	equ	0xFE2
  4987                           fsr1l	equ	0xFE1
  4988                           bsr	equ	0xFE0
  4989                           indf2	equ	0xFDF
  4990                           postinc2	equ	0xFDE
  4991                           postdec2	equ	0xFDD
  4992                           preinc2	equ	0xFDC
  4993                           plusw2	equ	0xFDB
  4994                           fsr2h	equ	0xFDA
  4995                           fsr2l	equ	0xFD9
  4996                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    0
    Data        4
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      80
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Imprimir_Resultado
    _factorial_function->___wmul
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _Imprimir_Resultado->___aldiv
    ___lwdiv->___wmul
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_Imprimir_Resultado

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   16764
                                             35 COMRAM     4     4      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                 _Imprimir_Resultado
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
                             ___lmul
                            ___lwdiv
                             ___wmul
                 _factorial_function
 ---------------------------------------------------------------------------------
 (1) _factorial_function                                   6     2      4    1141
                                             19 COMRAM     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     310
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     155
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Resultado                                  19    15      4    9104
                                             27 COMRAM     8     4      4
                                              0 BANK0     11    11      0
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     952
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     781
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8    1896
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     613
                                             13 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             13 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1    1913
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     220
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0     124
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      31
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0     650
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Var                                     4     3      1     408
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Imprimir_Resultado
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
       _EscribeLCD_c
       _strlen
     ___aldiv
     ___almod
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
   ___lmul
   ___lwdiv
   ___wmul
   _factorial_function
     ___wmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_DireccionaLCD
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      50       1       85.1%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B      29        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 18 11:30:23 2023

                         _a 0036                           _b 0034                           _i 0040  
                         _m 0049                           _r 002C            i2DireccionaLCD@a 0005  
                        _PD 007E82                          _TO 007E83                          _n1 0044  
                        _n2 0042                  EnviaDato@a 0011                          _op 004F  
       ___wmul@multiplicand 0010               ??_LeerTeclado 000E               _InicializaLCD 146C  
                       l262 1330                         l264 1338                         l256 1328  
                       l281 1388                         l273 1364                         l291 13B4  
                       l283 1390                         l275 136C                         l179 08CC  
                       l268 135C                         l287 13A4                         l279 1380  
                       l288 13BC                         l289 13AC                         l838 17B6  
                       l848 1928                         _GIE 007F97                         _RB4 007C0C  
                       _RB5 007C0D                         _RB6 007C0E                         _RB7 007C0F  
                       _ISR 0008                         _POR 007E81                         _n1c 004E  
                       _n2c 004D                         _res 0028                         wreg 000FE8  
                      ?_ISR 0001            ??i2_EscribeLCD_c 0005                        l3130 16C6  
                      l3210 167C                        l3132 16D6                        l3140 16FC  
                      l3134 16E8                        l3214 1690                        l2600 15CC  
                      l3136 16F2                        l3152 189C                        l3240 128C  
                      l3232 125E                        l3304 1784                        l2520 1374  
                      l2602 160E                        l3250 12C0                        l3226 1246  
                      l3306 178C                        l3410 0F94                        l3402 0F30  
                      l3316 17AC                        l3332 191E                        l3324 18FE  
                      l2460 131E                        l3166 1972                        l3238 1280  
                      l3254 12CE                        l3270 13DC                        l3326 1906  
                      l3430 1030                        l3342 147E                        l3168 1974  
                      l3184 17CA                        l3192 17FC                        l3280 140E  
                      l3352 149C                        l3258 12E4                        l3290 1444  
                      l3274 13F0                        l3450 109C                        l3442 1072  
                      l3418 0FD6                        l3362 14BA                        l2548 1398  
                      l2484 1340                        l3700 0B74                        l2590 15BE  
                      l2582 15AE                        l3294 145A                        l3286 1436  
                      l3278 1402                        l3446 108E                        l3382 14F2  
                      l3614 0A1A                        l3534 08DC                        l2584 15B2  
                      l3472 11CE                        l3464 1178                        l3456 10DA  
                      l2496 1352                        l3624 0A38                        l3552 094A  
                      l3536 08F2                        l2594 15C2                        l2586 15B6  
                      l3482 11FE                        l3474 11D4                        l3810 0DD4  
                      l3802 0D8A                        l3650 0AA2                        l3538 08F6  
                      l2596 15C6                        l2588 15BA                        l3820 0E16  
                      l3732 0BEC                        l3708 0B8C                        l3652 0AA8  
                      l3572 0996                        l3478 11E2                        l3494 1626  
                      l3822 0E1C                        l3814 0DE2                        l3806 0DA0  
                      l3670 0AF4                        l3488 1220                        l3824 0E32  
                      l3498 1648                        l3834 0E52                        l3770 0C8E  
                      l3818 0DF4                        l3674 0B06                        l3578 09AE  
                      l3780 0CEE                        l3772 0CC4                        l3756 0C42  
                      l3588 09CC                        l3846 0EC0                        l3776 0CD0  
                      l3768 0C76                        l3848 0EC6                        l3794 0D68  
                      l3788 0D54                        STR_1 086D                        STR_2 0875  
                      STR_3 0810                        STR_4 0830                        STR_5 0850  
                      STR_6 0830                        STR_7 0801                        STR_8 0830  
                      STR_9 0845                        u2020 19F4                        u2100 1304  
                      _LATB 000F8A                        _LATC 000F8B                        u4000 0962  
                      _LATD 000F8C                        u4120 0A50                        u4060 09E4  
                      u3610 1412                        u3550 1290                        u4190 0A86  
                      u3800 1000                        u4600 0C34                        u3650 1790  
                      u3810 1012                        u4290 0AE8                        u3820 1044  
                      u3830 1056                        u4390 0B56                        u3680 190A  
                      u3840 1068                        u3930 1658                        u4490 0BCE  
                      u3860 1110                        u3780 0FD4                        u4807 16CC  
                      u4817 16D8                        u3890 11C4                        u4827 16E0  
                      u4837 16EA                        u4847 16F4                        u4857 1A7E  
                      u4777 08E6                        u4787 09A0                        u4797 0ECC  
                      _RBPU 007F8F                        _TMR0 000FD6              ??_EscribeLCD_c 0012  
                      _main 087C                        fsr1l 000FE1                        btemp 0051  
                      prodh 000FF4                        prodl 000FF3                        start 000E  
              ___param_bank 000000                       ??_ISR 000A             i2_DireccionaLCD 1A3C  
            ?_InicializaLCD 0001             __end_of___aldiv 12F6             __end_of___almod 146C  
                     ?_main 0001                       STR_10 0830                       STR_11 082C  
                     STR_12 085A                       STR_13 0839                       STR_14 0864  
                     STR_15 081E               EscribeLCD_c@a 0012                       _T0CON 000FD5  
                     _LATE0 007C68                       _LATE1 007C69                       _LATE2 007C6A  
                     _LATC7 007C5F             __end_of___lwdiv 17C0             __end_of___lwmod 1932  
                     i2l324 1584                       i2l327 1586                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
       ___lmul@multiplicand 0012                       _Tecla 0048         __end_of_LeerTeclado 13C0  
                     _color 003E                 ?i2_BorraLCD 0001                       tablat 000FF5  
               _HabilitaLCD 1A7A                       ttemp5 0052                       ttemp6 0055  
                     ttemp7 0059                       status 000FD8                       wtemp8 0052  
          __end_ofi2_strlen 19BC            __end_of_BorraLCD 1A66            __end_of_ColorRGB 1614  
           __initialization 1932                __end_of_main 0ED8            i2_MensajeLCD_Var 1812  
                    ??_main 0024        __end_of_ConfiguraLCD 19FA               __activetblptr 000002  
                i2strlen@cp 0003          _Imprimir_Resultado 0ED8                      _ADCON1 000FC1  
            DireccionaLCD@a 0012            _contador_digitos 003A                      i2l3102 1534  
                    i2l2160 172C                      i2l3104 153C                      i2l2162 173E  
                    i2l2164 1748                      i2l3108 1550                      i2l2158 171C  
                    i2l2168 1752                      i2l2198 18E2                      i2l2374 199A  
                    i2l2376 199C                      i2l2732 181C                      i2l2740 184E  
                    _OSCCON 000FD3                      _TMR0IE 007F95                      _TMR0IF 007F92  
                    _TMR0ON 007EAF         ?_Imprimir_Resultado 001C       __end_of_DireccionaLCD 1A26  
                _RetardoLCD 16C2     __end_ofi2_DireccionaLCD 1A52                      ___lmul 166C  
                 ??___aldiv 0016                   ??___almod 0016                      ___wmul 19BC  
                 ??___lwdiv 0018                   ??___lwmod 0012             ??_InicializaLCD 0012  
                    clear_0 1958                      isa$std 000001        ??_Imprimir_Resultado 0020  
      __end_of_EscribeLCD_c 1A10                      _strlen 196C                 _LeerTeclado 12F6  
              ?i2_EnviaDato 0001                __pdataCOMRAM 004D                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
__end_of_factorial_function 166C       __end_ofi2_HabilitaLCD 1A96                  __accesstop 0060  
   __end_of__initialization 195E               ___rparam_used 000001              __pcstackCOMRAM 0001  
         __end_of_EnviaDato 18AA                   ?i2_strlen 0001                   ?_BorraLCD 0001  
                 ?_ColorRGB 0001              _MensajeLCD_Var 17C0             MensajeLCD_Var@a 0013  
           MensajeLCD_Var@i 0015      factorial_function@fact 0018                 ?_RetardoLCD 0001  
               RetardoLCD@a 000F            ?i2_DireccionaLCD 0001                     ?___lmul 000E  
                   ?___wmul 000E              ___lmul@product 0016                     ?_strlen 000E  
    __end_of_MensajeLCD_Var 1812                  ??i2_strlen 0003                ??i2_BorraLCD 0005  
                ??_BorraLCD 0012                  ??_ColorRGB 000E    __end_ofi2_MensajeLCD_Var 1864  
              ?_HabilitaLCD 0001                _ConfiguraLCD 19E2                     __Hparam 0000  
                   __Lparam 0000                     ___aldiv 122A                     ___almod 13C0  
                   ___lwdiv 176E                     ___lwmod 18F0                __psmallconst 0800  
        __end_ofi2_BorraLCD 1A7A         factorial_function@a 0014                     __pcinit 1932  
                   __ramtop 0800                     __ptext0 087C                     __ptext1 1614  
                   __ptext2 12F6                     __ptext3 146C                     __ptext4 1A52  
                   __ptext5 0ED8                     __ptext6 19BC                     __ptext7 18F0  
                   __ptext8 176E                     __ptext9 166C            ___aldiv@dividend 000E  
           ?_MensajeLCD_Var 0013              __pintcode_body 1508        end_of_initialization 195E  
             __Lmediumconst 0000                     int_func 1508                _EscribeLCD_c 19FA  
          ___aldiv@quotient 0018                     postdec1 000FE5                     postinc0 000FEE  
                   strlen@s 000E                ?_LeerTeclado 0001             i2EscribeLCD_c@a 0005  
             ?i2_RetardoLCD 0001          _factorial_function 1614              __end_of___lmul 16C2  
            __end_of___wmul 19E2               __pidataCOMRAM 1A96         ?_factorial_function 0014  
     __end_of_InicializaLCD 1508                   _EnviaDato 1864              __end_of_strlen 1994  
       start_initialization 1932                 __end_of_ISR 159A        ??_factorial_function 0018  
                 i2strlen@s 0001              ??i2_RetardoLCD 0001                ??_RetardoLCD 000E  
                  ??___lmul 0016                    ??___wmul 0012                    ??_strlen 0010  
                ?_EnviaDato 0001                 __pbssCOMRAM 0028          __end_of_RetardoLCD 1718  
             __pcstackBANK0 0060           ?i2_MensajeLCD_Var 0006          ??i2_MensajeLCD_Var 0007  
             _DireccionaLCD 1A10              i2_EscribeLCD_c 1A26            ___lwdiv@dividend 0014  
                 _factorial 0046                   __pintcode 0008                    ?___aldiv 000E  
                  ?___almod 000E                    ?___lwdiv 0014                    ?___lwmod 000E  
          ___almod@dividend 000E            ??_MensajeLCD_Var 0014                 __smallconst 0800  
          ___lwdiv@quotient 0019             ___aldiv@divisor 0012             ___aldiv@counter 0016  
            ___wmul@product 0012               i2_HabilitaLCD 1A88              ?_DireccionaLCD 0001  
    __end_ofi2_EscribeLCD_c 1A3C                    i2u340_45 1548                    i2u343_40 156E  
                  i2u344_45 1570                    i2u339_40 1546                    i2u490_47 174A  
                  i2u491_47 1A8C                    i2u486_47 1722                    i2u487_47 172E  
                  i2u488_47 1736                    i2u489_47 1740      Imprimir_Resultado@flag 0060  
         ___wmul@multiplier 000E               ??i2_EnviaDato 0003        __end_ofi2_RetardoLCD 176E  
               ??_EnviaDato 0010                    i2_strlen 1994                    _BorraLCD 1A52  
                  _ColorRGB 159A           ___lmul@multiplier 000E                   copy_data0 1946  
            ?i2_HabilitaLCD 0001             ?i2_EscribeLCD_c 0001                    __Hrparam 0000  
                  __Lrparam 0000                i2EnviaDato@a 0004               ConfiguraLCD@a 000E  
                  _main$157 0026                    _main$158 0027           ??i2_DireccionaLCD 0005  
           ___lwdiv@divisor 0016             ___lwdiv@counter 0018                    __ptext10 13C0  
                  __ptext11 122A                    __ptext20 159A                    __ptext12 17C0  
                  __ptext13 196C                    __ptext22 1812                    __ptext14 19FA  
                  __ptext23 1994                    __ptext15 1A10                    __ptext24 1A26  
                  __ptext16 1864                    __ptext25 1A3C                    __ptext17 16C2  
                  __ptext26 1A66                    __ptext18 1A7A                    __ptext27 18AA  
                  __ptext19 19E2                    __ptext28 1718                    __ptext29 1A88  
       __end_ofi2_EnviaDato 18F0             ___almod@divisor 0012                    _contador 003C  
           ___almod@counter 0016             ??_DireccionaLCD 0012                    _interfaz 0050  
                  _partdecl 0030                    isa$xinst 000000                    _potencia 0047  
                  int$flags 0051  __end_of_Imprimir_Resultado 122A             ??i2_HabilitaLCD 0001  
                  intlevel2 0000               ??_HabilitaLCD 000E            ___lwmod@dividend 000E  
             ?_ConfiguraLCD 0001               i2RetardoLCD@a 0002                 i2_EnviaDato 18AA  
           ___lwmod@divisor 0010                    strlen@cp 0010             ___lwmod@counter 0012  
              ___aldiv@sign 0017         Imprimir_Resultado@i 0063         Imprimir_Resultado@j 0065  
       Imprimir_Resultado@k 0061         Imprimir_Resultado@r 001C                  i2_BorraLCD 1A66  
              ___almod@sign 0017              ??_ConfiguraLCD 000E  Imprimir_Resultado@potencia 0067  
             ?_EscribeLCD_c 0001                 _verificador 0038           i2MensajeLCD_Var@a 0006  
         i2MensajeLCD_Var@i 0008                i2_RetardoLCD 1718         __end_of_HabilitaLCD 1A88  
