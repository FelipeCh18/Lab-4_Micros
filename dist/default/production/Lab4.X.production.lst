

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 18 22:55:08 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Version 2.40
    50                           ; Generated 04/07/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   001AC2                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for _Numero_2_Char
    90   001AC2  20                 	db	32
    91                           
    92                           ;initializer for _Numero_1_Char
    93   001AC3  20                 	db	32
    94                           
    95                           ;initializer for _Operador
    96   001AC4  20                 	db	32
    97                           
    98                           ;initializer for _interfaz
    99   001AC5  08                 	db	8
   100   000000                     _LATC	set	3979
   101   000000                     _TRISC	set	3988
   102   000000                     _LATC7	set	31839
   103   000000                     _LATE2	set	31850
   104   000000                     _RB7	set	31759
   105   000000                     _RB6	set	31758
   106   000000                     _RB5	set	31757
   107   000000                     _POR	set	32385
   108   000000                     _PD	set	32386
   109   000000                     _TMR0ON	set	32431
   110   000000                     _GIE	set	32663
   111   000000                     _TMR0IE	set	32661
   112   000000                     _LATE1	set	31849
   113   000000                     _LATB	set	3978
   114   000000                     _LATD	set	3980
   115   000000                     _RB4	set	31756
   116   000000                     _TRISB	set	3987
   117   000000                     _TRISD	set	3989
   118   000000                     _ADCON1	set	4033
   119   000000                     _LATE0	set	31848
   120   000000                     _OSCCON	set	4051
   121   000000                     _T0CON	set	4053
   122   000000                     _TO	set	32387
   123   000000                     _RBPU	set	32655
   124   000000                     _TRISE	set	3990
   125   000000                     _TMR0IF	set	32658
   126   000000                     _TMR0	set	4054
   127                           
   128                           	psect	smallconst
   129   000800                     __psmallconst:
   130                           	callstack 0
   131   000800  00                 	db	0
   132   000801                     STR_7:
   133   000801  4D                 	db	77	;'M'
   134   000802  6F                 	db	111	;'o'
   135   000803  64                 	db	100	;'d'
   136   000804  6F                 	db	111	;'o'
   137   000805  20                 	db	32
   138   000806  46                 	db	70	;'F'
   139   000807  61                 	db	97	;'a'
   140   000808  63                 	db	99	;'c'
   141   000809  74                 	db	116	;'t'
   142   00080A  6F                 	db	111	;'o'
   143   00080B  72                 	db	114	;'r'
   144   00080C  69                 	db	105	;'i'
   145   00080D  61                 	db	97	;'a'
   146   00080E  6C                 	db	108	;'l'
   147   00080F  00                 	db	0
   148   000810                     STR_3:
   149   000810  4D                 	db	77	;'M'
   150   000811  6F                 	db	111	;'o'
   151   000812  64                 	db	100	;'d'
   152   000813  6F                 	db	111	;'o'
   153   000814  20                 	db	32
   154   000815  50                 	db	80	;'P'
   155   000816  6F                 	db	111	;'o'
   156   000817  74                 	db	116	;'t'
   157   000818  65                 	db	101	;'e'
   158   000819  6E                 	db	110	;'n'
   159   00081A  63                 	db	99	;'c'
   160   00081B  69                 	db	105	;'i'
   161   00081C  61                 	db	97	;'a'
   162   00081D  00                 	db	0
   163   00081E                     STR_13:
   164   00081E  49                 	db	73	;'I'
   165   00081F  6E                 	db	110	;'n'
   166   000820  64                 	db	100	;'d'
   167   000821  65                 	db	101	;'e'
   168   000822  74                 	db	116	;'t'
   169   000823  65                 	db	101	;'e'
   170   000824  72                 	db	114	;'r'
   171   000825  6D                 	db	109	;'m'
   172   000826  69                 	db	105	;'i'
   173   000827  6E                 	db	110	;'n'
   174   000828  61                 	db	97	;'a'
   175   000829  64                 	db	100	;'d'
   176   00082A  6F                 	db	111	;'o'
   177   00082B  00                 	db	0
   178   00082C                     STR_11:
   179   00082C  4C                 	db	76	;'L'
   180   00082D  56                 	db	86	;'V'
   181   00082E  50                 	db	80	;'P'
   182   00082F  20                 	db	32
   183   000830  41                 	db	65	;'A'
   184   000831  63                 	db	99	;'c'
   185   000832  74                 	db	116	;'t'
   186   000833  69                 	db	105	;'i'
   187   000834  76                 	db	118	;'v'
   188   000835  61                 	db	97	;'a'
   189   000836  64                 	db	100	;'d'
   190   000837  6F                 	db	111	;'o'
   191   000838  00                 	db	0
   192   000839                     STR_9:
   193   000839  4D                 	db	77	;'M'
   194   00083A  6F                 	db	111	;'o'
   195   00083B  64                 	db	100	;'d'
   196   00083C  6F                 	db	111	;'o'
   197   00083D  20                 	db	32
   198   00083E  52                 	db	82	;'R'
   199   00083F  65                 	db	101	;'e'
   200   000840  73                 	db	115	;'s'
   201   000841  74                 	db	116	;'t'
   202   000842  61                 	db	97	;'a'
   203   000843  00                 	db	0
   204   000844                     STR_5:
   205   000844  4D                 	db	77	;'M'
   206   000845  6F                 	db	111	;'o'
   207   000846  64                 	db	100	;'d'
   208   000847  6F                 	db	111	;'o'
   209   000848  20                 	db	32
   210   000849  53                 	db	83	;'S'
   211   00084A  75                 	db	117	;'u'
   212   00084B  6D                 	db	109	;'m'
   213   00084C  61                 	db	97	;'a'
   214   00084D  00                 	db	0
   215   00084E                     STR_12:
   216   00084E  49                 	db	73	;'I'
   217   00084F  6E                 	db	110	;'n'
   218   000850  66                 	db	102	;'f'
   219   000851  69                 	db	105	;'i'
   220   000852  6E                 	db	110	;'n'
   221   000853  69                 	db	105	;'i'
   222   000854  74                 	db	116	;'t'
   223   000855  6F                 	db	111	;'o'
   224   000856  00                 	db	0
   225   000857                     STR_1:
   226   000857  45                 	db	69	;'E'
   227   000858  6E                 	db	110	;'n'
   228   000859  65                 	db	101	;'e'
   229   00085A  72                 	db	114	;'r'
   230   00085B  67                 	db	103	;'g'
   231   00085C  69                 	db	105	;'i'
   232   00085D  61                 	db	97	;'a'
   233   00085E  00                 	db	0
   234   00085F                     STR_2:
   235   00085F  4D                 	db	77	;'M'
   236   000860  43                 	db	67	;'C'
   237   000861  4C                 	db	76	;'L'
   238   000862  52                 	db	82	;'R'
   239   000863  00                 	db	0
   240   000864  00                 	db	0	; dummy byte at the end
   241   000000                     
   242                           ; #config settings
   243                           
   244                           	psect	cinit
   245   00195E                     __pcinit:
   246                           	callstack 0
   247   00195E                     start_initialization:
   248                           	callstack 0
   249   00195E                     __initialization:
   250                           	callstack 0
   251                           
   252                           ; Initialize objects allocated to COMRAM (4 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254   00195E  0EC2               	movlw	low __pidataCOMRAM
   255   001960  6EF6               	movwf	tblptrl,c
   256   001962  0E1A               	movlw	high __pidataCOMRAM
   257   001964  6EF7               	movwf	tblptrh,c
   258   001966  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259   001968  6EF8               	movwf	tblptru,c
   260   00196A  EE00  F048         	lfsr	0,__pdataCOMRAM
   261   00196E  EE10 F004          	lfsr	1,4
   262   001972                     copy_data0:
   263   001972  0009               	tblrd		*+
   264   001974  CFF5 FFEE          	movff	tablat,postinc0
   265   001978  50E5               	movf	postdec1,w,c
   266   00197A  50E1               	movf	fsr1l,w,c
   267   00197C  E1FA               	bnz	copy_data0
   268                           
   269                           ; Clear objects allocated to COMRAM (32 bytes)
   270   00197E  EE00  F028         	lfsr	0,__pbssCOMRAM
   271   001982  0E20               	movlw	32
   272   001984                     clear_0:
   273   001984  6AEE               	clrf	postinc0,c
   274   001986  06E8               	decf	wreg,f,c
   275   001988  E1FD               	bnz	clear_0
   276   00198A                     end_of_initialization:
   277                           	callstack 0
   278   00198A                     __end_of__initialization:
   279                           	callstack 0
   280   00198A  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   281   00198C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   282   00198E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283   001990  6EF8               	movwf	tblptru,c
   284   001992  0100               	movlb	0
   285   001994  EF33  F004         	goto	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMRAM
   288   000028                     __pbssCOMRAM:
   289                           	callstack 0
   290   000028                     _Resultado:
   291                           	callstack 0
   292   000028                     	ds	4
   293   00002C                     _Parte_Decimal:
   294                           	callstack 0
   295   00002C                     	ds	4
   296   000030                     _b:
   297                           	callstack 0
   298   000030                     	ds	2
   299   000032                     _a:
   300                           	callstack 0
   301   000032                     	ds	2
   302   000034                     _Verificador:
   303                           	callstack 0
   304   000034                     	ds	2
   305   000036                     _Contador:
   306                           	callstack 0
   307   000036                     	ds	2
   308   000038                     _Color:
   309                           	callstack 0
   310   000038                     	ds	2
   311   00003A                     _i:
   312                           	callstack 0
   313   00003A                     	ds	2
   314   00003C                     _Numero_2:
   315                           	callstack 0
   316   00003C                     	ds	2
   317   00003E                     _Numero_1:
   318                           	callstack 0
   319   00003E                     	ds	2
   320   000040                     _Negativo:
   321                           	callstack 0
   322   000040                     	ds	1
   323   000041                     _Factorial:
   324                           	callstack 0
   325   000041                     	ds	1
   326   000042                     _Potencia:
   327                           	callstack 0
   328   000042                     	ds	1
   329   000043                     _Boton:
   330                           	callstack 0
   331   000043                     	ds	1
   332   000044                     _m:
   333                           	callstack 0
   334   000044                     	ds	4
   335                           
   336                           	psect	dataCOMRAM
   337   000048                     __pdataCOMRAM:
   338                           	callstack 0
   339   000048                     _Numero_2_Char:
   340                           	callstack 0
   341   000048                     	ds	1
   342   000049                     _Numero_1_Char:
   343                           	callstack 0
   344   000049                     	ds	1
   345   00004A                     _Operador:
   346                           	callstack 0
   347   00004A                     	ds	1
   348   00004B                     _interfaz:
   349                           	callstack 0
   350   00004B                     	ds	1
   351                           
   352                           	psect	cstackBANK0
   353   000060                     __pcstackBANK0:
   354                           	callstack 0
   355   000060                     Imprimir_Resultado@flag:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x0
   359   000060                     	ds	1
   360   000061                     Imprimir_Resultado@k:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x1
   364   000061                     	ds	2
   365   000063                     Imprimir_Resultado@i:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x3
   369   000063                     	ds	2
   370   000065                     Imprimir_Resultado@j:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x5
   374   000065                     	ds	2
   375   000067                     Imprimir_Resultado@Potencia:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0x7
   379   000067                     	ds	4
   380                           
   381                           	psect	cstackCOMRAM
   382   000001                     __pcstackCOMRAM:
   383                           	callstack 0
   384   000001                     ??i2_RetardoLCD:
   385   000001                     ?i2_strlen:
   386                           	callstack 0
   387   000001                     i2strlen@s:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x0
   391   000001                     	ds	1
   392   000002                     i2RetardoLCD@a:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x1
   396   000002                     	ds	1
   397   000003                     ??i2_EnviaDato:
   398   000003                     i2strlen@cp:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x2
   402   000003                     	ds	1
   403   000004                     i2EnviaDato@a:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x3
   407   000004                     	ds	1
   408   000005                     i2EscribeLCD_c@a:
   409                           	callstack 0
   410   000005                     i2DireccionaLCD@a:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x4
   414   000005                     	ds	1
   415   000006                     i2MensajeLCD_Var@a:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x5
   419   000006                     	ds	1
   420   000007                     ??i2_MensajeLCD_Var:
   421                           
   422                           ; 1 bytes @ 0x6
   423   000007                     	ds	1
   424   000008                     i2MensajeLCD_Var@i:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x7
   428   000008                     	ds	2
   429   00000A                     ??_ISR:
   430                           
   431                           ; 1 bytes @ 0x9
   432   00000A                     	ds	4
   433   00000E                     ??_RetardoLCD:
   434   00000E                     ??_ColorRGB:
   435   00000E                     ?_strlen:
   436                           	callstack 0
   437   00000E                     ?___wmul:
   438                           	callstack 0
   439   00000E                     ?___lwmod:
   440                           	callstack 0
   441   00000E                     ?___lmul:
   442                           	callstack 0
   443   00000E                     ?___aldiv:
   444                           	callstack 0
   445   00000E                     ?___almod:
   446                           	callstack 0
   447   00000E                     ConfiguraLCD@a:
   448                           	callstack 0
   449   00000E                     strlen@s:
   450                           	callstack 0
   451   00000E                     ___wmul@multiplier:
   452                           	callstack 0
   453   00000E                     ___lwmod@dividend:
   454                           	callstack 0
   455   00000E                     ___lmul@multiplier:
   456                           	callstack 0
   457   00000E                     ___aldiv@dividend:
   458                           	callstack 0
   459   00000E                     ___almod@dividend:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0xD
   463   00000E                     	ds	1
   464   00000F                     RetardoLCD@a:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0xE
   468   00000F                     	ds	1
   469   000010                     ??_EnviaDato:
   470   000010                     strlen@cp:
   471                           	callstack 0
   472   000010                     ___wmul@multiplicand:
   473                           	callstack 0
   474   000010                     ___lwmod@divisor:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xF
   478   000010                     	ds	1
   479   000011                     EnviaDato@a:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x10
   483   000011                     	ds	1
   484   000012                     EscribeLCD_c@a:
   485                           	callstack 0
   486   000012                     DireccionaLCD@a:
   487                           	callstack 0
   488   000012                     ___lwmod@counter:
   489                           	callstack 0
   490   000012                     ___wmul@product:
   491                           	callstack 0
   492   000012                     ___lmul@multiplicand:
   493                           	callstack 0
   494   000012                     ___aldiv@divisor:
   495                           	callstack 0
   496   000012                     ___almod@divisor:
   497                           	callstack 0
   498                           
   499                           ; 4 bytes @ 0x11
   500   000012                     	ds	1
   501   000013                     MensajeLCD_Var@a:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x12
   505   000013                     	ds	1
   506   000014                     ??_MensajeLCD_Var:
   507   000014                     ?___lwdiv:
   508                           	callstack 0
   509   000014                     ___lwdiv@dividend:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x13
   513   000014                     	ds	1
   514   000015                     MensajeLCD_Var@i:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x14
   518   000015                     	ds	1
   519   000016                     ___aldiv@counter:
   520                           	callstack 0
   521   000016                     ___almod@counter:
   522                           	callstack 0
   523   000016                     ___lwdiv@divisor:
   524                           	callstack 0
   525   000016                     ___lmul@product:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x15
   529   000016                     	ds	1
   530   000017                     ___aldiv@sign:
   531                           	callstack 0
   532   000017                     ___almod@sign:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x16
   536   000017                     	ds	1
   537   000018                     ___lwdiv@counter:
   538                           	callstack 0
   539   000018                     ___aldiv@quotient:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0x17
   543   000018                     	ds	1
   544   000019                     ___lwdiv@quotient:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x18
   548   000019                     	ds	1
   549   00001A                     ?_factorial_function:
   550                           	callstack 0
   551   00001A                     factorial_function@a:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x19
   555   00001A                     	ds	2
   556   00001C                     Imprimir_Resultado@Resultado:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x1B
   560   00001C                     	ds	2
   561   00001E                     factorial_function@fact:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x1D
   565   00001E                     	ds	2
   566   000020                     ??_Imprimir_Resultado:
   567                           
   568                           ; 1 bytes @ 0x1F
   569   000020                     	ds	4
   570   000024                     ??_main:
   571                           
   572                           ; 1 bytes @ 0x23
   573   000024                     	ds	2
   574   000026                     _main$156:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x25
   578   000026                     	ds	1
   579   000027                     _main$157:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x26
   583   000027                     	ds	1
   584                           
   585 ;;
   586 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   587 ;;
   588 ;; *************** function _main *****************
   589 ;; Defined at:
   590 ;;		line 35 in file "Lab4.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   604 ;;      Params:         0       0       0       0       0       0       0       0       0
   605 ;;      Locals:         2       0       0       0       0       0       0       0       0
   606 ;;      Temps:          2       0       0       0       0       0       0       0       0
   607 ;;      Totals:         4       0       0       0       0       0       0       0       0
   608 ;;Total ram usage:        4 bytes
   609 ;; Hardware stack levels required when called: 10
   610 ;; This function calls:
   611 ;;		_BorraLCD
   612 ;;		_ColorRGB
   613 ;;		_ConfiguraLCD
   614 ;;		_DireccionaLCD
   615 ;;		_EscribeLCD_c
   616 ;;		_Imprimir_Resultado
   617 ;;		_InicializaLCD
   618 ;;		_LeerTeclado
   619 ;;		_MensajeLCD_Var
   620 ;;		___lmul
   621 ;;		___lwdiv
   622 ;;		___wmul
   623 ;;		_factorial_function
   624 ;; This function is called by:
   625 ;;		Startup code after reset
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text0
   630   000866                     __ptext0:
   631                           	callstack 0
   632   000866                     _main:
   633                           	callstack 21
   634                           
   635                           ;Lab4.c: 36: ADCON1=15;
   636                           
   637                           ;incstack = 0
   638   000866  0E0F               	movlw	15
   639   000868  6EC1               	movwf	193,c	;volatile
   640                           
   641                           ;Lab4.c: 37: TRISD=0;
   642   00086A  0E00               	movlw	0
   643   00086C  6E95               	movwf	149,c	;volatile
   644                           
   645                           ;Lab4.c: 38: TRISB=0b11110000;
   646   00086E  0EF0               	movlw	240
   647   000870  6E93               	movwf	147,c	;volatile
   648                           
   649                           ;Lab4.c: 39: TRISE=0;
   650   000872  0E00               	movlw	0
   651   000874  6E96               	movwf	150,c	;volatile
   652                           
   653                           ;Lab4.c: 40: TRISC=0;
   654   000876  0E00               	movlw	0
   655   000878  6E94               	movwf	148,c	;volatile
   656                           
   657                           ;Lab4.c: 41: RBPU=0;
   658   00087A  9EF1               	bcf	4081,7,c	;volatile
   659                           
   660                           ;Lab4.c: 42: ConfiguraLCD(4);
   661   00087C  0E04               	movlw	4
   662   00087E  EC07  F00D         	call	_ConfiguraLCD
   663                           
   664                           ;Lab4.c: 43: InicializaLCD();
   665   000882  EC3E  F00A         	call	_InicializaLCD	;wreg free
   666                           
   667                           ;Lab4.c: 45: T0CON=0b10000010;
   668   000886  0E82               	movlw	130
   669   000888  6ED5               	movwf	213,c	;volatile
   670                           
   671                           ;Lab4.c: 46: TMR0IF=0;
   672   00088A  94F2               	bcf	4082,2,c	;volatile
   673                           
   674                           ;Lab4.c: 47: TMR0=49911;
   675   00088C  0EC2               	movlw	194
   676   00088E  6ED7               	movwf	215,c	;volatile
   677   000890  0EF7               	movlw	247
   678   000892  6ED6               	movwf	214,c	;volatile
   679                           
   680                           ;Lab4.c: 48: TMR0IE=1;
   681   000894  8AF2               	bsf	4082,5,c	;volatile
   682                           
   683                           ;Lab4.c: 49: GIE=1;
   684   000896  8EF2               	bsf	4082,7,c	;volatile
   685                           
   686                           ;Lab4.c: 50: TMR0ON=1;
   687   000898  8ED5               	bsf	4053,7,c	;volatile
   688                           
   689                           ;Lab4.c: 53: OSCCON = 0b11000100;
   690   00089A  0EC4               	movlw	196
   691   00089C  6ED3               	movwf	211,c	;volatile
   692                           
   693                           ;Lab4.c: 55: BorraLCD();
   694   00089E  EC3F  F00D         	call	_BorraLCD	;wreg free
   695                           
   696                           ;Lab4.c: 56: if(TO == 1 && PD == 1){
   697   0008A2  B6D0               	btfsc	4048,3,c	;volatile
   698   0008A4  A4D0               	btfss	4048,2,c	;volatile
   699   0008A6  D007               	goto	l177
   700                           
   701                           ;Lab4.c: 57: BorraLCD();
   702   0008A8  EC3F  F00D         	call	_BorraLCD	;wreg free
   703                           
   704                           ;Lab4.c: 58: MensajeLCD_Var("Energia");
   705   0008AC  0E57               	movlw	low STR_1
   706   0008AE  6E13               	movwf	MensajeLCD_Var@a^0,c
   707   0008B0  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
   708                           
   709                           ;Lab4.c: 59: }else{
   710   0008B4  D008               	goto	l3523
   711   0008B6                     l177:
   712                           
   713                           ;Lab4.c: 60: if(POR==0){
   714   0008B6  B2D0               	btfsc	4048,1,c	;volatile
   715   0008B8  D006               	goto	l3523
   716                           
   717                           ;Lab4.c: 61: BorraLCD();
   718   0008BA  EC3F  F00D         	call	_BorraLCD	;wreg free
   719                           
   720                           ;Lab4.c: 62: MensajeLCD_Var("MCLR");
   721   0008BE  0E5F               	movlw	low STR_2
   722   0008C0  6E13               	movwf	MensajeLCD_Var@a^0,c
   723   0008C2  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
   724   0008C6                     l3523:
   725                           
   726                           ;Lab4.c: 63: };Lab4.c: 64: };Lab4.c: 65: _delay((unsigned long)((2000)*(1000000/4000.0))
      +                          );
   727   0008C6  0E03               	movlw	3
   728   0008C8  6E25               	movwf	(??_main+1)^0,c
   729   0008CA  0E8A               	movlw	138
   730   0008CC  6E24               	movwf	??_main^0,c
   731   0008CE  0E56               	movlw	86
   732   0008D0                     u4837:
   733   0008D0  2EE8               	decfsz	wreg,f,c
   734   0008D2  D7FE               	bra	u4837
   735   0008D4  2E24               	decfsz	??_main^0,f,c
   736   0008D6  D7FC               	bra	u4837
   737   0008D8  2E25               	decfsz	(??_main+1)^0,f,c
   738   0008DA  D7FA               	bra	u4837
   739   0008DC                     l3525:
   740                           
   741                           ;Lab4.c: 66: BorraLCD();
   742   0008DC  EC3F  F00D         	call	_BorraLCD	;wreg free
   743   0008E0                     l3527:
   744                           
   745                           ;Lab4.c: 68: Negativo=0;
   746   0008E0  0E00               	movlw	0
   747   0008E2  6E40               	movwf	_Negativo^0,c
   748                           
   749                           ;Lab4.c: 69: LATB=0b00000000;
   750   0008E4  0E00               	movlw	0
   751   0008E6  6E8A               	movwf	138,c	;volatile
   752                           
   753                           ;Lab4.c: 70: Verificador = 0;
   754   0008E8  0E00               	movlw	0
   755   0008EA  6E35               	movwf	(_Verificador+1)^0,c
   756   0008EC  0E00               	movlw	0
   757   0008EE  6E34               	movwf	_Verificador^0,c
   758                           
   759                           ;Lab4.c: 71: Boton = LeerTeclado();
   760   0008F0  EC83  F009         	call	_LeerTeclado	;wreg free
   761   0008F4  6E43               	movwf	_Boton^0,c
   762                           
   763                           ;Lab4.c: 72: ColorRGB();
   764   0008F6  ECD3  F00A         	call	_ColorRGB	;wreg free
   765                           
   766                           ;Lab4.c: 73: if(Boton=='C'){
   767   0008FA  0E43               	movlw	67
   768   0008FC  1843               	xorwf	_Boton^0,w,c
   769   0008FE  A4D8               	btfss	status,2,c
   770   000900  D01B               	goto	l3543
   771                           
   772                           ;Lab4.c: 75: Operador = ' ';
   773   000902  0E20               	movlw	32
   774   000904  6E4A               	movwf	_Operador^0,c
   775                           
   776                           ;Lab4.c: 76: Numero_1_Char = ' ';
   777   000906  0E20               	movlw	32
   778   000908  6E49               	movwf	_Numero_1_Char^0,c
   779                           
   780                           ;Lab4.c: 77: Numero_2_Char = ' ';
   781   00090A  0E20               	movlw	32
   782   00090C  6E48               	movwf	_Numero_2_Char^0,c
   783                           
   784                           ;Lab4.c: 78: Numero_1 = 0;
   785   00090E  0E00               	movlw	0
   786   000910  6E3F               	movwf	(_Numero_1+1)^0,c
   787   000912  0E00               	movlw	0
   788   000914  6E3E               	movwf	_Numero_1^0,c
   789                           
   790                           ;Lab4.c: 79: Numero_2 = 0;
   791   000916  0E00               	movlw	0
   792   000918  6E3D               	movwf	(_Numero_2+1)^0,c
   793   00091A  0E00               	movlw	0
   794   00091C  6E3C               	movwf	_Numero_2^0,c
   795                           
   796                           ;Lab4.c: 80: i = 0;
   797   00091E  0E00               	movlw	0
   798   000920  6E3B               	movwf	(_i+1)^0,c
   799   000922  0E00               	movlw	0
   800   000924  6E3A               	movwf	_i^0,c
   801                           
   802                           ;Lab4.c: 81: Parte_Decimal = 0;
   803   000926  0E00               	movlw	0
   804   000928  6E2C               	movwf	_Parte_Decimal^0,c
   805   00092A  0E00               	movlw	0
   806   00092C  6E2D               	movwf	(_Parte_Decimal+1)^0,c
   807   00092E  0E00               	movlw	0
   808   000930  6E2E               	movwf	(_Parte_Decimal+2)^0,c
   809   000932  0E00               	movlw	0
   810   000934  6E2F               	movwf	(_Parte_Decimal+3)^0,c
   811   000936  D7D2               	goto	l3525
   812   000938                     l3543:
   813   000938  0E20               	movlw	32
   814   00093A  184A               	xorwf	_Operador^0,w,c
   815   00093C  A4D8               	btfss	status,2,c
   816   00093E  D03D               	goto	l3579
   817   000940  0E2B               	movlw	43
   818   000942  1843               	xorwf	_Boton^0,w,c
   819   000944  B4D8               	btfsc	status,2,c
   820   000946  D004               	goto	u4050
   821   000948  0E5E               	movlw	94
   822   00094A  1843               	xorwf	_Boton^0,w,c
   823   00094C  A4D8               	btfss	status,2,c
   824   00094E  D035               	goto	l3579
   825   000950                     u4050:
   826   000950  0E20               	movlw	32
   827   000952  1849               	xorwf	_Numero_1_Char^0,w,c
   828   000954  A4D8               	btfss	status,2,c
   829   000956  D031               	goto	l3579
   830   000958  0E20               	movlw	32
   831   00095A  1848               	xorwf	_Numero_2_Char^0,w,c
   832   00095C  A4D8               	btfss	status,2,c
   833   00095E  D02D               	goto	l3579
   834                           
   835                           ;Lab4.c: 84: Potencia=~Potencia;
   836   000960  1E42               	comf	_Potencia^0,f,c
   837                           
   838                           ;Lab4.c: 85: if(Potencia){
   839   000962  5042               	movf	_Potencia^0,w,c
   840   000964  B4D8               	btfsc	status,2,c
   841   000966  D01A               	goto	l3569
   842                           
   843                           ;Lab4.c: 86: DireccionaLCD(0x80);
   844   000968  0E80               	movlw	128
   845   00096A  EC1E  F00D         	call	_DireccionaLCD
   846                           
   847                           ;Lab4.c: 87: MensajeLCD_Var("Modo Potencia");
   848   00096E  0E10               	movlw	low STR_3
   849   000970  6E13               	movwf	MensajeLCD_Var@a^0,c
   850   000972  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
   851                           
   852                           ;Lab4.c: 88: DireccionaLCD(0xC0);
   853   000976  0EC0               	movlw	192
   854   000978  EC1E  F00D         	call	_DireccionaLCD
   855                           
   856                           ;Lab4.c: 89: MensajeLCD_Var("Activado");
   857   00097C  0E30               	movlw	low (STR_11+4)
   858   00097E  6E13               	movwf	MensajeLCD_Var@a^0,c
   859   000980  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
   860   000984                     l3563:
   861                           
   862                           ;Lab4.c: 90: _delay((unsigned long)((1000)*(1000000/4000.0)));
   863   000984  0E02               	movlw	2
   864   000986  6E25               	movwf	(??_main+1)^0,c
   865   000988  0E45               	movlw	69
   866   00098A  6E24               	movwf	??_main^0,c
   867   00098C  0EAA               	movlw	170
   868   00098E                     u4847:
   869   00098E  2EE8               	decfsz	wreg,f,c
   870   000990  D7FE               	bra	u4847
   871   000992  2E24               	decfsz	??_main^0,f,c
   872   000994  D7FC               	bra	u4847
   873   000996  2E25               	decfsz	(??_main+1)^0,f,c
   874   000998  D7FA               	bra	u4847
   875   00099A  D7A0               	goto	l3525
   876   00099C                     l3569:
   877                           
   878                           ;Lab4.c: 94: DireccionaLCD(0x80);
   879   00099C  0E80               	movlw	128
   880   00099E  EC1E  F00D         	call	_DireccionaLCD
   881                           
   882                           ;Lab4.c: 95: MensajeLCD_Var("Modo Suma");
   883   0009A2  0E44               	movlw	low STR_5
   884   0009A4  6E13               	movwf	MensajeLCD_Var@a^0,c
   885   0009A6  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
   886                           
   887                           ;Lab4.c: 96: DireccionaLCD(0xC0);
   888   0009AA  0EC0               	movlw	192
   889   0009AC  EC1E  F00D         	call	_DireccionaLCD
   890                           
   891                           ;Lab4.c: 97: MensajeLCD_Var("Activado");
   892   0009B0  0E30               	movlw	low (STR_11+4)
   893   0009B2  6E13               	movwf	MensajeLCD_Var@a^0,c
   894   0009B4  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
   895   0009B8  D7E5               	goto	l3563
   896   0009BA                     l3579:
   897   0009BA  0E20               	movlw	32
   898   0009BC  184A               	xorwf	_Operador^0,w,c
   899   0009BE  A4D8               	btfss	status,2,c
   900   0009C0  D032               	goto	l3615
   901   0009C2  0E2D               	movlw	45
   902   0009C4  1843               	xorwf	_Boton^0,w,c
   903   0009C6  B4D8               	btfsc	status,2,c
   904   0009C8  D004               	goto	u4110
   905   0009CA  0E21               	movlw	33
   906   0009CC  1843               	xorwf	_Boton^0,w,c
   907   0009CE  A4D8               	btfss	status,2,c
   908   0009D0  D02A               	goto	l3615
   909   0009D2                     u4110:
   910   0009D2  0E20               	movlw	32
   911   0009D4  1849               	xorwf	_Numero_1_Char^0,w,c
   912   0009D6  A4D8               	btfss	status,2,c
   913   0009D8  D026               	goto	l3615
   914   0009DA  0E20               	movlw	32
   915   0009DC  1848               	xorwf	_Numero_2_Char^0,w,c
   916   0009DE  A4D8               	btfss	status,2,c
   917   0009E0  D022               	goto	l3615
   918                           
   919                           ;Lab4.c: 103: Factorial=~Factorial;
   920   0009E2  1E41               	comf	_Factorial^0,f,c
   921                           
   922                           ;Lab4.c: 104: if(Factorial){
   923   0009E4  5041               	movf	_Factorial^0,w,c
   924   0009E6  B4D8               	btfsc	status,2,c
   925   0009E8  D00F               	goto	l3605
   926                           
   927                           ;Lab4.c: 105: DireccionaLCD(0x80);
   928   0009EA  0E80               	movlw	128
   929   0009EC  EC1E  F00D         	call	_DireccionaLCD
   930                           
   931                           ;Lab4.c: 106: MensajeLCD_Var("Modo Factorial");
   932   0009F0  0E01               	movlw	low STR_7
   933   0009F2  6E13               	movwf	MensajeLCD_Var@a^0,c
   934   0009F4  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
   935                           
   936                           ;Lab4.c: 107: DireccionaLCD(0xC0);
   937   0009F8  0EC0               	movlw	192
   938   0009FA  EC1E  F00D         	call	_DireccionaLCD
   939                           
   940                           ;Lab4.c: 108: MensajeLCD_Var("Activado");
   941   0009FE  0E30               	movlw	low (STR_11+4)
   942   000A00  6E13               	movwf	MensajeLCD_Var@a^0,c
   943   000A02  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
   944   000A06  D7BE               	goto	l3563
   945   000A08                     l3605:
   946                           
   947                           ;Lab4.c: 113: DireccionaLCD(0x80);
   948   000A08  0E80               	movlw	128
   949   000A0A  EC1E  F00D         	call	_DireccionaLCD
   950                           
   951                           ;Lab4.c: 114: MensajeLCD_Var("Modo Resta");
   952   000A0E  0E39               	movlw	low STR_9
   953   000A10  6E13               	movwf	MensajeLCD_Var@a^0,c
   954   000A12  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
   955                           
   956                           ;Lab4.c: 115: DireccionaLCD(0xC0);
   957   000A16  0EC0               	movlw	192
   958   000A18  EC1E  F00D         	call	_DireccionaLCD
   959                           
   960                           ;Lab4.c: 116: MensajeLCD_Var("Activado");
   961   000A1C  0E30               	movlw	low (STR_11+4)
   962   000A1E  6E13               	movwf	MensajeLCD_Var@a^0,c
   963   000A20  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
   964   000A24  D7AF               	goto	l3563
   965   000A26                     l3615:
   966                           
   967                           ;Lab4.c: 122: if((Numero_1_Char==' '|Numero_2_Char==' '|Operador==' ') & !Factorial){
   968   000A26  0E20               	movlw	32
   969   000A28  1849               	xorwf	_Numero_1_Char^0,w,c
   970   000A2A  B4D8               	btfsc	status,2,c
   971   000A2C  D008               	goto	u4170
   972   000A2E  0E20               	movlw	32
   973   000A30  1848               	xorwf	_Numero_2_Char^0,w,c
   974   000A32  B4D8               	btfsc	status,2,c
   975   000A34  D004               	goto	u4170
   976   000A36  0E20               	movlw	32
   977   000A38  184A               	xorwf	_Operador^0,w,c
   978   000A3A  A4D8               	btfss	status,2,c
   979   000A3C  D092               	goto	l3691
   980   000A3E                     u4170:
   981   000A3E  5041               	movf	_Factorial^0,w,c
   982   000A40  A4D8               	btfss	status,2,c
   983   000A42  D08F               	goto	l3691
   984                           
   985                           ;Lab4.c: 123: if(Operador==' ' & (Boton=='+'|Boton=='-'|Boton=='/'|Boton=='x'|Boton=='^'
      +                          ) & Numero_1_Char != ' ' & Numero_2_Char ==' '){
   986   000A44  0E20               	movlw	32
   987   000A46  184A               	xorwf	_Operador^0,w,c
   988   000A48  A4D8               	btfss	status,2,c
   989   000A4A  D025               	goto	l3643
   990   000A4C  0E2B               	movlw	43
   991   000A4E  1843               	xorwf	_Boton^0,w,c
   992   000A50  B4D8               	btfsc	status,2,c
   993   000A52  D010               	goto	u4240
   994   000A54  0E2D               	movlw	45
   995   000A56  1843               	xorwf	_Boton^0,w,c
   996   000A58  B4D8               	btfsc	status,2,c
   997   000A5A  D00C               	goto	u4240
   998   000A5C  0E2F               	movlw	47
   999   000A5E  1843               	xorwf	_Boton^0,w,c
  1000   000A60  B4D8               	btfsc	status,2,c
  1001   000A62  D008               	goto	u4240
  1002   000A64  0E78               	movlw	120
  1003   000A66  1843               	xorwf	_Boton^0,w,c
  1004   000A68  B4D8               	btfsc	status,2,c
  1005   000A6A  D004               	goto	u4240
  1006   000A6C  0E5E               	movlw	94
  1007   000A6E  1843               	xorwf	_Boton^0,w,c
  1008   000A70  A4D8               	btfss	status,2,c
  1009   000A72  D011               	goto	l3643
  1010   000A74                     u4240:
  1011   000A74  0E20               	movlw	32
  1012   000A76  1849               	xorwf	_Numero_1_Char^0,w,c
  1013   000A78  B4D8               	btfsc	status,2,c
  1014   000A7A  D00D               	goto	l3643
  1015   000A7C  0E20               	movlw	32
  1016   000A7E  1848               	xorwf	_Numero_2_Char^0,w,c
  1017   000A80  A4D8               	btfss	status,2,c
  1018   000A82  D009               	goto	l3643
  1019                           
  1020                           ;Lab4.c: 124: DireccionaLCD(0x81);
  1021   000A84  0E81               	movlw	129
  1022   000A86  EC1E  F00D         	call	_DireccionaLCD
  1023                           
  1024                           ;Lab4.c: 125: EscribeLCD_c(Boton);
  1025   000A8A  5043               	movf	_Boton^0,w,c
  1026   000A8C  EC13  F00D         	call	_EscribeLCD_c
  1027   000A90                     l3641:
  1028                           
  1029                           ;Lab4.c: 126: Operador = Boton;
  1030   000A90  C043  F04A         	movff	_Boton,_Operador
  1031                           
  1032                           ;Lab4.c: 127: }else if(Numero_1_Char == ' ' & (Boton!='+'|Boton!='-'|Boton!='/'|Boton!='
      +                          x'|Boton!='='|Boton!='C'|Boton!='^')){
  1033   000A94  D21B               	goto	l3835
  1034   000A96                     l3643:
  1035   000A96  0E20               	movlw	32
  1036   000A98  1849               	xorwf	_Numero_1_Char^0,w,c
  1037   000A9A  A4D8               	btfss	status,2,c
  1038   000A9C  D02B               	goto	l3665
  1039   000A9E  0E2B               	movlw	43
  1040   000AA0  1843               	xorwf	_Boton^0,w,c
  1041   000AA2  A4D8               	btfss	status,2,c
  1042   000AA4  D018               	goto	u4340
  1043   000AA6  0E2D               	movlw	45
  1044   000AA8  1843               	xorwf	_Boton^0,w,c
  1045   000AAA  A4D8               	btfss	status,2,c
  1046   000AAC  D014               	goto	u4340
  1047   000AAE  0E2F               	movlw	47
  1048   000AB0  1843               	xorwf	_Boton^0,w,c
  1049   000AB2  A4D8               	btfss	status,2,c
  1050   000AB4  D010               	goto	u4340
  1051   000AB6  0E78               	movlw	120
  1052   000AB8  1843               	xorwf	_Boton^0,w,c
  1053   000ABA  A4D8               	btfss	status,2,c
  1054   000ABC  D00C               	goto	u4340
  1055   000ABE  0E3D               	movlw	61
  1056   000AC0  1843               	xorwf	_Boton^0,w,c
  1057   000AC2  A4D8               	btfss	status,2,c
  1058   000AC4  D008               	goto	u4340
  1059   000AC6  0E43               	movlw	67
  1060   000AC8  1843               	xorwf	_Boton^0,w,c
  1061   000ACA  A4D8               	btfss	status,2,c
  1062   000ACC  D004               	goto	u4340
  1063   000ACE  0E5E               	movlw	94
  1064   000AD0  1843               	xorwf	_Boton^0,w,c
  1065   000AD2  B4D8               	btfsc	status,2,c
  1066   000AD4  D00F               	goto	l3665
  1067   000AD6                     u4340:
  1068                           
  1069                           ;Lab4.c: 128: DireccionaLCD(0x80);
  1070   000AD6  0E80               	movlw	128
  1071   000AD8  EC1E  F00D         	call	_DireccionaLCD
  1072                           
  1073                           ;Lab4.c: 129: EscribeLCD_c(Boton);
  1074   000ADC  5043               	movf	_Boton^0,w,c
  1075   000ADE  EC13  F00D         	call	_EscribeLCD_c
  1076   000AE2                     l3661:
  1077                           
  1078                           ;Lab4.c: 130: Numero_1_Char=Boton;
  1079   000AE2  C043  F049         	movff	_Boton,_Numero_1_Char
  1080                           
  1081                           ;Lab4.c: 131: Numero_1 = Boton-'0';
  1082   000AE6  0ED0               	movlw	208
  1083   000AE8  2443               	addwf	_Boton^0,w,c
  1084   000AEA  6E3E               	movwf	_Numero_1^0,c
  1085   000AEC  6A3F               	clrf	(_Numero_1+1)^0,c
  1086   000AEE  0EFF               	movlw	255
  1087   000AF0  223F               	addwfc	(_Numero_1+1)^0,f,c
  1088                           
  1089                           ;Lab4.c: 132: }else if(Numero_2_Char==' ' & Operador!=' ' & Numero_1_Char != ' ' & (Boto
      +                          n!='+'|Boton!='-'|Boton!='/'|Boton!='x'|Boton!='='|Boton!='C'|Boton!='^')){
  1090   000AF2  D1EC               	goto	l3835
  1091   000AF4                     l3665:
  1092   000AF4  0E20               	movlw	32
  1093   000AF6  1848               	xorwf	_Numero_2_Char^0,w,c
  1094   000AF8  A4D8               	btfss	status,2,c
  1095   000AFA  D1E8               	goto	l3835
  1096   000AFC  0E20               	movlw	32
  1097   000AFE  184A               	xorwf	_Operador^0,w,c
  1098   000B00  B4D8               	btfsc	status,2,c
  1099   000B02  D1E4               	goto	l3835
  1100   000B04  0E20               	movlw	32
  1101   000B06  1849               	xorwf	_Numero_1_Char^0,w,c
  1102   000B08  B4D8               	btfsc	status,2,c
  1103   000B0A  D1E0               	goto	l3835
  1104   000B0C  0E2B               	movlw	43
  1105   000B0E  1843               	xorwf	_Boton^0,w,c
  1106   000B10  A4D8               	btfss	status,2,c
  1107   000B12  D018               	goto	u4440
  1108   000B14  0E2D               	movlw	45
  1109   000B16  1843               	xorwf	_Boton^0,w,c
  1110   000B18  A4D8               	btfss	status,2,c
  1111   000B1A  D014               	goto	u4440
  1112   000B1C  0E2F               	movlw	47
  1113   000B1E  1843               	xorwf	_Boton^0,w,c
  1114   000B20  A4D8               	btfss	status,2,c
  1115   000B22  D010               	goto	u4440
  1116   000B24  0E78               	movlw	120
  1117   000B26  1843               	xorwf	_Boton^0,w,c
  1118   000B28  A4D8               	btfss	status,2,c
  1119   000B2A  D00C               	goto	u4440
  1120   000B2C  0E3D               	movlw	61
  1121   000B2E  1843               	xorwf	_Boton^0,w,c
  1122   000B30  A4D8               	btfss	status,2,c
  1123   000B32  D008               	goto	u4440
  1124   000B34  0E43               	movlw	67
  1125   000B36  1843               	xorwf	_Boton^0,w,c
  1126   000B38  A4D8               	btfss	status,2,c
  1127   000B3A  D004               	goto	u4440
  1128   000B3C  0E5E               	movlw	94
  1129   000B3E  1843               	xorwf	_Boton^0,w,c
  1130   000B40  B4D8               	btfsc	status,2,c
  1131   000B42  D1C4               	goto	l3835
  1132   000B44                     u4440:
  1133                           
  1134                           ;Lab4.c: 133: DireccionaLCD(0x82);
  1135   000B44  0E82               	movlw	130
  1136   000B46  EC1E  F00D         	call	_DireccionaLCD
  1137                           
  1138                           ;Lab4.c: 134: EscribeLCD_c(Boton);
  1139   000B4A  5043               	movf	_Boton^0,w,c
  1140   000B4C  EC13  F00D         	call	_EscribeLCD_c
  1141                           
  1142                           ;Lab4.c: 135: Numero_2_Char=Boton;
  1143   000B50  C043  F048         	movff	_Boton,_Numero_2_Char
  1144                           
  1145                           ;Lab4.c: 136: Numero_2 = Boton-'0';
  1146   000B54  0ED0               	movlw	208
  1147   000B56  2443               	addwf	_Boton^0,w,c
  1148   000B58  6E3C               	movwf	_Numero_2^0,c
  1149   000B5A  6A3D               	clrf	(_Numero_2+1)^0,c
  1150   000B5C  0EFF               	movlw	255
  1151   000B5E  223D               	addwfc	(_Numero_2+1)^0,f,c
  1152                           
  1153                           ;Lab4.c: 137: };Lab4.c: 138: }else if ((Numero_1_Char==' '|Operador==' ') & Factorial){
  1154   000B60  D1B5               	goto	l3835
  1155   000B62                     l3691:
  1156   000B62  0E01               	movlw	1
  1157   000B64  6E26               	movwf	_main$156^0,c
  1158   000B66  0E20               	movlw	32
  1159   000B68  1849               	xorwf	_Numero_1_Char^0,w,c
  1160   000B6A  B4D8               	btfsc	status,2,c
  1161   000B6C  D006               	goto	l3699
  1162   000B6E  0E20               	movlw	32
  1163   000B70  184A               	xorwf	_Operador^0,w,c
  1164   000B72  B4D8               	btfsc	status,2,c
  1165   000B74  D002               	goto	l3699
  1166   000B76  0E00               	movlw	0
  1167   000B78  6E26               	movwf	_main$156^0,c
  1168   000B7A                     l3699:
  1169   000B7A  5026               	movf	_main$156^0,w,c
  1170   000B7C  1441               	andwf	_Factorial^0,w,c
  1171   000B7E  0900               	iorlw	0
  1172   000B80  B4D8               	btfsc	status,2,c
  1173   000B82  D056               	goto	l3747
  1174                           
  1175                           ;Lab4.c: 139: if(Operador==' ' & (Boton=='+'|Boton=='-'|Boton=='/'|Boton=='x'|Boton=='^'
      +                          |Boton=='!') & Numero_1_Char != ' ' & Numero_2_Char ==' '){
  1176   000B84  0E20               	movlw	32
  1177   000B86  184A               	xorwf	_Operador^0,w,c
  1178   000B88  A4D8               	btfss	status,2,c
  1179   000B8A  D027               	goto	l3723
  1180   000B8C  0E2B               	movlw	43
  1181   000B8E  1843               	xorwf	_Boton^0,w,c
  1182   000B90  B4D8               	btfsc	status,2,c
  1183   000B92  D014               	goto	u4540
  1184   000B94  0E2D               	movlw	45
  1185   000B96  1843               	xorwf	_Boton^0,w,c
  1186   000B98  B4D8               	btfsc	status,2,c
  1187   000B9A  D010               	goto	u4540
  1188   000B9C  0E2F               	movlw	47
  1189   000B9E  1843               	xorwf	_Boton^0,w,c
  1190   000BA0  B4D8               	btfsc	status,2,c
  1191   000BA2  D00C               	goto	u4540
  1192   000BA4  0E78               	movlw	120
  1193   000BA6  1843               	xorwf	_Boton^0,w,c
  1194   000BA8  B4D8               	btfsc	status,2,c
  1195   000BAA  D008               	goto	u4540
  1196   000BAC  0E5E               	movlw	94
  1197   000BAE  1843               	xorwf	_Boton^0,w,c
  1198   000BB0  B4D8               	btfsc	status,2,c
  1199   000BB2  D004               	goto	u4540
  1200   000BB4  0E21               	movlw	33
  1201   000BB6  1843               	xorwf	_Boton^0,w,c
  1202   000BB8  A4D8               	btfss	status,2,c
  1203   000BBA  D00F               	goto	l3723
  1204   000BBC                     u4540:
  1205   000BBC  0E20               	movlw	32
  1206   000BBE  1849               	xorwf	_Numero_1_Char^0,w,c
  1207   000BC0  B4D8               	btfsc	status,2,c
  1208   000BC2  D00B               	goto	l3723
  1209   000BC4  0E20               	movlw	32
  1210   000BC6  1848               	xorwf	_Numero_2_Char^0,w,c
  1211   000BC8  A4D8               	btfss	status,2,c
  1212   000BCA  D007               	goto	l3723
  1213                           
  1214                           ;Lab4.c: 140: DireccionaLCD(0x81);
  1215   000BCC  0E81               	movlw	129
  1216   000BCE  EC1E  F00D         	call	_DireccionaLCD
  1217                           
  1218                           ;Lab4.c: 141: EscribeLCD_c(Boton);
  1219   000BD2  5043               	movf	_Boton^0,w,c
  1220   000BD4  EC13  F00D         	call	_EscribeLCD_c
  1221   000BD8  D75B               	goto	l3641
  1222   000BDA                     l3723:
  1223   000BDA  0E20               	movlw	32
  1224   000BDC  1849               	xorwf	_Numero_1_Char^0,w,c
  1225   000BDE  A4D8               	btfss	status,2,c
  1226   000BE0  D175               	goto	l3835
  1227   000BE2  0E2B               	movlw	43
  1228   000BE4  1843               	xorwf	_Boton^0,w,c
  1229   000BE6  A4D8               	btfss	status,2,c
  1230   000BE8  D01C               	goto	u4650
  1231   000BEA  0E2D               	movlw	45
  1232   000BEC  1843               	xorwf	_Boton^0,w,c
  1233   000BEE  A4D8               	btfss	status,2,c
  1234   000BF0  D018               	goto	u4650
  1235   000BF2  0E2F               	movlw	47
  1236   000BF4  1843               	xorwf	_Boton^0,w,c
  1237   000BF6  A4D8               	btfss	status,2,c
  1238   000BF8  D014               	goto	u4650
  1239   000BFA  0E78               	movlw	120
  1240   000BFC  1843               	xorwf	_Boton^0,w,c
  1241   000BFE  A4D8               	btfss	status,2,c
  1242   000C00  D010               	goto	u4650
  1243   000C02  0E3D               	movlw	61
  1244   000C04  1843               	xorwf	_Boton^0,w,c
  1245   000C06  A4D8               	btfss	status,2,c
  1246   000C08  D00C               	goto	u4650
  1247   000C0A  0E43               	movlw	67
  1248   000C0C  1843               	xorwf	_Boton^0,w,c
  1249   000C0E  A4D8               	btfss	status,2,c
  1250   000C10  D008               	goto	u4650
  1251   000C12  0E5E               	movlw	94
  1252   000C14  1843               	xorwf	_Boton^0,w,c
  1253   000C16  A4D8               	btfss	status,2,c
  1254   000C18  D004               	goto	u4650
  1255   000C1A  0E21               	movlw	33
  1256   000C1C  1843               	xorwf	_Boton^0,w,c
  1257   000C1E  B4D8               	btfsc	status,2,c
  1258   000C20  D155               	goto	l3835
  1259   000C22                     u4650:
  1260                           
  1261                           ;Lab4.c: 144: DireccionaLCD(0x80);
  1262   000C22  0E80               	movlw	128
  1263   000C24  EC1E  F00D         	call	_DireccionaLCD
  1264                           
  1265                           ;Lab4.c: 145: EscribeLCD_c(Boton);
  1266   000C28  5043               	movf	_Boton^0,w,c
  1267   000C2A  EC13  F00D         	call	_EscribeLCD_c
  1268   000C2E  D759               	goto	l3661
  1269   000C30                     l3747:
  1270   000C30  0E3D               	movlw	61
  1271   000C32  1843               	xorwf	_Boton^0,w,c
  1272   000C34  A4D8               	btfss	status,2,c
  1273   000C36  D103               	goto	l3817
  1274   000C38  0E20               	movlw	32
  1275   000C3A  1848               	xorwf	_Numero_2_Char^0,w,c
  1276   000C3C  B4D8               	btfsc	status,2,c
  1277   000C3E  D0FF               	goto	l3817
  1278   000C40  0E20               	movlw	32
  1279   000C42  184A               	xorwf	_Operador^0,w,c
  1280   000C44  B4D8               	btfsc	status,2,c
  1281   000C46  D0FB               	goto	l3817
  1282   000C48  0E20               	movlw	32
  1283   000C4A  1849               	xorwf	_Numero_1_Char^0,w,c
  1284   000C4C  B4D8               	btfsc	status,2,c
  1285   000C4E  D0F7               	goto	l3817
  1286   000C50  5041               	movf	_Factorial^0,w,c
  1287   000C52  A4D8               	btfss	status,2,c
  1288   000C54  D0F4               	goto	l3817
  1289                           
  1290                           ;Lab4.c: 150: DireccionaLCD(0x83);
  1291   000C56  0E83               	movlw	131
  1292   000C58  EC1E  F00D         	call	_DireccionaLCD
  1293                           
  1294                           ;Lab4.c: 151: EscribeLCD_c('=');
  1295   000C5C  0E3D               	movlw	61
  1296   000C5E  EC13  F00D         	call	_EscribeLCD_c
  1297                           
  1298                           ;Lab4.c: 152: switch(Operador){
  1299   000C62  D0CE               	goto	l3811
  1300   000C64                     l3759:
  1301                           
  1302                           ;Lab4.c: 154: Resultado = Numero_1 + Numero_2;
  1303   000C64  503C               	movf	_Numero_2^0,w,c
  1304   000C66  243E               	addwf	_Numero_1^0,w,c
  1305   000C68  6E24               	movwf	??_main^0,c
  1306   000C6A  503D               	movf	(_Numero_2+1)^0,w,c
  1307   000C6C  203F               	addwfc	(_Numero_1+1)^0,w,c
  1308   000C6E  6E25               	movwf	(??_main+1)^0,c
  1309   000C70  C024  F028         	movff	??_main,_Resultado
  1310   000C74  C025  F029         	movff	??_main+1,_Resultado+1
  1311   000C78  6A2A               	clrf	(_Resultado+2)^0,c
  1312   000C7A  6A2B               	clrf	(_Resultado+3)^0,c
  1313   000C7C                     l3761:
  1314                           
  1315                           ;Lab4.c: 155: Parte_Decimal = Resultado*100;
  1316   000C7C  C028  F00E         	movff	_Resultado,___lmul@multiplier
  1317   000C80  C029  F00F         	movff	_Resultado+1,___lmul@multiplier+1
  1318   000C84  C02A  F010         	movff	_Resultado+2,___lmul@multiplier+2
  1319   000C88  C02B  F011         	movff	_Resultado+3,___lmul@multiplier+3
  1320   000C8C  0E64               	movlw	100
  1321   000C8E  6E12               	movwf	___lmul@multiplicand^0,c
  1322   000C90  0E00               	movlw	0
  1323   000C92  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1324   000C94  0E00               	movlw	0
  1325   000C96  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1326   000C98  0E00               	movlw	0
  1327   000C9A  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1328   000C9C  EC4C  F00B         	call	___lmul	;wreg free
  1329   000CA0  C00E  F02C         	movff	?___lmul,_Parte_Decimal
  1330   000CA4  C00F  F02D         	movff	?___lmul+1,_Parte_Decimal+1
  1331   000CA8  C010  F02E         	movff	?___lmul+2,_Parte_Decimal+2
  1332   000CAC  C011  F02F         	movff	?___lmul+3,_Parte_Decimal+3
  1333                           
  1334                           ;Lab4.c: 156: break;
  1335   000CB0  D0B8               	goto	l3813
  1336   000CB2                     l3763:
  1337                           
  1338                           ;Lab4.c: 158: Resultado = Numero_1 - Numero_2;
  1339   000CB2  503C               	movf	_Numero_2^0,w,c
  1340   000CB4  5C3E               	subwf	_Numero_1^0,w,c
  1341   000CB6  6E24               	movwf	??_main^0,c
  1342   000CB8  503D               	movf	(_Numero_2+1)^0,w,c
  1343   000CBA  583F               	subwfb	(_Numero_1+1)^0,w,c
  1344   000CBC  6E25               	movwf	(??_main+1)^0,c
  1345   000CBE  C024  F028         	movff	??_main,_Resultado
  1346   000CC2  C025  F029         	movff	??_main+1,_Resultado+1
  1347   000CC6  6A2A               	clrf	(_Resultado+2)^0,c
  1348   000CC8  6A2B               	clrf	(_Resultado+3)^0,c
  1349                           
  1350                           ;Lab4.c: 159: if(Numero_1<Numero_2){
  1351   000CCA  503C               	movf	_Numero_2^0,w,c
  1352   000CCC  5C3E               	subwf	_Numero_1^0,w,c
  1353   000CCE  503D               	movf	(_Numero_2+1)^0,w,c
  1354   000CD0  583F               	subwfb	(_Numero_1+1)^0,w,c
  1355   000CD2  B0D8               	btfsc	status,0,c
  1356   000CD4  D7D3               	goto	l3761
  1357                           
  1358                           ;Lab4.c: 160: Negativo=1;
  1359   000CD6  0E01               	movlw	1
  1360   000CD8  6E40               	movwf	_Negativo^0,c
  1361   000CDA  D7D0               	goto	l3761
  1362   000CDC                     l3769:
  1363                           
  1364                           ;Lab4.c: 165: Resultado = Numero_1*Numero_2;
  1365   000CDC  C03E  F00E         	movff	_Numero_1,___wmul@multiplier
  1366   000CE0  C03F  F00F         	movff	_Numero_1+1,___wmul@multiplier+1
  1367   000CE4  C03C  F010         	movff	_Numero_2,___wmul@multiplicand
  1368   000CE8  C03D  F011         	movff	_Numero_2+1,___wmul@multiplicand+1
  1369   000CEC  ECF4  F00C         	call	___wmul	;wreg free
  1370   000CF0  C00E  F028         	movff	?___wmul,_Resultado
  1371   000CF4  C00F  F029         	movff	?___wmul+1,_Resultado+1
  1372   000CF8  D7BF               	goto	L1
  1373   000CFA                     l3773:
  1374                           
  1375                           ;Lab4.c: 169: if(Numero_2!=0){
  1376   000CFA  503C               	movf	_Numero_2^0,w,c
  1377   000CFC  103D               	iorwf	(_Numero_2+1)^0,w,c
  1378   000CFE  B4D8               	btfsc	status,2,c
  1379   000D00  D02F               	goto	l3781
  1380                           
  1381                           ;Lab4.c: 170: if(Numero_1!=0){
  1382   000D02  503E               	movf	_Numero_1^0,w,c
  1383   000D04  103F               	iorwf	(_Numero_1+1)^0,w,c
  1384   000D06  B4D8               	btfsc	status,2,c
  1385   000D08  D08C               	goto	l3813
  1386                           
  1387                           ;Lab4.c: 171: Resultado = Numero_1/Numero_2;
  1388   000D0A  C03E  F014         	movff	_Numero_1,___lwdiv@dividend
  1389   000D0E  C03F  F015         	movff	_Numero_1+1,___lwdiv@dividend+1
  1390   000D12  C03C  F016         	movff	_Numero_2,___lwdiv@divisor
  1391   000D16  C03D  F017         	movff	_Numero_2+1,___lwdiv@divisor+1
  1392   000D1A  ECCD  F00B         	call	___lwdiv	;wreg free
  1393   000D1E  C014  F028         	movff	?___lwdiv,_Resultado
  1394   000D22  C015  F029         	movff	?___lwdiv+1,_Resultado+1
  1395   000D26  6A2A               	clrf	(_Resultado+2)^0,c
  1396   000D28  6A2B               	clrf	(_Resultado+3)^0,c
  1397                           
  1398                           ;Lab4.c: 172: Parte_Decimal = (Numero_1*100)/Numero_2;
  1399   000D2A  C03E  F00E         	movff	_Numero_1,___wmul@multiplier
  1400   000D2E  C03F  F00F         	movff	_Numero_1+1,___wmul@multiplier+1
  1401   000D32  0E00               	movlw	0
  1402   000D34  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1403   000D36  0E64               	movlw	100
  1404   000D38  6E10               	movwf	___wmul@multiplicand^0,c
  1405   000D3A  ECF4  F00C         	call	___wmul	;wreg free
  1406   000D3E  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1407   000D42  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1408   000D46  C03C  F016         	movff	_Numero_2,___lwdiv@divisor
  1409   000D4A  C03D  F017         	movff	_Numero_2+1,___lwdiv@divisor+1
  1410   000D4E  ECCD  F00B         	call	___lwdiv	;wreg free
  1411   000D52  C014  F02C         	movff	?___lwdiv,_Parte_Decimal
  1412   000D56  C015  F02D         	movff	?___lwdiv+1,_Parte_Decimal+1
  1413   000D5A  6A2E               	clrf	(_Parte_Decimal+2)^0,c
  1414   000D5C  6A2F               	clrf	(_Parte_Decimal+3)^0,c
  1415   000D5E  D061               	goto	l3813
  1416   000D60                     l3781:
  1417                           
  1418                           ;Lab4.c: 175: if(Numero_1 != 0 & Numero_2 == 0) Resultado = 1000;
  1419   000D60  503E               	movf	_Numero_1^0,w,c
  1420   000D62  103F               	iorwf	(_Numero_1+1)^0,w,c
  1421   000D64  B4D8               	btfsc	status,2,c
  1422   000D66  D006               	goto	l3787
  1423   000D68  503C               	movf	_Numero_2^0,w,c
  1424   000D6A  103D               	iorwf	(_Numero_2+1)^0,w,c
  1425   000D6C  A4D8               	btfss	status,2,c
  1426   000D6E  D002               	goto	l3787
  1427   000D70  0EE8               	movlw	232
  1428   000D72  D009               	goto	L2
  1429   000D74                     l3787:
  1430                           
  1431                           ;Lab4.c: 176: else if(Numero_1 == 0 & Numero_2 == 0) Resultado = 1001;
  1432   000D74  503E               	movf	_Numero_1^0,w,c
  1433   000D76  103F               	iorwf	(_Numero_1+1)^0,w,c
  1434   000D78  A4D8               	btfss	status,2,c
  1435   000D7A  D780               	goto	l3761
  1436   000D7C  503C               	movf	_Numero_2^0,w,c
  1437   000D7E  103D               	iorwf	(_Numero_2+1)^0,w,c
  1438   000D80  A4D8               	btfss	status,2,c
  1439   000D82  D77C               	goto	l3761
  1440   000D84  0EE9               	movlw	233
  1441   000D86                     L2:
  1442   000D86  6E28               	movwf	_Resultado^0,c
  1443   000D88  0E03               	movlw	3
  1444   000D8A  6E29               	movwf	(_Resultado+1)^0,c
  1445   000D8C  0E00               	movlw	0
  1446   000D8E  6E2A               	movwf	(_Resultado+2)^0,c
  1447   000D90  0E00               	movlw	0
  1448   000D92  6E2B               	movwf	(_Resultado+3)^0,c
  1449   000D94  D773               	goto	l3761
  1450   000D96                     l3795:
  1451                           
  1452                           ;Lab4.c: 181: Resultado=Numero_1;
  1453   000D96  C03E  F028         	movff	_Numero_1,_Resultado
  1454   000D9A  C03F  F029         	movff	_Numero_1+1,_Resultado+1
  1455   000D9E  6A2A               	clrf	(_Resultado+2)^0,c
  1456   000DA0  6A2B               	clrf	(_Resultado+3)^0,c
  1457                           
  1458                           ;Lab4.c: 182: for(i=1;i<Numero_2;i++){
  1459   000DA2  0E00               	movlw	0
  1460   000DA4  6E3B               	movwf	(_i+1)^0,c
  1461   000DA6  0E01               	movlw	1
  1462   000DA8  6E3A               	movwf	_i^0,c
  1463   000DAA  D01A               	goto	l3803
  1464   000DAC                     l3799:
  1465                           
  1466                           ;Lab4.c: 183: Resultado=Resultado*Numero_1;
  1467   000DAC  C03E  F00E         	movff	_Numero_1,___lmul@multiplier
  1468   000DB0  C03F  F00F         	movff	_Numero_1+1,___lmul@multiplier+1
  1469   000DB4  6A10               	clrf	(___lmul@multiplier+2)^0,c
  1470   000DB6  6A11               	clrf	(___lmul@multiplier+3)^0,c
  1471   000DB8  C028  F012         	movff	_Resultado,___lmul@multiplicand
  1472   000DBC  C029  F013         	movff	_Resultado+1,___lmul@multiplicand+1
  1473   000DC0  C02A  F014         	movff	_Resultado+2,___lmul@multiplicand+2
  1474   000DC4  C02B  F015         	movff	_Resultado+3,___lmul@multiplicand+3
  1475   000DC8  EC4C  F00B         	call	___lmul	;wreg free
  1476   000DCC  C00E  F028         	movff	?___lmul,_Resultado
  1477   000DD0  C00F  F029         	movff	?___lmul+1,_Resultado+1
  1478   000DD4  C010  F02A         	movff	?___lmul+2,_Resultado+2
  1479   000DD8  C011  F02B         	movff	?___lmul+3,_Resultado+3
  1480   000DDC  4A3A               	infsnz	_i^0,f,c
  1481   000DDE  2A3B               	incf	(_i+1)^0,f,c
  1482   000DE0                     l3803:
  1483   000DE0  503C               	movf	_Numero_2^0,w,c
  1484   000DE2  5C3A               	subwf	_i^0,w,c
  1485   000DE4  503D               	movf	(_Numero_2+1)^0,w,c
  1486   000DE6  583B               	subwfb	(_i+1)^0,w,c
  1487   000DE8  B0D8               	btfsc	status,0,c
  1488   000DEA  D748               	goto	l3761
  1489   000DEC  D7DF               	goto	l3799
  1490   000DEE                     l3807:
  1491                           
  1492                           ;Lab4.c: 188: Resultado = 0;
  1493   000DEE  0E00               	movlw	0
  1494   000DF0  6E28               	movwf	_Resultado^0,c
  1495   000DF2  0E00               	movlw	0
  1496   000DF4  6E29               	movwf	(_Resultado+1)^0,c
  1497   000DF6  0E00               	movlw	0
  1498   000DF8  6E2A               	movwf	(_Resultado+2)^0,c
  1499   000DFA  0E00               	movlw	0
  1500   000DFC  6E2B               	movwf	(_Resultado+3)^0,c
  1501                           
  1502                           ;Lab4.c: 189: break;
  1503   000DFE  D011               	goto	l3813
  1504   000E00                     l3811:
  1505   000E00  504A               	movf	_Operador^0,w,c
  1506                           
  1507                           ; Switch size 1, requested type "simple"
  1508                           ; Number of cases is 5, Range of values is 43 to 120
  1509                           ; switch strategies available:
  1510                           ; Name         Instructions Cycles
  1511                           ; simple_byte           16     9 (average)
  1512                           ;	Chosen strategy is simple_byte
  1513   000E02  0A2B               	xorlw	43	; case 43
  1514   000E04  B4D8               	btfsc	status,2,c
  1515   000E06  D72E               	goto	l3759
  1516   000E08  0A06               	xorlw	6	; case 45
  1517   000E0A  B4D8               	btfsc	status,2,c
  1518   000E0C  D752               	goto	l3763
  1519   000E0E  0A02               	xorlw	2	; case 47
  1520   000E10  B4D8               	btfsc	status,2,c
  1521   000E12  D773               	goto	l3773
  1522   000E14  0A71               	xorlw	113	; case 94
  1523   000E16  B4D8               	btfsc	status,2,c
  1524   000E18  D7BE               	goto	l3795
  1525   000E1A  0A26               	xorlw	38	; case 120
  1526   000E1C  B4D8               	btfsc	status,2,c
  1527   000E1E  D75E               	goto	l3769
  1528   000E20  D7E6               	goto	l3807
  1529   000E22                     l3813:
  1530                           
  1531                           ;Lab4.c: 191: DireccionaLCD(0x84);
  1532   000E22  0E84               	movlw	132
  1533   000E24  EC1E  F00D         	call	_DireccionaLCD
  1534   000E28                     l3815:
  1535                           
  1536                           ;Lab4.c: 192: Imprimir_Resultado(Resultado);
  1537   000E28  C028  F01C         	movff	_Resultado,Imprimir_Resultado@Resultado
  1538   000E2C  C029  F01D         	movff	_Resultado+1,Imprimir_Resultado@Resultado+1
  1539   000E30  C02A  F01E         	movff	_Resultado+2,Imprimir_Resultado@Resultado+2
  1540   000E34  C02B  F01F         	movff	_Resultado+3,Imprimir_Resultado@Resultado+3
  1541   000E38  EC6F  F007         	call	_Imprimir_Resultado	;wreg free
  1542                           
  1543                           ;Lab4.c: 193: }else if((Boton=='=' & Operador=='!' & Numero_1_Char != ' ') & Factorial) 
      +                          {
  1544   000E3C  D047               	goto	l3835
  1545   000E3E                     l3817:
  1546   000E3E  0E00               	movlw	0
  1547   000E40  6E27               	movwf	_main$157^0,c
  1548   000E42  0E3D               	movlw	61
  1549   000E44  1843               	xorwf	_Boton^0,w,c
  1550   000E46  A4D8               	btfss	status,2,c
  1551   000E48  D00A               	goto	l3827
  1552   000E4A  0E21               	movlw	33
  1553   000E4C  184A               	xorwf	_Operador^0,w,c
  1554   000E4E  A4D8               	btfss	status,2,c
  1555   000E50  D006               	goto	l3827
  1556   000E52  0E20               	movlw	32
  1557   000E54  1849               	xorwf	_Numero_1_Char^0,w,c
  1558   000E56  B4D8               	btfsc	status,2,c
  1559   000E58  D002               	goto	l3827
  1560   000E5A  0E01               	movlw	1
  1561   000E5C  6E27               	movwf	_main$157^0,c
  1562   000E5E                     l3827:
  1563   000E5E  5027               	movf	_main$157^0,w,c
  1564   000E60  1441               	andwf	_Factorial^0,w,c
  1565   000E62  0900               	iorlw	0
  1566   000E64  B4D8               	btfsc	status,2,c
  1567   000E66  D02F               	goto	l3833
  1568                           
  1569                           ;Lab4.c: 194: DireccionaLCD(0x82);
  1570   000E68  0E82               	movlw	130
  1571   000E6A  EC1E  F00D         	call	_DireccionaLCD
  1572                           
  1573                           ;Lab4.c: 195: EscribeLCD_c('=');
  1574   000E6E  0E3D               	movlw	61
  1575   000E70  EC13  F00D         	call	_EscribeLCD_c
  1576                           
  1577                           ;Lab4.c: 196: Resultado=factorial_function(Numero_1);
  1578   000E74  C03E  F01A         	movff	_Numero_1,factorial_function@a
  1579   000E78  C03F  F01B         	movff	_Numero_1+1,factorial_function@a+1
  1580   000E7C  EC10  F00B         	call	_factorial_function	;wreg free
  1581   000E80  C01A  F028         	movff	?_factorial_function,_Resultado
  1582   000E84  C01B  F029         	movff	?_factorial_function+1,_Resultado+1
  1583   000E88  C01C  F02A         	movff	?_factorial_function+2,_Resultado+2
  1584   000E8C  C01D  F02B         	movff	?_factorial_function+3,_Resultado+3
  1585                           
  1586                           ;Lab4.c: 197: Parte_Decimal = Resultado*100;
  1587   000E90  C028  F00E         	movff	_Resultado,___lmul@multiplier
  1588   000E94  C029  F00F         	movff	_Resultado+1,___lmul@multiplier+1
  1589   000E98  C02A  F010         	movff	_Resultado+2,___lmul@multiplier+2
  1590   000E9C  C02B  F011         	movff	_Resultado+3,___lmul@multiplier+3
  1591   000EA0  0E64               	movlw	100
  1592   000EA2  6E12               	movwf	___lmul@multiplicand^0,c
  1593   000EA4  0E00               	movlw	0
  1594   000EA6  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1595   000EA8  0E00               	movlw	0
  1596   000EAA  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1597   000EAC  0E00               	movlw	0
  1598   000EAE  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1599   000EB0  EC4C  F00B         	call	___lmul	;wreg free
  1600   000EB4  C00E  F02C         	movff	?___lmul,_Parte_Decimal
  1601   000EB8  C00F  F02D         	movff	?___lmul+1,_Parte_Decimal+1
  1602   000EBC  C010  F02E         	movff	?___lmul+2,_Parte_Decimal+2
  1603   000EC0  C011  F02F         	movff	?___lmul+3,_Parte_Decimal+3
  1604   000EC4  D7B1               	goto	l3815
  1605   000EC6                     l3833:
  1606                           
  1607                           ;Lab4.c: 200: EscribeLCD_c('W');
  1608   000EC6  0E57               	movlw	87
  1609   000EC8  EC13  F00D         	call	_EscribeLCD_c
  1610   000ECC                     l3835:
  1611                           
  1612                           ;Lab4.c: 201: };Lab4.c: 202: _delay((unsigned long)((700)*(1000000/4000.0)));
  1613   000ECC  0EE4               	movlw	228
  1614   000ECE  6E24               	movwf	??_main^0,c
  1615   000ED0  0E44               	movlw	68
  1616   000ED2                     u4857:
  1617   000ED2  2EE8               	decfsz	wreg,f,c
  1618   000ED4  D7FE               	bra	u4857
  1619   000ED6  2E24               	decfsz	??_main^0,f,c
  1620   000ED8  D7FC               	bra	u4857
  1621   000EDA  D000               	nop2	
  1622   000EDC  D501               	goto	l3527
  1623   000EDE                     __end_of_main:
  1624                           	callstack 0
  1625                           
  1626 ;; *************** function _factorial_function *****************
  1627 ;; Defined at:
  1628 ;;		line 279 in file "Lab4.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  a               2   25[COMRAM] int 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  fact            4   29[COMRAM] long 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  4   25[COMRAM] unsigned long 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1642 ;;      Params:         4       0       0       0       0       0       0       0       0
  1643 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1645 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1646 ;;Total ram usage:        8 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; Hardware stack levels required when called: 6
  1649 ;; This function calls:
  1650 ;;		___lmul
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text1
  1657   001620                     __ptext1:
  1658                           	callstack 0
  1659   001620                     _factorial_function:
  1660                           	callstack 24
  1661                           
  1662                           ;Lab4.c: 280: long fact = 1;
  1663                           
  1664                           ;incstack = 0
  1665   001620  0E01               	movlw	1
  1666   001622  6E1E               	movwf	factorial_function@fact^0,c
  1667   001624  0E00               	movlw	0
  1668   001626  6E1F               	movwf	(factorial_function@fact+1)^0,c
  1669   001628  0E00               	movlw	0
  1670   00162A  6E20               	movwf	(factorial_function@fact+2)^0,c
  1671   00162C  0E00               	movlw	0
  1672   00162E  6E21               	movwf	(factorial_function@fact+3)^0,c
  1673                           
  1674                           ;Lab4.c: 281: for (b = a; b > 1; b--){
  1675   001630  C01A  F030         	movff	factorial_function@a,_b
  1676   001634  C01B  F031         	movff	factorial_function@a+1,_b+1
  1677   001638  D01E               	goto	l3491
  1678   00163A                     l3487:
  1679                           
  1680                           ;Lab4.c: 282: fact = fact * b;
  1681   00163A  C030  F00E         	movff	_b,___lmul@multiplier
  1682   00163E  C031  F00F         	movff	_b+1,___lmul@multiplier+1
  1683   001642  0E00               	movlw	0
  1684   001644  BE0F               	btfsc	(___lmul@multiplier+1)^0,7,c
  1685   001646  0EFF               	movlw	-1
  1686   001648  6E10               	movwf	(___lmul@multiplier+2)^0,c
  1687   00164A  6E11               	movwf	(___lmul@multiplier+3)^0,c
  1688   00164C  C01E  F012         	movff	factorial_function@fact,___lmul@multiplicand
  1689   001650  C01F  F013         	movff	factorial_function@fact+1,___lmul@multiplicand+1
  1690   001654  C020  F014         	movff	factorial_function@fact+2,___lmul@multiplicand+2
  1691   001658  C021  F015         	movff	factorial_function@fact+3,___lmul@multiplicand+3
  1692   00165C  EC4C  F00B         	call	___lmul	;wreg free
  1693   001660  C00E  F01E         	movff	?___lmul,factorial_function@fact
  1694   001664  C00F  F01F         	movff	?___lmul+1,factorial_function@fact+1
  1695   001668  C010  F020         	movff	?___lmul+2,factorial_function@fact+2
  1696   00166C  C011  F021         	movff	?___lmul+3,factorial_function@fact+3
  1697   001670  0630               	decf	_b^0,f,c
  1698   001672  A0D8               	btfss	status,0,c
  1699   001674  0631               	decf	(_b+1)^0,f,c
  1700   001676                     l3491:
  1701   001676  BE31               	btfsc	(_b+1)^0,7,c
  1702   001678  D006               	goto	u3980
  1703   00167A  5031               	movf	(_b+1)^0,w,c
  1704   00167C  E1DE               	bnz	l3487
  1705   00167E  0E02               	movlw	2
  1706   001680  5C30               	subwf	_b^0,w,c
  1707   001682  B0D8               	btfsc	status,0,c
  1708   001684  D7DA               	goto	l3487
  1709   001686                     u3980:
  1710                           
  1711                           ;Lab4.c: 283: };Lab4.c: 285: return fact;
  1712   001686  C01E  F01A         	movff	factorial_function@fact,?_factorial_function
  1713   00168A  C01F  F01B         	movff	factorial_function@fact+1,?_factorial_function+1
  1714   00168E  C020  F01C         	movff	factorial_function@fact+2,?_factorial_function+2
  1715   001692  C021  F01D         	movff	factorial_function@fact+3,?_factorial_function+3
  1716   001696  0012               	return		;funcret
  1717   001698                     __end_of_factorial_function:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _LeerTeclado *****************
  1721 ;; Defined at:
  1722 ;;		line 208 in file "Lab4.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      unsigned char 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1739 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 5
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text2
  1751   001306                     __ptext2:
  1752                           	callstack 0
  1753   001306                     _LeerTeclado:
  1754                           	callstack 25
  1755                           
  1756                           ;Lab4.c: 209: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  1757                           
  1758                           ;incstack = 0
  1759   001306  B881               	btfsc	3969,4,c	;volatile
  1760   001308  AA81               	btfss	3969,5,c	;volatile
  1761   00130A  D004               	goto	u2120
  1762   00130C  AC81               	btfss	3969,6,c	;volatile
  1763   00130E  D002               	goto	u2120
  1764   001310  BE81               	btfsc	3969,7,c	;volatile
  1765   001312  D7F9               	goto	__ptext2
  1766   001314                     u2120:
  1767                           
  1768                           ;Lab4.c: 210: Verificador = 1;
  1769   001314  0E00               	movlw	0
  1770   001316  6E35               	movwf	(_Verificador+1)^0,c
  1771   001318  0E01               	movlw	1
  1772   00131A  6E34               	movwf	_Verificador^0,c
  1773                           
  1774                           ;Lab4.c: 211: LATB=0b11111110;
  1775   00131C  0EFE               	movlw	254
  1776   00131E  6E8A               	movwf	138,c	;volatile
  1777                           
  1778                           ;Lab4.c: 212: if(RB4==0){
  1779   001320  B881               	btfsc	3969,4,c	;volatile
  1780   001322  D00A               	goto	l255
  1781                           
  1782                           ;Lab4.c: 213: if(!Potencia) return '+';
  1783   001324  5042               	movf	_Potencia^0,w,c
  1784   001326  A4D8               	btfss	status,2,c
  1785   001328  D002               	goto	l2455
  1786   00132A  0E2B               	movlw	43
  1787   00132C  0012               	return	
  1788   00132E                     l2455:
  1789                           
  1790                           ;Lab4.c: 214: else if(Potencia) return '^';
  1791   00132E  5042               	movf	_Potencia^0,w,c
  1792   001330  B4D8               	btfsc	status,2,c
  1793   001332  D04C               	goto	l287
  1794   001334  0E5E               	movlw	94
  1795   001336  0012               	return	
  1796   001338                     l255:
  1797                           
  1798                           ;Lab4.c: 216: else if(RB5==0) return '=';
  1799   001338  BA81               	btfsc	3969,5,c	;volatile
  1800   00133A  D002               	goto	l261
  1801   00133C  0E3D               	movlw	61
  1802   00133E  0012               	return	
  1803   001340                     l261:
  1804                           
  1805                           ;Lab4.c: 217: else if(RB6==0) return '0';
  1806   001340  BC81               	btfsc	3969,6,c	;volatile
  1807   001342  D002               	goto	l263
  1808   001344  0E30               	movlw	48
  1809   001346  0012               	return	
  1810   001348                     l263:
  1811                           
  1812                           ;Lab4.c: 218: else if(RB7==0) return 'C';
  1813   001348  BE81               	btfsc	3969,7,c	;volatile
  1814   00134A  D002               	goto	l2479
  1815   00134C  0E43               	movlw	67
  1816   00134E  0012               	return	
  1817   001350                     l2479:
  1818                           
  1819                           ;Lab4.c: 219: else{;Lab4.c: 220: LATB=0b11111101;
  1820   001350  0EFD               	movlw	253
  1821   001352  6E8A               	movwf	138,c	;volatile
  1822                           
  1823                           ;Lab4.c: 221: if(RB4==0){
  1824   001354  B881               	btfsc	3969,4,c	;volatile
  1825   001356  D00A               	goto	l267
  1826                           
  1827                           ;Lab4.c: 222: if(!Factorial) return '-';
  1828   001358  5041               	movf	_Factorial^0,w,c
  1829   00135A  A4D8               	btfss	status,2,c
  1830   00135C  D002               	goto	l2491
  1831   00135E  0E2D               	movlw	45
  1832   001360  0012               	return	
  1833   001362                     l2491:
  1834                           
  1835                           ;Lab4.c: 223: else if(Factorial) return '!';
  1836   001362  5041               	movf	_Factorial^0,w,c
  1837   001364  B4D8               	btfsc	status,2,c
  1838   001366  D032               	goto	l287
  1839   001368  0E21               	movlw	33
  1840   00136A  0012               	return	
  1841   00136C                     l267:
  1842                           
  1843                           ;Lab4.c: 225: else if(RB5==0) return '9';
  1844   00136C  BA81               	btfsc	3969,5,c	;volatile
  1845   00136E  D002               	goto	l272
  1846   001370  0E39               	movlw	57
  1847   001372  0012               	return	
  1848   001374                     l272:
  1849                           
  1850                           ;Lab4.c: 226: else if(RB6==0) return '8';
  1851   001374  BC81               	btfsc	3969,6,c	;volatile
  1852   001376  D002               	goto	l274
  1853   001378  0E38               	movlw	56
  1854   00137A  0012               	return	
  1855   00137C                     l274:
  1856                           
  1857                           ;Lab4.c: 227: else if(RB7==0) return '7';
  1858   00137C  BE81               	btfsc	3969,7,c	;volatile
  1859   00137E  D002               	goto	l2515
  1860   001380  0E37               	movlw	55
  1861   001382  0012               	return	
  1862   001384                     l2515:
  1863                           
  1864                           ;Lab4.c: 228: else{;Lab4.c: 229: LATB=0b11111011;
  1865   001384  0EFB               	movlw	251
  1866   001386  6E8A               	movwf	138,c	;volatile
  1867                           
  1868                           ;Lab4.c: 230: if(RB4==0) return 'x';
  1869   001388  B881               	btfsc	3969,4,c	;volatile
  1870   00138A  D002               	goto	l278
  1871   00138C  0E78               	movlw	120
  1872   00138E  0012               	return	
  1873   001390                     l278:
  1874                           
  1875                           ;Lab4.c: 231: else if(RB5==0) return '6';
  1876   001390  BA81               	btfsc	3969,5,c	;volatile
  1877   001392  D002               	goto	l280
  1878   001394  0E36               	movlw	54
  1879   001396  0012               	return	
  1880   001398                     l280:
  1881                           
  1882                           ;Lab4.c: 232: else if(RB6==0) return '5';
  1883   001398  BC81               	btfsc	3969,6,c	;volatile
  1884   00139A  D002               	goto	l282
  1885   00139C  0E35               	movlw	53
  1886   00139E  0012               	return	
  1887   0013A0                     l282:
  1888                           
  1889                           ;Lab4.c: 233: else if(RB7==0) return '4';
  1890   0013A0  BE81               	btfsc	3969,7,c	;volatile
  1891   0013A2  D002               	goto	l2543
  1892   0013A4  0E34               	movlw	52
  1893   0013A6  0012               	return	
  1894   0013A8                     l2543:
  1895                           
  1896                           ;Lab4.c: 234: else{;Lab4.c: 235: LATB=0b11110111;
  1897   0013A8  0EF7               	movlw	247
  1898   0013AA  6E8A               	movwf	138,c	;volatile
  1899                           
  1900                           ;Lab4.c: 236: if(RB4==0) return '/';
  1901   0013AC  B881               	btfsc	3969,4,c	;volatile
  1902   0013AE  D002               	goto	l286
  1903   0013B0  0E2F               	movlw	47
  1904   0013B2  0012               	return	
  1905   0013B4                     l286:
  1906                           
  1907                           ;Lab4.c: 237: else if(RB5==0) return '3';
  1908   0013B4  BA81               	btfsc	3969,5,c	;volatile
  1909   0013B6  D002               	goto	l288
  1910   0013B8  0E33               	movlw	51
  1911   0013BA  0012               	return	
  1912   0013BC                     l288:
  1913                           
  1914                           ;Lab4.c: 238: else if(RB6==0) return '2';
  1915   0013BC  BC81               	btfsc	3969,6,c	;volatile
  1916   0013BE  D002               	goto	l290
  1917   0013C0  0E32               	movlw	50
  1918   0013C2  0012               	return	
  1919   0013C4                     l290:
  1920                           
  1921                           ;Lab4.c: 239: else if(RB7==0) return '1';
  1922   0013C4  BE81               	btfsc	3969,7,c	;volatile
  1923   0013C6  D002               	goto	l287
  1924   0013C8  0E31               	movlw	49
  1925   0013CA  0012               	return	
  1926   0013CC                     l287:
  1927                           
  1928                           ;Lab4.c: 240: };Lab4.c: 241: };Lab4.c: 242: };Lab4.c: 243: return '?';
  1929   0013CC  0E3F               	movlw	63
  1930   0013CE  0012               	return		;funcret
  1931   0013D0                     __end_of_LeerTeclado:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _InicializaLCD *****************
  1935 ;; Defined at:
  1936 ;;		line 62 in file "LibLCDXC8.h"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1950 ;;      Params:         0       0       0       0       0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1953 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1954 ;;Total ram usage:        0 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 8
  1957 ;; This function calls:
  1958 ;;		_BorraLCD
  1959 ;;		_EnviaDato
  1960 ;;		_HabilitaLCD
  1961 ;;		_RetardoLCD
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text3
  1968   00147C                     __ptext3:
  1969                           	callstack 0
  1970   00147C                     _InicializaLCD:
  1971                           	callstack 22
  1972                           
  1973                           ;LibLCDXC8.h: 64: LATE0=0;
  1974                           
  1975                           ;incstack = 0
  1976   00147C  908D               	bcf	3981,0,c	;volatile
  1977                           
  1978                           ;LibLCDXC8.h: 65: if(interfaz==4)
  1979   00147E  0E04               	movlw	4
  1980   001480  184B               	xorwf	_interfaz^0,w,c
  1981   001482  A4D8               	btfss	status,2,c
  1982   001484  D004               	goto	l3333
  1983                           
  1984                           ;LibLCDXC8.h: 66: LATD=(LATD & 0b00001111) | 0x30;
  1985   001486  508C               	movf	140,w,c	;volatile
  1986   001488  0B0F               	andlw	15
  1987   00148A  0930               	iorlw	48
  1988   00148C  D001               	goto	L3
  1989   00148E                     l3333:
  1990                           
  1991                           ;LibLCDXC8.h: 67: else;LibLCDXC8.h: 68: LATD=0x3F;
  1992   00148E  0E3F               	movlw	63
  1993   001490                     L3:
  1994   001490  6E8C               	movwf	140,c	;volatile
  1995                           
  1996                           ;LibLCDXC8.h: 69: HabilitaLCD();
  1997   001492  EC53  F00D         	call	_HabilitaLCD	;wreg free
  1998                           
  1999                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  2000   001496  0E01               	movlw	1
  2001   001498  EC77  F00B         	call	_RetardoLCD
  2002                           
  2003                           ;LibLCDXC8.h: 71: if(interfaz==4)
  2004   00149C  0E04               	movlw	4
  2005   00149E  184B               	xorwf	_interfaz^0,w,c
  2006   0014A0  A4D8               	btfss	status,2,c
  2007   0014A2  D004               	goto	l3343
  2008                           
  2009                           ;LibLCDXC8.h: 72: LATD=(LATD & 0b00001111) | 0x30;
  2010   0014A4  508C               	movf	140,w,c	;volatile
  2011   0014A6  0B0F               	andlw	15
  2012   0014A8  0930               	iorlw	48
  2013   0014AA  D001               	goto	L4
  2014   0014AC                     l3343:
  2015                           
  2016                           ;LibLCDXC8.h: 73: else;LibLCDXC8.h: 74: LATD=0x3F;
  2017   0014AC  0E3F               	movlw	63
  2018   0014AE                     L4:
  2019   0014AE  6E8C               	movwf	140,c	;volatile
  2020                           
  2021                           ;LibLCDXC8.h: 75: HabilitaLCD();
  2022   0014B0  EC53  F00D         	call	_HabilitaLCD	;wreg free
  2023                           
  2024                           ;LibLCDXC8.h: 76: RetardoLCD(3);
  2025   0014B4  0E03               	movlw	3
  2026   0014B6  EC77  F00B         	call	_RetardoLCD
  2027                           
  2028                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2029   0014BA  0E04               	movlw	4
  2030   0014BC  184B               	xorwf	_interfaz^0,w,c
  2031   0014BE  A4D8               	btfss	status,2,c
  2032   0014C0  D004               	goto	l3353
  2033                           
  2034                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2035   0014C2  508C               	movf	140,w,c	;volatile
  2036   0014C4  0B0F               	andlw	15
  2037   0014C6  0930               	iorlw	48
  2038   0014C8  D001               	goto	L5
  2039   0014CA                     l3353:
  2040                           
  2041                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2042   0014CA  0E3F               	movlw	63
  2043   0014CC                     L5:
  2044   0014CC  6E8C               	movwf	140,c	;volatile
  2045                           
  2046                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2047   0014CE  EC53  F00D         	call	_HabilitaLCD	;wreg free
  2048                           
  2049                           ;LibLCDXC8.h: 82: RetardoLCD(4);
  2050   0014D2  0E04               	movlw	4
  2051   0014D4  EC77  F00B         	call	_RetardoLCD
  2052                           
  2053                           ;LibLCDXC8.h: 83: if(interfaz==4){
  2054   0014D8  0E04               	movlw	4
  2055   0014DA  184B               	xorwf	_interfaz^0,w,c
  2056   0014DC  A4D8               	btfss	status,2,c
  2057   0014DE  D011               	goto	l3373
  2058                           
  2059                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x20;
  2060   0014E0  508C               	movf	140,w,c	;volatile
  2061   0014E2  0B0F               	andlw	15
  2062   0014E4  0920               	iorlw	32
  2063   0014E6  6E8C               	movwf	140,c	;volatile
  2064                           
  2065                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2066   0014E8  EC53  F00D         	call	_HabilitaLCD	;wreg free
  2067                           
  2068                           ;LibLCDXC8.h: 86: RetardoLCD(4);
  2069   0014EC  0E04               	movlw	4
  2070   0014EE  EC77  F00B         	call	_RetardoLCD
  2071                           
  2072                           ;LibLCDXC8.h: 87: EnviaDato(0x2F);
  2073   0014F2  0E2F               	movlw	47
  2074   0014F4  EC48  F00C         	call	_EnviaDato
  2075                           
  2076                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2077   0014F8  EC53  F00D         	call	_HabilitaLCD	;wreg free
  2078                           
  2079                           ;LibLCDXC8.h: 89: RetardoLCD(4);
  2080   0014FC  0E04               	movlw	4
  2081   0014FE  EC77  F00B         	call	_RetardoLCD
  2082   001502                     l3373:
  2083                           
  2084                           ;LibLCDXC8.h: 90: };LibLCDXC8.h: 91: BorraLCD();
  2085   001502  EC3F  F00D         	call	_BorraLCD	;wreg free
  2086                           
  2087                           ;LibLCDXC8.h: 92: EnviaDato(0xF);
  2088   001506  0E0F               	movlw	15
  2089   001508  EC48  F00C         	call	_EnviaDato
  2090                           
  2091                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2092   00150C  EC53  F00D         	call	_HabilitaLCD	;wreg free
  2093                           
  2094                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2095   001510  0E04               	movlw	4
  2096   001512  EC77  F00B         	call	_RetardoLCD
  2097   001516  0012               	return		;funcret
  2098   001518                     __end_of_InicializaLCD:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _BorraLCD *****************
  2102 ;; Defined at:
  2103 ;;		line 103 in file "LibLCDXC8.h"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 7
  2124 ;; This function calls:
  2125 ;;		_EnviaDato
  2126 ;;		_HabilitaLCD
  2127 ;;		_RetardoLCD
  2128 ;; This function is called by:
  2129 ;;		_InicializaLCD
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text4
  2135   001A7E                     __ptext4:
  2136                           	callstack 0
  2137   001A7E                     _BorraLCD:
  2138                           	callstack 22
  2139                           
  2140                           ;LibLCDXC8.h: 105: LATE0=0;
  2141                           
  2142                           ;incstack = 0
  2143   001A7E  908D               	bcf	3981,0,c	;volatile
  2144                           
  2145                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  2146   001A80  0E01               	movlw	1
  2147   001A82  EC48  F00C         	call	_EnviaDato
  2148                           
  2149                           ;LibLCDXC8.h: 107: HabilitaLCD();
  2150   001A86  EC53  F00D         	call	_HabilitaLCD	;wreg free
  2151                           
  2152                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  2153   001A8A  0E02               	movlw	2
  2154   001A8C  EC77  F00B         	call	_RetardoLCD
  2155   001A90  0012               	return		;funcret
  2156   001A92                     __end_of_BorraLCD:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _Imprimir_Resultado *****************
  2160 ;; Defined at:
  2161 ;;		line 310 in file "Lab4.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  Resultado       4   27[COMRAM] long 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  k               2    1[BANK0 ] int 
  2166 ;;  j               2    5[BANK0 ] int 
  2167 ;;  i               2    3[BANK0 ] int 
  2168 ;;  Potencia        4    7[BANK0 ] long 
  2169 ;;  flag            1    0[BANK0 ] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2179 ;;      Params:         4       0       0       0       0       0       0       0       0
  2180 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2181 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2182 ;;      Totals:         8      11       0       0       0       0       0       0       0
  2183 ;;Total ram usage:       19 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 9
  2186 ;; This function calls:
  2187 ;;		_DireccionaLCD
  2188 ;;		_EscribeLCD_c
  2189 ;;		_MensajeLCD_Var
  2190 ;;		___aldiv
  2191 ;;		___almod
  2192 ;;		___lmul
  2193 ;;		___lwdiv
  2194 ;;		___lwmod
  2195 ;;		___wmul
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text5
  2202   000EDE                     __ptext5:
  2203                           	callstack 0
  2204   000EDE                     _Imprimir_Resultado:
  2205                           	callstack 21
  2206                           
  2207                           ;Lab4.c: 312: bool flag=0;
  2208                           
  2209                           ;incstack = 0
  2210   000EDE  0E00               	movlw	0
  2211   000EE0  0100               	movlb	0	; () banked
  2212   000EE2  6F60               	movwf	Imprimir_Resultado@flag& (0+255),b
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;Lab4.c: 313: if ((Parte_Decimal-(Resultado*100))>0 | (Parte_Decimal-(Resultado*100))<0)
      +                          {
  2216   000EE4  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___lmul@multiplier
  2217   000EE8  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___lmul@multiplier+1
  2218   000EEC  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___lmul@multiplier+2
  2219   000EF0  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___lmul@multiplier+3
  2220   000EF4  0E9C               	movlw	156
  2221   000EF6  6E12               	movwf	___lmul@multiplicand^0,c
  2222   000EF8  0EFF               	movlw	255
  2223   000EFA  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2224   000EFC  0EFF               	movlw	255
  2225   000EFE  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2226   000F00  0EFF               	movlw	255
  2227   000F02  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2228   000F04  EC4C  F00B         	call	___lmul	;wreg free
  2229   000F08  502C               	movf	_Parte_Decimal^0,w,c
  2230   000F0A  240E               	addwf	?___lmul^0,w,c
  2231   000F0C  6E20               	movwf	??_Imprimir_Resultado^0,c
  2232   000F0E  502D               	movf	(_Parte_Decimal+1)^0,w,c
  2233   000F10  200F               	addwfc	(?___lmul+1)^0,w,c
  2234   000F12  6E21               	movwf	(??_Imprimir_Resultado+1)^0,c
  2235   000F14  502E               	movf	(_Parte_Decimal+2)^0,w,c
  2236   000F16  2010               	addwfc	(?___lmul+2)^0,w,c
  2237   000F18  6E22               	movwf	(??_Imprimir_Resultado+2)^0,c
  2238   000F1A  502F               	movf	(_Parte_Decimal+3)^0,w,c
  2239   000F1C  2011               	addwfc	(?___lmul+3)^0,w,c
  2240   000F1E  6E23               	movwf	(??_Imprimir_Resultado+3)^0,c
  2241   000F20  5020               	movf	??_Imprimir_Resultado^0,w,c
  2242   000F22  1021               	iorwf	(??_Imprimir_Resultado+1)^0,w,c
  2243   000F24  1022               	iorwf	(??_Imprimir_Resultado+2)^0,w,c
  2244   000F26  1023               	iorwf	(??_Imprimir_Resultado+3)^0,w,c
  2245   000F28  B4D8               	btfsc	status,2,c
  2246   000F2A  D058               	goto	l3409
  2247                           
  2248                           ;Lab4.c: 314: for (int i = 0; i < 3; i++) {
  2249   000F2C  0E00               	movlw	0
  2250   000F2E  0100               	movlb	0	; () banked
  2251   000F30  6F64               	movwf	(Imprimir_Resultado@i+1)& (0+255),b
  2252   000F32  0E00               	movlw	0
  2253   000F34  6F63               	movwf	Imprimir_Resultado@i& (0+255),b
  2254   000F36                     l3393:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;Lab4.c: 315: Resultado = Numero_1 / Numero_2;
  2258   000F36  C03E  F014         	movff	_Numero_1,___lwdiv@dividend
  2259   000F3A  C03F  F015         	movff	_Numero_1+1,___lwdiv@dividend+1
  2260   000F3E  C03C  F016         	movff	_Numero_2,___lwdiv@divisor
  2261   000F42  C03D  F017         	movff	_Numero_2+1,___lwdiv@divisor+1
  2262   000F46  ECCD  F00B         	call	___lwdiv	;wreg free
  2263   000F4A  C014  F01C         	movff	?___lwdiv,Imprimir_Resultado@Resultado
  2264   000F4E  C015  F01D         	movff	?___lwdiv+1,Imprimir_Resultado@Resultado+1
  2265   000F52  6A1E               	clrf	(Imprimir_Resultado@Resultado+2)^0,c
  2266   000F54  6A1F               	clrf	(Imprimir_Resultado@Resultado+3)^0,c
  2267                           
  2268                           ;Lab4.c: 316: m = Numero_1 % Numero_2;
  2269   000F56  C03E  F00E         	movff	_Numero_1,___lwmod@dividend
  2270   000F5A  C03F  F00F         	movff	_Numero_1+1,___lwmod@dividend+1
  2271   000F5E  C03C  F010         	movff	_Numero_2,___lwmod@divisor
  2272   000F62  C03D  F011         	movff	_Numero_2+1,___lwmod@divisor+1
  2273   000F66  EC8E  F00C         	call	___lwmod	;wreg free
  2274   000F6A  C00E  F044         	movff	?___lwmod,_m
  2275   000F6E  C00F  F045         	movff	?___lwmod+1,_m+1
  2276   000F72  6A46               	clrf	(_m+2)^0,c
  2277   000F74  6A47               	clrf	(_m+3)^0,c
  2278                           
  2279                           ;Lab4.c: 317: EscribeLCD_c(Resultado+'0');
  2280   000F76  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  2281   000F78  0F30               	addlw	48
  2282   000F7A  EC13  F00D         	call	_EscribeLCD_c
  2283                           
  2284                           ;Lab4.c: 318: if(i == 0 && m != 0) {
  2285   000F7E  0100               	movlb	0	; () banked
  2286   000F80  5163               	movf	Imprimir_Resultado@i& (0+255),w,b
  2287   000F82  1164               	iorwf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2288   000F84  A4D8               	btfss	status,2,c
  2289   000F86  D009               	goto	l3401
  2290                           
  2291                           ; BSR set to: 0
  2292   000F88  5044               	movf	_m^0,w,c
  2293   000F8A  1045               	iorwf	(_m+1)^0,w,c
  2294   000F8C  1046               	iorwf	(_m+2)^0,w,c
  2295   000F8E  1047               	iorwf	(_m+3)^0,w,c
  2296   000F90  B4D8               	btfsc	status,2,c
  2297   000F92  D003               	goto	l3401
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;Lab4.c: 319: EscribeLCD_c(',');
  2301   000F94  0E2C               	movlw	44
  2302   000F96  EC13  F00D         	call	_EscribeLCD_c
  2303   000F9A                     l3401:
  2304                           
  2305                           ;Lab4.c: 320: };Lab4.c: 322: if (m != 0) {
  2306   000F9A  5044               	movf	_m^0,w,c
  2307   000F9C  1045               	iorwf	(_m+1)^0,w,c
  2308   000F9E  1046               	iorwf	(_m+2)^0,w,c
  2309   000FA0  1047               	iorwf	(_m+3)^0,w,c
  2310   000FA2  B4D8               	btfsc	status,2,c
  2311   000FA4  0012               	return	
  2312                           
  2313                           ;Lab4.c: 323: Numero_1 = m * 10;
  2314   000FA6  C044  F00E         	movff	_m,___wmul@multiplier
  2315   000FAA  C045  F00F         	movff	_m+1,___wmul@multiplier+1
  2316   000FAE  0E00               	movlw	0
  2317   000FB0  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  2318   000FB2  0E0A               	movlw	10
  2319   000FB4  6E10               	movwf	___wmul@multiplicand^0,c
  2320   000FB6  ECF4  F00C         	call	___wmul	;wreg free
  2321   000FBA  C00E  F03E         	movff	?___wmul,_Numero_1
  2322   000FBE  C00F  F03F         	movff	?___wmul+1,_Numero_1+1
  2323                           
  2324                           ;Lab4.c: 324: } else {
  2325   000FC2  0100               	movlb	0	; () banked
  2326   000FC4  4B63               	infsnz	Imprimir_Resultado@i& (0+255),f,b
  2327   000FC6  2B64               	incf	(Imprimir_Resultado@i+1)& (0+255),f,b
  2328                           
  2329                           ; BSR set to: 0
  2330   000FC8  BF64               	btfsc	(Imprimir_Resultado@i+1)& (0+255),7,b
  2331   000FCA  D7B5               	goto	l3393
  2332   000FCC  5164               	movf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2333   000FCE  E105               	bnz	u3820
  2334   000FD0  0E03               	movlw	3
  2335   000FD2  5D63               	subwf	Imprimir_Resultado@i& (0+255),w,b
  2336   000FD4  B0D8               	btfsc	status,0,c
  2337   000FD6  0012               	return	
  2338   000FD8  D7AE               	goto	l3393
  2339   000FDA                     u3820:
  2340   000FDA  0012               	return	
  2341   000FDC                     l3409:
  2342                           
  2343                           ;Lab4.c: 330: if(Resultado>0x8000 & Resultado!=1000 & Resultado !=1001 & Negativo==1){
  2344   000FDC  BE1F               	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2345   000FDE  D030               	goto	l3423
  2346   000FE0  501F               	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2347   000FE2  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2348   000FE4  E105               	bnz	u3830
  2349   000FE6  041C               	decf	Imprimir_Resultado@Resultado^0,w,c
  2350   000FE8  0E80               	movlw	128
  2351   000FEA  581D               	subwfb	(Imprimir_Resultado@Resultado+1)^0,w,c
  2352   000FEC  A0D8               	btfss	status,0,c
  2353   000FEE  D028               	goto	l3423
  2354   000FF0                     u3830:
  2355   000FF0  0EE8               	movlw	232
  2356   000FF2  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2357   000FF4  E106               	bnz	u3840
  2358   000FF6  0E03               	movlw	3
  2359   000FF8  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2360   000FFA  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2361   000FFC  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2362   000FFE  B4D8               	btfsc	status,2,c
  2363   001000  D01F               	goto	l3423
  2364   001002                     u3840:
  2365   001002  0EE9               	movlw	233
  2366   001004  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2367   001006  E106               	bnz	u3850
  2368   001008  0E03               	movlw	3
  2369   00100A  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2370   00100C  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2371   00100E  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2372   001010  B4D8               	btfsc	status,2,c
  2373   001012  D016               	goto	l3423
  2374   001014                     u3850:
  2375   001014  0440               	decf	_Negativo^0,w,c
  2376   001016  A4D8               	btfss	status,2,c
  2377   001018  D013               	goto	l3423
  2378                           
  2379                           ;Lab4.c: 331: EscribeLCD_c('-');
  2380   00101A  0E2D               	movlw	45
  2381   00101C  EC13  F00D         	call	_EscribeLCD_c
  2382                           
  2383                           ;Lab4.c: 332: DireccionaLCD(0x85);
  2384   001020  0E85               	movlw	133
  2385   001022  EC1E  F00D         	call	_DireccionaLCD
  2386                           
  2387                           ;Lab4.c: 333: Resultado = ~Resultado+1;
  2388   001026  1E1F               	comf	(Imprimir_Resultado@Resultado+3)^0,f,c
  2389   001028  1E1E               	comf	(Imprimir_Resultado@Resultado+2)^0,f,c
  2390   00102A  1E1D               	comf	(Imprimir_Resultado@Resultado+1)^0,f,c
  2391   00102C  6C1C               	negf	Imprimir_Resultado@Resultado^0,c
  2392   00102E  0E00               	movlw	0
  2393   001030  221D               	addwfc	(Imprimir_Resultado@Resultado+1)^0,f,c
  2394   001032  221E               	addwfc	(Imprimir_Resultado@Resultado+2)^0,f,c
  2395   001034  221F               	addwfc	(Imprimir_Resultado@Resultado+3)^0,f,c
  2396                           
  2397                           ;Lab4.c: 334: EscribeLCD_c(Resultado+'0');
  2398   001036  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  2399   001038  0F30               	addlw	48
  2400   00103A  EC13  F00D         	call	_EscribeLCD_c
  2401                           
  2402                           ;Lab4.c: 335: }else{
  2403   00103E  0012               	return	
  2404   001040                     l3423:
  2405                           
  2406                           ;Lab4.c: 336: if(Resultado>=0xA & Resultado!=1000 & Resultado !=1001){
  2407   001040  BE1F               	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2408   001042  D0D7               	goto	l3471
  2409   001044  501F               	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2410   001046  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2411   001048  101D               	iorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2412   00104A  E104               	bnz	u3870
  2413   00104C  0E0A               	movlw	10
  2414   00104E  5C1C               	subwf	Imprimir_Resultado@Resultado^0,w,c
  2415   001050  A0D8               	btfss	status,0,c
  2416   001052  D0CF               	goto	l3471
  2417   001054                     u3870:
  2418   001054  0EE8               	movlw	232
  2419   001056  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2420   001058  E106               	bnz	u3880
  2421   00105A  0E03               	movlw	3
  2422   00105C  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2423   00105E  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2424   001060  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2425   001062  B4D8               	btfsc	status,2,c
  2426   001064  D0C6               	goto	l3471
  2427   001066                     u3880:
  2428   001066  0EE9               	movlw	233
  2429   001068  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2430   00106A  E106               	bnz	u3890
  2431   00106C  0E03               	movlw	3
  2432   00106E  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2433   001070  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2434   001072  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2435   001074  B4D8               	btfsc	status,2,c
  2436   001076  D0BD               	goto	l3471
  2437   001078                     u3890:
  2438                           
  2439                           ;Lab4.c: 337: for(int j=9;j>=0;j--){
  2440   001078  0E00               	movlw	0
  2441   00107A  0100               	movlb	0	; () banked
  2442   00107C  6F66               	movwf	(Imprimir_Resultado@j+1)& (0+255),b
  2443   00107E  0E09               	movlw	9
  2444   001080  6F65               	movwf	Imprimir_Resultado@j& (0+255),b
  2445   001082                     l3435:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;Lab4.c: 338: Potencia = 10;
  2449   001082  0E0A               	movlw	10
  2450   001084  6F67               	movwf	Imprimir_Resultado@Potencia& (0+255),b
  2451   001086  0E00               	movlw	0
  2452   001088  6F68               	movwf	(Imprimir_Resultado@Potencia+1)& (0+255),b
  2453   00108A  0E00               	movlw	0
  2454   00108C  6F69               	movwf	(Imprimir_Resultado@Potencia+2)& (0+255),b
  2455   00108E  0E00               	movlw	0
  2456   001090  6F6A               	movwf	(Imprimir_Resultado@Potencia+3)& (0+255),b
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;Lab4.c: 339: for(int k=j-1;k>0;k--){
  2460   001092  0EFF               	movlw	255
  2461   001094  2565               	addwf	Imprimir_Resultado@j& (0+255),w,b
  2462   001096  6F61               	movwf	Imprimir_Resultado@k& (0+255),b
  2463   001098  0EFF               	movlw	255
  2464   00109A  2166               	addwfc	(Imprimir_Resultado@j+1)& (0+255),w,b
  2465   00109C  6F62               	movwf	(Imprimir_Resultado@k+1)& (0+255),b
  2466   00109E                     l3439:
  2467                           
  2468                           ; BSR set to: 0
  2469   00109E  BF62               	btfsc	(Imprimir_Resultado@k+1)& (0+255),7,b
  2470   0010A0  D024               	goto	l3449
  2471   0010A2  5162               	movf	(Imprimir_Resultado@k+1)& (0+255),w,b
  2472   0010A4  E103               	bnz	l3443
  2473   0010A6  0561               	decf	Imprimir_Resultado@k& (0+255),w,b
  2474   0010A8  A0D8               	btfss	status,0,c
  2475   0010AA  D01F               	goto	l3449
  2476   0010AC                     l3443:
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;Lab4.c: 340: Potencia = Potencia*10;
  2480   0010AC  C067  F00E         	movff	Imprimir_Resultado@Potencia,___lmul@multiplier
  2481   0010B0  C068  F00F         	movff	Imprimir_Resultado@Potencia+1,___lmul@multiplier+1
  2482   0010B4  C069  F010         	movff	Imprimir_Resultado@Potencia+2,___lmul@multiplier+2
  2483   0010B8  C06A  F011         	movff	Imprimir_Resultado@Potencia+3,___lmul@multiplier+3
  2484   0010BC  0E0A               	movlw	10
  2485   0010BE  6E12               	movwf	___lmul@multiplicand^0,c
  2486   0010C0  0E00               	movlw	0
  2487   0010C2  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2488   0010C4  0E00               	movlw	0
  2489   0010C6  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2490   0010C8  0E00               	movlw	0
  2491   0010CA  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2492   0010CC  EC4C  F00B         	call	___lmul	;wreg free
  2493   0010D0  C00E  F067         	movff	?___lmul,Imprimir_Resultado@Potencia
  2494   0010D4  C00F  F068         	movff	?___lmul+1,Imprimir_Resultado@Potencia+1
  2495   0010D8  C010  F069         	movff	?___lmul+2,Imprimir_Resultado@Potencia+2
  2496   0010DC  C011  F06A         	movff	?___lmul+3,Imprimir_Resultado@Potencia+3
  2497   0010E0  0100               	movlb	0	; () banked
  2498   0010E2  0761               	decf	Imprimir_Resultado@k& (0+255),f,b
  2499   0010E4  A0D8               	btfss	status,0,c
  2500   0010E6  0762               	decf	(Imprimir_Resultado@k+1)& (0+255),f,b
  2501   0010E8  D7DA               	goto	l3439
  2502   0010EA                     l3449:
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;Lab4.c: 341: };Lab4.c: 342: if(Resultado/Potencia>0){
  2506   0010EA  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2507   0010EE  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2508   0010F2  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2509   0010F6  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2510   0010FA  C067  F012         	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2511   0010FE  C068  F013         	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2512   001102  C069  F014         	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2513   001106  C06A  F015         	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2514   00110A  EC1D  F009         	call	___aldiv	;wreg free
  2515   00110E  BE11               	btfsc	(?___aldiv+3)^0,7,c
  2516   001110  D03B               	goto	l3457
  2517   001112  5011               	movf	(?___aldiv+3)^0,w,c
  2518   001114  1010               	iorwf	(?___aldiv+2)^0,w,c
  2519   001116  100F               	iorwf	(?___aldiv+1)^0,w,c
  2520   001118  E103               	bnz	u3910
  2521   00111A  040E               	decf	?___aldiv^0,w,c
  2522   00111C  A0D8               	btfss	status,0,c
  2523   00111E  D034               	goto	l3457
  2524   001120                     u3910:
  2525                           
  2526                           ;Lab4.c: 343: flag = 1;
  2527   001120  0E01               	movlw	1
  2528   001122  0100               	movlb	0	; () banked
  2529   001124  6F60               	movwf	Imprimir_Resultado@flag& (0+255),b
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;Lab4.c: 344: EscribeLCD_c(Resultado/Potencia+48);
  2533   001126  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2534   00112A  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2535   00112E  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2536   001132  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2537   001136  C067  F012         	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2538   00113A  C068  F013         	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2539   00113E  C069  F014         	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2540   001142  C06A  F015         	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2541   001146  EC1D  F009         	call	___aldiv	;wreg free
  2542   00114A  500E               	movf	?___aldiv^0,w,c
  2543   00114C  0F30               	addlw	48
  2544   00114E  EC13  F00D         	call	_EscribeLCD_c
  2545                           
  2546                           ;Lab4.c: 345: Resultado=Resultado%Potencia;
  2547   001152  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___almod@dividend
  2548   001156  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___almod@dividend+1
  2549   00115A  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___almod@dividend+2
  2550   00115E  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___almod@dividend+3
  2551   001162  C067  F012         	movff	Imprimir_Resultado@Potencia,___almod@divisor
  2552   001166  C068  F013         	movff	Imprimir_Resultado@Potencia+1,___almod@divisor+1
  2553   00116A  C069  F014         	movff	Imprimir_Resultado@Potencia+2,___almod@divisor+2
  2554   00116E  C06A  F015         	movff	Imprimir_Resultado@Potencia+3,___almod@divisor+3
  2555   001172  ECE8  F009         	call	___almod	;wreg free
  2556   001176  C00E  F01C         	movff	?___almod,Imprimir_Resultado@Resultado
  2557   00117A  C00F  F01D         	movff	?___almod+1,Imprimir_Resultado@Resultado+1
  2558   00117E  C010  F01E         	movff	?___almod+2,Imprimir_Resultado@Resultado+2
  2559   001182  C011  F01F         	movff	?___almod+3,Imprimir_Resultado@Resultado+3
  2560                           
  2561                           ;Lab4.c: 346: }else if( (Resultado/Potencia)==0 && flag){
  2562   001186  D02E               	goto	l3467
  2563   001188                     l3457:
  2564   001188  C01C  F00E         	movff	Imprimir_Resultado@Resultado,___aldiv@dividend
  2565   00118C  C01D  F00F         	movff	Imprimir_Resultado@Resultado+1,___aldiv@dividend+1
  2566   001190  C01E  F010         	movff	Imprimir_Resultado@Resultado+2,___aldiv@dividend+2
  2567   001194  C01F  F011         	movff	Imprimir_Resultado@Resultado+3,___aldiv@dividend+3
  2568   001198  C067  F012         	movff	Imprimir_Resultado@Potencia,___aldiv@divisor
  2569   00119C  C068  F013         	movff	Imprimir_Resultado@Potencia+1,___aldiv@divisor+1
  2570   0011A0  C069  F014         	movff	Imprimir_Resultado@Potencia+2,___aldiv@divisor+2
  2571   0011A4  C06A  F015         	movff	Imprimir_Resultado@Potencia+3,___aldiv@divisor+3
  2572   0011A8  EC1D  F009         	call	___aldiv	;wreg free
  2573   0011AC  500E               	movf	?___aldiv^0,w,c
  2574   0011AE  100F               	iorwf	(?___aldiv+1)^0,w,c
  2575   0011B0  1010               	iorwf	(?___aldiv+2)^0,w,c
  2576   0011B2  1011               	iorwf	(?___aldiv+3)^0,w,c
  2577   0011B4  A4D8               	btfss	status,2,c
  2578   0011B6  D016               	goto	l3467
  2579   0011B8  0100               	movlb	0	; () banked
  2580   0011BA  5160               	movf	Imprimir_Resultado@flag& (0+255),w,b
  2581   0011BC  B4D8               	btfsc	status,2,c
  2582   0011BE  D012               	goto	l3467
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;Lab4.c: 347: if(Resultado<10) EscribeLCD_c(Resultado+48);
  2586   0011C0  BE1F               	btfsc	(Imprimir_Resultado@Resultado+3)^0,7,c
  2587   0011C2  D008               	goto	u3940
  2588   0011C4  501F               	movf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2589   0011C6  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2590   0011C8  101D               	iorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2591   0011CA  E109               	bnz	l3465
  2592   0011CC  0E0A               	movlw	10
  2593   0011CE  5C1C               	subwf	Imprimir_Resultado@Resultado^0,w,c
  2594   0011D0  B0D8               	btfsc	status,0,c
  2595   0011D2  D005               	goto	l3465
  2596   0011D4                     u3940:
  2597                           
  2598                           ; BSR set to: 0
  2599   0011D4  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  2600   0011D6  0F30               	addlw	48
  2601   0011D8  EC13  F00D         	call	_EscribeLCD_c
  2602   0011DC  D003               	goto	l3467
  2603   0011DE                     l3465:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;Lab4.c: 348: else EscribeLCD_c(48);
  2607   0011DE  0E30               	movlw	48
  2608   0011E0  EC13  F00D         	call	_EscribeLCD_c
  2609   0011E4                     l3467:
  2610   0011E4  0100               	movlb	0	; () banked
  2611   0011E6  0765               	decf	Imprimir_Resultado@j& (0+255),f,b
  2612   0011E8  A0D8               	btfss	status,0,c
  2613   0011EA  0766               	decf	(Imprimir_Resultado@j+1)& (0+255),f,b
  2614                           
  2615                           ; BSR set to: 0
  2616   0011EC  BF66               	btfsc	(Imprimir_Resultado@j+1)& (0+255),7,b
  2617   0011EE  0012               	return	
  2618   0011F0  D748               	goto	l3435
  2619   0011F2                     l3471:
  2620                           
  2621                           ;Lab4.c: 352: if(Resultado==1000){
  2622   0011F2  0EE8               	movlw	232
  2623   0011F4  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2624   0011F6  E10B               	bnz	l3475
  2625   0011F8  0E03               	movlw	3
  2626   0011FA  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2627   0011FC  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2628   0011FE  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2629   001200  A4D8               	btfss	status,2,c
  2630   001202  D005               	goto	l3475
  2631                           
  2632                           ;Lab4.c: 353: MensajeLCD_Var("Infinito");
  2633   001204  0E4E               	movlw	low STR_12
  2634   001206  6E13               	movwf	MensajeLCD_Var@a^0,c
  2635   001208  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
  2636                           
  2637                           ;Lab4.c: 354: }else{
  2638   00120C  0012               	return	
  2639   00120E                     l3475:
  2640                           
  2641                           ;Lab4.c: 355: if(Resultado==1001){
  2642   00120E  0EE9               	movlw	233
  2643   001210  181C               	xorwf	Imprimir_Resultado@Resultado^0,w,c
  2644   001212  E10E               	bnz	l3481
  2645   001214  0E03               	movlw	3
  2646   001216  181D               	xorwf	(Imprimir_Resultado@Resultado+1)^0,w,c
  2647   001218  101E               	iorwf	(Imprimir_Resultado@Resultado+2)^0,w,c
  2648   00121A  101F               	iorwf	(Imprimir_Resultado@Resultado+3)^0,w,c
  2649   00121C  A4D8               	btfss	status,2,c
  2650   00121E  D008               	goto	l3481
  2651                           
  2652                           ;Lab4.c: 356: DireccionaLCD(0xC1);
  2653   001220  0EC1               	movlw	193
  2654   001222  EC1E  F00D         	call	_DireccionaLCD
  2655                           
  2656                           ;Lab4.c: 357: MensajeLCD_Var("Indeterminado");
  2657   001226  0E1E               	movlw	low STR_13
  2658   001228  6E13               	movwf	MensajeLCD_Var@a^0,c
  2659   00122A  ECF6  F00B         	call	_MensajeLCD_Var	;wreg free
  2660                           
  2661                           ;Lab4.c: 358: }else{
  2662   00122E  0012               	return	
  2663   001230                     l3481:
  2664                           
  2665                           ;Lab4.c: 359: EscribeLCD_c(Resultado+'0');
  2666   001230  501C               	movf	Imprimir_Resultado@Resultado^0,w,c
  2667   001232  0F30               	addlw	48
  2668   001234  EC13  F00D         	call	_EscribeLCD_c
  2669   001238  0012               	return		;funcret
  2670   00123A                     __end_of_Imprimir_Resultado:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function ___wmul *****************
  2674 ;; Defined at:
  2675 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  multiplier      2   13[COMRAM] unsigned int 
  2678 ;;  multiplicand    2   15[COMRAM] unsigned int 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  product         2   17[COMRAM] unsigned int 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2   13[COMRAM] unsigned int 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, prodl, prodh
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2690 ;;      Params:         4       0       0       0       0       0       0       0       0
  2691 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2693 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2694 ;;Total ram usage:        6 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 5
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;;		_Imprimir_Resultado
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text6
  2706   0019E8                     __ptext6:
  2707                           	callstack 0
  2708   0019E8                     ___wmul:
  2709                           	callstack 25
  2710                           
  2711                           ;incstack = 0
  2712   0019E8  500E               	movf	___wmul@multiplier^0,w,c
  2713   0019EA  0210               	mulwf	___wmul@multiplicand^0,c
  2714   0019EC  CFF3 F012          	movff	prodl,___wmul@product
  2715   0019F0  CFF4 F013          	movff	prodh,___wmul@product+1
  2716   0019F4  500E               	movf	___wmul@multiplier^0,w,c
  2717   0019F6  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  2718   0019F8  50F3               	movf	243,w,c
  2719   0019FA  2613               	addwf	(___wmul@product+1)^0,f,c
  2720   0019FC  500F               	movf	(___wmul@multiplier+1)^0,w,c
  2721   0019FE  0210               	mulwf	___wmul@multiplicand^0,c
  2722   001A00  50F3               	movf	243,w,c
  2723   001A02  2613               	addwf	(___wmul@product+1)^0,f,c
  2724   001A04  C012  F00E         	movff	___wmul@product,?___wmul
  2725   001A08  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  2726   001A0C  0012               	return		;funcret
  2727   001A0E                     __end_of___wmul:
  2728                           	callstack 0
  2729                           
  2730 ;; *************** function ___lwmod *****************
  2731 ;; Defined at:
  2732 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  dividend        2   13[COMRAM] unsigned int 
  2735 ;;  divisor         2   15[COMRAM] unsigned int 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  counter         1   17[COMRAM] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2   13[COMRAM] unsigned int 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2747 ;;      Params:         4       0       0       0       0       0       0       0       0
  2748 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2750 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2751 ;;Total ram usage:        5 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 5
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_Imprimir_Resultado
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text7
  2762   00191C                     __ptext7:
  2763                           	callstack 0
  2764   00191C                     ___lwmod:
  2765                           	callstack 24
  2766                           
  2767                           ;incstack = 0
  2768   00191C  5010               	movf	___lwmod@divisor^0,w,c
  2769   00191E  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  2770   001920  B4D8               	btfsc	status,2,c
  2771   001922  D018               	goto	l847
  2772   001924  0E01               	movlw	1
  2773   001926  6E12               	movwf	___lwmod@counter^0,c
  2774   001928  D004               	goto	l3317
  2775   00192A                     l3315:
  2776   00192A  90D8               	bcf	status,0,c
  2777   00192C  3610               	rlcf	___lwmod@divisor^0,f,c
  2778   00192E  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  2779   001930  2A12               	incf	___lwmod@counter^0,f,c
  2780   001932                     l3317:
  2781   001932  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  2782   001934  D7FA               	goto	l3315
  2783   001936                     u3720:
  2784   001936  5010               	movf	___lwmod@divisor^0,w,c
  2785   001938  5C0E               	subwf	___lwmod@dividend^0,w,c
  2786   00193A  5011               	movf	(___lwmod@divisor+1)^0,w,c
  2787   00193C  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  2788   00193E  A0D8               	btfss	status,0,c
  2789   001940  D004               	goto	l3323
  2790   001942  5010               	movf	___lwmod@divisor^0,w,c
  2791   001944  5E0E               	subwf	___lwmod@dividend^0,f,c
  2792   001946  5011               	movf	(___lwmod@divisor+1)^0,w,c
  2793   001948  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  2794   00194A                     l3323:
  2795   00194A  90D8               	bcf	status,0,c
  2796   00194C  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  2797   00194E  3210               	rrcf	___lwmod@divisor^0,f,c
  2798   001950  2E12               	decfsz	___lwmod@counter^0,f,c
  2799   001952  D7F1               	goto	u3720
  2800   001954                     l847:
  2801   001954  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  2802   001958  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  2803   00195C  0012               	return		;funcret
  2804   00195E                     __end_of___lwmod:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function ___lwdiv *****************
  2808 ;; Defined at:
  2809 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  dividend        2   19[COMRAM] unsigned int 
  2812 ;;  divisor         2   21[COMRAM] unsigned int 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  quotient        2   24[COMRAM] unsigned int 
  2815 ;;  counter         1   23[COMRAM] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  2   19[COMRAM] unsigned int 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2825 ;;      Params:         4       0       0       0       0       0       0       0       0
  2826 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2828 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2829 ;;Total ram usage:        7 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 5
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;;		_Imprimir_Resultado
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text8
  2841   00179A                     __ptext8:
  2842                           	callstack 0
  2843   00179A                     ___lwdiv:
  2844                           	callstack 25
  2845                           
  2846                           ;incstack = 0
  2847   00179A  0E00               	movlw	0
  2848   00179C  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  2849   00179E  0E00               	movlw	0
  2850   0017A0  6E19               	movwf	___lwdiv@quotient^0,c
  2851   0017A2  5016               	movf	___lwdiv@divisor^0,w,c
  2852   0017A4  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2853   0017A6  B4D8               	btfsc	status,2,c
  2854   0017A8  D01C               	goto	l837
  2855   0017AA  0E01               	movlw	1
  2856   0017AC  6E18               	movwf	___lwdiv@counter^0,c
  2857   0017AE  D004               	goto	l3297
  2858   0017B0                     l3295:
  2859   0017B0  90D8               	bcf	status,0,c
  2860   0017B2  3616               	rlcf	___lwdiv@divisor^0,f,c
  2861   0017B4  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2862   0017B6  2A18               	incf	___lwdiv@counter^0,f,c
  2863   0017B8                     l3297:
  2864   0017B8  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  2865   0017BA  D7FA               	goto	l3295
  2866   0017BC                     u3690:
  2867   0017BC  90D8               	bcf	status,0,c
  2868   0017BE  3619               	rlcf	___lwdiv@quotient^0,f,c
  2869   0017C0  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2870   0017C2  5016               	movf	___lwdiv@divisor^0,w,c
  2871   0017C4  5C14               	subwf	___lwdiv@dividend^0,w,c
  2872   0017C6  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2873   0017C8  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2874   0017CA  A0D8               	btfss	status,0,c
  2875   0017CC  D005               	goto	l3307
  2876   0017CE  5016               	movf	___lwdiv@divisor^0,w,c
  2877   0017D0  5E14               	subwf	___lwdiv@dividend^0,f,c
  2878   0017D2  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  2879   0017D4  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2880   0017D6  8019               	bsf	___lwdiv@quotient^0,0,c
  2881   0017D8                     l3307:
  2882   0017D8  90D8               	bcf	status,0,c
  2883   0017DA  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2884   0017DC  3216               	rrcf	___lwdiv@divisor^0,f,c
  2885   0017DE  2E18               	decfsz	___lwdiv@counter^0,f,c
  2886   0017E0  D7ED               	goto	u3690
  2887   0017E2                     l837:
  2888   0017E2  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  2889   0017E6  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2890   0017EA  0012               	return		;funcret
  2891   0017EC                     __end_of___lwdiv:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function ___lmul *****************
  2895 ;; Defined at:
  2896 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  multiplier      4   13[COMRAM] unsigned long 
  2899 ;;  multiplicand    4   17[COMRAM] unsigned long 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  product         4   21[COMRAM] unsigned long 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  4   13[COMRAM] unsigned long 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2911 ;;      Params:         8       0       0       0       0       0       0       0       0
  2912 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2914 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2915 ;;Total ram usage:       12 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 5
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;;		_factorial_function
  2923 ;;		_Imprimir_Resultado
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text9
  2928   001698                     __ptext9:
  2929                           	callstack 0
  2930   001698                     ___lmul:
  2931                           	callstack 24
  2932                           
  2933                           ;incstack = 0
  2934   001698  0E00               	movlw	0
  2935   00169A  6E16               	movwf	___lmul@product^0,c
  2936   00169C  0E00               	movlw	0
  2937   00169E  6E17               	movwf	(___lmul@product+1)^0,c
  2938   0016A0  0E00               	movlw	0
  2939   0016A2  6E18               	movwf	(___lmul@product+2)^0,c
  2940   0016A4  0E00               	movlw	0
  2941   0016A6  6E19               	movwf	(___lmul@product+3)^0,c
  2942   0016A8                     l3201:
  2943   0016A8  A00E               	btfss	___lmul@multiplier^0,0,c
  2944   0016AA  D008               	goto	l3205
  2945   0016AC  5012               	movf	___lmul@multiplicand^0,w,c
  2946   0016AE  2616               	addwf	___lmul@product^0,f,c
  2947   0016B0  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  2948   0016B2  2217               	addwfc	(___lmul@product+1)^0,f,c
  2949   0016B4  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  2950   0016B6  2218               	addwfc	(___lmul@product+2)^0,f,c
  2951   0016B8  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  2952   0016BA  2219               	addwfc	(___lmul@product+3)^0,f,c
  2953   0016BC                     l3205:
  2954   0016BC  90D8               	bcf	status,0,c
  2955   0016BE  3612               	rlcf	___lmul@multiplicand^0,f,c
  2956   0016C0  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2957   0016C2  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2958   0016C4  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2959   0016C6  90D8               	bcf	status,0,c
  2960   0016C8  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  2961   0016CA  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  2962   0016CC  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  2963   0016CE  320E               	rrcf	___lmul@multiplier^0,f,c
  2964   0016D0  500E               	movf	___lmul@multiplier^0,w,c
  2965   0016D2  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  2966   0016D4  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  2967   0016D6  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  2968   0016D8  A4D8               	btfss	status,2,c
  2969   0016DA  D7E6               	goto	l3201
  2970   0016DC  C016  F00E         	movff	___lmul@product,?___lmul
  2971   0016E0  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  2972   0016E4  C018  F010         	movff	___lmul@product+2,?___lmul+2
  2973   0016E8  C019  F011         	movff	___lmul@product+3,?___lmul+3
  2974   0016EC  0012               	return		;funcret
  2975   0016EE                     __end_of___lmul:
  2976                           	callstack 0
  2977                           
  2978 ;; *************** function ___almod *****************
  2979 ;; Defined at:
  2980 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  dividend        4   13[COMRAM] long 
  2983 ;;  divisor         4   17[COMRAM] long 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  sign            1   22[COMRAM] unsigned char 
  2986 ;;  counter         1   21[COMRAM] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  4   13[COMRAM] long 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2996 ;;      Params:         8       0       0       0       0       0       0       0       0
  2997 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2999 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3000 ;;Total ram usage:       10 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 5
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_Imprimir_Resultado
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text10
  3011   0013D0                     __ptext10:
  3012                           	callstack 0
  3013   0013D0                     ___almod:
  3014                           	callstack 24
  3015                           
  3016                           ;incstack = 0
  3017   0013D0  0E00               	movlw	0
  3018   0013D2  6E17               	movwf	___almod@sign^0,c
  3019   0013D4  AE11               	btfss	(___almod@dividend+3)^0,7,c
  3020   0013D6  D00A               	goto	l3261
  3021   0013D8  1E11               	comf	(___almod@dividend+3)^0,f,c
  3022   0013DA  1E10               	comf	(___almod@dividend+2)^0,f,c
  3023   0013DC  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3024   0013DE  6C0E               	negf	___almod@dividend^0,c
  3025   0013E0  0E00               	movlw	0
  3026   0013E2  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3027   0013E4  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3028   0013E6  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3029   0013E8  0E01               	movlw	1
  3030   0013EA  6E17               	movwf	___almod@sign^0,c
  3031   0013EC                     l3261:
  3032   0013EC  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3033   0013EE  D008               	goto	l3265
  3034   0013F0  1E15               	comf	(___almod@divisor+3)^0,f,c
  3035   0013F2  1E14               	comf	(___almod@divisor+2)^0,f,c
  3036   0013F4  1E13               	comf	(___almod@divisor+1)^0,f,c
  3037   0013F6  6C12               	negf	___almod@divisor^0,c
  3038   0013F8  0E00               	movlw	0
  3039   0013FA  2213               	addwfc	(___almod@divisor+1)^0,f,c
  3040   0013FC  2214               	addwfc	(___almod@divisor+2)^0,f,c
  3041   0013FE  2215               	addwfc	(___almod@divisor+3)^0,f,c
  3042   001400                     l3265:
  3043   001400  5012               	movf	___almod@divisor^0,w,c
  3044   001402  1013               	iorwf	(___almod@divisor+1)^0,w,c
  3045   001404  1014               	iorwf	(___almod@divisor+2)^0,w,c
  3046   001406  1015               	iorwf	(___almod@divisor+3)^0,w,c
  3047   001408  B4D8               	btfsc	status,2,c
  3048   00140A  D024               	goto	l3281
  3049   00140C  0E01               	movlw	1
  3050   00140E  6E16               	movwf	___almod@counter^0,c
  3051   001410  D006               	goto	l3271
  3052   001412                     l3269:
  3053   001412  90D8               	bcf	status,0,c
  3054   001414  3612               	rlcf	___almod@divisor^0,f,c
  3055   001416  3613               	rlcf	(___almod@divisor+1)^0,f,c
  3056   001418  3614               	rlcf	(___almod@divisor+2)^0,f,c
  3057   00141A  3615               	rlcf	(___almod@divisor+3)^0,f,c
  3058   00141C  2A16               	incf	___almod@counter^0,f,c
  3059   00141E                     l3271:
  3060   00141E  AE15               	btfss	(___almod@divisor+3)^0,7,c
  3061   001420  D7F8               	goto	l3269
  3062   001422                     u3650:
  3063   001422  5012               	movf	___almod@divisor^0,w,c
  3064   001424  5C0E               	subwf	___almod@dividend^0,w,c
  3065   001426  5013               	movf	(___almod@divisor+1)^0,w,c
  3066   001428  580F               	subwfb	(___almod@dividend+1)^0,w,c
  3067   00142A  5014               	movf	(___almod@divisor+2)^0,w,c
  3068   00142C  5810               	subwfb	(___almod@dividend+2)^0,w,c
  3069   00142E  5015               	movf	(___almod@divisor+3)^0,w,c
  3070   001430  5811               	subwfb	(___almod@dividend+3)^0,w,c
  3071   001432  A0D8               	btfss	status,0,c
  3072   001434  D008               	goto	l3277
  3073   001436  5012               	movf	___almod@divisor^0,w,c
  3074   001438  5E0E               	subwf	___almod@dividend^0,f,c
  3075   00143A  5013               	movf	(___almod@divisor+1)^0,w,c
  3076   00143C  5A0F               	subwfb	(___almod@dividend+1)^0,f,c
  3077   00143E  5014               	movf	(___almod@divisor+2)^0,w,c
  3078   001440  5A10               	subwfb	(___almod@dividend+2)^0,f,c
  3079   001442  5015               	movf	(___almod@divisor+3)^0,w,c
  3080   001444  5A11               	subwfb	(___almod@dividend+3)^0,f,c
  3081   001446                     l3277:
  3082   001446  90D8               	bcf	status,0,c
  3083   001448  3215               	rrcf	(___almod@divisor+3)^0,f,c
  3084   00144A  3214               	rrcf	(___almod@divisor+2)^0,f,c
  3085   00144C  3213               	rrcf	(___almod@divisor+1)^0,f,c
  3086   00144E  3212               	rrcf	___almod@divisor^0,f,c
  3087   001450  2E16               	decfsz	___almod@counter^0,f,c
  3088   001452  D7E7               	goto	u3650
  3089   001454                     l3281:
  3090   001454  5017               	movf	___almod@sign^0,w,c
  3091   001456  B4D8               	btfsc	status,2,c
  3092   001458  D008               	goto	l3285
  3093   00145A  1E11               	comf	(___almod@dividend+3)^0,f,c
  3094   00145C  1E10               	comf	(___almod@dividend+2)^0,f,c
  3095   00145E  1E0F               	comf	(___almod@dividend+1)^0,f,c
  3096   001460  6C0E               	negf	___almod@dividend^0,c
  3097   001462  0E00               	movlw	0
  3098   001464  220F               	addwfc	(___almod@dividend+1)^0,f,c
  3099   001466  2210               	addwfc	(___almod@dividend+2)^0,f,c
  3100   001468  2211               	addwfc	(___almod@dividend+3)^0,f,c
  3101   00146A                     l3285:
  3102   00146A  C00E  F00E         	movff	___almod@dividend,?___almod
  3103   00146E  C00F  F00F         	movff	___almod@dividend+1,?___almod+1
  3104   001472  C010  F010         	movff	___almod@dividend+2,?___almod+2
  3105   001476  C011  F011         	movff	___almod@dividend+3,?___almod+3
  3106   00147A  0012               	return		;funcret
  3107   00147C                     __end_of___almod:
  3108                           	callstack 0
  3109                           
  3110 ;; *************** function ___aldiv *****************
  3111 ;; Defined at:
  3112 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  dividend        4   13[COMRAM] long 
  3115 ;;  divisor         4   17[COMRAM] long 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  quotient        4   23[COMRAM] long 
  3118 ;;  sign            1   22[COMRAM] unsigned char 
  3119 ;;  counter         1   21[COMRAM] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  4   13[COMRAM] long 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3129 ;;      Params:         8       0       0       0       0       0       0       0       0
  3130 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3132 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3133 ;;Total ram usage:       14 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 5
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_Imprimir_Resultado
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text11
  3144   00123A                     __ptext11:
  3145                           	callstack 0
  3146   00123A                     ___aldiv:
  3147                           	callstack 24
  3148                           
  3149                           ;incstack = 0
  3150   00123A  0E00               	movlw	0
  3151   00123C  6E17               	movwf	___aldiv@sign^0,c
  3152   00123E  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3153   001240  D00A               	goto	l3217
  3154   001242  1E15               	comf	(___aldiv@divisor+3)^0,f,c
  3155   001244  1E14               	comf	(___aldiv@divisor+2)^0,f,c
  3156   001246  1E13               	comf	(___aldiv@divisor+1)^0,f,c
  3157   001248  6C12               	negf	___aldiv@divisor^0,c
  3158   00124A  0E00               	movlw	0
  3159   00124C  2213               	addwfc	(___aldiv@divisor+1)^0,f,c
  3160   00124E  2214               	addwfc	(___aldiv@divisor+2)^0,f,c
  3161   001250  2215               	addwfc	(___aldiv@divisor+3)^0,f,c
  3162   001252  0E01               	movlw	1
  3163   001254  6E17               	movwf	___aldiv@sign^0,c
  3164   001256                     l3217:
  3165   001256  AE11               	btfss	(___aldiv@dividend+3)^0,7,c
  3166   001258  D00A               	goto	l3223
  3167   00125A  1E11               	comf	(___aldiv@dividend+3)^0,f,c
  3168   00125C  1E10               	comf	(___aldiv@dividend+2)^0,f,c
  3169   00125E  1E0F               	comf	(___aldiv@dividend+1)^0,f,c
  3170   001260  6C0E               	negf	___aldiv@dividend^0,c
  3171   001262  0E00               	movlw	0
  3172   001264  220F               	addwfc	(___aldiv@dividend+1)^0,f,c
  3173   001266  2210               	addwfc	(___aldiv@dividend+2)^0,f,c
  3174   001268  2211               	addwfc	(___aldiv@dividend+3)^0,f,c
  3175   00126A  0E01               	movlw	1
  3176   00126C  1A17               	xorwf	___aldiv@sign^0,f,c
  3177   00126E                     l3223:
  3178   00126E  0E00               	movlw	0
  3179   001270  6E18               	movwf	___aldiv@quotient^0,c
  3180   001272  0E00               	movlw	0
  3181   001274  6E19               	movwf	(___aldiv@quotient+1)^0,c
  3182   001276  0E00               	movlw	0
  3183   001278  6E1A               	movwf	(___aldiv@quotient+2)^0,c
  3184   00127A  0E00               	movlw	0
  3185   00127C  6E1B               	movwf	(___aldiv@quotient+3)^0,c
  3186   00127E  5012               	movf	___aldiv@divisor^0,w,c
  3187   001280  1013               	iorwf	(___aldiv@divisor+1)^0,w,c
  3188   001282  1014               	iorwf	(___aldiv@divisor+2)^0,w,c
  3189   001284  1015               	iorwf	(___aldiv@divisor+3)^0,w,c
  3190   001286  B4D8               	btfsc	status,2,c
  3191   001288  D02A               	goto	l3245
  3192   00128A  0E01               	movlw	1
  3193   00128C  6E16               	movwf	___aldiv@counter^0,c
  3194   00128E  D006               	goto	l3231
  3195   001290                     l3229:
  3196   001290  90D8               	bcf	status,0,c
  3197   001292  3612               	rlcf	___aldiv@divisor^0,f,c
  3198   001294  3613               	rlcf	(___aldiv@divisor+1)^0,f,c
  3199   001296  3614               	rlcf	(___aldiv@divisor+2)^0,f,c
  3200   001298  3615               	rlcf	(___aldiv@divisor+3)^0,f,c
  3201   00129A  2A16               	incf	___aldiv@counter^0,f,c
  3202   00129C                     l3231:
  3203   00129C  AE15               	btfss	(___aldiv@divisor+3)^0,7,c
  3204   00129E  D7F8               	goto	l3229
  3205   0012A0                     u3590:
  3206   0012A0  90D8               	bcf	status,0,c
  3207   0012A2  3618               	rlcf	___aldiv@quotient^0,f,c
  3208   0012A4  3619               	rlcf	(___aldiv@quotient+1)^0,f,c
  3209   0012A6  361A               	rlcf	(___aldiv@quotient+2)^0,f,c
  3210   0012A8  361B               	rlcf	(___aldiv@quotient+3)^0,f,c
  3211   0012AA  5012               	movf	___aldiv@divisor^0,w,c
  3212   0012AC  5C0E               	subwf	___aldiv@dividend^0,w,c
  3213   0012AE  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3214   0012B0  580F               	subwfb	(___aldiv@dividend+1)^0,w,c
  3215   0012B2  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3216   0012B4  5810               	subwfb	(___aldiv@dividend+2)^0,w,c
  3217   0012B6  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3218   0012B8  5811               	subwfb	(___aldiv@dividend+3)^0,w,c
  3219   0012BA  A0D8               	btfss	status,0,c
  3220   0012BC  D009               	goto	l3241
  3221   0012BE  5012               	movf	___aldiv@divisor^0,w,c
  3222   0012C0  5E0E               	subwf	___aldiv@dividend^0,f,c
  3223   0012C2  5013               	movf	(___aldiv@divisor+1)^0,w,c
  3224   0012C4  5A0F               	subwfb	(___aldiv@dividend+1)^0,f,c
  3225   0012C6  5014               	movf	(___aldiv@divisor+2)^0,w,c
  3226   0012C8  5A10               	subwfb	(___aldiv@dividend+2)^0,f,c
  3227   0012CA  5015               	movf	(___aldiv@divisor+3)^0,w,c
  3228   0012CC  5A11               	subwfb	(___aldiv@dividend+3)^0,f,c
  3229   0012CE  8018               	bsf	___aldiv@quotient^0,0,c
  3230   0012D0                     l3241:
  3231   0012D0  90D8               	bcf	status,0,c
  3232   0012D2  3215               	rrcf	(___aldiv@divisor+3)^0,f,c
  3233   0012D4  3214               	rrcf	(___aldiv@divisor+2)^0,f,c
  3234   0012D6  3213               	rrcf	(___aldiv@divisor+1)^0,f,c
  3235   0012D8  3212               	rrcf	___aldiv@divisor^0,f,c
  3236   0012DA  2E16               	decfsz	___aldiv@counter^0,f,c
  3237   0012DC  D7E1               	goto	u3590
  3238   0012DE                     l3245:
  3239   0012DE  5017               	movf	___aldiv@sign^0,w,c
  3240   0012E0  B4D8               	btfsc	status,2,c
  3241   0012E2  D008               	goto	l3249
  3242   0012E4  1E1B               	comf	(___aldiv@quotient+3)^0,f,c
  3243   0012E6  1E1A               	comf	(___aldiv@quotient+2)^0,f,c
  3244   0012E8  1E19               	comf	(___aldiv@quotient+1)^0,f,c
  3245   0012EA  6C18               	negf	___aldiv@quotient^0,c
  3246   0012EC  0E00               	movlw	0
  3247   0012EE  2219               	addwfc	(___aldiv@quotient+1)^0,f,c
  3248   0012F0  221A               	addwfc	(___aldiv@quotient+2)^0,f,c
  3249   0012F2  221B               	addwfc	(___aldiv@quotient+3)^0,f,c
  3250   0012F4                     l3249:
  3251   0012F4  C018  F00E         	movff	___aldiv@quotient,?___aldiv
  3252   0012F8  C019  F00F         	movff	___aldiv@quotient+1,?___aldiv+1
  3253   0012FC  C01A  F010         	movff	___aldiv@quotient+2,?___aldiv+2
  3254   001300  C01B  F011         	movff	___aldiv@quotient+3,?___aldiv+3
  3255   001304  0012               	return		;funcret
  3256   001306                     __end_of___aldiv:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function _MensajeLCD_Var *****************
  3260 ;; Defined at:
  3261 ;;		line 261 in file "LibLCDXC8.h"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  a               1   18[COMRAM] PTR unsigned char 
  3264 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3265 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3266 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3267 ;;		 -> STR_1(8), 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  i               2   20[COMRAM] int 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3279 ;;      Params:         1       0       0       0       0       0       0       0       0
  3280 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3281 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3282 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3283 ;;Total ram usage:        4 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; Hardware stack levels required when called: 8
  3286 ;; This function calls:
  3287 ;;		_EscribeLCD_c
  3288 ;;		_strlen
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;;		_Imprimir_Resultado
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text12
  3296   0017EC                     __ptext12:
  3297                           	callstack 0
  3298   0017EC                     _MensajeLCD_Var:
  3299                           	callstack 22
  3300                           
  3301                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  3302                           
  3303                           ;incstack = 0
  3304   0017EC  0E00               	movlw	0
  3305   0017EE  6E16               	movwf	(MensajeLCD_Var@i+1)^0,c
  3306   0017F0  0E00               	movlw	0
  3307   0017F2  6E15               	movwf	MensajeLCD_Var@i^0,c
  3308   0017F4  D019               	goto	l3183
  3309   0017F6                     l3175:
  3310                           
  3311                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  3312   0017F6  5013               	movf	MensajeLCD_Var@a^0,w,c
  3313   0017F8  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3314   0017FA  6E14               	movwf	??_MensajeLCD_Var^0,c
  3315   0017FC  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3316   001800                     	if	1	;There is more than 1 active tblptr byte
  3317   001800  0E08               	movlw	high __smallconst
  3318   001802  6EF7               	movwf	tblptrh,c
  3319   001804                     	endif
  3320   001804                     	if	0	;tblptru may be non-zero
  3321   001804                     	endif
  3322   001804                     	if	0	;tblptru may be non-zero
  3323   001804                     	endif
  3324   001804  0008               	tblrd		*
  3325   001806  50F5               	movf	tablat,w,c
  3326   001808  0900               	iorlw	0
  3327   00180A  B4D8               	btfsc	status,2,c
  3328   00180C  0012               	return	
  3329                           
  3330                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  3331   00180E  5013               	movf	MensajeLCD_Var@a^0,w,c
  3332   001810  2415               	addwf	MensajeLCD_Var@i^0,w,c
  3333   001812  6E14               	movwf	??_MensajeLCD_Var^0,c
  3334   001814  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  3335   001818                     	if	1	;There is more than 1 active tblptr byte
  3336   001818  0E08               	movlw	high __smallconst
  3337   00181A  6EF7               	movwf	tblptrh,c
  3338   00181C                     	endif
  3339   00181C                     	if	0	;tblptru may be non-zero
  3340   00181C                     	endif
  3341   00181C                     	if	0	;tblptru may be non-zero
  3342   00181C                     	endif
  3343   00181C  0008               	tblrd		*
  3344   00181E  50F5               	movf	tablat,w,c
  3345   001820  EC13  F00D         	call	_EscribeLCD_c
  3346   001824  4A15               	infsnz	MensajeLCD_Var@i^0,f,c
  3347   001826  2A16               	incf	(MensajeLCD_Var@i+1)^0,f,c
  3348   001828                     l3183:
  3349   001828  C013  F00E         	movff	MensajeLCD_Var@a,strlen@s
  3350   00182C  ECCC  F00C         	call	_strlen	;wreg free
  3351   001830  500E               	movf	?_strlen^0,w,c
  3352   001832  5C15               	subwf	MensajeLCD_Var@i^0,w,c
  3353   001834  500F               	movf	(?_strlen+1)^0,w,c
  3354   001836  5816               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  3355   001838  B0D8               	btfsc	status,0,c
  3356   00183A  0012               	return	
  3357   00183C  D7DC               	goto	l3175
  3358   00183E                     __end_of_MensajeLCD_Var:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function _strlen *****************
  3362 ;; Defined at:
  3363 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  s               1   13[COMRAM] PTR const unsigned char 
  3366 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3367 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3368 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3369 ;;		 -> STR_1(8), 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  cp              1   15[COMRAM] PTR const unsigned char 
  3372 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  3373 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  3374 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  3375 ;;		 -> STR_1(8), 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  2   13[COMRAM] unsigned int 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3385 ;;      Params:         2       0       0       0       0       0       0       0       0
  3386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3388 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3389 ;;Total ram usage:        3 bytes
  3390 ;; Hardware stack levels used: 1
  3391 ;; Hardware stack levels required when called: 5
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_MensajeLCD_Var
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text13
  3400   001998                     __ptext13:
  3401                           	callstack 0
  3402   001998                     _strlen:
  3403                           	callstack 24
  3404                           
  3405                           ;incstack = 0
  3406   001998  C00E  F010         	movff	strlen@s,strlen@cp
  3407   00199C  D001               	goto	l3159
  3408   00199E                     l3157:
  3409   00199E  2A10               	incf	strlen@cp^0,f,c
  3410   0019A0                     l3159:
  3411   0019A0  C010  FFF6         	movff	strlen@cp,tblptrl
  3412   0019A4                     	if	1	;There is more than 1 active tblptr byte
  3413   0019A4  0E08               	movlw	high __smallconst
  3414   0019A6  6EF7               	movwf	tblptrh,c
  3415   0019A8                     	endif
  3416   0019A8                     	if	0	;tblptru may be non-zero
  3417   0019A8                     	endif
  3418   0019A8                     	if	0	;tblptru may be non-zero
  3419   0019A8                     	endif
  3420   0019A8  0008               	tblrd		*
  3421   0019AA  50F5               	movf	tablat,w,c
  3422   0019AC  0900               	iorlw	0
  3423   0019AE  A4D8               	btfss	status,2,c
  3424   0019B0  D7F6               	goto	l3157
  3425   0019B2  500E               	movf	strlen@s^0,w,c
  3426   0019B4  5C10               	subwf	strlen@cp^0,w,c
  3427   0019B6  6E0E               	movwf	?_strlen^0,c
  3428   0019B8  6A0F               	clrf	(?_strlen+1)^0,c
  3429   0019BA  BE0E               	btfsc	?_strlen^0,7,c
  3430   0019BC  060F               	decf	(?_strlen+1)^0,f,c
  3431   0019BE  0012               	return		;funcret
  3432   0019C0                     __end_of_strlen:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _EscribeLCD_c *****************
  3436 ;; Defined at:
  3437 ;;		line 117 in file "LibLCDXC8.h"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  a               1    wreg     unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  a               1   17[COMRAM] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0
  3452 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3454 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3455 ;;Total ram usage:        1 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 7
  3458 ;; This function calls:
  3459 ;;		_EnviaDato
  3460 ;;		_HabilitaLCD
  3461 ;;		_RetardoLCD
  3462 ;; This function is called by:
  3463 ;;		_MensajeLCD_Var
  3464 ;;		_main
  3465 ;;		_Imprimir_Resultado
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text14
  3470   001A26                     __ptext14:
  3471                           	callstack 0
  3472   001A26                     _EscribeLCD_c:
  3473                           	callstack 22
  3474                           
  3475                           ;incstack = 0
  3476                           ;EscribeLCD_c@a stored from wreg
  3477   001A26  6E12               	movwf	EscribeLCD_c@a^0,c
  3478                           
  3479                           ;LibLCDXC8.h: 121: LATE0=1;
  3480   001A28  808D               	bsf	3981,0,c	;volatile
  3481                           
  3482                           ;LibLCDXC8.h: 122: EnviaDato(a);
  3483   001A2A  5012               	movf	EscribeLCD_c@a^0,w,c
  3484   001A2C  EC48  F00C         	call	_EnviaDato
  3485                           
  3486                           ;LibLCDXC8.h: 123: HabilitaLCD();
  3487   001A30  EC53  F00D         	call	_HabilitaLCD	;wreg free
  3488                           
  3489                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  3490   001A34  0E04               	movlw	4
  3491   001A36  EC77  F00B         	call	_RetardoLCD
  3492   001A3A  0012               	return		;funcret
  3493   001A3C                     __end_of_EscribeLCD_c:
  3494                           	callstack 0
  3495                           
  3496 ;; *************** function _DireccionaLCD *****************
  3497 ;; Defined at:
  3498 ;;		line 273 in file "LibLCDXC8.h"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  a               1    wreg     unsigned char 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  a               1   17[COMRAM] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3512 ;;      Params:         0       0       0       0       0       0       0       0       0
  3513 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3515 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3516 ;;Total ram usage:        1 bytes
  3517 ;; Hardware stack levels used: 1
  3518 ;; Hardware stack levels required when called: 7
  3519 ;; This function calls:
  3520 ;;		_EnviaDato
  3521 ;;		_HabilitaLCD
  3522 ;;		_RetardoLCD
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;;		_Imprimir_Resultado
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text15
  3530   001A3C                     __ptext15:
  3531                           	callstack 0
  3532   001A3C                     _DireccionaLCD:
  3533                           	callstack 22
  3534                           
  3535                           ;incstack = 0
  3536                           ;DireccionaLCD@a stored from wreg
  3537   001A3C  6E12               	movwf	DireccionaLCD@a^0,c
  3538                           
  3539                           ;LibLCDXC8.h: 276: LATE0=0;
  3540   001A3E  908D               	bcf	3981,0,c	;volatile
  3541                           
  3542                           ;LibLCDXC8.h: 277: EnviaDato(a);
  3543   001A40  5012               	movf	DireccionaLCD@a^0,w,c
  3544   001A42  EC48  F00C         	call	_EnviaDato
  3545                           
  3546                           ;LibLCDXC8.h: 278: HabilitaLCD();
  3547   001A46  EC53  F00D         	call	_HabilitaLCD	;wreg free
  3548                           
  3549                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  3550   001A4A  0E04               	movlw	4
  3551   001A4C  EC77  F00B         	call	_RetardoLCD
  3552   001A50  0012               	return		;funcret
  3553   001A52                     __end_of_DireccionaLCD:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function _EnviaDato *****************
  3557 ;; Defined at:
  3558 ;;		line 52 in file "LibLCDXC8.h"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  a               1    wreg     unsigned char 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  a               1   16[COMRAM] unsigned char 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2, status,0, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3572 ;;      Params:         0       0       0       0       0       0       0       0       0
  3573 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3574 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3575 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3576 ;;Total ram usage:        2 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; Hardware stack levels required when called: 6
  3579 ;; This function calls:
  3580 ;;		_HabilitaLCD
  3581 ;;		_RetardoLCD
  3582 ;; This function is called by:
  3583 ;;		_InicializaLCD
  3584 ;;		_BorraLCD
  3585 ;;		_EscribeLCD_c
  3586 ;;		_DireccionaLCD
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text16
  3591   001890                     __ptext16:
  3592                           	callstack 0
  3593   001890                     _EnviaDato:
  3594                           	callstack 22
  3595                           
  3596                           ;incstack = 0
  3597                           ;EnviaDato@a stored from wreg
  3598   001890  6E11               	movwf	EnviaDato@a^0,c
  3599                           
  3600                           ;LibLCDXC8.h: 53: if(interfaz==4){
  3601   001892  0E04               	movlw	4
  3602   001894  184B               	xorwf	_interfaz^0,w,c
  3603   001896  A4D8               	btfss	status,2,c
  3604   001898  D017               	goto	l3143
  3605                           
  3606                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3607   00189A  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3608   00189E  0EF0               	movlw	240
  3609   0018A0  1610               	andwf	??_EnviaDato^0,f,c
  3610   0018A2  508C               	movf	140,w,c	;volatile
  3611   0018A4  0B0F               	andlw	15
  3612   0018A6  1010               	iorwf	??_EnviaDato^0,w,c
  3613   0018A8  6E8C               	movwf	140,c	;volatile
  3614                           
  3615                           ;LibLCDXC8.h: 55: HabilitaLCD();
  3616   0018AA  EC53  F00D         	call	_HabilitaLCD	;wreg free
  3617                           
  3618                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  3619   0018AE  0E01               	movlw	1
  3620   0018B0  EC77  F00B         	call	_RetardoLCD
  3621                           
  3622                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  3623   0018B4  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  3624   0018B8  3A10               	swapf	??_EnviaDato^0,f,c
  3625   0018BA  0EF0               	movlw	240
  3626   0018BC  1610               	andwf	??_EnviaDato^0,f,c
  3627   0018BE  508C               	movf	140,w,c	;volatile
  3628   0018C0  0B0F               	andlw	15
  3629   0018C2  1010               	iorwf	??_EnviaDato^0,w,c
  3630   0018C4  6E8C               	movwf	140,c	;volatile
  3631                           
  3632                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  3633   0018C6  0012               	return	
  3634   0018C8                     l3143:
  3635   0018C8  0E08               	movlw	8
  3636   0018CA  184B               	xorwf	_interfaz^0,w,c
  3637   0018CC  A4D8               	btfss	status,2,c
  3638   0018CE  0012               	return	
  3639                           
  3640                           ;LibLCDXC8.h: 59: LATD=a;
  3641   0018D0  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  3642   0018D4  0012               	return		;funcret
  3643   0018D6                     __end_of_EnviaDato:
  3644                           	callstack 0
  3645                           
  3646 ;; *************** function _RetardoLCD *****************
  3647 ;; Defined at:
  3648 ;;		line 309 in file "LibLCDXC8.h"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  a               1    wreg     unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  a               1   14[COMRAM] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0
  3663 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3664 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3665 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3666 ;;Total ram usage:        2 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 5
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_EnviaDato
  3673 ;;		_InicializaLCD
  3674 ;;		_BorraLCD
  3675 ;;		_EscribeLCD_c
  3676 ;;		_DireccionaLCD
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text17
  3681   0016EE                     __ptext17:
  3682                           	callstack 0
  3683   0016EE                     _RetardoLCD:
  3684                           	callstack 23
  3685                           
  3686                           ;incstack = 0
  3687                           ;RetardoLCD@a stored from wreg
  3688   0016EE  6E0F               	movwf	RetardoLCD@a^0,c
  3689                           
  3690                           ;LibLCDXC8.h: 310: switch(a){
  3691   0016F0  D01B               	goto	l3131
  3692   0016F2                     l3121:
  3693   0016F2  0E05               	movlw	5
  3694   0016F4  6E0E               	movwf	??_RetardoLCD^0,c
  3695   0016F6  0EDE               	movlw	222
  3696   0016F8                     u4867:
  3697   0016F8  2EE8               	decfsz	wreg,f,c
  3698   0016FA  D7FE               	bra	u4867
  3699   0016FC  2E0E               	decfsz	??_RetardoLCD^0,f,c
  3700   0016FE  D7FC               	bra	u4867
  3701                           
  3702                           ;LibLCDXC8.h: 313: break;
  3703   001700  0012               	return	
  3704   001702                     l3123:
  3705   001702  0E53               	movlw	83
  3706   001704                     u4877:
  3707   001704  2EE8               	decfsz	wreg,f,c
  3708   001706  D7FE               	bra	u4877
  3709   001708  F000               	nop	
  3710                           
  3711                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  3712   00170A  0E35               	movlw	53
  3713   00170C                     u4887:
  3714   00170C  2EE8               	decfsz	wreg,f,c
  3715   00170E  D7FE               	bra	u4887
  3716   001710  F000               	nop	
  3717                           
  3718                           ;LibLCDXC8.h: 317: break;
  3719   001712  0012               	return	
  3720   001714                     l3125:
  3721   001714  0E08               	movlw	8
  3722   001716                     u4897:
  3723   001716  2EE8               	decfsz	wreg,f,c
  3724   001718  D7FE               	bra	u4897
  3725   00171A  F000               	nop	
  3726                           
  3727                           ;LibLCDXC8.h: 320: break;
  3728   00171C  0012               	return	
  3729   00171E                     l3127:
  3730   00171E  0E03               	movlw	3
  3731   001720                     u4907:
  3732   001720  2EE8               	decfsz	wreg,f,c
  3733   001722  D7FE               	bra	u4907
  3734   001724  F000               	nop	
  3735                           
  3736                           ;LibLCDXC8.h: 323: break;
  3737   001726  0012               	return	
  3738   001728                     l3131:
  3739   001728  500F               	movf	RetardoLCD@a^0,w,c
  3740                           
  3741                           ; Switch size 1, requested type "simple"
  3742                           ; Number of cases is 4, Range of values is 1 to 4
  3743                           ; switch strategies available:
  3744                           ; Name         Instructions Cycles
  3745                           ; simple_byte           13     7 (average)
  3746                           ;	Chosen strategy is simple_byte
  3747   00172A  0A01               	xorlw	1	; case 1
  3748   00172C  B4D8               	btfsc	status,2,c
  3749   00172E  D7E1               	goto	l3121
  3750   001730  0A03               	xorlw	3	; case 2
  3751   001732  B4D8               	btfsc	status,2,c
  3752   001734  D7E6               	goto	l3123
  3753   001736  0A01               	xorlw	1	; case 3
  3754   001738  B4D8               	btfsc	status,2,c
  3755   00173A  D7EC               	goto	l3125
  3756   00173C  0A07               	xorlw	7	; case 4
  3757   00173E  A4D8               	btfss	status,2,c
  3758   001740  0012               	return	
  3759   001742  D7ED               	goto	l3127
  3760   001744                     __end_of_RetardoLCD:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _HabilitaLCD *****************
  3764 ;; Defined at:
  3765 ;;		line 96 in file "LibLCDXC8.h"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used: 1
  3785 ;; Hardware stack levels required when called: 5
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_EnviaDato
  3790 ;;		_InicializaLCD
  3791 ;;		_BorraLCD
  3792 ;;		_EscribeLCD_c
  3793 ;;		_DireccionaLCD
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text18
  3798   001AA6                     __ptext18:
  3799                           	callstack 0
  3800   001AA6                     _HabilitaLCD:
  3801                           	callstack 23
  3802                           
  3803                           ;LibLCDXC8.h: 98: LATE1=1;
  3804                           
  3805                           ;incstack = 0
  3806   001AA6  828D               	bsf	3981,1,c	;volatile
  3807                           
  3808                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3809   001AA8  0E03               	movlw	3
  3810   001AAA                     u4917:
  3811   001AAA  2EE8               	decfsz	wreg,f,c
  3812   001AAC  D7FE               	bra	u4917
  3813   001AAE  F000               	nop	
  3814                           
  3815                           ;LibLCDXC8.h: 101: LATE1=0;
  3816   001AB0  928D               	bcf	3981,1,c	;volatile
  3817   001AB2  0012               	return		;funcret
  3818   001AB4                     __end_of_HabilitaLCD:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _ConfiguraLCD *****************
  3822 ;; Defined at:
  3823 ;;		line 48 in file "LibLCDXC8.h"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  a               1    wreg     unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  a               1   13[COMRAM] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3837 ;;      Params:         0       0       0       0       0       0       0       0       0
  3838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3840 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3841 ;;Total ram usage:        1 bytes
  3842 ;; Hardware stack levels used: 1
  3843 ;; Hardware stack levels required when called: 5
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_main
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text19
  3852   001A0E                     __ptext19:
  3853                           	callstack 0
  3854   001A0E                     _ConfiguraLCD:
  3855                           	callstack 25
  3856                           
  3857                           ;incstack = 0
  3858                           ;ConfiguraLCD@a stored from wreg
  3859   001A0E  6E0E               	movwf	ConfiguraLCD@a^0,c
  3860                           
  3861                           ;LibLCDXC8.h: 49: if(a==4 | a ==8)
  3862   001A10  0E04               	movlw	4
  3863   001A12  180E               	xorwf	ConfiguraLCD@a^0,w,c
  3864   001A14  B4D8               	btfsc	status,2,c
  3865   001A16  D004               	goto	u2040
  3866   001A18  0E08               	movlw	8
  3867   001A1A  180E               	xorwf	ConfiguraLCD@a^0,w,c
  3868   001A1C  A4D8               	btfss	status,2,c
  3869   001A1E  0012               	return	
  3870   001A20                     u2040:
  3871                           
  3872                           ;LibLCDXC8.h: 50: interfaz=a;
  3873   001A20  C00E  F04B         	movff	ConfiguraLCD@a,_interfaz
  3874   001A24  0012               	return		;funcret
  3875   001A26                     __end_of_ConfiguraLCD:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function _ColorRGB *****************
  3879 ;; Defined at:
  3880 ;;		line 246 in file "Lab4.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3896 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3897 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3898 ;;Total ram usage:        2 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; Hardware stack levels required when called: 5
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text20
  3909   0015A6                     __ptext20:
  3910                           	callstack 0
  3911   0015A6                     _ColorRGB:
  3912                           	callstack 25
  3913                           
  3914                           ;Lab4.c: 247: if(Color==8) Color = 0;
  3915                           
  3916                           ;incstack = 0
  3917   0015A6  0E08               	movlw	8
  3918   0015A8  1838               	xorwf	_Color^0,w,c
  3919   0015AA  1039               	iorwf	(_Color+1)^0,w,c
  3920   0015AC  A4D8               	btfss	status,2,c
  3921   0015AE  D014               	goto	l2595
  3922   0015B0  0E00               	movlw	0
  3923   0015B2  6E39               	movwf	(_Color+1)^0,c
  3924   0015B4  0E00               	movlw	0
  3925   0015B6  6E38               	movwf	_Color^0,c
  3926   0015B8  D00F               	goto	l2595
  3927   0015BA                     l2577:
  3928                           
  3929                           ;Lab4.c: 250: LATC = 0b00000000;
  3930   0015BA  0E00               	movlw	0
  3931   0015BC  D00B               	goto	L11
  3932   0015BE                     l2579:
  3933                           
  3934                           ;Lab4.c: 253: LATC = 0b00000101;
  3935   0015BE  0E05               	movlw	5
  3936   0015C0  D009               	goto	L11
  3937   0015C2                     l2581:
  3938                           
  3939                           ;Lab4.c: 256: LATC = 0b00000110;
  3940   0015C2  0E06               	movlw	6
  3941   0015C4  D007               	goto	L11
  3942   0015C6                     l2583:
  3943                           
  3944                           ;Lab4.c: 259: LATC = 0b00000011;
  3945   0015C6  0E03               	movlw	3
  3946   0015C8  D005               	goto	L11
  3947   0015CA                     l2585:
  3948                           
  3949                           ;Lab4.c: 262: LATC = 0b00000010;
  3950   0015CA  0E02               	movlw	2
  3951   0015CC  D003               	goto	L11
  3952   0015CE                     l2589:
  3953                           
  3954                           ;Lab4.c: 268: LATC = 0b00000100;
  3955   0015CE  0E04               	movlw	4
  3956   0015D0  D001               	goto	L11
  3957   0015D2                     l2591:
  3958                           
  3959                           ;Lab4.c: 271: LATC = 0b00000111;
  3960   0015D2  0E07               	movlw	7
  3961   0015D4                     L11:
  3962   0015D4  6E8B               	movwf	139,c	;volatile
  3963                           
  3964                           ;Lab4.c: 272: break;
  3965   0015D6  D021               	goto	l2597
  3966   0015D8                     l2595:
  3967   0015D8  C038  F00E         	movff	_Color,??_ColorRGB
  3968   0015DC  C039  F00F         	movff	_Color+1,??_ColorRGB+1
  3969                           
  3970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3971                           ; Switch size 1, requested type "simple"
  3972                           ; Number of cases is 1, Range of values is 0 to 0
  3973                           ; switch strategies available:
  3974                           ; Name         Instructions Cycles
  3975                           ; simple_byte            4     3 (average)
  3976                           ;	Chosen strategy is simple_byte
  3977   0015E0  500F               	movf	(??_ColorRGB+1)^0,w,c
  3978   0015E2  0A00               	xorlw	0	; case 0
  3979   0015E4  A4D8               	btfss	status,2,c
  3980   0015E6  D019               	goto	l2597
  3981                           
  3982                           ; Switch size 1, requested type "simple"
  3983                           ; Number of cases is 8, Range of values is 0 to 7
  3984                           ; switch strategies available:
  3985                           ; Name         Instructions Cycles
  3986                           ; simple_byte           25    13 (average)
  3987                           ;	Chosen strategy is simple_byte
  3988   0015E8  500E               	movf	??_ColorRGB^0,w,c
  3989   0015EA  0A00               	xorlw	0	; case 0
  3990   0015EC  B4D8               	btfsc	status,2,c
  3991   0015EE  D7E5               	goto	l2577
  3992   0015F0  0A01               	xorlw	1	; case 1
  3993   0015F2  B4D8               	btfsc	status,2,c
  3994   0015F4  D7E4               	goto	l2579
  3995   0015F6  0A03               	xorlw	3	; case 2
  3996   0015F8  B4D8               	btfsc	status,2,c
  3997   0015FA  D7E3               	goto	l2581
  3998   0015FC  0A01               	xorlw	1	; case 3
  3999   0015FE  B4D8               	btfsc	status,2,c
  4000   001600  D7E2               	goto	l2583
  4001   001602  0A07               	xorlw	7	; case 4
  4002   001604  B4D8               	btfsc	status,2,c
  4003   001606  D7E1               	goto	l2585
  4004   001608  0A01               	xorlw	1	; case 5
  4005   00160A  B4D8               	btfsc	status,2,c
  4006   00160C  D7DA               	goto	l2581
  4007   00160E  0A03               	xorlw	3	; case 6
  4008   001610  B4D8               	btfsc	status,2,c
  4009   001612  D7DD               	goto	l2589
  4010   001614  0A01               	xorlw	1	; case 7
  4011   001616  B4D8               	btfsc	status,2,c
  4012   001618  D7DC               	goto	l2591
  4013   00161A                     l2597:
  4014                           
  4015                           ;Lab4.c: 276: Color += 1;
  4016   00161A  4A38               	infsnz	_Color^0,f,c
  4017   00161C  2A39               	incf	(_Color+1)^0,f,c
  4018   00161E  0012               	return		;funcret
  4019   001620                     __end_of_ColorRGB:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _ISR *****************
  4023 ;; Defined at:
  4024 ;;		line 288 in file "Lab4.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4040 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4041 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4042 ;;Total ram usage:        4 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; Hardware stack levels required when called: 4
  4045 ;; This function calls:
  4046 ;;		i2_BorraLCD
  4047 ;;		i2_DireccionaLCD
  4048 ;;		i2_MensajeLCD_Var
  4049 ;; This function is called by:
  4050 ;;		Interrupt level 2
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	intcode
  4055   000008                     __pintcode:
  4056                           	callstack 0
  4057   000008                     _ISR:
  4058                           	callstack 21
  4059                           
  4060                           ;incstack = 0
  4061   000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4062   00000A  ED8C  F00A         	call	int_func,f	;refresh shadow registers
  4063                           
  4064                           	psect	intcode_body
  4065   001518                     __pintcode_body:
  4066                           	callstack 21
  4067   001518                     int_func:
  4068                           	callstack 21
  4069   001518  0006               	pop		; remove dummy address from shadow register refresh
  4070   00151A  CFF6 F00A          	movff	tblptrl,??_ISR
  4071   00151E  CFF7 F00B          	movff	tblptrh,??_ISR+1
  4072   001522  CFF8 F00C          	movff	tblptru,??_ISR+2
  4073   001526  CFF5 F00D          	movff	tablat,??_ISR+3
  4074                           
  4075                           ;Lab4.c: 289: if(TMR0IF==1){
  4076   00152A  A4F2               	btfss	4082,2,c	;volatile
  4077   00152C  D019               	goto	i2l3099
  4078                           
  4079                           ;Lab4.c: 290: if(!Verificador) Contador = Contador +1;
  4080   00152E  5034               	movf	_Verificador^0,w,c
  4081   001530  1035               	iorwf	(_Verificador+1)^0,w,c
  4082   001532  A4D8               	btfss	status,2,c
  4083   001534  D007               	goto	i2l3093
  4084   001536  0E01               	movlw	1
  4085   001538  2436               	addwf	_Contador^0,w,c
  4086   00153A  6E36               	movwf	_Contador^0,c
  4087   00153C  0E00               	movlw	0
  4088   00153E  2037               	addwfc	(_Contador+1)^0,w,c
  4089   001540  6E37               	movwf	(_Contador+1)^0,c
  4090   001542  D004               	goto	i2l3095
  4091   001544                     i2l3093:
  4092                           
  4093                           ;Lab4.c: 291: else Contador = 0;
  4094   001544  0E00               	movlw	0
  4095   001546  6E37               	movwf	(_Contador+1)^0,c
  4096   001548  0E00               	movlw	0
  4097   00154A  6E36               	movwf	_Contador^0,c
  4098   00154C                     i2l3095:
  4099                           
  4100                           ;Lab4.c: 292: TMR0IF=0;
  4101   00154C  94F2               	bcf	4082,2,c	;volatile
  4102                           
  4103                           ;Lab4.c: 293: LATE2 = !LATE2;
  4104   00154E  B48D               	btfsc	3981,2,c	;volatile
  4105   001550  D002               	goto	i2u343_40
  4106   001552  848D               	bsf	3981,2,c	;volatile
  4107   001554  D001               	goto	i2u344_45
  4108   001556                     i2u343_40:
  4109   001556  948D               	bcf	3981,2,c	;volatile
  4110   001558                     i2u344_45:
  4111                           
  4112                           ;Lab4.c: 294: TMR0 = 49911;
  4113   001558  0EC2               	movlw	194
  4114   00155A  6ED7               	movwf	215,c	;volatile
  4115   00155C  0EF7               	movlw	247
  4116   00155E  6ED6               	movwf	214,c	;volatile
  4117   001560                     i2l3099:
  4118                           
  4119                           ;Lab4.c: 295: };Lab4.c: 297: if(Contador == 20){
  4120   001560  0E14               	movlw	20
  4121   001562  1836               	xorwf	_Contador^0,w,c
  4122   001564  1037               	iorwf	(_Contador+1)^0,w,c
  4123   001566  A4D8               	btfss	status,2,c
  4124   001568  D014               	goto	i2l326
  4125                           
  4126                           ;Lab4.c: 298: if(!Verificador){
  4127   00156A  5034               	movf	_Verificador^0,w,c
  4128   00156C  1035               	iorwf	(_Verificador+1)^0,w,c
  4129   00156E  A4D8               	btfss	status,2,c
  4130   001570  D010               	goto	i2l326
  4131                           
  4132                           ;Lab4.c: 299: LATC7 = !LATC7;
  4133   001572  BE8B               	btfsc	3979,7,c	;volatile
  4134   001574  D002               	goto	i2u347_40
  4135   001576  8E8B               	bsf	3979,7,c	;volatile
  4136   001578  D001               	goto	i2u348_45
  4137   00157A                     i2u347_40:
  4138   00157A  9E8B               	bcf	3979,7,c	;volatile
  4139   00157C                     i2u348_45:
  4140                           
  4141                           ;Lab4.c: 300: BorraLCD();
  4142   00157C  EC49  F00D         	call	i2_BorraLCD	;wreg free
  4143                           
  4144                           ;Lab4.c: 301: DireccionaLCD(0x82);
  4145   001580  0E82               	movlw	130
  4146   001582  EC34  F00D         	call	i2_DireccionaLCD
  4147                           
  4148                           ;Lab4.c: 302: MensajeLCD_Var("LVP Activado");
  4149   001586  0E2C               	movlw	low STR_11
  4150   001588  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  4151   00158A  EC1F  F00C         	call	i2_MensajeLCD_Var	;wreg free
  4152   00158E  0003               	sleep		;# 
  4153   001590                     i2l323:
  4154   001590  D7FF               	goto	i2l323
  4155   001592                     i2l326:
  4156   001592  C00D  FFF5         	movff	??_ISR+3,tablat
  4157   001596  C00C  FFF8         	movff	??_ISR+2,tblptru
  4158   00159A  C00B  FFF7         	movff	??_ISR+1,tblptrh
  4159   00159E  C00A  FFF6         	movff	??_ISR,tblptrl
  4160   0015A2  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4161   0015A4  0011               	retfie		f
  4162   0015A6                     __end_of_ISR:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function i2_MensajeLCD_Var *****************
  4166 ;; Defined at:
  4167 ;;		line 261 in file "LibLCDXC8.h"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  a               1    5[COMRAM] PTR unsigned char 
  4170 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4171 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4172 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4173 ;;		 -> STR_1(8), 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  i               2    7[COMRAM] int 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4185 ;;      Params:         1       0       0       0       0       0       0       0       0
  4186 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4187 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4188 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4189 ;;Total ram usage:        4 bytes
  4190 ;; Hardware stack levels used: 1
  4191 ;; Hardware stack levels required when called: 3
  4192 ;; This function calls:
  4193 ;;		i2_EscribeLCD_c
  4194 ;;		i2_strlen
  4195 ;; This function is called by:
  4196 ;;		_ISR
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text22
  4201   00183E                     __ptext22:
  4202                           	callstack 0
  4203   00183E                     i2_MensajeLCD_Var:
  4204                           	callstack 21
  4205                           
  4206                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  4207                           
  4208                           ;incstack = 0
  4209   00183E  0E00               	movlw	0
  4210   001840  6E09               	movwf	(i2MensajeLCD_Var@i+1)^0,c
  4211   001842  0E00               	movlw	0
  4212   001844  6E08               	movwf	i2MensajeLCD_Var@i^0,c
  4213   001846  D019               	goto	i2l2733
  4214   001848                     i2l2725:
  4215                           
  4216                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  4217   001848  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4218   00184A  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4219   00184C  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4220   00184E  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4221   001852                     	if	1	;There is more than 1 active tblptr byte
  4222   001852  0E08               	movlw	high __smallconst
  4223   001854  6EF7               	movwf	tblptrh,c
  4224   001856                     	endif
  4225   001856                     	if	0	;tblptru may be non-zero
  4226   001856                     	endif
  4227   001856                     	if	0	;tblptru may be non-zero
  4228   001856                     	endif
  4229   001856  0008               	tblrd		*
  4230   001858  50F5               	movf	tablat,w,c
  4231   00185A  0900               	iorlw	0
  4232   00185C  B4D8               	btfsc	status,2,c
  4233   00185E  0012               	return	
  4234                           
  4235                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  4236   001860  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  4237   001862  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  4238   001864  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  4239   001866  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  4240   00186A                     	if	1	;There is more than 1 active tblptr byte
  4241   00186A  0E08               	movlw	high __smallconst
  4242   00186C  6EF7               	movwf	tblptrh,c
  4243   00186E                     	endif
  4244   00186E                     	if	0	;tblptru may be non-zero
  4245   00186E                     	endif
  4246   00186E                     	if	0	;tblptru may be non-zero
  4247   00186E                     	endif
  4248   00186E  0008               	tblrd		*
  4249   001870  50F5               	movf	tablat,w,c
  4250   001872  EC29  F00D         	call	i2_EscribeLCD_c
  4251   001876  4A08               	infsnz	i2MensajeLCD_Var@i^0,f,c
  4252   001878  2A09               	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  4253   00187A                     i2l2733:
  4254   00187A  C006  F001         	movff	i2MensajeLCD_Var@a,i2strlen@s
  4255   00187E  ECE0  F00C         	call	i2_strlen	;wreg free
  4256   001882  5001               	movf	?i2_strlen^0,w,c
  4257   001884  5C08               	subwf	i2MensajeLCD_Var@i^0,w,c
  4258   001886  5002               	movf	(?i2_strlen+1)^0,w,c
  4259   001888  5809               	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  4260   00188A  B0D8               	btfsc	status,0,c
  4261   00188C  0012               	return	
  4262   00188E  D7DC               	goto	i2l2725
  4263   001890                     __end_ofi2_MensajeLCD_Var:
  4264                           	callstack 0
  4265                           
  4266 ;; *************** function i2_strlen *****************
  4267 ;; Defined at:
  4268 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  s               1    0[COMRAM] PTR const unsigned char 
  4271 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4272 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4273 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4274 ;;		 -> STR_1(8), 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  4277 ;;		 -> STR_13(14), STR_12(9), STR_11(13), STR_10(9), 
  4278 ;;		 -> STR_9(11), STR_8(9), STR_7(15), STR_6(9), 
  4279 ;;		 -> STR_5(10), STR_4(9), STR_3(14), STR_2(5), 
  4280 ;;		 -> STR_1(8), 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  2    0[COMRAM] unsigned int 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4290 ;;      Params:         2       0       0       0       0       0       0       0       0
  4291 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4293 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4294 ;;Total ram usage:        3 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		i2_MensajeLCD_Var
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text23
  4304   0019C0                     __ptext23:
  4305                           	callstack 0
  4306   0019C0                     i2_strlen:
  4307                           	callstack 23
  4308                           
  4309                           ;incstack = 0
  4310   0019C0  C001  F003         	movff	i2strlen@s,i2strlen@cp
  4311   0019C4  D001               	goto	i2l2371
  4312   0019C6                     i2l2369:
  4313   0019C6  2A03               	incf	i2strlen@cp^0,f,c
  4314   0019C8                     i2l2371:
  4315   0019C8  C003  FFF6         	movff	i2strlen@cp,tblptrl
  4316   0019CC                     	if	1	;There is more than 1 active tblptr byte
  4317   0019CC  0E08               	movlw	high __smallconst
  4318   0019CE  6EF7               	movwf	tblptrh,c
  4319   0019D0                     	endif
  4320   0019D0                     	if	0	;tblptru may be non-zero
  4321   0019D0                     	endif
  4322   0019D0                     	if	0	;tblptru may be non-zero
  4323   0019D0                     	endif
  4324   0019D0  0008               	tblrd		*
  4325   0019D2  50F5               	movf	tablat,w,c
  4326   0019D4  0900               	iorlw	0
  4327   0019D6  A4D8               	btfss	status,2,c
  4328   0019D8  D7F6               	goto	i2l2369
  4329   0019DA  5001               	movf	i2strlen@s^0,w,c
  4330   0019DC  5C03               	subwf	i2strlen@cp^0,w,c
  4331   0019DE  6E01               	movwf	?i2_strlen^0,c
  4332   0019E0  6A02               	clrf	(?i2_strlen+1)^0,c
  4333   0019E2  BE01               	btfsc	?i2_strlen^0,7,c
  4334   0019E4  0602               	decf	(?i2_strlen+1)^0,f,c
  4335   0019E6  0012               	return		;funcret
  4336   0019E8                     __end_ofi2_strlen:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function i2_EscribeLCD_c *****************
  4340 ;; Defined at:
  4341 ;;		line 117 in file "LibLCDXC8.h"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  a               1    wreg     unsigned char 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  a               1    4[COMRAM] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0
  4356 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4358 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4359 ;;Total ram usage:        1 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 2
  4362 ;; This function calls:
  4363 ;;		i2_EnviaDato
  4364 ;;		i2_HabilitaLCD
  4365 ;;		i2_RetardoLCD
  4366 ;; This function is called by:
  4367 ;;		i2_MensajeLCD_Var
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text24
  4372   001A52                     __ptext24:
  4373                           	callstack 0
  4374   001A52                     i2_EscribeLCD_c:
  4375                           	callstack 21
  4376                           
  4377                           ;incstack = 0
  4378                           ;i2EscribeLCD_c@a stored from wreg
  4379   001A52  6E05               	movwf	i2EscribeLCD_c@a^0,c
  4380                           
  4381                           ;LibLCDXC8.h: 121: LATE0=1;
  4382   001A54  808D               	bsf	3981,0,c	;volatile
  4383                           
  4384                           ;LibLCDXC8.h: 122: EnviaDato(a);
  4385   001A56  5005               	movf	i2EscribeLCD_c@a^0,w,c
  4386   001A58  EC6B  F00C         	call	i2_EnviaDato
  4387                           
  4388                           ;LibLCDXC8.h: 123: HabilitaLCD();
  4389   001A5C  EC5A  F00D         	call	i2_HabilitaLCD	;wreg free
  4390                           
  4391                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  4392   001A60  0E04               	movlw	4
  4393   001A62  ECA2  F00B         	call	i2_RetardoLCD
  4394   001A66  0012               	return		;funcret
  4395   001A68                     __end_ofi2_EscribeLCD_c:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function i2_DireccionaLCD *****************
  4399 ;; Defined at:
  4400 ;;		line 273 in file "LibLCDXC8.h"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  a               1    wreg     unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  a               1    4[COMRAM] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0
  4415 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4417 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4418 ;;Total ram usage:        1 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 2
  4421 ;; This function calls:
  4422 ;;		i2_EnviaDato
  4423 ;;		i2_HabilitaLCD
  4424 ;;		i2_RetardoLCD
  4425 ;; This function is called by:
  4426 ;;		_ISR
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text25
  4431   001A68                     __ptext25:
  4432                           	callstack 0
  4433   001A68                     i2_DireccionaLCD:
  4434                           	callstack 22
  4435                           
  4436                           ;incstack = 0
  4437                           ;i2DireccionaLCD@a stored from wreg
  4438   001A68  6E05               	movwf	i2DireccionaLCD@a^0,c
  4439                           
  4440                           ;LibLCDXC8.h: 276: LATE0=0;
  4441   001A6A  908D               	bcf	3981,0,c	;volatile
  4442                           
  4443                           ;LibLCDXC8.h: 277: EnviaDato(a);
  4444   001A6C  5005               	movf	i2DireccionaLCD@a^0,w,c
  4445   001A6E  EC6B  F00C         	call	i2_EnviaDato
  4446                           
  4447                           ;LibLCDXC8.h: 278: HabilitaLCD();
  4448   001A72  EC5A  F00D         	call	i2_HabilitaLCD	;wreg free
  4449                           
  4450                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  4451   001A76  0E04               	movlw	4
  4452   001A78  ECA2  F00B         	call	i2_RetardoLCD
  4453   001A7C  0012               	return		;funcret
  4454   001A7E                     __end_ofi2_DireccionaLCD:
  4455                           	callstack 0
  4456                           
  4457 ;; *************** function i2_BorraLCD *****************
  4458 ;; Defined at:
  4459 ;;		line 103 in file "LibLCDXC8.h"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0, cstack
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4473 ;;      Params:         0       0       0       0       0       0       0       0       0
  4474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4476 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4477 ;;Total ram usage:        0 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 2
  4480 ;; This function calls:
  4481 ;;		i2_EnviaDato
  4482 ;;		i2_HabilitaLCD
  4483 ;;		i2_RetardoLCD
  4484 ;; This function is called by:
  4485 ;;		_ISR
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text26
  4490   001A92                     __ptext26:
  4491                           	callstack 0
  4492   001A92                     i2_BorraLCD:
  4493                           	callstack 22
  4494                           
  4495                           ;LibLCDXC8.h: 105: LATE0=0;
  4496                           
  4497                           ;incstack = 0
  4498   001A92  908D               	bcf	3981,0,c	;volatile
  4499                           
  4500                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  4501   001A94  0E01               	movlw	1
  4502   001A96  EC6B  F00C         	call	i2_EnviaDato
  4503                           
  4504                           ;LibLCDXC8.h: 107: HabilitaLCD();
  4505   001A9A  EC5A  F00D         	call	i2_HabilitaLCD	;wreg free
  4506                           
  4507                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  4508   001A9E  0E02               	movlw	2
  4509   001AA0  ECA2  F00B         	call	i2_RetardoLCD
  4510   001AA4  0012               	return		;funcret
  4511   001AA6                     __end_ofi2_BorraLCD:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function i2_EnviaDato *****************
  4515 ;; Defined at:
  4516 ;;		line 52 in file "LibLCDXC8.h"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  a               1    wreg     unsigned char 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  a               1    3[COMRAM] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0
  4531 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4532 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4533 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4534 ;;Total ram usage:        2 bytes
  4535 ;; Hardware stack levels used: 1
  4536 ;; Hardware stack levels required when called: 1
  4537 ;; This function calls:
  4538 ;;		i2_HabilitaLCD
  4539 ;;		i2_RetardoLCD
  4540 ;; This function is called by:
  4541 ;;		i2_BorraLCD
  4542 ;;		i2_EscribeLCD_c
  4543 ;;		i2_DireccionaLCD
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text27
  4548   0018D6                     __ptext27:
  4549                           	callstack 0
  4550   0018D6                     i2_EnviaDato:
  4551                           	callstack 21
  4552                           
  4553                           ;incstack = 0
  4554                           ;i2EnviaDato@a stored from wreg
  4555   0018D6  6E04               	movwf	i2EnviaDato@a^0,c
  4556                           
  4557                           ;LibLCDXC8.h: 53: if(interfaz==4){
  4558   0018D8  0E04               	movlw	4
  4559   0018DA  184B               	xorwf	_interfaz^0,w,c
  4560   0018DC  A4D8               	btfss	status,2,c
  4561   0018DE  D017               	goto	i2l2193
  4562                           
  4563                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  4564   0018E0  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4565   0018E4  0EF0               	movlw	240
  4566   0018E6  1603               	andwf	??i2_EnviaDato^0,f,c
  4567   0018E8  508C               	movf	140,w,c	;volatile
  4568   0018EA  0B0F               	andlw	15
  4569   0018EC  1003               	iorwf	??i2_EnviaDato^0,w,c
  4570   0018EE  6E8C               	movwf	140,c	;volatile
  4571                           
  4572                           ;LibLCDXC8.h: 55: HabilitaLCD();
  4573   0018F0  EC5A  F00D         	call	i2_HabilitaLCD	;wreg free
  4574                           
  4575                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  4576   0018F4  0E01               	movlw	1
  4577   0018F6  ECA2  F00B         	call	i2_RetardoLCD
  4578                           
  4579                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  4580   0018FA  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  4581   0018FE  3A03               	swapf	??i2_EnviaDato^0,f,c
  4582   001900  0EF0               	movlw	240
  4583   001902  1603               	andwf	??i2_EnviaDato^0,f,c
  4584   001904  508C               	movf	140,w,c	;volatile
  4585   001906  0B0F               	andlw	15
  4586   001908  1003               	iorwf	??i2_EnviaDato^0,w,c
  4587   00190A  6E8C               	movwf	140,c	;volatile
  4588                           
  4589                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  4590   00190C  0012               	return	
  4591   00190E                     i2l2193:
  4592   00190E  0E08               	movlw	8
  4593   001910  184B               	xorwf	_interfaz^0,w,c
  4594   001912  A4D8               	btfss	status,2,c
  4595   001914  0012               	return	
  4596                           
  4597                           ;LibLCDXC8.h: 59: LATD=a;
  4598   001916  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  4599   00191A  0012               	return		;funcret
  4600   00191C                     __end_ofi2_EnviaDato:
  4601                           	callstack 0
  4602                           
  4603 ;; *************** function i2_RetardoLCD *****************
  4604 ;; Defined at:
  4605 ;;		line 309 in file "LibLCDXC8.h"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;  a               1    wreg     unsigned char 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;  a               1    1[COMRAM] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4619 ;;      Params:         0       0       0       0       0       0       0       0       0
  4620 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4621 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4622 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4623 ;;Total ram usage:        2 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		i2_EnviaDato
  4629 ;;		i2_BorraLCD
  4630 ;;		i2_EscribeLCD_c
  4631 ;;		i2_DireccionaLCD
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text28
  4636   001744                     __ptext28:
  4637                           	callstack 0
  4638   001744                     i2_RetardoLCD:
  4639                           	callstack 22
  4640                           
  4641                           ;incstack = 0
  4642                           ;i2RetardoLCD@a stored from wreg
  4643   001744  6E02               	movwf	i2RetardoLCD@a^0,c
  4644                           
  4645                           ;LibLCDXC8.h: 310: switch(a){
  4646   001746  D01B               	goto	i2l2163
  4647   001748                     i2l2153:
  4648   001748  0E05               	movlw	5
  4649   00174A  6E01               	movwf	??i2_RetardoLCD^0,c
  4650   00174C  0EDE               	movlw	222
  4651   00174E                     i2u492_47:
  4652   00174E  2EE8               	decfsz	wreg,f,c
  4653   001750  D7FE               	bra	i2u492_47
  4654   001752  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  4655   001754  D7FC               	bra	i2u492_47
  4656                           
  4657                           ;LibLCDXC8.h: 313: break;
  4658   001756  0012               	return	
  4659   001758                     i2l2155:
  4660   001758  0E53               	movlw	83
  4661   00175A                     i2u493_47:
  4662   00175A  2EE8               	decfsz	wreg,f,c
  4663   00175C  D7FE               	bra	i2u493_47
  4664   00175E  F000               	nop	
  4665                           
  4666                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  4667   001760  0E35               	movlw	53
  4668   001762                     i2u494_47:
  4669   001762  2EE8               	decfsz	wreg,f,c
  4670   001764  D7FE               	bra	i2u494_47
  4671   001766  F000               	nop	
  4672                           
  4673                           ;LibLCDXC8.h: 317: break;
  4674   001768  0012               	return	
  4675   00176A                     i2l2157:
  4676   00176A  0E08               	movlw	8
  4677   00176C                     i2u495_47:
  4678   00176C  2EE8               	decfsz	wreg,f,c
  4679   00176E  D7FE               	bra	i2u495_47
  4680   001770  F000               	nop	
  4681                           
  4682                           ;LibLCDXC8.h: 320: break;
  4683   001772  0012               	return	
  4684   001774                     i2l2159:
  4685   001774  0E03               	movlw	3
  4686   001776                     i2u496_47:
  4687   001776  2EE8               	decfsz	wreg,f,c
  4688   001778  D7FE               	bra	i2u496_47
  4689   00177A  F000               	nop	
  4690                           
  4691                           ;LibLCDXC8.h: 323: break;
  4692   00177C  0012               	return	
  4693   00177E                     i2l2163:
  4694   00177E  5002               	movf	i2RetardoLCD@a^0,w,c
  4695                           
  4696                           ; Switch size 1, requested type "simple"
  4697                           ; Number of cases is 4, Range of values is 1 to 4
  4698                           ; switch strategies available:
  4699                           ; Name         Instructions Cycles
  4700                           ; simple_byte           13     7 (average)
  4701                           ;	Chosen strategy is simple_byte
  4702   001780  0A01               	xorlw	1	; case 1
  4703   001782  B4D8               	btfsc	status,2,c
  4704   001784  D7E1               	goto	i2l2153
  4705   001786  0A03               	xorlw	3	; case 2
  4706   001788  B4D8               	btfsc	status,2,c
  4707   00178A  D7E6               	goto	i2l2155
  4708   00178C  0A01               	xorlw	1	; case 3
  4709   00178E  B4D8               	btfsc	status,2,c
  4710   001790  D7EC               	goto	i2l2157
  4711   001792  0A07               	xorlw	7	; case 4
  4712   001794  A4D8               	btfss	status,2,c
  4713   001796  0012               	return	
  4714   001798  D7ED               	goto	i2l2159
  4715   00179A                     __end_ofi2_RetardoLCD:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function i2_HabilitaLCD *****************
  4719 ;; Defined at:
  4720 ;;		line 96 in file "LibLCDXC8.h"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;		None
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4734 ;;      Params:         0       0       0       0       0       0       0       0       0
  4735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4737 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4738 ;;Total ram usage:        0 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; This function calls:
  4741 ;;		Nothing
  4742 ;; This function is called by:
  4743 ;;		i2_EnviaDato
  4744 ;;		i2_BorraLCD
  4745 ;;		i2_EscribeLCD_c
  4746 ;;		i2_DireccionaLCD
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text29
  4751   001AB4                     __ptext29:
  4752                           	callstack 0
  4753   001AB4                     i2_HabilitaLCD:
  4754                           	callstack 22
  4755                           
  4756                           ;LibLCDXC8.h: 98: LATE1=1;
  4757                           
  4758                           ;incstack = 0
  4759   001AB4  828D               	bsf	3981,1,c	;volatile
  4760                           
  4761                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4762   001AB6  0E03               	movlw	3
  4763   001AB8                     i2u497_47:
  4764   001AB8  2EE8               	decfsz	wreg,f,c
  4765   001ABA  D7FE               	bra	i2u497_47
  4766   001ABC  F000               	nop	
  4767                           
  4768                           ;LibLCDXC8.h: 101: LATE1=0;
  4769   001ABE  928D               	bcf	3981,1,c	;volatile
  4770   001AC0  0012               	return		;funcret
  4771   001AC2                     __end_ofi2_HabilitaLCD:
  4772                           	callstack 0
  4773                           
  4774                           	psect	rparam
  4775   000000                     
  4776                           	psect	temp
  4777   00004C                     btemp:
  4778                           	callstack 0
  4779   00004C                     	ds	1
  4780   000000                     int$flags	set	btemp
  4781   000000                     wtemp8	set	btemp+1
  4782   000000                     ttemp5	set	btemp+1
  4783   000000                     ttemp6	set	btemp+4
  4784   000000                     ttemp7	set	btemp+8
  4785                           
  4786                           	psect	idloc
  4787                           
  4788                           ;Config register IDLOC0 @ 0x200000
  4789                           ;	unspecified, using default values
  4790   200000                     	org	2097152
  4791   200000  FF                 	db	255
  4792                           
  4793                           ;Config register IDLOC1 @ 0x200001
  4794                           ;	unspecified, using default values
  4795   200001                     	org	2097153
  4796   200001  FF                 	db	255
  4797                           
  4798                           ;Config register IDLOC2 @ 0x200002
  4799                           ;	unspecified, using default values
  4800   200002                     	org	2097154
  4801   200002  FF                 	db	255
  4802                           
  4803                           ;Config register IDLOC3 @ 0x200003
  4804                           ;	unspecified, using default values
  4805   200003                     	org	2097155
  4806   200003  FF                 	db	255
  4807                           
  4808                           ;Config register IDLOC4 @ 0x200004
  4809                           ;	unspecified, using default values
  4810   200004                     	org	2097156
  4811   200004  FF                 	db	255
  4812                           
  4813                           ;Config register IDLOC5 @ 0x200005
  4814                           ;	unspecified, using default values
  4815   200005                     	org	2097157
  4816   200005  FF                 	db	255
  4817                           
  4818                           ;Config register IDLOC6 @ 0x200006
  4819                           ;	unspecified, using default values
  4820   200006                     	org	2097158
  4821   200006  FF                 	db	255
  4822                           
  4823                           ;Config register IDLOC7 @ 0x200007
  4824                           ;	unspecified, using default values
  4825   200007                     	org	2097159
  4826   200007  FF                 	db	255
  4827                           
  4828                           	psect	config
  4829                           
  4830                           ;Config register CONFIG1L @ 0x300000
  4831                           ;	unspecified, using default values
  4832                           ;	PLL Prescaler Selection bits
  4833                           ;	PLLDIV = 0x0, unprogrammed default
  4834                           ;	System Clock Postscaler Selection bits
  4835                           ;	CPUDIV = 0x0, unprogrammed default
  4836                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4837                           ;	USBDIV = 0x0, unprogrammed default
  4838   300000                     	org	3145728
  4839   300000  00                 	db	0
  4840                           
  4841                           ;Config register CONFIG1H @ 0x300001
  4842                           ;	Oscillator Selection bits
  4843                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4844                           ;	Fail-Safe Clock Monitor Enable bit
  4845                           ;	FCMEN = 0x0, unprogrammed default
  4846                           ;	Internal/External Oscillator Switchover bit
  4847                           ;	IESO = 0x0, unprogrammed default
  4848   300001                     	org	3145729
  4849   300001  09                 	db	9
  4850                           
  4851                           ;Config register CONFIG2L @ 0x300002
  4852                           ;	unspecified, using default values
  4853                           ;	Power-up Timer Enable bit
  4854                           ;	PWRT = 0x1, unprogrammed default
  4855                           ;	Brown-out Reset Enable bits
  4856                           ;	BOR = 0x3, unprogrammed default
  4857                           ;	Brown-out Reset Voltage bits
  4858                           ;	BORV = 0x3, unprogrammed default
  4859                           ;	USB Voltage Regulator Enable bit
  4860                           ;	VREGEN = 0x0, unprogrammed default
  4861   300002                     	org	3145730
  4862   300002  1F                 	db	31
  4863                           
  4864                           ;Config register CONFIG2H @ 0x300003
  4865                           ;	Watchdog Timer Enable bit
  4866                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4867                           ;	Watchdog Timer Postscale Select bits
  4868                           ;	WDTPS = 0xF, unprogrammed default
  4869   300003                     	org	3145731
  4870   300003  1E                 	db	30
  4871                           
  4872                           ; Padding undefined space
  4873   300004                     	org	3145732
  4874   300004  FF                 	db	255
  4875                           
  4876                           ;Config register CONFIG3H @ 0x300005
  4877                           ;	CCP2 MUX bit
  4878                           ;	CCP2MX = 0x1, unprogrammed default
  4879                           ;	PORTB A/D Enable bit
  4880                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4881                           ;	Low-Power Timer 1 Oscillator Enable bit
  4882                           ;	LPT1OSC = 0x0, unprogrammed default
  4883                           ;	MCLR Pin Enable bit
  4884                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4885   300005                     	org	3145733
  4886   300005  81                 	db	129
  4887                           
  4888                           ;Config register CONFIG4L @ 0x300006
  4889                           ;	Stack Full/Underflow Reset Enable bit
  4890                           ;	STVREN = 0x1, unprogrammed default
  4891                           ;	Single-Supply ICSP Enable bit
  4892                           ;	LVP = OFF, Single-Supply ICSP disabled
  4893                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4894                           ;	ICPRT = 0x0, unprogrammed default
  4895                           ;	Extended Instruction Set Enable bit
  4896                           ;	XINST = 0x0, unprogrammed default
  4897                           ;	Background Debugger Enable bit
  4898                           ;	DEBUG = 0x1, unprogrammed default
  4899   300006                     	org	3145734
  4900   300006  81                 	db	129
  4901                           
  4902                           ; Padding undefined space
  4903   300007                     	org	3145735
  4904   300007  FF                 	db	255
  4905                           
  4906                           ;Config register CONFIG5L @ 0x300008
  4907                           ;	unspecified, using default values
  4908                           ;	Code Protection bit
  4909                           ;	CP0 = 0x1, unprogrammed default
  4910                           ;	Code Protection bit
  4911                           ;	CP1 = 0x1, unprogrammed default
  4912                           ;	Code Protection bit
  4913                           ;	CP2 = 0x1, unprogrammed default
  4914                           ;	Code Protection bit
  4915                           ;	CP3 = 0x1, unprogrammed default
  4916   300008                     	org	3145736
  4917   300008  0F                 	db	15
  4918                           
  4919                           ;Config register CONFIG5H @ 0x300009
  4920                           ;	unspecified, using default values
  4921                           ;	Boot Block Code Protection bit
  4922                           ;	CPB = 0x1, unprogrammed default
  4923                           ;	Data EEPROM Code Protection bit
  4924                           ;	CPD = 0x1, unprogrammed default
  4925   300009                     	org	3145737
  4926   300009  C0                 	db	192
  4927                           
  4928                           ;Config register CONFIG6L @ 0x30000A
  4929                           ;	unspecified, using default values
  4930                           ;	Write Protection bit
  4931                           ;	WRT0 = 0x1, unprogrammed default
  4932                           ;	Write Protection bit
  4933                           ;	WRT1 = 0x1, unprogrammed default
  4934                           ;	Write Protection bit
  4935                           ;	WRT2 = 0x1, unprogrammed default
  4936                           ;	Write Protection bit
  4937                           ;	WRT3 = 0x1, unprogrammed default
  4938   30000A                     	org	3145738
  4939   30000A  0F                 	db	15
  4940                           
  4941                           ;Config register CONFIG6H @ 0x30000B
  4942                           ;	unspecified, using default values
  4943                           ;	Configuration Register Write Protection bit
  4944                           ;	WRTC = 0x1, unprogrammed default
  4945                           ;	Boot Block Write Protection bit
  4946                           ;	WRTB = 0x1, unprogrammed default
  4947                           ;	Data EEPROM Write Protection bit
  4948                           ;	WRTD = 0x1, unprogrammed default
  4949   30000B                     	org	3145739
  4950   30000B  E0                 	db	224
  4951                           
  4952                           ;Config register CONFIG7L @ 0x30000C
  4953                           ;	unspecified, using default values
  4954                           ;	Table Read Protection bit
  4955                           ;	EBTR0 = 0x1, unprogrammed default
  4956                           ;	Table Read Protection bit
  4957                           ;	EBTR1 = 0x1, unprogrammed default
  4958                           ;	Table Read Protection bit
  4959                           ;	EBTR2 = 0x1, unprogrammed default
  4960                           ;	Table Read Protection bit
  4961                           ;	EBTR3 = 0x1, unprogrammed default
  4962   30000C                     	org	3145740
  4963   30000C  0F                 	db	15
  4964                           
  4965                           ;Config register CONFIG7H @ 0x30000D
  4966                           ;	unspecified, using default values
  4967                           ;	Boot Block Table Read Protection bit
  4968                           ;	EBTRB = 0x1, unprogrammed default
  4969   30000D                     	org	3145741
  4970   30000D  40                 	db	64
  4971                           tosu	equ	0xFFF
  4972                           tosh	equ	0xFFE
  4973                           tosl	equ	0xFFD
  4974                           stkptr	equ	0xFFC
  4975                           pclatu	equ	0xFFB
  4976                           pclath	equ	0xFFA
  4977                           pcl	equ	0xFF9
  4978                           tblptru	equ	0xFF8
  4979                           tblptrh	equ	0xFF7
  4980                           tblptrl	equ	0xFF6
  4981                           tablat	equ	0xFF5
  4982                           prodh	equ	0xFF4
  4983                           prodl	equ	0xFF3
  4984                           indf0	equ	0xFEF
  4985                           postinc0	equ	0xFEE
  4986                           postdec0	equ	0xFED
  4987                           preinc0	equ	0xFEC
  4988                           plusw0	equ	0xFEB
  4989                           fsr0h	equ	0xFEA
  4990                           fsr0l	equ	0xFE9
  4991                           wreg	equ	0xFE8
  4992                           indf1	equ	0xFE7
  4993                           postinc1	equ	0xFE6
  4994                           postdec1	equ	0xFE5
  4995                           preinc1	equ	0xFE4
  4996                           plusw1	equ	0xFE3
  4997                           fsr1h	equ	0xFE2
  4998                           fsr1l	equ	0xFE1
  4999                           bsr	equ	0xFE0
  5000                           indf2	equ	0xFDF
  5001                           postinc2	equ	0xFDE
  5002                           postdec2	equ	0xFDD
  5003                           preinc2	equ	0xFDC
  5004                           plusw2	equ	0xFDB
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    0
    Data        4
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      75
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[14]), STR_12(CODE[9]), STR_11(CODE[13]), STR_10(CODE[9]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[15]), STR_6(CODE[9]), 
		 -> STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Imprimir_Resultado
    _factorial_function->___lmul
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _Imprimir_Resultado->___aldiv
    ___lwdiv->___wmul
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_Imprimir_Resultado

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   17593
                                             35 COMRAM     4     4      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                 _Imprimir_Resultado
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
                             ___lmul
                            ___lwdiv
                             ___wmul
                 _factorial_function
 ---------------------------------------------------------------------------------
 (1) _factorial_function                                   8     4      4    2265
                                             25 COMRAM     8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     310
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     155
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Resultado                                  19    15      4    8989
                                             27 COMRAM     8     4      4
                                              0 BANK0     11    11      0
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                            ___aldiv
                            ___almod
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     772
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     781
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    2076
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     613
                                             13 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             13 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1    1733
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     220
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     186
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0     124
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      31
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0     650
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Var                                     4     3      1     408
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Imprimir_Resultado
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
       _EscribeLCD_c
       _strlen
     ___aldiv
     ___almod
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
   ___lmul
   ___lwdiv
   ___wmul
   _factorial_function
     ___lmul

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_DireccionaLCD
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      4B       1       79.8%
BITBIGSFRhlh        2A      0       0      25        0.0%
BITBIGSFRlll        21      0       0      28        0.0%
BITBIGSFRhhlh       19      0       0      21        0.0%
BITBIGSFRhhllll      E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllh         8      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      26        0.0%
BITBIGSFRhhlllh      2      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56      29        0.0%
DATA                 0      0      56       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 18 22:55:08 2023

                          _a 0032                            _b 0030                            _i 003A  
                          _m 0044             i2DireccionaLCD@a 0005                           _PD 007E82  
                         _TO 007E83                   EnviaDato@a 0011          ___wmul@multiplicand 0010  
              ??_LeerTeclado 000E                _InicializaLCD 147C                          l261 1340  
                        l263 1348                          l255 1338                          l280 1398  
                        l272 1374                          l177 08B6                          l290 13C4  
                        l282 13A0                          l274 137C                          l267 136C  
                        l286 13B4                          l278 1390                          l287 13CC  
                        l288 13BC                          l837 17E2                          l847 1954  
                        _GIE 007F97                          _RB4 007C0C                          _RB5 007C0D  
                        _RB6 007C0E                          _RB7 007C0F                          _ISR 0008  
                        _POR 007E81                          wreg 000FE8                         ?_ISR 0001  
           ??i2_EscribeLCD_c 0005                         l3121 16F2                         l3201 16A8  
                       l3123 1702                         l3131 1728                         l3125 1714  
                       l3205 16BC                         l3127 171E                         l3143 18C8  
                       l3231 129C                         l3223 126E                         l3241 12D0  
                       l3217 1256                         l3401 0F9A                         l3307 17D8  
                       l3323 194A                         l3315 192A                         l2515 1384  
                       l3157 199E                         l3229 1290                         l3245 12DE  
                       l3261 13EC                         l3317 1932                         l3333 148E  
                       l3159 19A0                         l3175 17F6                         l3183 1828  
                       l3271 141E                         l3423 1040                         l3343 14AC  
                       l2543 13A8                         l2455 132E                         l3249 12F4  
                       l3281 1454                         l3265 1400                         l3409 0FDC  
                       l3353 14CA                         l3443 10AC                         l3435 1082  
                       l2491 1362                         l3523 08C6                         l2581 15C2  
                       l3285 146A                         l3277 1446                         l3269 1412  
                       l3373 1502                         l3605 0A08                         l3525 08DC  
                       l2591 15D2                         l2583 15C6                         l3295 17B0  
                       l3439 109E                         l3471 11F2                         l2479 1350  
                       l3615 0A26                         l3543 0938                         l3527 08E0  
                       l2585 15CA                         l2577 15BA                         l3297 17B8  
                       l3481 1230                         l3465 11DE                         l3457 1188  
                       l3449 10EA                         l3393 0F36                         l3641 0A90  
                       l2579 15BE                         l2595 15D8                         l3475 120E  
                       l3467 11E4                         l3491 1676                         l3803 0DE0  
                       l3811 0E00                         l3723 0BDA                         l3643 0A96  
                       l3563 0984                         l2589 15CE                         l2597 161A  
                       l3813 0E22                         l3661 0AE2                         l3487 163A  
                       l3815 0E28                         l3807 0DEE                         l3833 0EC6  
                       l3761 0C7C                         l3817 0E3E                         l3665 0AF4  
                       l3569 099C                         l3827 0E5E                         l3763 0CB2  
                       l3747 0C30                         l3835 0ECC                         l3691 0B62  
                       l3579 09BA                         l3781 0D60                         l3773 0CFA  
                       l3759 0C64                         l3769 0CDC                         l3795 0D96  
                       l3787 0D74                         l3699 0B7A                         l3799 0DAC  
                       STR_1 0857                         STR_2 085F                         STR_3 0810  
                       STR_4 0830                         STR_5 0844                         STR_6 0830  
                       STR_7 0801                         STR_8 0830                         STR_9 0839  
                       u2040 1A20                         u2120 1314                         _LATB 000F8A  
                       _LATC 000F8B                         _LATD 000F8C                         u4110 09D2  
                       u4050 0950                         u4240 0A74                         u4170 0A3E  
                       u4340 0AD6                         u3720 1936                         u4440 0B44  
                       u3650 1422                         u3820 0FDA                         u4540 0BBC  
                       u3590 12A0                         u3910 1120                         u3830 0FF0  
                       u3840 1002                         u3690 17BC                         u3850 1014  
                       u4650 0C22                         u3940 11D4                         u3870 1054  
                       u3880 1066                         u3890 1078                         u4907 1720  
                       u3980 1686                         u4917 1AAA                         u4837 08D0  
                       u4847 098E                         u4857 0ED2                         u4867 16F8  
                       u4877 1704                         u4887 170C                         u4897 1716  
                       _RBPU 007F8F                         _TMR0 000FD6               ??_EscribeLCD_c 0012  
                       _main 0866                         fsr1l 000FE1                         btemp 004C  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
               ___param_bank 000000                        ??_ISR 000A              i2_DireccionaLCD 1A68  
             ?_InicializaLCD 0001              __end_of___aldiv 1306              __end_of___almod 147C  
                      ?_main 0001                        STR_10 0830                        STR_11 082C  
                      STR_12 084E                        STR_13 081E                EscribeLCD_c@a 0012  
                      _T0CON 000FD5                        _LATE0 007C68                        _LATE1 007C69  
                      _LATE2 007C6A                        _LATC7 007C5F              __end_of___lwdiv 17EC  
            __end_of___lwmod 195E                        i2l323 1590                        i2l326 1592  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _Color 0038                        _Boton 0043  
        ___lmul@multiplicand 0012          __end_of_LeerTeclado 13D0                  ?i2_BorraLCD 0001  
                      tablat 000FF5                  _HabilitaLCD 1AA6                        ttemp5 004D  
                      ttemp6 0050                        ttemp7 0054                        status 000FD8  
                      wtemp8 004D             __end_ofi2_strlen 19E8             __end_of_BorraLCD 1A92  
           __end_of_ColorRGB 1620              __initialization 195E                 __end_of_main 0EDE  
           i2_MensajeLCD_Var 183E                       ??_main 0024         __end_of_ConfiguraLCD 1A26  
              __activetblptr 000002                   i2strlen@cp 0003           _Imprimir_Resultado 0EDE  
                     _ADCON1 000FC1               DireccionaLCD@a 0012                       i2l2153 1748  
                     i2l2155 1758                       i2l2163 177E                       i2l2157 176A  
                     i2l2159 1774                       i2l2193 190E                       i2l2371 19C8  
                     i2l3093 1544                       i2l3095 154C                       i2l2369 19C6  
                     i2l3099 1560                       i2l2725 1848                       i2l2733 187A  
                     _OSCCON 000FD3                       _TMR0IE 007F95                       _TMR0IF 007F92  
                     _TMR0ON 007EAF          ?_Imprimir_Resultado 001C        __end_of_DireccionaLCD 1A52  
                 _RetardoLCD 16EE      __end_ofi2_DireccionaLCD 1A7E                       ___lmul 1698  
                  ??___aldiv 0016                    ??___almod 0016                       ___wmul 19E8  
                  ??___lwdiv 0018                    ??___lwmod 0012              ??_InicializaLCD 0012  
                     clear_0 1984                       isa$std 000001         ??_Imprimir_Resultado 0020  
       __end_of_EscribeLCD_c 1A3C                       _strlen 1998                  _LeerTeclado 1306  
               ?i2_EnviaDato 0001                 __pdataCOMRAM 0048                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
 __end_of_factorial_function 1698        __end_ofi2_HabilitaLCD 1AC2                   __accesstop 0060  
    __end_of__initialization 198A                ___rparam_used 000001               __pcstackCOMRAM 0001  
          __end_of_EnviaDato 18D6                _Parte_Decimal 002C                    ?i2_strlen 0001  
                  ?_BorraLCD 0001                    ?_ColorRGB 0001               _MensajeLCD_Var 17EC  
            MensajeLCD_Var@a 0013              MensajeLCD_Var@i 0015       factorial_function@fact 001E  
                ?_RetardoLCD 0001                  RetardoLCD@a 000F             ?i2_DireccionaLCD 0001  
                    ?___lmul 000E                      ?___wmul 000E               ___lmul@product 0016  
                    ?_strlen 000E       __end_of_MensajeLCD_Var 183E                   ??i2_strlen 0003  
               ??i2_BorraLCD 0005                   ??_BorraLCD 0012                   ??_ColorRGB 000E  
   __end_ofi2_MensajeLCD_Var 1890                 ?_HabilitaLCD 0001                 _ConfiguraLCD 1A0E  
                    __Hparam 0000                      __Lparam 0000                      ___aldiv 123A  
                    ___almod 13D0                      ___lwdiv 179A                      ___lwmod 191C  
               __psmallconst 0800           __end_ofi2_BorraLCD 1AA6          factorial_function@a 001A  
                    __pcinit 195E                      __ramtop 0800  Imprimir_Resultado@Resultado 001C  
                    __ptext0 0866                      __ptext1 1620                      __ptext2 1306  
                    __ptext3 147C                      __ptext4 1A7E                      __ptext5 0EDE  
                    __ptext6 19E8                      __ptext7 191C                      __ptext8 179A  
                    __ptext9 1698             ___aldiv@dividend 000E              ?_MensajeLCD_Var 0013  
             __pintcode_body 1518         end_of_initialization 198A                  _Verificador 0034  
              __Lmediumconst 0000                      int_func 1518                 _EscribeLCD_c 1A26  
           ___aldiv@quotient 0018                      postdec1 000FE5                      postinc0 000FEE  
                    strlen@s 000E                 ?_LeerTeclado 0001              i2EscribeLCD_c@a 0005  
              ?i2_RetardoLCD 0001                    _Factorial 0041           _factorial_function 1620  
             __end_of___lmul 16EE               __end_of___wmul 1A0E                __pidataCOMRAM 1AC2  
        ?_factorial_function 001A        __end_of_InicializaLCD 1518                    _EnviaDato 1890  
             __end_of_strlen 19C0          start_initialization 195E                  __end_of_ISR 15A6  
       ??_factorial_function 001E                    i2strlen@s 0001               ??i2_RetardoLCD 0001  
               ??_RetardoLCD 000E                     ??___lmul 0016                    _Resultado 0028  
                   ??___wmul 0012                     ??_strlen 0010                   ?_EnviaDato 0001  
                __pbssCOMRAM 0028           __end_of_RetardoLCD 1744                __pcstackBANK0 0060  
          ?i2_MensajeLCD_Var 0006           ??i2_MensajeLCD_Var 0007                _DireccionaLCD 1A3C  
             i2_EscribeLCD_c 1A52             ___lwdiv@dividend 0014                    __pintcode 0008  
                   ?___aldiv 000E                     ?___almod 000E                     ?___lwdiv 0014  
                   ?___lwmod 000E             ___almod@dividend 000E             ??_MensajeLCD_Var 0014  
                __smallconst 0800                _Numero_1_Char 0049                _Numero_2_Char 0048  
           ___lwdiv@quotient 0019              ___aldiv@divisor 0012              ___aldiv@counter 0016  
             ___wmul@product 0012                i2_HabilitaLCD 1AB4               ?_DireccionaLCD 0001  
     __end_ofi2_EscribeLCD_c 1A68                     i2u343_40 1556                     i2u344_45 1558  
                   i2u347_40 157A                     i2u348_45 157C                     i2u492_47 174E  
                   i2u493_47 175A                     i2u494_47 1762                     i2u495_47 176C  
                   i2u496_47 1776                     i2u497_47 1AB8       Imprimir_Resultado@flag 0060  
          ___wmul@multiplier 000E                ??i2_EnviaDato 0003         __end_ofi2_RetardoLCD 179A  
                ??_EnviaDato 0010                     i2_strlen 19C0                     _BorraLCD 1A7E  
                   _ColorRGB 15A6            ___lmul@multiplier 000E                    copy_data0 1972  
                   _Contador 0036                     _Negativo 0040               ?i2_HabilitaLCD 0001  
            ?i2_EscribeLCD_c 0001                     __Hrparam 0000                     _Operador 004A  
                   __Lrparam 0000                     _Numero_1 003E                     _Numero_2 003C  
                   _Potencia 0042                 i2EnviaDato@a 0004                ConfiguraLCD@a 000E  
                   _main$156 0026                     _main$157 0027            ??i2_DireccionaLCD 0005  
            ___lwdiv@divisor 0016              ___lwdiv@counter 0018                     __ptext10 13D0  
                   __ptext11 123A                     __ptext20 15A6                     __ptext12 17EC  
                   __ptext13 1998                     __ptext22 183E                     __ptext14 1A26  
                   __ptext23 19C0                     __ptext15 1A3C                     __ptext24 1A52  
                   __ptext16 1890                     __ptext25 1A68                     __ptext17 16EE  
                   __ptext26 1A92                     __ptext18 1AA6                     __ptext27 18D6  
                   __ptext19 1A0E                     __ptext28 1744                     __ptext29 1AB4  
        __end_ofi2_EnviaDato 191C              ___almod@divisor 0012              ___almod@counter 0016  
            ??_DireccionaLCD 0012                     _interfaz 004B                     isa$xinst 000000  
                   int$flags 004C   __end_of_Imprimir_Resultado 123A              ??i2_HabilitaLCD 0001  
                   intlevel2 0000                ??_HabilitaLCD 000E   Imprimir_Resultado@Potencia 0067  
           ___lwmod@dividend 000E                ?_ConfiguraLCD 0001                i2RetardoLCD@a 0002  
                i2_EnviaDato 18D6              ___lwmod@divisor 0010                     strlen@cp 0010  
            ___lwmod@counter 0012                 ___aldiv@sign 0017          Imprimir_Resultado@i 0063  
        Imprimir_Resultado@j 0065          Imprimir_Resultado@k 0061                   i2_BorraLCD 1A92  
               ___almod@sign 0017               ??_ConfiguraLCD 000E                ?_EscribeLCD_c 0001  
          i2MensajeLCD_Var@a 0006            i2MensajeLCD_Var@i 0008                 i2_RetardoLCD 1744  
        __end_of_HabilitaLCD 1AB4  
