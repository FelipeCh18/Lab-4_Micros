

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 18 09:49:32 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Version 2.40
    72                           ; Generated 04/07/2022 GMT
    73                           ; 
    74                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4550 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataCOMRAM
   108   0029D9                     __pidataCOMRAM:
   109                           	callstack 0
   110                           
   111                           ;initializer for _interfaz
   112   0029D9  08                 	db	8
   113                           
   114                           	psect	idataBANK0
   115   0029D6                     __pidataBANK0:
   116                           	callstack 0
   117                           
   118                           ;initializer for _n2c
   119   0029D6  20                 	db	32
   120                           
   121                           ;initializer for _n1c
   122   0029D7  20                 	db	32
   123                           
   124                           ;initializer for _op
   125   0029D8  20                 	db	32
   126                           
   127                           	psect	smallconst
   128   000800                     __psmallconst:
   129                           	callstack 0
   130   000800  00                 	db	0
   131   000801                     exp@coeff:
   132                           	callstack 0
   133   000801  00                 	db	0
   134   000802  80                 	db	128
   135   000803  3F                 	db	63
   136   000804  72                 	db	114
   137   000805  31                 	db	49
   138   000806  3F                 	db	63
   139   000807  FE                 	db	254
   140   000808  75                 	db	117
   141   000809  3E                 	db	62
   142   00080A  58                 	db	88
   143   00080B  63                 	db	99
   144   00080C  3D                 	db	61
   145   00080D  95                 	db	149
   146   00080E  1D                 	db	29
   147   00080F  3C                 	db	60
   148   000810  C5                 	db	197
   149   000811  AE                 	db	174
   150   000812  3A                 	db	58
   151   000813  79                 	db	121
   152   000814  21                 	db	33
   153   000815  39                 	db	57
   154   000816  94                 	db	148
   155   000817  80                 	db	128
   156   000818  37                 	db	55
   157   000819  93                 	db	147
   158   00081A  A7                 	db	167
   159   00081B  35                 	db	53
   160   00081C  56                 	db	86
   161   00081D  15                 	db	21
   162   00081E  34                 	db	52
   163   00081F                     __end_ofexp@coeff:
   164                           	callstack 0
   165   00081F                     log@coeff:
   166                           	callstack 0
   167   00081F  00                 	db	0
   168   000820  00                 	db	0
   169   000821  00                 	db	0
   170   000822  00                 	db	0
   171   000823  80                 	db	128
   172   000824  3F                 	db	63
   173   000825  F0                 	db	240
   174   000826  FF                 	db	255
   175   000827  BE                 	db	190
   176   000828  E2                 	db	226
   177   000829  A9                 	db	169
   178   00082A  3E                 	db	62
   179   00082B  83                 	db	131
   180   00082C  76                 	db	118
   181   00082D  BE                 	db	190
   182   00082E  AE                 	db	174
   183   00082F  2B                 	db	43
   184   000830  3E                 	db	62
   185   000831  3C                 	db	60
   186   000832  C3                 	db	195
   187   000833  BD                 	db	189
   188   000834  D2                 	db	210
   189   000835  13                 	db	19
   190   000836  3D                 	db	61
   191   000837  78                 	db	120
   192   000838  D3                 	db	211
   193   000839  BB                 	db	187
   194   00083A                     __end_oflog@coeff:
   195                           	callstack 0
   196   000000                     _LATC	set	3979
   197   000000                     _TRISC	set	3988
   198   000000                     _LATC7	set	31839
   199   000000                     _LATE2	set	31850
   200   000000                     _RB7	set	31759
   201   000000                     _RB6	set	31758
   202   000000                     _RB5	set	31757
   203   000000                     _LATE1	set	31849
   204   000000                     _POR	set	32385
   205   000000                     _PD	set	32386
   206   000000                     _TMR0ON	set	32431
   207   000000                     _GIE	set	32663
   208   000000                     _TMR0IE	set	32661
   209   000000                     _LATB	set	3978
   210   000000                     _LATD	set	3980
   211   000000                     _RB4	set	31756
   212   000000                     _ADCON1	set	4033
   213   000000                     _TMR0	set	4054
   214   000000                     _T0CON	set	4053
   215   000000                     _RBPU	set	32655
   216   000000                     _TRISB	set	3987
   217   000000                     _TRISD	set	3989
   218   000000                     _LATE0	set	31848
   219   000000                     _OSCCON	set	4051
   220   000000                     _TO	set	32387
   221   000000                     _TRISE	set	3990
   222   000000                     _TMR0IF	set	32658
   223   00083A                     STR_7:
   224   00083A  4D                 	db	77	;'M'
   225   00083B  6F                 	db	111	;'o'
   226   00083C  64                 	db	100	;'d'
   227   00083D  6F                 	db	111	;'o'
   228   00083E  20                 	db	32
   229   00083F  46                 	db	70	;'F'
   230   000840  61                 	db	97	;'a'
   231   000841  63                 	db	99	;'c'
   232   000842  74                 	db	116	;'t'
   233   000843  6F                 	db	111	;'o'
   234   000844  72                 	db	114	;'r'
   235   000845  69                 	db	105	;'i'
   236   000846  61                 	db	97	;'a'
   237   000847  6C                 	db	108	;'l'
   238   000848  00                 	db	0
   239   000849                     STR_3:
   240   000849  4D                 	db	77	;'M'
   241   00084A  6F                 	db	111	;'o'
   242   00084B  64                 	db	100	;'d'
   243   00084C  6F                 	db	111	;'o'
   244   00084D  20                 	db	32
   245   00084E  50                 	db	80	;'P'
   246   00084F  6F                 	db	111	;'o'
   247   000850  74                 	db	116	;'t'
   248   000851  65                 	db	101	;'e'
   249   000852  6E                 	db	110	;'n'
   250   000853  63                 	db	99	;'c'
   251   000854  69                 	db	105	;'i'
   252   000855  61                 	db	97	;'a'
   253   000856  00                 	db	0
   254   000857                     STR_15:
   255   000857  49                 	db	73	;'I'
   256   000858  6E                 	db	110	;'n'
   257   000859  64                 	db	100	;'d'
   258   00085A  65                 	db	101	;'e'
   259   00085B  74                 	db	116	;'t'
   260   00085C  65                 	db	101	;'e'
   261   00085D  72                 	db	114	;'r'
   262   00085E  6D                 	db	109	;'m'
   263   00085F  69                 	db	105	;'i'
   264   000860  6E                 	db	110	;'n'
   265   000861  61                 	db	97	;'a'
   266   000862  64                 	db	100	;'d'
   267   000863  6F                 	db	111	;'o'
   268   000864  00                 	db	0
   269   000865                     STR_11:
   270   000865  4C                 	db	76	;'L'
   271   000866  56                 	db	86	;'V'
   272   000867  50                 	db	80	;'P'
   273   000868  20                 	db	32
   274   000869  41                 	db	65	;'A'
   275   00086A  63                 	db	99	;'c'
   276   00086B  74                 	db	116	;'t'
   277   00086C  69                 	db	105	;'i'
   278   00086D  76                 	db	118	;'v'
   279   00086E  61                 	db	97	;'a'
   280   00086F  64                 	db	100	;'d'
   281   000870  6F                 	db	111	;'o'
   282   000871  00                 	db	0
   283   000872                     STR_13:
   284   000872  64                 	db	100	;'d'
   285   000873  65                 	db	101	;'e'
   286   000874  20                 	db	32
   287   000875  63                 	db	99	;'c'
   288   000876  61                 	db	97	;'a'
   289   000877  6C                 	db	108	;'l'
   290   000878  63                 	db	99	;'c'
   291   000879  75                 	db	117	;'u'
   292   00087A  6C                 	db	108	;'l'
   293   00087B  61                 	db	97	;'a'
   294   00087C  72                 	db	114	;'r'
   295   00087D  00                 	db	0
   296   00087E                     STR_9:
   297   00087E  4D                 	db	77	;'M'
   298   00087F  6F                 	db	111	;'o'
   299   000880  64                 	db	100	;'d'
   300   000881  6F                 	db	111	;'o'
   301   000882  20                 	db	32
   302   000883  52                 	db	82	;'R'
   303   000884  65                 	db	101	;'e'
   304   000885  73                 	db	115	;'s'
   305   000886  74                 	db	116	;'t'
   306   000887  61                 	db	97	;'a'
   307   000888  00                 	db	0
   308   000889                     STR_5:
   309   000889  4D                 	db	77	;'M'
   310   00088A  6F                 	db	111	;'o'
   311   00088B  64                 	db	100	;'d'
   312   00088C  6F                 	db	111	;'o'
   313   00088D  20                 	db	32
   314   00088E  53                 	db	83	;'S'
   315   00088F  75                 	db	117	;'u'
   316   000890  6D                 	db	109	;'m'
   317   000891  61                 	db	97	;'a'
   318   000892  00                 	db	0
   319   000893                     STR_12:
   320   000893  49                 	db	73	;'I'
   321   000894  6D                 	db	109	;'m'
   322   000895  70                 	db	112	;'p'
   323   000896  6F                 	db	111	;'o'
   324   000897  73                 	db	115	;'s'
   325   000898  69                 	db	105	;'i'
   326   000899  62                 	db	98	;'b'
   327   00089A  6C                 	db	108	;'l'
   328   00089B  65                 	db	101	;'e'
   329   00089C  00                 	db	0
   330   00089D                     STR_14:
   331   00089D  49                 	db	73	;'I'
   332   00089E  6E                 	db	110	;'n'
   333   00089F  66                 	db	102	;'f'
   334   0008A0  69                 	db	105	;'i'
   335   0008A1  6E                 	db	110	;'n'
   336   0008A2  69                 	db	105	;'i'
   337   0008A3  74                 	db	116	;'t'
   338   0008A4  6F                 	db	111	;'o'
   339   0008A5  00                 	db	0
   340   0008A6                     STR_1:
   341   0008A6  45                 	db	69	;'E'
   342   0008A7  6E                 	db	110	;'n'
   343   0008A8  65                 	db	101	;'e'
   344   0008A9  72                 	db	114	;'r'
   345   0008AA  67                 	db	103	;'g'
   346   0008AB  69                 	db	105	;'i'
   347   0008AC  61                 	db	97	;'a'
   348   0008AD  00                 	db	0
   349   0008AE                     STR_2:
   350   0008AE  4D                 	db	77	;'M'
   351   0008AF  43                 	db	67	;'C'
   352   0008B0  4C                 	db	76	;'L'
   353   0008B1  52                 	db	82	;'R'
   354   0008B2  00                 	db	0
   355   0008B3  00                 	db	0	; dummy byte at the end
   356   000000                     
   357                           ; #config settings
   358                           
   359                           	psect	cinit
   360   0024D0                     __pcinit:
   361                           	callstack 0
   362   0024D0                     start_initialization:
   363                           	callstack 0
   364   0024D0                     __initialization:
   365                           	callstack 0
   366                           
   367                           ; Initialize objects allocated to BANK0 (3 bytes)
   368                           ; load TBLPTR registers with __pidataBANK0
   369   0024D0  0ED6               	movlw	low __pidataBANK0
   370   0024D2  6EF6               	movwf	tblptrl,c
   371   0024D4  0E29               	movlw	high __pidataBANK0
   372   0024D6  6EF7               	movwf	tblptrh,c
   373   0024D8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   374   0024DA  6EF8               	movwf	tblptru,c
   375   0024DC  0009               	tblrd		*+	;fetch initializer
   376   0024DE  CFF5 F0BE          	movff	tablat,__pdataBANK0
   377   0024E2  0009               	tblrd		*+	;fetch initializer
   378   0024E4  CFF5 F0BF          	movff	tablat,__pdataBANK0+1
   379   0024E8  0009               	tblrd		*+	;fetch initializer
   380   0024EA  CFF5 F0C0          	movff	tablat,__pdataBANK0+2
   381                           
   382                           ; Initialize objects allocated to COMRAM (1 bytes)
   383                           ; load TBLPTR registers with __pidataCOMRAM
   384   0024EE  0ED9               	movlw	low __pidataCOMRAM
   385   0024F0  6EF6               	movwf	tblptrl,c
   386   0024F2  0E29               	movlw	high __pidataCOMRAM
   387   0024F4  6EF7               	movwf	tblptrh,c
   388   0024F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   389   0024F8  6EF8               	movwf	tblptru,c
   390   0024FA  0009               	tblrd		*+	;fetch initializer
   391   0024FC  CFF5 F050          	movff	tablat,__pdataCOMRAM
   392                           
   393                           ; Clear objects allocated to BANK0 (27 bytes)
   394   002500  EE00  F0A3         	lfsr	0,__pbssBANK0
   395   002504  0E1B               	movlw	27
   396   002506                     clear_0:
   397   002506  6AEE               	clrf	postinc0,c
   398   002508  06E8               	decf	wreg,f,c
   399   00250A  E1FD               	bnz	clear_0
   400                           
   401                           ; Clear objects allocated to COMRAM (12 bytes)
   402   00250C  EE00  F044         	lfsr	0,__pbssCOMRAM
   403   002510  0E0C               	movlw	12
   404   002512                     clear_1:
   405   002512  6AEE               	clrf	postinc0,c
   406   002514  06E8               	decf	wreg,f,c
   407   002516  E1FD               	bnz	clear_1
   408   002518                     end_of_initialization:
   409                           	callstack 0
   410   002518                     __end_of__initialization:
   411                           	callstack 0
   412   002518  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   413   00251A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   414   00251C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   415   00251E  6EF8               	movwf	tblptru,c
   416   002520  0100               	movlb	0
   417   002522  EF5A  F004         	goto	_main	;jump to C main() function
   418                           
   419                           	psect	bssCOMRAM
   420   000044                     __pbssCOMRAM:
   421                           	callstack 0
   422   000044                     _b:
   423                           	callstack 0
   424   000044                     	ds	2
   425   000046                     _a:
   426                           	callstack 0
   427   000046                     	ds	2
   428   000048                     _verificador:
   429                           	callstack 0
   430   000048                     	ds	2
   431   00004A                     _contador_digitos:
   432                           	callstack 0
   433   00004A                     	ds	2
   434   00004C                     _contador:
   435                           	callstack 0
   436   00004C                     	ds	2
   437   00004E                     _color:
   438                           	callstack 0
   439   00004E                     	ds	2
   440                           
   441                           	psect	dataCOMRAM
   442   000050                     __pdataCOMRAM:
   443                           	callstack 0
   444   000050                     _interfaz:
   445                           	callstack 0
   446   000050                     	ds	1
   447                           
   448                           	psect	bssBANK0
   449   0000A3                     __pbssBANK0:
   450                           	callstack 0
   451   0000A3                     _res:
   452                           	callstack 0
   453   0000A3                     	ds	4
   454   0000A7                     _r:
   455                           	callstack 0
   456   0000A7                     	ds	4
   457   0000AB                     _partdecl:
   458                           	callstack 0
   459   0000AB                     	ds	4
   460   0000AF                     _errno:
   461                           	callstack 0
   462   0000AF                     	ds	2
   463   0000B1                     _i:
   464                           	callstack 0
   465   0000B1                     	ds	2
   466   0000B3                     _n2:
   467                           	callstack 0
   468   0000B3                     	ds	2
   469   0000B5                     _n1:
   470                           	callstack 0
   471   0000B5                     	ds	2
   472   0000B7                     _factorial:
   473                           	callstack 0
   474   0000B7                     	ds	1
   475   0000B8                     _potencia:
   476                           	callstack 0
   477   0000B8                     	ds	1
   478   0000B9                     _Tecla:
   479                           	callstack 0
   480   0000B9                     	ds	1
   481   0000BA                     _m:
   482                           	callstack 0
   483   0000BA                     	ds	4
   484                           
   485                           	psect	dataBANK0
   486   0000BE                     __pdataBANK0:
   487                           	callstack 0
   488   0000BE                     _n2c:
   489                           	callstack 0
   490   0000BE                     	ds	1
   491   0000BF                     _n1c:
   492                           	callstack 0
   493   0000BF                     	ds	1
   494   0000C0                     _op:
   495                           	callstack 0
   496   0000C0                     	ds	1
   497                           
   498                           	psect	cstackBANK0
   499   000060                     __pcstackBANK0:
   500                           	callstack 0
   501   000060                     ??_ldexp:
   502                           
   503                           ; 1 bytes @ 0x0
   504   000060                     	ds	2
   505   000062                     ?_exp:
   506                           	callstack 0
   507   000062                     exp@x:
   508                           	callstack 0
   509                           
   510                           ; 3 bytes @ 0x2
   511   000062                     	ds	3
   512   000065                     _exp$910:
   513                           	callstack 0
   514                           
   515                           ; 3 bytes @ 0x5
   516   000065                     	ds	3
   517   000068                     exp@exponent:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x8
   521   000068                     	ds	2
   522   00006A                     exp@sign:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0xA
   526   00006A                     	ds	1
   527   00006B                     ?_pow:
   528                           	callstack 0
   529   00006B                     pow@x:
   530                           	callstack 0
   531                           
   532                           ; 3 bytes @ 0xB
   533   00006B                     	ds	3
   534   00006E                     pow@y:
   535                           	callstack 0
   536                           
   537                           ; 3 bytes @ 0xE
   538   00006E                     	ds	3
   539   000071                     _pow$908:
   540                           	callstack 0
   541                           
   542                           ; 3 bytes @ 0x11
   543   000071                     	ds	3
   544   000074                     _pow$909:
   545                           	callstack 0
   546                           
   547                           ; 3 bytes @ 0x14
   548   000074                     	ds	3
   549   000077                     pow@sign:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x17
   553   000077                     	ds	1
   554   000078                     pow@yi:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x18
   558   000078                     	ds	4
   559   00007C                     ?___aldiv:
   560                           	callstack 0
   561   00007C                     ?___almod:
   562                           	callstack 0
   563   00007C                     ___aldiv@dividend:
   564                           	callstack 0
   565   00007C                     ___almod@dividend:
   566                           	callstack 0
   567                           
   568                           ; 4 bytes @ 0x1C
   569   00007C                     	ds	4
   570   000080                     ___aldiv@divisor:
   571                           	callstack 0
   572   000080                     ___almod@divisor:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x20
   576   000080                     	ds	4
   577   000084                     ___aldiv@counter:
   578                           	callstack 0
   579   000084                     ___almod@counter:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x24
   583   000084                     	ds	1
   584   000085                     ___aldiv@sign:
   585                           	callstack 0
   586   000085                     ___almod@sign:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x25
   590   000085                     	ds	1
   591   000086                     ___aldiv@quotient:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x26
   595   000086                     	ds	4
   596   00008A                     Imprimir_Resultado@r:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x2A
   600   00008A                     	ds	4
   601   00008E                     ??_Imprimir_Resultado:
   602                           
   603                           ; 1 bytes @ 0x2E
   604   00008E                     	ds	4
   605   000092                     Imprimir_Resultado@i:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x32
   609   000092                     	ds	2
   610   000094                     _Imprimir_Resultado$906:
   611                           	callstack 0
   612                           
   613                           ; 3 bytes @ 0x34
   614   000094                     	ds	3
   615   000097                     _Imprimir_Resultado$907:
   616                           	callstack 0
   617                           
   618                           ; 3 bytes @ 0x37
   619   000097                     	ds	3
   620   00009A                     Imprimir_Resultado@j:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x3A
   624   00009A                     	ds	2
   625   00009C                     ??_main:
   626                           
   627                           ; 1 bytes @ 0x3C
   628   00009C                     	ds	2
   629   00009E                     _main$905:
   630                           	callstack 0
   631                           
   632                           ; 3 bytes @ 0x3E
   633   00009E                     	ds	3
   634   0000A1                     _main$163:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x41
   638   0000A1                     	ds	1
   639   0000A2                     _main$164:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x42
   643   0000A2                     	ds	1
   644                           
   645                           	psect	cstackCOMRAM
   646   000001                     __pcstackCOMRAM:
   647                           	callstack 0
   648   000001                     ??i2_RetardoLCD:
   649   000001                     ?i2_strlen:
   650                           	callstack 0
   651   000001                     i2strlen@s:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x0
   655   000001                     	ds	1
   656   000002                     i2RetardoLCD@a:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x1
   660   000002                     	ds	1
   661   000003                     ??i2_EnviaDato:
   662   000003                     i2strlen@cp:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x2
   666   000003                     	ds	1
   667   000004                     i2EnviaDato@a:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x3
   671   000004                     	ds	1
   672   000005                     i2EscribeLCD_c@a:
   673                           	callstack 0
   674   000005                     i2DireccionaLCD@a:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x4
   678   000005                     	ds	1
   679   000006                     i2MensajeLCD_Var@a:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x5
   683   000006                     	ds	1
   684   000007                     ??i2_MensajeLCD_Var:
   685                           
   686                           ; 1 bytes @ 0x6
   687   000007                     	ds	1
   688   000008                     i2MensajeLCD_Var@i:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x7
   692   000008                     	ds	2
   693   00000A                     ??_ISR:
   694                           
   695                           ; 1 bytes @ 0x9
   696   00000A                     	ds	4
   697   00000E                     ??_RetardoLCD:
   698   00000E                     ??_ColorRGB:
   699   00000E                     ?_strlen:
   700                           	callstack 0
   701   00000E                     ?___wmul:
   702                           	callstack 0
   703   00000E                     ?___lwmod:
   704                           	callstack 0
   705   00000E                     ?___ftpack:
   706                           	callstack 0
   707   00000E                     ?_frexp:
   708                           	callstack 0
   709   00000E                     ?___ftneg:
   710                           	callstack 0
   711   00000E                     ?___lmul:
   712                           	callstack 0
   713   00000E                     ConfiguraLCD@a:
   714                           	callstack 0
   715   00000E                     strlen@s:
   716                           	callstack 0
   717   00000E                     ___wmul@multiplier:
   718                           	callstack 0
   719   00000E                     ___lwmod@dividend:
   720                           	callstack 0
   721   00000E                     ___ftpack@arg:
   722                           	callstack 0
   723   00000E                     ___ftge@ff1:
   724                           	callstack 0
   725   00000E                     ___ftneg@f1:
   726                           	callstack 0
   727   00000E                     frexp@value:
   728                           	callstack 0
   729   00000E                     ___lmul@multiplier:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0xD
   733   00000E                     	ds	1
   734   00000F                     RetardoLCD@a:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0xE
   738   00000F                     	ds	1
   739   000010                     ??_EnviaDato:
   740   000010                     strlen@cp:
   741                           	callstack 0
   742   000010                     ___wmul@multiplicand:
   743                           	callstack 0
   744   000010                     ___lwmod@divisor:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0xF
   748   000010                     	ds	1
   749   000011                     EnviaDato@a:
   750                           	callstack 0
   751   000011                     ___ftpack@exp:
   752                           	callstack 0
   753   000011                     frexp@eptr:
   754                           	callstack 0
   755   000011                     ___ftge@ff2:
   756                           	callstack 0
   757                           
   758                           ; 3 bytes @ 0x10
   759   000011                     	ds	1
   760   000012                     ??_frexp:
   761   000012                     EscribeLCD_c@a:
   762                           	callstack 0
   763   000012                     DireccionaLCD@a:
   764                           	callstack 0
   765   000012                     ___ftpack@sign:
   766                           	callstack 0
   767   000012                     ___lwmod@counter:
   768                           	callstack 0
   769   000012                     ___wmul@product:
   770                           	callstack 0
   771   000012                     ___lmul@multiplicand:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x11
   775   000012                     	ds	1
   776   000013                     ??___ftpack:
   777   000013                     MensajeLCD_Var@a:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x12
   781   000013                     	ds	1
   782   000014                     ??_MensajeLCD_Var:
   783   000014                     ??___ftge:
   784   000014                     ?___lwdiv:
   785                           	callstack 0
   786   000014                     ?_factorial_function:
   787                           	callstack 0
   788   000014                     factorial_function@a:
   789                           	callstack 0
   790   000014                     ___lwdiv@dividend:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x13
   794   000014                     	ds	1
   795   000015                     MensajeLCD_Var@i:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x14
   799   000015                     	ds	1
   800   000016                     ?___ftdiv:
   801                           	callstack 0
   802   000016                     ?___awtoft:
   803                           	callstack 0
   804   000016                     ?___lltoft:
   805                           	callstack 0
   806   000016                     ?___lwtoft:
   807                           	callstack 0
   808   000016                     ___awtoft@c:
   809                           	callstack 0
   810   000016                     ___lwdiv@divisor:
   811                           	callstack 0
   812   000016                     ___lwtoft@c:
   813                           	callstack 0
   814   000016                     ___ftdiv@f1:
   815                           	callstack 0
   816   000016                     ___lmul@product:
   817                           	callstack 0
   818   000016                     ___lltoft@c:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x15
   822   000016                     	ds	2
   823   000018                     factorial_function@fact:
   824                           	callstack 0
   825   000018                     ___lwdiv@quotient:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x17
   829   000018                     	ds	1
   830   000019                     ___awtoft@sign:
   831                           	callstack 0
   832   000019                     ___ftdiv@f2:
   833                           	callstack 0
   834                           
   835                           ; 3 bytes @ 0x18
   836   000019                     	ds	1
   837   00001A                     ??___lltoft:
   838   00001A                     ?___ftmul:
   839                           	callstack 0
   840   00001A                     ?___fttol:
   841                           	callstack 0
   842   00001A                     ___lwdiv@counter:
   843                           	callstack 0
   844   00001A                     ___ftmul@f1:
   845                           	callstack 0
   846   00001A                     ___fttol@f1:
   847                           	callstack 0
   848                           
   849                           ; 3 bytes @ 0x19
   850   00001A                     	ds	2
   851   00001C                     ??___ftdiv:
   852                           
   853                           ; 1 bytes @ 0x1B
   854   00001C                     	ds	1
   855   00001D                     ___ftmul@f2:
   856                           	callstack 0
   857                           
   858                           ; 3 bytes @ 0x1C
   859   00001D                     	ds	1
   860   00001E                     ??___fttol:
   861   00001E                     ___lltoft@exp:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x1D
   865   00001E                     	ds	1
   866   00001F                     ___ftdiv@cntr:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x1E
   870   00001F                     	ds	1
   871   000020                     ??___ftmul:
   872   000020                     ___ftdiv@f3:
   873                           	callstack 0
   874                           
   875                           ; 3 bytes @ 0x1F
   876   000020                     	ds	3
   877   000023                     ___ftdiv@exp:
   878                           	callstack 0
   879   000023                     ___ftmul@exp:
   880                           	callstack 0
   881   000023                     ___fttol@sign1:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x22
   885   000023                     	ds	1
   886   000024                     ___ftdiv@sign:
   887                           	callstack 0
   888   000024                     ___ftmul@f3_as_product:
   889                           	callstack 0
   890   000024                     ___fttol@lval:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x23
   894   000024                     	ds	3
   895   000027                     ___ftmul@cntr:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x26
   899   000027                     	ds	1
   900   000028                     ___ftmul@sign:
   901                           	callstack 0
   902   000028                     ___fttol@exp1:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x27
   906   000028                     	ds	1
   907   000029                     ?___ftadd:
   908                           	callstack 0
   909   000029                     ?___altoft:
   910                           	callstack 0
   911   000029                     ___ftadd@f1:
   912                           	callstack 0
   913   000029                     ___altoft@c:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x28
   917   000029                     	ds	3
   918   00002C                     ___ftadd@f2:
   919                           	callstack 0
   920                           
   921                           ; 3 bytes @ 0x2B
   922   00002C                     	ds	1
   923   00002D                     ??___altoft:
   924                           
   925                           ; 1 bytes @ 0x2C
   926   00002D                     	ds	2
   927   00002F                     ??___ftadd:
   928                           
   929                           ; 1 bytes @ 0x2E
   930   00002F                     	ds	2
   931   000031                     ___altoft@exp:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x30
   935   000031                     	ds	1
   936   000032                     ___altoft@sign:
   937                           	callstack 0
   938   000032                     ___ftadd@sign:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x31
   942   000032                     	ds	1
   943   000033                     ___ftadd@exp2:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x32
   947   000033                     	ds	1
   948   000034                     ___ftadd@exp1:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x33
   952   000034                     	ds	1
   953   000035                     ?___ftsub:
   954                           	callstack 0
   955   000035                     ?_floor:
   956                           	callstack 0
   957   000035                     ?_eval_poly:
   958                           	callstack 0
   959   000035                     ___ftsub@f1:
   960                           	callstack 0
   961   000035                     eval_poly@x:
   962                           	callstack 0
   963   000035                     floor@x:
   964                           	callstack 0
   965                           
   966                           ; 3 bytes @ 0x34
   967   000035                     	ds	3
   968   000038                     eval_poly@d:
   969                           	callstack 0
   970   000038                     ___ftsub@f2:
   971                           	callstack 0
   972   000038                     floor@i:
   973                           	callstack 0
   974                           
   975                           ; 3 bytes @ 0x37
   976   000038                     	ds	1
   977   000039                     eval_poly@n:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x38
   981   000039                     	ds	2
   982   00003B                     ??_eval_poly:
   983   00003B                     floor@expon:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x3A
   987   00003B                     	ds	1
   988   00003C                     eval_poly@res:
   989                           	callstack 0
   990                           
   991                           ; 3 bytes @ 0x3B
   992   00003C                     	ds	3
   993   00003F                     ?_log:
   994                           	callstack 0
   995   00003F                     ?_ldexp:
   996                           	callstack 0
   997   00003F                     ldexp@value:
   998                           	callstack 0
   999   00003F                     log@x:
  1000                           	callstack 0
  1001                           
  1002                           ; 3 bytes @ 0x3E
  1003   00003F                     	ds	3
  1004   000042                     ldexp@newexp:
  1005                           	callstack 0
  1006   000042                     log@exponent:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x41
  1010   000042                     	ds	2
  1011   000044                     
  1012                           ; 1 bytes @ 0x43
  1013 ;;
  1014 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1015 ;;
  1016 ;; *************** function _main *****************
  1017 ;; Defined at:
  1018 ;;		line 37 in file "Lab4.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0
  1033 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1034 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1035 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1036 ;;Total ram usage:        7 bytes
  1037 ;; Hardware stack levels required when called: 11
  1038 ;; This function calls:
  1039 ;;		_BorraLCD
  1040 ;;		_ColorRGB
  1041 ;;		_ConfiguraLCD
  1042 ;;		_DireccionaLCD
  1043 ;;		_EscribeLCD_c
  1044 ;;		_Imprimir_Resultado
  1045 ;;		_InicializaLCD
  1046 ;;		_LeerTeclado
  1047 ;;		_MensajeLCD_Var
  1048 ;;		___fttol
  1049 ;;		___lmul
  1050 ;;		___lwdiv
  1051 ;;		___lwtoft
  1052 ;;		___wmul
  1053 ;;		_factorial_function
  1054 ;;		_pow
  1055 ;; This function is called by:
  1056 ;;		Startup code after reset
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text0
  1061   0008B4                     __ptext0:
  1062                           	callstack 0
  1063   0008B4                     _main:
  1064                           	callstack 20
  1065                           
  1066                           ;Lab4.c: 38: ADCON1=15;
  1067                           
  1068                           ;incstack = 0
  1069   0008B4  0E0F               	movlw	15
  1070   0008B6  6EC1               	movwf	193,c	;volatile
  1071                           
  1072                           ;Lab4.c: 39: TRISD=0;
  1073   0008B8  0E00               	movlw	0
  1074   0008BA  6E95               	movwf	149,c	;volatile
  1075                           
  1076                           ;Lab4.c: 40: TRISB=0b11110000;
  1077   0008BC  0EF0               	movlw	240
  1078   0008BE  6E93               	movwf	147,c	;volatile
  1079                           
  1080                           ;Lab4.c: 41: TRISE=0;
  1081   0008C0  0E00               	movlw	0
  1082   0008C2  6E96               	movwf	150,c	;volatile
  1083                           
  1084                           ;Lab4.c: 42: TRISC=0;
  1085   0008C4  0E00               	movlw	0
  1086   0008C6  6E94               	movwf	148,c	;volatile
  1087                           
  1088                           ;Lab4.c: 43: RBPU=0;
  1089   0008C8  9EF1               	bcf	4081,7,c	;volatile
  1090                           
  1091                           ;Lab4.c: 44: ConfiguraLCD(4);
  1092   0008CA  0E04               	movlw	4
  1093   0008CC  EC91  F014         	call	_ConfiguraLCD
  1094                           
  1095                           ;Lab4.c: 45: InicializaLCD();
  1096   0008D0  EC86  F010         	call	_InicializaLCD	;wreg free
  1097                           
  1098                           ;Lab4.c: 47: T0CON=0b10000010;
  1099   0008D4  0E82               	movlw	130
  1100   0008D6  6ED5               	movwf	213,c	;volatile
  1101                           
  1102                           ;Lab4.c: 48: TMR0IF=0;
  1103   0008D8  94F2               	bcf	4082,2,c	;volatile
  1104                           
  1105                           ;Lab4.c: 49: TMR0=49911;
  1106   0008DA  0EC2               	movlw	194
  1107   0008DC  6ED7               	movwf	215,c	;volatile
  1108   0008DE  0EF7               	movlw	247
  1109   0008E0  6ED6               	movwf	214,c	;volatile
  1110                           
  1111                           ;Lab4.c: 50: TMR0IE=1;
  1112   0008E2  8AF2               	bsf	4082,5,c	;volatile
  1113                           
  1114                           ;Lab4.c: 51: GIE=1;
  1115   0008E4  8EF2               	bsf	4082,7,c	;volatile
  1116                           
  1117                           ;Lab4.c: 52: TMR0ON=1;
  1118   0008E6  8ED5               	bsf	4053,7,c	;volatile
  1119                           
  1120                           ;Lab4.c: 55: OSCCON = 0b11000100;
  1121   0008E8  0EC4               	movlw	196
  1122   0008EA  6ED3               	movwf	211,c	;volatile
  1123                           
  1124                           ;Lab4.c: 57: BorraLCD();
  1125   0008EC  ECC9  F014         	call	_BorraLCD	;wreg free
  1126                           
  1127                           ;Lab4.c: 58: if(TO == 1 && PD == 1){
  1128   0008F0  B6D0               	btfsc	4048,3,c	;volatile
  1129   0008F2  A4D0               	btfss	4048,2,c	;volatile
  1130   0008F4  D007               	goto	l181
  1131                           
  1132                           ;Lab4.c: 59: BorraLCD();
  1133   0008F6  ECC9  F014         	call	_BorraLCD	;wreg free
  1134                           
  1135                           ;Lab4.c: 60: MensajeLCD_Var("Energia");
  1136   0008FA  0EA6               	movlw	low STR_1
  1137   0008FC  6E13               	movwf	MensajeLCD_Var@a^0,c
  1138   0008FE  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  1139                           
  1140                           ;Lab4.c: 61: }else{
  1141   000902  D008               	goto	l4929
  1142   000904                     l181:
  1143                           
  1144                           ;Lab4.c: 62: if(POR==0){
  1145   000904  B2D0               	btfsc	4048,1,c	;volatile
  1146   000906  D006               	goto	l4929
  1147                           
  1148                           ;Lab4.c: 63: BorraLCD();
  1149   000908  ECC9  F014         	call	_BorraLCD	;wreg free
  1150                           
  1151                           ;Lab4.c: 64: MensajeLCD_Var("MCLR");
  1152   00090C  0EAE               	movlw	low STR_2
  1153   00090E  6E13               	movwf	MensajeLCD_Var@a^0,c
  1154   000910  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  1155   000914                     l4929:
  1156                           
  1157                           ;Lab4.c: 65: };Lab4.c: 66: };Lab4.c: 67: _delay((unsigned long)((2000)*(1000000/4000.0))
      +                          );
  1158   000914  0E03               	movlw	3
  1159   000916  0100               	movlb	0	; () banked
  1160   000918  6F9D               	movwf	(??_main+1)& (0+255),b
  1161   00091A  0E8A               	movlw	138
  1162   00091C  6F9C               	movwf	??_main& (0+255),b
  1163   00091E  0E55               	movlw	85
  1164   000920                     u7027:
  1165   000920  2EE8               	decfsz	wreg,f,c
  1166   000922  D7FE               	bra	u7027
  1167   000924  2F9C               	decfsz	??_main& (0+255),f,b
  1168   000926  D7FC               	bra	u7027
  1169   000928  2F9D               	decfsz	(??_main+1)& (0+255),f,b
  1170   00092A  D7FA               	bra	u7027
  1171   00092C  D000               	nop2	
  1172   00092E                     l4931:
  1173                           
  1174                           ;Lab4.c: 68: BorraLCD();
  1175   00092E  ECC9  F014         	call	_BorraLCD	;wreg free
  1176   000932                     l4933:
  1177                           
  1178                           ;Lab4.c: 70: LATB=0b00000000;
  1179   000932  0E00               	movlw	0
  1180   000934  6E8A               	movwf	138,c	;volatile
  1181                           
  1182                           ;Lab4.c: 71: verificador = 0;
  1183   000936  0E00               	movlw	0
  1184   000938  6E49               	movwf	(_verificador+1)^0,c
  1185   00093A  0E00               	movlw	0
  1186   00093C  6E48               	movwf	_verificador^0,c
  1187                           
  1188                           ;Lab4.c: 72: Tecla = LeerTeclado();
  1189   00093E  EC56  F00E         	call	_LeerTeclado	;wreg free
  1190   000942  0100               	movlb	0	; () banked
  1191   000944  6FB9               	movwf	_Tecla& (0+255),b
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;Lab4.c: 73: ColorRGB();
  1195   000946  EC5B  F011         	call	_ColorRGB	;wreg free
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;Lab4.c: 74: if(Tecla=='C'){
  1199   00094A  0E43               	movlw	67
  1200   00094C  19B9               	xorwf	_Tecla& (0+255),w,b
  1201   00094E  A4D8               	btfss	status,2,c
  1202   000950  D01B               	goto	l4947
  1203                           
  1204                           ; BSR set to: 0
  1205                           ;Lab4.c: 76: op = ' ';
  1206   000952  0E20               	movlw	32
  1207   000954  6FC0               	movwf	_op& (0+255),b
  1208                           
  1209                           ;Lab4.c: 77: n1c = ' ';
  1210   000956  0E20               	movlw	32
  1211   000958  6FBF               	movwf	_n1c& (0+255),b
  1212                           
  1213                           ;Lab4.c: 78: n2c = ' ';
  1214   00095A  0E20               	movlw	32
  1215   00095C  6FBE               	movwf	_n2c& (0+255),b
  1216                           
  1217                           ;Lab4.c: 79: n1 = 0;
  1218   00095E  0E00               	movlw	0
  1219   000960  6FB6               	movwf	(_n1+1)& (0+255),b
  1220   000962  0E00               	movlw	0
  1221   000964  6FB5               	movwf	_n1& (0+255),b
  1222                           
  1223                           ;Lab4.c: 80: n2 = 0;
  1224   000966  0E00               	movlw	0
  1225   000968  6FB4               	movwf	(_n2+1)& (0+255),b
  1226   00096A  0E00               	movlw	0
  1227   00096C  6FB3               	movwf	_n2& (0+255),b
  1228                           
  1229                           ;Lab4.c: 81: i = 0;
  1230   00096E  0E00               	movlw	0
  1231   000970  6FB2               	movwf	(_i+1)& (0+255),b
  1232   000972  0E00               	movlw	0
  1233   000974  6FB1               	movwf	_i& (0+255),b
  1234                           
  1235                           ;Lab4.c: 82: partdecl = 0;
  1236   000976  0E00               	movlw	0
  1237   000978  6FAB               	movwf	_partdecl& (0+255),b
  1238   00097A  0E00               	movlw	0
  1239   00097C  6FAC               	movwf	(_partdecl+1)& (0+255),b
  1240   00097E  0E00               	movlw	0
  1241   000980  6FAD               	movwf	(_partdecl+2)& (0+255),b
  1242   000982  0E00               	movlw	0
  1243   000984  6FAE               	movwf	(_partdecl+3)& (0+255),b
  1244   000986  D7D3               	goto	l4931
  1245   000988                     l4947:
  1246                           
  1247                           ; BSR set to: 0
  1248   000988  0E20               	movlw	32
  1249   00098A  19C0               	xorwf	_op& (0+255),w,b
  1250   00098C  A4D8               	btfss	status,2,c
  1251   00098E  D03E               	goto	l4983
  1252                           
  1253                           ; BSR set to: 0
  1254   000990  0E2B               	movlw	43
  1255   000992  19B9               	xorwf	_Tecla& (0+255),w,b
  1256   000994  B4D8               	btfsc	status,2,c
  1257   000996  D004               	goto	u6260
  1258                           
  1259                           ; BSR set to: 0
  1260   000998  0E5E               	movlw	94
  1261   00099A  19B9               	xorwf	_Tecla& (0+255),w,b
  1262   00099C  A4D8               	btfss	status,2,c
  1263   00099E  D036               	goto	l4983
  1264   0009A0                     u6260:
  1265                           
  1266                           ; BSR set to: 0
  1267   0009A0  0E20               	movlw	32
  1268   0009A2  19BF               	xorwf	_n1c& (0+255),w,b
  1269   0009A4  A4D8               	btfss	status,2,c
  1270   0009A6  D032               	goto	l4983
  1271                           
  1272                           ; BSR set to: 0
  1273   0009A8  0E20               	movlw	32
  1274   0009AA  19BE               	xorwf	_n2c& (0+255),w,b
  1275   0009AC  A4D8               	btfss	status,2,c
  1276   0009AE  D02E               	goto	l4983
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;Lab4.c: 85: potencia=~potencia;
  1280   0009B0  1FB8               	comf	_potencia& (0+255),f,b
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;Lab4.c: 86: if(potencia){
  1284   0009B2  51B8               	movf	_potencia& (0+255),w,b
  1285   0009B4  B4D8               	btfsc	status,2,c
  1286   0009B6  D01B               	goto	l4973
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;Lab4.c: 87: DireccionaLCD(0x80);
  1290   0009B8  0E80               	movlw	128
  1291   0009BA  ECA8  F014         	call	_DireccionaLCD
  1292                           
  1293                           ;Lab4.c: 88: MensajeLCD_Var("Modo Potencia");
  1294   0009BE  0E49               	movlw	low STR_3
  1295   0009C0  6E13               	movwf	MensajeLCD_Var@a^0,c
  1296   0009C2  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  1297                           
  1298                           ;Lab4.c: 89: DireccionaLCD(0xC0);
  1299   0009C6  0EC0               	movlw	192
  1300   0009C8  ECA8  F014         	call	_DireccionaLCD
  1301                           
  1302                           ;Lab4.c: 90: MensajeLCD_Var("Activado");
  1303   0009CC  0E69               	movlw	low (STR_11+4)
  1304   0009CE  6E13               	movwf	MensajeLCD_Var@a^0,c
  1305   0009D0  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  1306   0009D4                     l4967:
  1307                           
  1308                           ;Lab4.c: 91: _delay((unsigned long)((1000)*(1000000/4000.0)));
  1309   0009D4  0E02               	movlw	2
  1310   0009D6  0100               	movlb	0	; () banked
  1311   0009D8  6F9D               	movwf	(??_main+1)& (0+255),b
  1312   0009DA  0E45               	movlw	69
  1313   0009DC  6F9C               	movwf	??_main& (0+255),b
  1314   0009DE  0EA9               	movlw	169
  1315   0009E0                     u7037:
  1316   0009E0  2EE8               	decfsz	wreg,f,c
  1317   0009E2  D7FE               	bra	u7037
  1318   0009E4  2F9C               	decfsz	??_main& (0+255),f,b
  1319   0009E6  D7FC               	bra	u7037
  1320   0009E8  2F9D               	decfsz	(??_main+1)& (0+255),f,b
  1321   0009EA  D7FA               	bra	u7037
  1322   0009EC  D79F               	goto	L1
  1323   0009EE                     l4973:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;Lab4.c: 95: DireccionaLCD(0x80);
  1327   0009EE  0E80               	movlw	128
  1328   0009F0  ECA8  F014         	call	_DireccionaLCD
  1329                           
  1330                           ;Lab4.c: 96: MensajeLCD_Var("Modo Suma");
  1331   0009F4  0E89               	movlw	low STR_5
  1332   0009F6  6E13               	movwf	MensajeLCD_Var@a^0,c
  1333   0009F8  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  1334                           
  1335                           ;Lab4.c: 97: DireccionaLCD(0xC0);
  1336   0009FC  0EC0               	movlw	192
  1337   0009FE  ECA8  F014         	call	_DireccionaLCD
  1338                           
  1339                           ;Lab4.c: 98: MensajeLCD_Var("Activado");
  1340   000A02  0E69               	movlw	low (STR_11+4)
  1341   000A04  6E13               	movwf	MensajeLCD_Var@a^0,c
  1342   000A06  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  1343   000A0A  D7E4               	goto	l4967
  1344   000A0C                     l4983:
  1345                           
  1346                           ; BSR set to: 0
  1347   000A0C  0E20               	movlw	32
  1348   000A0E  19C0               	xorwf	_op& (0+255),w,b
  1349   000A10  A4D8               	btfss	status,2,c
  1350   000A12  D032               	goto	l5019
  1351                           
  1352                           ; BSR set to: 0
  1353   000A14  0E2D               	movlw	45
  1354   000A16  19B9               	xorwf	_Tecla& (0+255),w,b
  1355   000A18  B4D8               	btfsc	status,2,c
  1356   000A1A  D004               	goto	u6320
  1357                           
  1358                           ; BSR set to: 0
  1359   000A1C  0E21               	movlw	33
  1360   000A1E  19B9               	xorwf	_Tecla& (0+255),w,b
  1361   000A20  A4D8               	btfss	status,2,c
  1362   000A22  D02A               	goto	l5019
  1363   000A24                     u6320:
  1364                           
  1365                           ; BSR set to: 0
  1366   000A24  0E20               	movlw	32
  1367   000A26  19BF               	xorwf	_n1c& (0+255),w,b
  1368   000A28  A4D8               	btfss	status,2,c
  1369   000A2A  D026               	goto	l5019
  1370                           
  1371                           ; BSR set to: 0
  1372   000A2C  0E20               	movlw	32
  1373   000A2E  19BE               	xorwf	_n2c& (0+255),w,b
  1374   000A30  A4D8               	btfss	status,2,c
  1375   000A32  D022               	goto	l5019
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;Lab4.c: 104: factorial=~factorial;
  1379   000A34  1FB7               	comf	_factorial& (0+255),f,b
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;Lab4.c: 105: if(factorial){
  1383   000A36  51B7               	movf	_factorial& (0+255),w,b
  1384   000A38  B4D8               	btfsc	status,2,c
  1385   000A3A  D00F               	goto	l5009
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;Lab4.c: 106: DireccionaLCD(0x80);
  1389   000A3C  0E80               	movlw	128
  1390   000A3E  ECA8  F014         	call	_DireccionaLCD
  1391                           
  1392                           ;Lab4.c: 107: MensajeLCD_Var("Modo Factorial");
  1393   000A42  0E3A               	movlw	low STR_7
  1394   000A44  6E13               	movwf	MensajeLCD_Var@a^0,c
  1395   000A46  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  1396                           
  1397                           ;Lab4.c: 108: DireccionaLCD(0xC0);
  1398   000A4A  0EC0               	movlw	192
  1399   000A4C  ECA8  F014         	call	_DireccionaLCD
  1400                           
  1401                           ;Lab4.c: 109: MensajeLCD_Var("Activado");
  1402   000A50  0E69               	movlw	low (STR_11+4)
  1403   000A52  6E13               	movwf	MensajeLCD_Var@a^0,c
  1404   000A54  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  1405   000A58  D7BD               	goto	l4967
  1406   000A5A                     l5009:
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;Lab4.c: 114: DireccionaLCD(0x80);
  1410   000A5A  0E80               	movlw	128
  1411   000A5C  ECA8  F014         	call	_DireccionaLCD
  1412                           
  1413                           ;Lab4.c: 115: MensajeLCD_Var("Modo Resta");
  1414   000A60  0E7E               	movlw	low STR_9
  1415   000A62  6E13               	movwf	MensajeLCD_Var@a^0,c
  1416   000A64  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  1417                           
  1418                           ;Lab4.c: 116: DireccionaLCD(0xC0);
  1419   000A68  0EC0               	movlw	192
  1420   000A6A  ECA8  F014         	call	_DireccionaLCD
  1421                           
  1422                           ;Lab4.c: 117: MensajeLCD_Var("Activado");
  1423   000A6E  0E69               	movlw	low (STR_11+4)
  1424   000A70  6E13               	movwf	MensajeLCD_Var@a^0,c
  1425   000A72  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  1426   000A76  D7AE               	goto	l4967
  1427   000A78                     l5019:
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;Lab4.c: 123: if((n1c==' '|n2c==' '|op==' ') & !factorial){
  1431   000A78  0E20               	movlw	32
  1432   000A7A  19BF               	xorwf	_n1c& (0+255),w,b
  1433   000A7C  B4D8               	btfsc	status,2,c
  1434   000A7E  D008               	goto	u6380
  1435                           
  1436                           ; BSR set to: 0
  1437   000A80  0E20               	movlw	32
  1438   000A82  19BE               	xorwf	_n2c& (0+255),w,b
  1439   000A84  B4D8               	btfsc	status,2,c
  1440   000A86  D004               	goto	u6380
  1441                           
  1442                           ; BSR set to: 0
  1443   000A88  0E20               	movlw	32
  1444   000A8A  19C0               	xorwf	_op& (0+255),w,b
  1445   000A8C  A4D8               	btfss	status,2,c
  1446   000A8E  D097               	goto	l5095
  1447   000A90                     u6380:
  1448                           
  1449                           ; BSR set to: 0
  1450   000A90  51B7               	movf	_factorial& (0+255),w,b
  1451   000A92  A4D8               	btfss	status,2,c
  1452   000A94  D094               	goto	l5095
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;Lab4.c: 124: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='^') & n1
      +                          c != ' ' & n2c ==' '){
  1456   000A96  0E20               	movlw	32
  1457   000A98  19C0               	xorwf	_op& (0+255),w,b
  1458   000A9A  A4D8               	btfss	status,2,c
  1459   000A9C  D026               	goto	l5047
  1460                           
  1461                           ; BSR set to: 0
  1462   000A9E  0E2B               	movlw	43
  1463   000AA0  19B9               	xorwf	_Tecla& (0+255),w,b
  1464   000AA2  B4D8               	btfsc	status,2,c
  1465   000AA4  D010               	goto	u6450
  1466                           
  1467                           ; BSR set to: 0
  1468   000AA6  0E2D               	movlw	45
  1469   000AA8  19B9               	xorwf	_Tecla& (0+255),w,b
  1470   000AAA  B4D8               	btfsc	status,2,c
  1471   000AAC  D00C               	goto	u6450
  1472                           
  1473                           ; BSR set to: 0
  1474   000AAE  0E2F               	movlw	47
  1475   000AB0  19B9               	xorwf	_Tecla& (0+255),w,b
  1476   000AB2  B4D8               	btfsc	status,2,c
  1477   000AB4  D008               	goto	u6450
  1478                           
  1479                           ; BSR set to: 0
  1480   000AB6  0E78               	movlw	120
  1481   000AB8  19B9               	xorwf	_Tecla& (0+255),w,b
  1482   000ABA  B4D8               	btfsc	status,2,c
  1483   000ABC  D004               	goto	u6450
  1484                           
  1485                           ; BSR set to: 0
  1486   000ABE  0E5E               	movlw	94
  1487   000AC0  19B9               	xorwf	_Tecla& (0+255),w,b
  1488   000AC2  A4D8               	btfss	status,2,c
  1489   000AC4  D012               	goto	l5047
  1490   000AC6                     u6450:
  1491                           
  1492                           ; BSR set to: 0
  1493   000AC6  0E20               	movlw	32
  1494   000AC8  19BF               	xorwf	_n1c& (0+255),w,b
  1495   000ACA  B4D8               	btfsc	status,2,c
  1496   000ACC  D00E               	goto	l5047
  1497                           
  1498                           ; BSR set to: 0
  1499   000ACE  0E20               	movlw	32
  1500   000AD0  19BE               	xorwf	_n2c& (0+255),w,b
  1501   000AD2  A4D8               	btfss	status,2,c
  1502   000AD4  D00A               	goto	l5047
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;Lab4.c: 125: DireccionaLCD(0x81);
  1506   000AD6  0E81               	movlw	129
  1507   000AD8  ECA8  F014         	call	_DireccionaLCD
  1508                           
  1509                           ;Lab4.c: 126: EscribeLCD_c(Tecla);
  1510   000ADC  0100               	movlb	0	; () banked
  1511   000ADE  51B9               	movf	_Tecla& (0+255),w,b
  1512   000AE0  EC9D  F014         	call	_EscribeLCD_c
  1513   000AE4                     l5045:
  1514                           
  1515                           ;Lab4.c: 127: op = Tecla;
  1516   000AE4  C0B9  F0C0         	movff	_Tecla,_op
  1517                           
  1518                           ;Lab4.c: 128: }else if(n1c == ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='/'|Tecla!='x'|Tecla!=
      +                          '='|Tecla!='C'|Tecla!='^')){
  1519   000AE8  D21E               	goto	l5237
  1520   000AEA                     l5047:
  1521                           
  1522                           ; BSR set to: 0
  1523   000AEA  0E20               	movlw	32
  1524   000AEC  19BF               	xorwf	_n1c& (0+255),w,b
  1525   000AEE  A4D8               	btfss	status,2,c
  1526   000AF0  D02D               	goto	l5069
  1527                           
  1528                           ; BSR set to: 0
  1529   000AF2  0E2B               	movlw	43
  1530   000AF4  19B9               	xorwf	_Tecla& (0+255),w,b
  1531   000AF6  A4D8               	btfss	status,2,c
  1532   000AF8  D018               	goto	u6550
  1533                           
  1534                           ; BSR set to: 0
  1535   000AFA  0E2D               	movlw	45
  1536   000AFC  19B9               	xorwf	_Tecla& (0+255),w,b
  1537   000AFE  A4D8               	btfss	status,2,c
  1538   000B00  D014               	goto	u6550
  1539                           
  1540                           ; BSR set to: 0
  1541   000B02  0E2F               	movlw	47
  1542   000B04  19B9               	xorwf	_Tecla& (0+255),w,b
  1543   000B06  A4D8               	btfss	status,2,c
  1544   000B08  D010               	goto	u6550
  1545                           
  1546                           ; BSR set to: 0
  1547   000B0A  0E78               	movlw	120
  1548   000B0C  19B9               	xorwf	_Tecla& (0+255),w,b
  1549   000B0E  A4D8               	btfss	status,2,c
  1550   000B10  D00C               	goto	u6550
  1551                           
  1552                           ; BSR set to: 0
  1553   000B12  0E3D               	movlw	61
  1554   000B14  19B9               	xorwf	_Tecla& (0+255),w,b
  1555   000B16  A4D8               	btfss	status,2,c
  1556   000B18  D008               	goto	u6550
  1557                           
  1558                           ; BSR set to: 0
  1559   000B1A  0E43               	movlw	67
  1560   000B1C  19B9               	xorwf	_Tecla& (0+255),w,b
  1561   000B1E  A4D8               	btfss	status,2,c
  1562   000B20  D004               	goto	u6550
  1563                           
  1564                           ; BSR set to: 0
  1565   000B22  0E5E               	movlw	94
  1566   000B24  19B9               	xorwf	_Tecla& (0+255),w,b
  1567   000B26  B4D8               	btfsc	status,2,c
  1568   000B28  D011               	goto	l5069
  1569   000B2A                     u6550:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;Lab4.c: 129: DireccionaLCD(0x80);
  1573   000B2A  0E80               	movlw	128
  1574   000B2C  ECA8  F014         	call	_DireccionaLCD
  1575                           
  1576                           ;Lab4.c: 130: EscribeLCD_c(Tecla);
  1577   000B30  0100               	movlb	0	; () banked
  1578   000B32  51B9               	movf	_Tecla& (0+255),w,b
  1579   000B34  EC9D  F014         	call	_EscribeLCD_c
  1580   000B38                     l5065:
  1581                           
  1582                           ;Lab4.c: 131: n1c=Tecla;
  1583   000B38  C0B9  F0BF         	movff	_Tecla,_n1c
  1584                           
  1585                           ;Lab4.c: 132: n1 = Tecla-'0';
  1586   000B3C  0ED0               	movlw	208
  1587   000B3E  0100               	movlb	0	; () banked
  1588   000B40  25B9               	addwf	_Tecla& (0+255),w,b
  1589   000B42  6FB5               	movwf	_n1& (0+255),b
  1590   000B44  6BB6               	clrf	(_n1+1)& (0+255),b
  1591   000B46  0EFF               	movlw	255
  1592   000B48  23B6               	addwfc	(_n1+1)& (0+255),f,b
  1593                           
  1594                           ;Lab4.c: 133: }else if(n2c==' ' & op!=' ' & n1c != ' ' & (Tecla!='+'|Tecla!='-'|Tecla!='
      +                          /'|Tecla!='x'|Tecla!='='|Tecla!='C'|Tecla!='^')){
  1595   000B4A  D1ED               	goto	l5237
  1596   000B4C                     l5069:
  1597                           
  1598                           ; BSR set to: 0
  1599   000B4C  0E20               	movlw	32
  1600   000B4E  19BE               	xorwf	_n2c& (0+255),w,b
  1601   000B50  A4D8               	btfss	status,2,c
  1602   000B52  D1E9               	goto	l5237
  1603                           
  1604                           ; BSR set to: 0
  1605   000B54  0E20               	movlw	32
  1606   000B56  19C0               	xorwf	_op& (0+255),w,b
  1607   000B58  B4D8               	btfsc	status,2,c
  1608   000B5A  D1E5               	goto	l5237
  1609                           
  1610                           ; BSR set to: 0
  1611   000B5C  0E20               	movlw	32
  1612   000B5E  19BF               	xorwf	_n1c& (0+255),w,b
  1613   000B60  B4D8               	btfsc	status,2,c
  1614   000B62  D1E1               	goto	l5237
  1615                           
  1616                           ; BSR set to: 0
  1617   000B64  0E2B               	movlw	43
  1618   000B66  19B9               	xorwf	_Tecla& (0+255),w,b
  1619   000B68  A4D8               	btfss	status,2,c
  1620   000B6A  D018               	goto	u6650
  1621                           
  1622                           ; BSR set to: 0
  1623   000B6C  0E2D               	movlw	45
  1624   000B6E  19B9               	xorwf	_Tecla& (0+255),w,b
  1625   000B70  A4D8               	btfss	status,2,c
  1626   000B72  D014               	goto	u6650
  1627                           
  1628                           ; BSR set to: 0
  1629   000B74  0E2F               	movlw	47
  1630   000B76  19B9               	xorwf	_Tecla& (0+255),w,b
  1631   000B78  A4D8               	btfss	status,2,c
  1632   000B7A  D010               	goto	u6650
  1633                           
  1634                           ; BSR set to: 0
  1635   000B7C  0E78               	movlw	120
  1636   000B7E  19B9               	xorwf	_Tecla& (0+255),w,b
  1637   000B80  A4D8               	btfss	status,2,c
  1638   000B82  D00C               	goto	u6650
  1639                           
  1640                           ; BSR set to: 0
  1641   000B84  0E3D               	movlw	61
  1642   000B86  19B9               	xorwf	_Tecla& (0+255),w,b
  1643   000B88  A4D8               	btfss	status,2,c
  1644   000B8A  D008               	goto	u6650
  1645                           
  1646                           ; BSR set to: 0
  1647   000B8C  0E43               	movlw	67
  1648   000B8E  19B9               	xorwf	_Tecla& (0+255),w,b
  1649   000B90  A4D8               	btfss	status,2,c
  1650   000B92  D004               	goto	u6650
  1651                           
  1652                           ; BSR set to: 0
  1653   000B94  0E5E               	movlw	94
  1654   000B96  19B9               	xorwf	_Tecla& (0+255),w,b
  1655   000B98  B4D8               	btfsc	status,2,c
  1656   000B9A  D1C5               	goto	l5237
  1657   000B9C                     u6650:
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;Lab4.c: 134: DireccionaLCD(0x82);
  1661   000B9C  0E82               	movlw	130
  1662   000B9E  ECA8  F014         	call	_DireccionaLCD
  1663                           
  1664                           ;Lab4.c: 135: EscribeLCD_c(Tecla);
  1665   000BA2  0100               	movlb	0	; () banked
  1666   000BA4  51B9               	movf	_Tecla& (0+255),w,b
  1667   000BA6  EC9D  F014         	call	_EscribeLCD_c
  1668                           
  1669                           ;Lab4.c: 136: n2c=Tecla;
  1670   000BAA  C0B9  F0BE         	movff	_Tecla,_n2c
  1671                           
  1672                           ;Lab4.c: 137: n2 = Tecla-'0';
  1673   000BAE  0ED0               	movlw	208
  1674   000BB0  0100               	movlb	0	; () banked
  1675   000BB2  25B9               	addwf	_Tecla& (0+255),w,b
  1676   000BB4  6FB3               	movwf	_n2& (0+255),b
  1677   000BB6  6BB4               	clrf	(_n2+1)& (0+255),b
  1678   000BB8  0EFF               	movlw	255
  1679   000BBA  23B4               	addwfc	(_n2+1)& (0+255),f,b
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;Lab4.c: 138: };Lab4.c: 139: }else if ((n1c==' '|op==' ') & factorial){
  1683   000BBC  D1B4               	goto	l5237
  1684   000BBE                     l5095:
  1685                           
  1686                           ; BSR set to: 0
  1687   000BBE  0E01               	movlw	1
  1688   000BC0  6FA1               	movwf	_main$163& (0+255),b
  1689                           
  1690                           ; BSR set to: 0
  1691   000BC2  0E20               	movlw	32
  1692   000BC4  19BF               	xorwf	_n1c& (0+255),w,b
  1693   000BC6  B4D8               	btfsc	status,2,c
  1694   000BC8  D006               	goto	l5103
  1695                           
  1696                           ; BSR set to: 0
  1697   000BCA  0E20               	movlw	32
  1698   000BCC  19C0               	xorwf	_op& (0+255),w,b
  1699   000BCE  B4D8               	btfsc	status,2,c
  1700   000BD0  D002               	goto	l5103
  1701                           
  1702                           ; BSR set to: 0
  1703   000BD2  0E00               	movlw	0
  1704   000BD4  6FA1               	movwf	_main$163& (0+255),b
  1705   000BD6                     l5103:
  1706                           
  1707                           ; BSR set to: 0
  1708   000BD6  51A1               	movf	_main$163& (0+255),w,b
  1709   000BD8  15B7               	andwf	_factorial& (0+255),w,b
  1710   000BDA  0900               	iorlw	0
  1711   000BDC  B4D8               	btfsc	status,2,c
  1712   000BDE  D058               	goto	l5151
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;Lab4.c: 140: if(op==' ' & (Tecla=='+'|Tecla=='-'|Tecla=='/'|Tecla=='x'|Tecla=='^'|Tecla
      +                          =='!') & n1c != ' ' & n2c ==' '){
  1716   000BE0  0E20               	movlw	32
  1717   000BE2  19C0               	xorwf	_op& (0+255),w,b
  1718   000BE4  A4D8               	btfss	status,2,c
  1719   000BE6  D028               	goto	l5127
  1720                           
  1721                           ; BSR set to: 0
  1722   000BE8  0E2B               	movlw	43
  1723   000BEA  19B9               	xorwf	_Tecla& (0+255),w,b
  1724   000BEC  B4D8               	btfsc	status,2,c
  1725   000BEE  D014               	goto	u6750
  1726                           
  1727                           ; BSR set to: 0
  1728   000BF0  0E2D               	movlw	45
  1729   000BF2  19B9               	xorwf	_Tecla& (0+255),w,b
  1730   000BF4  B4D8               	btfsc	status,2,c
  1731   000BF6  D010               	goto	u6750
  1732                           
  1733                           ; BSR set to: 0
  1734   000BF8  0E2F               	movlw	47
  1735   000BFA  19B9               	xorwf	_Tecla& (0+255),w,b
  1736   000BFC  B4D8               	btfsc	status,2,c
  1737   000BFE  D00C               	goto	u6750
  1738                           
  1739                           ; BSR set to: 0
  1740   000C00  0E78               	movlw	120
  1741   000C02  19B9               	xorwf	_Tecla& (0+255),w,b
  1742   000C04  B4D8               	btfsc	status,2,c
  1743   000C06  D008               	goto	u6750
  1744                           
  1745                           ; BSR set to: 0
  1746   000C08  0E5E               	movlw	94
  1747   000C0A  19B9               	xorwf	_Tecla& (0+255),w,b
  1748   000C0C  B4D8               	btfsc	status,2,c
  1749   000C0E  D004               	goto	u6750
  1750                           
  1751                           ; BSR set to: 0
  1752   000C10  0E21               	movlw	33
  1753   000C12  19B9               	xorwf	_Tecla& (0+255),w,b
  1754   000C14  A4D8               	btfss	status,2,c
  1755   000C16  D010               	goto	l5127
  1756   000C18                     u6750:
  1757                           
  1758                           ; BSR set to: 0
  1759   000C18  0E20               	movlw	32
  1760   000C1A  19BF               	xorwf	_n1c& (0+255),w,b
  1761   000C1C  B4D8               	btfsc	status,2,c
  1762   000C1E  D00C               	goto	l5127
  1763                           
  1764                           ; BSR set to: 0
  1765   000C20  0E20               	movlw	32
  1766   000C22  19BE               	xorwf	_n2c& (0+255),w,b
  1767   000C24  A4D8               	btfss	status,2,c
  1768   000C26  D008               	goto	l5127
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;Lab4.c: 141: DireccionaLCD(0x81);
  1772   000C28  0E81               	movlw	129
  1773   000C2A  ECA8  F014         	call	_DireccionaLCD
  1774                           
  1775                           ;Lab4.c: 142: EscribeLCD_c(Tecla);
  1776   000C2E  0100               	movlb	0	; () banked
  1777   000C30  51B9               	movf	_Tecla& (0+255),w,b
  1778   000C32  EC9D  F014         	call	_EscribeLCD_c
  1779   000C36  D756               	goto	l5045
  1780   000C38                     l5127:
  1781                           
  1782                           ; BSR set to: 0
  1783   000C38  0E20               	movlw	32
  1784   000C3A  19BF               	xorwf	_n1c& (0+255),w,b
  1785   000C3C  A4D8               	btfss	status,2,c
  1786   000C3E  D173               	goto	l5237
  1787                           
  1788                           ; BSR set to: 0
  1789   000C40  0E2B               	movlw	43
  1790   000C42  19B9               	xorwf	_Tecla& (0+255),w,b
  1791   000C44  A4D8               	btfss	status,2,c
  1792   000C46  D01C               	goto	u6860
  1793                           
  1794                           ; BSR set to: 0
  1795   000C48  0E2D               	movlw	45
  1796   000C4A  19B9               	xorwf	_Tecla& (0+255),w,b
  1797   000C4C  A4D8               	btfss	status,2,c
  1798   000C4E  D018               	goto	u6860
  1799                           
  1800                           ; BSR set to: 0
  1801   000C50  0E2F               	movlw	47
  1802   000C52  19B9               	xorwf	_Tecla& (0+255),w,b
  1803   000C54  A4D8               	btfss	status,2,c
  1804   000C56  D014               	goto	u6860
  1805                           
  1806                           ; BSR set to: 0
  1807   000C58  0E78               	movlw	120
  1808   000C5A  19B9               	xorwf	_Tecla& (0+255),w,b
  1809   000C5C  A4D8               	btfss	status,2,c
  1810   000C5E  D010               	goto	u6860
  1811                           
  1812                           ; BSR set to: 0
  1813   000C60  0E3D               	movlw	61
  1814   000C62  19B9               	xorwf	_Tecla& (0+255),w,b
  1815   000C64  A4D8               	btfss	status,2,c
  1816   000C66  D00C               	goto	u6860
  1817                           
  1818                           ; BSR set to: 0
  1819   000C68  0E43               	movlw	67
  1820   000C6A  19B9               	xorwf	_Tecla& (0+255),w,b
  1821   000C6C  A4D8               	btfss	status,2,c
  1822   000C6E  D008               	goto	u6860
  1823                           
  1824                           ; BSR set to: 0
  1825   000C70  0E5E               	movlw	94
  1826   000C72  19B9               	xorwf	_Tecla& (0+255),w,b
  1827   000C74  A4D8               	btfss	status,2,c
  1828   000C76  D004               	goto	u6860
  1829                           
  1830                           ; BSR set to: 0
  1831   000C78  0E21               	movlw	33
  1832   000C7A  19B9               	xorwf	_Tecla& (0+255),w,b
  1833   000C7C  B4D8               	btfsc	status,2,c
  1834   000C7E  D153               	goto	l5237
  1835   000C80                     u6860:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;Lab4.c: 145: DireccionaLCD(0x80);
  1839   000C80  0E80               	movlw	128
  1840   000C82  ECA8  F014         	call	_DireccionaLCD
  1841                           
  1842                           ;Lab4.c: 146: EscribeLCD_c(Tecla);
  1843   000C86  0100               	movlb	0	; () banked
  1844   000C88  51B9               	movf	_Tecla& (0+255),w,b
  1845   000C8A  EC9D  F014         	call	_EscribeLCD_c
  1846   000C8E  D754               	goto	l5065
  1847   000C90                     l5151:
  1848                           
  1849                           ; BSR set to: 0
  1850   000C90  0E3D               	movlw	61
  1851   000C92  19B9               	xorwf	_Tecla& (0+255),w,b
  1852   000C94  A4D8               	btfss	status,2,c
  1853   000C96  D0FD               	goto	l5213
  1854                           
  1855                           ; BSR set to: 0
  1856   000C98  0E20               	movlw	32
  1857   000C9A  19BE               	xorwf	_n2c& (0+255),w,b
  1858   000C9C  B4D8               	btfsc	status,2,c
  1859   000C9E  D0F9               	goto	l5213
  1860                           
  1861                           ; BSR set to: 0
  1862   000CA0  0E20               	movlw	32
  1863   000CA2  19C0               	xorwf	_op& (0+255),w,b
  1864   000CA4  B4D8               	btfsc	status,2,c
  1865   000CA6  D0F5               	goto	l5213
  1866                           
  1867                           ; BSR set to: 0
  1868   000CA8  0E20               	movlw	32
  1869   000CAA  19BF               	xorwf	_n1c& (0+255),w,b
  1870   000CAC  B4D8               	btfsc	status,2,c
  1871   000CAE  D0F1               	goto	l5213
  1872                           
  1873                           ; BSR set to: 0
  1874   000CB0  51B7               	movf	_factorial& (0+255),w,b
  1875   000CB2  A4D8               	btfss	status,2,c
  1876   000CB4  D0EE               	goto	l5213
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;Lab4.c: 151: DireccionaLCD(0x83);
  1880   000CB6  0E83               	movlw	131
  1881   000CB8  ECA8  F014         	call	_DireccionaLCD
  1882                           
  1883                           ;Lab4.c: 152: EscribeLCD_c('=');
  1884   000CBC  0E3D               	movlw	61
  1885   000CBE  EC9D  F014         	call	_EscribeLCD_c
  1886                           
  1887                           ;Lab4.c: 153: switch(op){
  1888   000CC2  D0C7               	goto	l5207
  1889   000CC4                     l5163:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;Lab4.c: 155: r = n1 + n2;
  1893   000CC4  51B3               	movf	_n2& (0+255),w,b
  1894   000CC6  25B5               	addwf	_n1& (0+255),w,b
  1895   000CC8  6F9C               	movwf	??_main& (0+255),b
  1896   000CCA  51B4               	movf	(_n2+1)& (0+255),w,b
  1897   000CCC  21B6               	addwfc	(_n1+1)& (0+255),w,b
  1898   000CCE  6F9D               	movwf	(??_main+1)& (0+255),b
  1899   000CD0  C09C  F0A7         	movff	??_main,_r
  1900   000CD4  C09D  F0A8         	movff	??_main+1,_r+1
  1901   000CD8  6BA9               	clrf	(_r+2)& (0+255),b
  1902   000CDA  6BAA               	clrf	(_r+3)& (0+255),b
  1903   000CDC                     l5165:
  1904                           
  1905                           ;Lab4.c: 156: partdecl = r*100;
  1906   000CDC  C0A7  F00E         	movff	_r,___lmul@multiplier
  1907   000CE0  C0A8  F00F         	movff	_r+1,___lmul@multiplier+1
  1908   000CE4  C0A9  F010         	movff	_r+2,___lmul@multiplier+2
  1909   000CE8  C0AA  F011         	movff	_r+3,___lmul@multiplier+3
  1910   000CEC  0E64               	movlw	100
  1911   000CEE  6E12               	movwf	___lmul@multiplicand^0,c
  1912   000CF0  0E00               	movlw	0
  1913   000CF2  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  1914   000CF4  0E00               	movlw	0
  1915   000CF6  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  1916   000CF8  0E00               	movlw	0
  1917   000CFA  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  1918   000CFC  EC93  F012         	call	___lmul	;wreg free
  1919   000D00  C00E  F0AB         	movff	?___lmul,_partdecl
  1920   000D04  C00F  F0AC         	movff	?___lmul+1,_partdecl+1
  1921   000D08  C010  F0AD         	movff	?___lmul+2,_partdecl+2
  1922   000D0C  C011  F0AE         	movff	?___lmul+3,_partdecl+3
  1923                           
  1924                           ;Lab4.c: 157: break;
  1925   000D10  D0B2               	goto	l5209
  1926   000D12                     l5167:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;Lab4.c: 159: r = n1 - n2;
  1930   000D12  51B3               	movf	_n2& (0+255),w,b
  1931   000D14  5DB5               	subwf	_n1& (0+255),w,b
  1932   000D16  6F9C               	movwf	??_main& (0+255),b
  1933   000D18  51B4               	movf	(_n2+1)& (0+255),w,b
  1934   000D1A  59B6               	subwfb	(_n1+1)& (0+255),w,b
  1935   000D1C  D7D8               	goto	L2
  1936   000D1E                     l5171:
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;Lab4.c: 163: r = n1*n2;
  1940   000D1E  C0B5  F00E         	movff	_n1,___wmul@multiplier
  1941   000D22  C0B6  F00F         	movff	_n1+1,___wmul@multiplier+1
  1942   000D26  C0B3  F010         	movff	_n2,___wmul@multiplicand
  1943   000D2A  C0B4  F011         	movff	_n2+1,___wmul@multiplicand+1
  1944   000D2E  EC5A  F014         	call	___wmul	;wreg free
  1945   000D32  C00E  F0A7         	movff	?___wmul,_r
  1946   000D36  C00F  F0A8         	movff	?___wmul+1,_r+1
  1947   000D3A  0100               	movlb	0	; () banked
  1948   000D3C  D7CD               	goto	L3
  1949   000D3E                     l5175:
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;Lab4.c: 167: if(n2!=0){
  1953   000D3E  51B3               	movf	_n2& (0+255),w,b
  1954   000D40  11B4               	iorwf	(_n2+1)& (0+255),w,b
  1955   000D42  B4D8               	btfsc	status,2,c
  1956   000D44  D031               	goto	l5183
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;Lab4.c: 168: if(n1!=0){
  1960   000D46  51B5               	movf	_n1& (0+255),w,b
  1961   000D48  11B6               	iorwf	(_n1+1)& (0+255),w,b
  1962   000D4A  B4D8               	btfsc	status,2,c
  1963   000D4C  D094               	goto	l5209
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;Lab4.c: 169: r = n1/n2;
  1967   000D4E  C0B5  F014         	movff	_n1,___lwdiv@dividend
  1968   000D52  C0B6  F015         	movff	_n1+1,___lwdiv@dividend+1
  1969   000D56  C0B3  F016         	movff	_n2,___lwdiv@divisor
  1970   000D5A  C0B4  F017         	movff	_n2+1,___lwdiv@divisor+1
  1971   000D5E  EC14  F013         	call	___lwdiv	;wreg free
  1972   000D62  C014  F0A7         	movff	?___lwdiv,_r
  1973   000D66  C015  F0A8         	movff	?___lwdiv+1,_r+1
  1974   000D6A  0100               	movlb	0	; () banked
  1975   000D6C  6BA9               	clrf	(_r+2)& (0+255),b
  1976   000D6E  6BAA               	clrf	(_r+3)& (0+255),b
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;Lab4.c: 170: partdecl = (n1*100)/n2;
  1980   000D70  C0B5  F00E         	movff	_n1,___wmul@multiplier
  1981   000D74  C0B6  F00F         	movff	_n1+1,___wmul@multiplier+1
  1982   000D78  0E00               	movlw	0
  1983   000D7A  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  1984   000D7C  0E64               	movlw	100
  1985   000D7E  6E10               	movwf	___wmul@multiplicand^0,c
  1986   000D80  EC5A  F014         	call	___wmul	;wreg free
  1987   000D84  C00E  F014         	movff	?___wmul,___lwdiv@dividend
  1988   000D88  C00F  F015         	movff	?___wmul+1,___lwdiv@dividend+1
  1989   000D8C  C0B3  F016         	movff	_n2,___lwdiv@divisor
  1990   000D90  C0B4  F017         	movff	_n2+1,___lwdiv@divisor+1
  1991   000D94  EC14  F013         	call	___lwdiv	;wreg free
  1992   000D98  C014  F0AB         	movff	?___lwdiv,_partdecl
  1993   000D9C  C015  F0AC         	movff	?___lwdiv+1,_partdecl+1
  1994   000DA0  0100               	movlb	0	; () banked
  1995   000DA2  6BAD               	clrf	(_partdecl+2)& (0+255),b
  1996   000DA4  6BAE               	clrf	(_partdecl+3)& (0+255),b
  1997   000DA6  D067               	goto	l5209
  1998   000DA8                     l5183:
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;Lab4.c: 173: if(n1 != 0 & n2 == 0) r = 1000;
  2002   000DA8  51B5               	movf	_n1& (0+255),w,b
  2003   000DAA  11B6               	iorwf	(_n1+1)& (0+255),w,b
  2004   000DAC  B4D8               	btfsc	status,2,c
  2005   000DAE  D006               	goto	l5189
  2006                           
  2007                           ; BSR set to: 0
  2008   000DB0  51B3               	movf	_n2& (0+255),w,b
  2009   000DB2  11B4               	iorwf	(_n2+1)& (0+255),w,b
  2010   000DB4  A4D8               	btfss	status,2,c
  2011   000DB6  D002               	goto	l5189
  2012                           
  2013                           ; BSR set to: 0
  2014   000DB8  0EE8               	movlw	232
  2015   000DBA  D009               	goto	L4
  2016   000DBC                     l5189:
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;Lab4.c: 174: else if(n1 == 0 & n2 == 0) r = 1001;
  2020   000DBC  51B5               	movf	_n1& (0+255),w,b
  2021   000DBE  11B6               	iorwf	(_n1+1)& (0+255),w,b
  2022   000DC0  A4D8               	btfss	status,2,c
  2023   000DC2  D78C               	goto	l5165
  2024                           
  2025                           ; BSR set to: 0
  2026   000DC4  51B3               	movf	_n2& (0+255),w,b
  2027   000DC6  11B4               	iorwf	(_n2+1)& (0+255),w,b
  2028   000DC8  A4D8               	btfss	status,2,c
  2029   000DCA  D788               	goto	l5165
  2030                           
  2031                           ; BSR set to: 0
  2032   000DCC  0EE9               	movlw	233
  2033   000DCE                     L4:
  2034   000DCE  6FA7               	movwf	_r& (0+255),b
  2035   000DD0  0E03               	movlw	3
  2036   000DD2  6FA8               	movwf	(_r+1)& (0+255),b
  2037   000DD4  0E00               	movlw	0
  2038   000DD6  6FA9               	movwf	(_r+2)& (0+255),b
  2039   000DD8  0E00               	movlw	0
  2040   000DDA  6FAA               	movwf	(_r+3)& (0+255),b
  2041   000DDC  D77F               	goto	l5165
  2042   000DDE                     l5197:
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;Lab4.c: 179: r=(long)pow(n1,n2);
  2046   000DDE  C0B3  F016         	movff	_n2,___lwtoft@c
  2047   000DE2  C0B4  F017         	movff	_n2+1,___lwtoft@c+1
  2048   000DE6  EC6D  F014         	call	___lwtoft	;wreg free
  2049   000DEA  C016  F06E         	movff	?___lwtoft,pow@y
  2050   000DEE  C017  F06F         	movff	?___lwtoft+1,pow@y+1
  2051   000DF2  C018  F070         	movff	?___lwtoft+2,pow@y+2
  2052   000DF6  C0B5  F016         	movff	_n1,___lwtoft@c
  2053   000DFA  C0B6  F017         	movff	_n1+1,___lwtoft@c+1
  2054   000DFE  EC6D  F014         	call	___lwtoft	;wreg free
  2055   000E02  C016  F06B         	movff	?___lwtoft,pow@x
  2056   000E06  C017  F06C         	movff	?___lwtoft+1,pow@x+1
  2057   000E0A  C018  F06D         	movff	?___lwtoft+2,pow@x+2
  2058   000E0E  EC4C  F00B         	call	_pow	;wreg free
  2059   000E12  C06B  F09E         	movff	?_pow,_main$905
  2060   000E16  C06C  F09F         	movff	?_pow+1,_main$905+1
  2061   000E1A  C06D  F0A0         	movff	?_pow+2,_main$905+2
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;Lab4.c: 179: r=(long)pow(n1,n2);
  2065   000E1E  C09E  F01A         	movff	_main$905,___fttol@f1
  2066   000E22  C09F  F01B         	movff	_main$905+1,___fttol@f1+1
  2067   000E26  C0A0  F01C         	movff	_main$905+2,___fttol@f1+2
  2068   000E2A  ECED  F00D         	call	___fttol	;wreg free
  2069   000E2E  C01A  F0A7         	movff	?___fttol,_r
  2070   000E32  C01B  F0A8         	movff	?___fttol+1,_r+1
  2071   000E36  C01C  F0A9         	movff	?___fttol+2,_r+2
  2072   000E3A  C01D  F0AA         	movff	?___fttol+3,_r+3
  2073   000E3E  D74E               	goto	l5165
  2074   000E40                     l5203:
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;Lab4.c: 183: r = 0;
  2078   000E40  0E00               	movlw	0
  2079   000E42  6FA7               	movwf	_r& (0+255),b
  2080   000E44  0E00               	movlw	0
  2081   000E46  6FA8               	movwf	(_r+1)& (0+255),b
  2082   000E48  0E00               	movlw	0
  2083   000E4A  6FA9               	movwf	(_r+2)& (0+255),b
  2084   000E4C  0E00               	movlw	0
  2085   000E4E  6FAA               	movwf	(_r+3)& (0+255),b
  2086                           
  2087                           ;Lab4.c: 184: break;
  2088   000E50  D012               	goto	l5209
  2089   000E52                     l5207:
  2090   000E52  0100               	movlb	0	; () banked
  2091   000E54  51C0               	movf	_op& (0+255),w,b
  2092                           
  2093                           ; Switch size 1, requested type "simple"
  2094                           ; Number of cases is 5, Range of values is 43 to 120
  2095                           ; switch strategies available:
  2096                           ; Name         Instructions Cycles
  2097                           ; simple_byte           16     9 (average)
  2098                           ;	Chosen strategy is simple_byte
  2099   000E56  0A2B               	xorlw	43	; case 43
  2100   000E58  B4D8               	btfsc	status,2,c
  2101   000E5A  D734               	goto	l5163
  2102   000E5C  0A06               	xorlw	6	; case 45
  2103   000E5E  B4D8               	btfsc	status,2,c
  2104   000E60  D758               	goto	l5167
  2105   000E62  0A02               	xorlw	2	; case 47
  2106   000E64  B4D8               	btfsc	status,2,c
  2107   000E66  D76B               	goto	l5175
  2108   000E68  0A71               	xorlw	113	; case 94
  2109   000E6A  B4D8               	btfsc	status,2,c
  2110   000E6C  D7B8               	goto	l5197
  2111   000E6E  0A26               	xorlw	38	; case 120
  2112   000E70  B4D8               	btfsc	status,2,c
  2113   000E72  D755               	goto	l5171
  2114   000E74  D7E5               	goto	l5203
  2115   000E76                     l5209:
  2116                           
  2117                           ;Lab4.c: 186: DireccionaLCD(0x84);
  2118   000E76  0E84               	movlw	132
  2119   000E78  ECA8  F014         	call	_DireccionaLCD
  2120   000E7C                     l5211:
  2121                           
  2122                           ;Lab4.c: 187: Imprimir_Resultado(r);
  2123   000E7C  C0A7  F08A         	movff	_r,Imprimir_Resultado@r
  2124   000E80  C0A8  F08B         	movff	_r+1,Imprimir_Resultado@r+1
  2125   000E84  C0A9  F08C         	movff	_r+2,Imprimir_Resultado@r+2
  2126   000E88  C0AA  F08D         	movff	_r+3,Imprimir_Resultado@r+3
  2127   000E8C  EC9D  F007         	call	_Imprimir_Resultado	;wreg free
  2128                           
  2129                           ;Lab4.c: 188: }else if((Tecla=='=' & op=='!' & n1c != ' ') & factorial) {
  2130   000E90  D04A               	goto	l5237
  2131   000E92                     l5213:
  2132                           
  2133                           ; BSR set to: 0
  2134   000E92  0E00               	movlw	0
  2135   000E94  6FA2               	movwf	_main$164& (0+255),b
  2136                           
  2137                           ; BSR set to: 0
  2138   000E96  0E3D               	movlw	61
  2139   000E98  19B9               	xorwf	_Tecla& (0+255),w,b
  2140   000E9A  A4D8               	btfss	status,2,c
  2141   000E9C  D00A               	goto	l5223
  2142                           
  2143                           ; BSR set to: 0
  2144   000E9E  0E21               	movlw	33
  2145   000EA0  19C0               	xorwf	_op& (0+255),w,b
  2146   000EA2  A4D8               	btfss	status,2,c
  2147   000EA4  D006               	goto	l5223
  2148                           
  2149                           ; BSR set to: 0
  2150   000EA6  0E20               	movlw	32
  2151   000EA8  19BF               	xorwf	_n1c& (0+255),w,b
  2152   000EAA  B4D8               	btfsc	status,2,c
  2153   000EAC  D002               	goto	l5223
  2154                           
  2155                           ; BSR set to: 0
  2156   000EAE  0E01               	movlw	1
  2157   000EB0  6FA2               	movwf	_main$164& (0+255),b
  2158   000EB2                     l5223:
  2159                           
  2160                           ; BSR set to: 0
  2161   000EB2  51A2               	movf	_main$164& (0+255),w,b
  2162   000EB4  15B7               	andwf	_factorial& (0+255),w,b
  2163   000EB6  0900               	iorlw	0
  2164   000EB8  B4D8               	btfsc	status,2,c
  2165   000EBA  D032               	goto	l5235
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;Lab4.c: 189: DireccionaLCD(0x82);
  2169   000EBC  0E82               	movlw	130
  2170   000EBE  ECA8  F014         	call	_DireccionaLCD
  2171                           
  2172                           ;Lab4.c: 190: EscribeLCD_c('=');
  2173   000EC2  0E3D               	movlw	61
  2174   000EC4  EC9D  F014         	call	_EscribeLCD_c
  2175                           
  2176                           ;Lab4.c: 191: r=factorial_function(n1);
  2177   000EC8  C0B5  F014         	movff	_n1,factorial_function@a
  2178   000ECC  C0B6  F015         	movff	_n1+1,factorial_function@a+1
  2179   000ED0  EC3C  F012         	call	_factorial_function	;wreg free
  2180   000ED4  C014  F0A7         	movff	?_factorial_function,_r
  2181   000ED8  C015  F0A8         	movff	?_factorial_function+1,_r+1
  2182   000EDC  C016  F0A9         	movff	?_factorial_function+2,_r+2
  2183   000EE0  C017  F0AA         	movff	?_factorial_function+3,_r+3
  2184                           
  2185                           ;Lab4.c: 192: partdecl = r*100;
  2186   000EE4  C0A7  F00E         	movff	_r,___lmul@multiplier
  2187   000EE8  C0A8  F00F         	movff	_r+1,___lmul@multiplier+1
  2188   000EEC  C0A9  F010         	movff	_r+2,___lmul@multiplier+2
  2189   000EF0  C0AA  F011         	movff	_r+3,___lmul@multiplier+3
  2190   000EF4  0E64               	movlw	100
  2191   000EF6  6E12               	movwf	___lmul@multiplicand^0,c
  2192   000EF8  0E00               	movlw	0
  2193   000EFA  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2194   000EFC  0E00               	movlw	0
  2195   000EFE  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2196   000F00  0E00               	movlw	0
  2197   000F02  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2198   000F04  EC93  F012         	call	___lmul	;wreg free
  2199   000F08  C00E  F0AB         	movff	?___lmul,_partdecl
  2200   000F0C  C00F  F0AC         	movff	?___lmul+1,_partdecl+1
  2201   000F10  C010  F0AD         	movff	?___lmul+2,_partdecl+2
  2202   000F14  C011  F0AE         	movff	?___lmul+3,_partdecl+3
  2203                           
  2204                           ;Lab4.c: 193: DireccionaLCD(0x83);
  2205   000F18  0E83               	movlw	131
  2206   000F1A  ECA8  F014         	call	_DireccionaLCD
  2207   000F1E  D7AE               	goto	l5211
  2208   000F20                     l5235:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;Lab4.c: 196: EscribeLCD_c('W');
  2212   000F20  0E57               	movlw	87
  2213   000F22  EC9D  F014         	call	_EscribeLCD_c
  2214   000F26                     l5237:
  2215                           
  2216                           ;Lab4.c: 197: };Lab4.c: 198: _delay((unsigned long)((700)*(1000000/4000.0)));
  2217   000F26  0EE4               	movlw	228
  2218   000F28  0100               	movlb	0	; () banked
  2219   000F2A  6F9C               	movwf	??_main& (0+255),b
  2220   000F2C  0E44               	movlw	68
  2221   000F2E                     u7047:
  2222   000F2E  2EE8               	decfsz	wreg,f,c
  2223   000F30  D7FE               	bra	u7047
  2224   000F32  2F9C               	decfsz	??_main& (0+255),f,b
  2225   000F34  D7FC               	bra	u7047
  2226   000F36  F000               	nop	
  2227   000F38  D4FC               	goto	l4933
  2228   000F3A                     __end_of_main:
  2229                           	callstack 0
  2230                           
  2231 ;; *************** function _factorial_function *****************
  2232 ;; Defined at:
  2233 ;;		line 275 in file "Lab4.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  a               2   19[COMRAM] int 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  fact            2   23[COMRAM] int 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  4   19[COMRAM] unsigned long 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2247 ;;      Params:         4       0       0       0       0       0       0       0       0
  2248 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2250 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2251 ;;Total ram usage:        6 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 6
  2254 ;; This function calls:
  2255 ;;		___wmul
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text1
  2262   002478                     __ptext1:
  2263                           	callstack 0
  2264   002478                     _factorial_function:
  2265                           	callstack 24
  2266                           
  2267                           ;Lab4.c: 276: int fact = 1;
  2268                           
  2269                           ;incstack = 0
  2270   002478  0E00               	movlw	0
  2271   00247A  6E19               	movwf	(factorial_function@fact+1)^0,c
  2272   00247C  0E01               	movlw	1
  2273   00247E  6E18               	movwf	factorial_function@fact^0,c
  2274                           
  2275                           ;Lab4.c: 277: for (b = a; b > 1; b--){
  2276   002480  C014  F044         	movff	factorial_function@a,_b
  2277   002484  C015  F045         	movff	factorial_function@a+1,_b+1
  2278   002488  D011               	goto	l3835
  2279   00248A                     l3831:
  2280                           
  2281                           ;Lab4.c: 278: fact = fact * b;
  2282   00248A  C018  F00E         	movff	factorial_function@fact,___wmul@multiplier
  2283   00248E  C019  F00F         	movff	factorial_function@fact+1,___wmul@multiplier+1
  2284   002492  C044  F010         	movff	_b,___wmul@multiplicand
  2285   002496  C045  F011         	movff	_b+1,___wmul@multiplicand+1
  2286   00249A  EC5A  F014         	call	___wmul	;wreg free
  2287   00249E  C00E  F018         	movff	?___wmul,factorial_function@fact
  2288   0024A2  C00F  F019         	movff	?___wmul+1,factorial_function@fact+1
  2289   0024A6  0644               	decf	_b^0,f,c
  2290   0024A8  A0D8               	btfss	status,0,c
  2291   0024AA  0645               	decf	(_b+1)^0,f,c
  2292   0024AC                     l3835:
  2293   0024AC  BE45               	btfsc	(_b+1)^0,7,c
  2294   0024AE  D006               	goto	u4180
  2295   0024B0  5045               	movf	(_b+1)^0,w,c
  2296   0024B2  E1EB               	bnz	l3831
  2297   0024B4  0E02               	movlw	2
  2298   0024B6  5C44               	subwf	_b^0,w,c
  2299   0024B8  B0D8               	btfsc	status,0,c
  2300   0024BA  D7E7               	goto	l3831
  2301   0024BC                     u4180:
  2302                           
  2303                           ;Lab4.c: 279: };Lab4.c: 280: return fact;
  2304   0024BC  C018  F014         	movff	factorial_function@fact,?_factorial_function
  2305   0024C0  C019  F015         	movff	factorial_function@fact+1,?_factorial_function+1
  2306   0024C4  0E00               	movlw	0
  2307   0024C6  BE15               	btfsc	(?_factorial_function+1)^0,7,c
  2308   0024C8  0EFF               	movlw	-1
  2309   0024CA  6E16               	movwf	(?_factorial_function+2)^0,c
  2310   0024CC  6E17               	movwf	(?_factorial_function+3)^0,c
  2311   0024CE  0012               	return		;funcret
  2312   0024D0                     __end_of_factorial_function:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function ___lwtoft *****************
  2316 ;; Defined at:
  2317 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwtoft.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  c               2   21[COMRAM] unsigned int 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  3   21[COMRAM] float 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2331 ;;      Params:         3       0       0       0       0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2334 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2335 ;;Total ram usage:        3 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 6
  2338 ;; This function calls:
  2339 ;;		___ftpack
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text2
  2346   0028DA                     __ptext2:
  2347                           	callstack 0
  2348   0028DA                     ___lwtoft:
  2349                           	callstack 24
  2350                           
  2351                           ;incstack = 0
  2352   0028DA  C016  F00E         	movff	___lwtoft@c,___ftpack@arg
  2353   0028DE  C017  F00F         	movff	___lwtoft@c+1,___ftpack@arg+1
  2354   0028E2  6A10               	clrf	(___ftpack@arg+2)^0,c
  2355   0028E4  0E8E               	movlw	142
  2356   0028E6  6E11               	movwf	___ftpack@exp^0,c
  2357   0028E8  0E00               	movlw	0
  2358   0028EA  6E12               	movwf	___ftpack@sign^0,c
  2359   0028EC  EC89  F00F         	call	___ftpack	;wreg free
  2360   0028F0  C00E  F016         	movff	?___ftpack,?___lwtoft
  2361   0028F4  C00F  F017         	movff	?___ftpack+1,?___lwtoft+1
  2362   0028F8  C010  F018         	movff	?___ftpack+2,?___lwtoft+2
  2363   0028FC  0012               	return		;funcret
  2364   0028FE                     __end_of___lwtoft:
  2365                           	callstack 0
  2366                           
  2367 ;; *************** function _LeerTeclado *****************
  2368 ;; Defined at:
  2369 ;;		line 204 in file "Lab4.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      unsigned char 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2383 ;;      Params:         0       0       0       0       0       0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2386 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2387 ;;Total ram usage:        0 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; Hardware stack levels required when called: 5
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		_main
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text3
  2398   001CAC                     __ptext3:
  2399                           	callstack 0
  2400   001CAC                     _LeerTeclado:
  2401                           	callstack 25
  2402                           
  2403                           ;Lab4.c: 205: while(RB4==1 && RB5==1 && RB6==1 && RB7==1);
  2404                           
  2405                           ;incstack = 0
  2406   001CAC  B881               	btfsc	3969,4,c	;volatile
  2407   001CAE  AA81               	btfss	3969,5,c	;volatile
  2408   001CB0  D004               	goto	u3780
  2409   001CB2  AC81               	btfss	3969,6,c	;volatile
  2410   001CB4  D002               	goto	u3780
  2411   001CB6  BE81               	btfsc	3969,7,c	;volatile
  2412   001CB8  D7F9               	goto	__ptext3
  2413   001CBA                     u3780:
  2414                           
  2415                           ;Lab4.c: 206: verificador = 1;
  2416   001CBA  0E00               	movlw	0
  2417   001CBC  6E49               	movwf	(_verificador+1)^0,c
  2418   001CBE  0E01               	movlw	1
  2419   001CC0  6E48               	movwf	_verificador^0,c
  2420                           
  2421                           ;Lab4.c: 207: LATB=0b11111110;
  2422   001CC2  0EFE               	movlw	254
  2423   001CC4  6E8A               	movwf	138,c	;volatile
  2424                           
  2425                           ;Lab4.c: 208: if(RB4==0){
  2426   001CC6  B881               	btfsc	3969,4,c	;volatile
  2427   001CC8  D00B               	goto	l255
  2428                           
  2429                           ;Lab4.c: 209: if(!potencia) return '+';
  2430   001CCA  0100               	movlb	0	; () banked
  2431   001CCC  51B8               	movf	_potencia& (0+255),w,b
  2432   001CCE  A4D8               	btfss	status,2,c
  2433   001CD0  D002               	goto	l3585
  2434                           
  2435                           ; BSR set to: 0
  2436   001CD2  0E2B               	movlw	43
  2437   001CD4  0012               	return	
  2438   001CD6                     l3585:
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;Lab4.c: 210: else if(potencia) return '^';
  2442   001CD6  51B8               	movf	_potencia& (0+255),w,b
  2443   001CD8  B4D8               	btfsc	status,2,c
  2444   001CDA  D04D               	goto	l287
  2445                           
  2446                           ; BSR set to: 0
  2447   001CDC  0E5E               	movlw	94
  2448   001CDE  0012               	return	
  2449   001CE0                     l255:
  2450                           
  2451                           ;Lab4.c: 212: else if(RB5==0) return '=';
  2452   001CE0  BA81               	btfsc	3969,5,c	;volatile
  2453   001CE2  D002               	goto	l261
  2454   001CE4  0E3D               	movlw	61
  2455   001CE6  0012               	return	
  2456   001CE8                     l261:
  2457                           
  2458                           ;Lab4.c: 213: else if(RB6==0) return '0';
  2459   001CE8  BC81               	btfsc	3969,6,c	;volatile
  2460   001CEA  D002               	goto	l263
  2461   001CEC  0E30               	movlw	48
  2462   001CEE  0012               	return	
  2463   001CF0                     l263:
  2464                           
  2465                           ;Lab4.c: 214: else if(RB7==0) return 'C';
  2466   001CF0  BE81               	btfsc	3969,7,c	;volatile
  2467   001CF2  D002               	goto	l3609
  2468   001CF4  0E43               	movlw	67
  2469   001CF6  0012               	return	
  2470   001CF8                     l3609:
  2471                           
  2472                           ;Lab4.c: 215: else{;Lab4.c: 216: LATB=0b11111101;
  2473   001CF8  0EFD               	movlw	253
  2474   001CFA  6E8A               	movwf	138,c	;volatile
  2475                           
  2476                           ;Lab4.c: 217: if(RB4==0){
  2477   001CFC  B881               	btfsc	3969,4,c	;volatile
  2478   001CFE  D00B               	goto	l267
  2479                           
  2480                           ;Lab4.c: 218: if(!factorial) return '-';
  2481   001D00  0100               	movlb	0	; () banked
  2482   001D02  51B7               	movf	_factorial& (0+255),w,b
  2483   001D04  A4D8               	btfss	status,2,c
  2484   001D06  D002               	goto	l3621
  2485                           
  2486                           ; BSR set to: 0
  2487   001D08  0E2D               	movlw	45
  2488   001D0A  0012               	return	
  2489   001D0C                     l3621:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;Lab4.c: 219: else if(factorial) return '!';
  2493   001D0C  51B7               	movf	_factorial& (0+255),w,b
  2494   001D0E  B4D8               	btfsc	status,2,c
  2495   001D10  D032               	goto	l287
  2496                           
  2497                           ; BSR set to: 0
  2498   001D12  0E21               	movlw	33
  2499   001D14  0012               	return	
  2500   001D16                     l267:
  2501                           
  2502                           ;Lab4.c: 221: else if(RB5==0) return '9';
  2503   001D16  BA81               	btfsc	3969,5,c	;volatile
  2504   001D18  D002               	goto	l272
  2505   001D1A  0E39               	movlw	57
  2506   001D1C  0012               	return	
  2507   001D1E                     l272:
  2508                           
  2509                           ;Lab4.c: 222: else if(RB6==0) return '8';
  2510   001D1E  BC81               	btfsc	3969,6,c	;volatile
  2511   001D20  D002               	goto	l274
  2512   001D22  0E38               	movlw	56
  2513   001D24  0012               	return	
  2514   001D26                     l274:
  2515                           
  2516                           ;Lab4.c: 223: else if(RB7==0) return '7';
  2517   001D26  BE81               	btfsc	3969,7,c	;volatile
  2518   001D28  D002               	goto	l3645
  2519   001D2A  0E37               	movlw	55
  2520   001D2C  0012               	return	
  2521   001D2E                     l3645:
  2522                           
  2523                           ;Lab4.c: 224: else{;Lab4.c: 225: LATB=0b11111011;
  2524   001D2E  0EFB               	movlw	251
  2525   001D30  6E8A               	movwf	138,c	;volatile
  2526                           
  2527                           ;Lab4.c: 226: if(RB4==0) return 'x';
  2528   001D32  B881               	btfsc	3969,4,c	;volatile
  2529   001D34  D002               	goto	l278
  2530   001D36  0E78               	movlw	120
  2531   001D38  0012               	return	
  2532   001D3A                     l278:
  2533                           
  2534                           ;Lab4.c: 227: else if(RB5==0) return '6';
  2535   001D3A  BA81               	btfsc	3969,5,c	;volatile
  2536   001D3C  D002               	goto	l280
  2537   001D3E  0E36               	movlw	54
  2538   001D40  0012               	return	
  2539   001D42                     l280:
  2540                           
  2541                           ;Lab4.c: 228: else if(RB6==0) return '5';
  2542   001D42  BC81               	btfsc	3969,6,c	;volatile
  2543   001D44  D002               	goto	l282
  2544   001D46  0E35               	movlw	53
  2545   001D48  0012               	return	
  2546   001D4A                     l282:
  2547                           
  2548                           ;Lab4.c: 229: else if(RB7==0) return '4';
  2549   001D4A  BE81               	btfsc	3969,7,c	;volatile
  2550   001D4C  D002               	goto	l3673
  2551   001D4E  0E34               	movlw	52
  2552   001D50  0012               	return	
  2553   001D52                     l3673:
  2554                           
  2555                           ;Lab4.c: 230: else{;Lab4.c: 231: LATB=0b11110111;
  2556   001D52  0EF7               	movlw	247
  2557   001D54  6E8A               	movwf	138,c	;volatile
  2558                           
  2559                           ;Lab4.c: 232: if(RB4==0) return '/';
  2560   001D56  B881               	btfsc	3969,4,c	;volatile
  2561   001D58  D002               	goto	l286
  2562   001D5A  0E2F               	movlw	47
  2563   001D5C  0012               	return	
  2564   001D5E                     l286:
  2565                           
  2566                           ;Lab4.c: 233: else if(RB5==0) return '3';
  2567   001D5E  BA81               	btfsc	3969,5,c	;volatile
  2568   001D60  D002               	goto	l288
  2569   001D62  0E33               	movlw	51
  2570   001D64  0012               	return	
  2571   001D66                     l288:
  2572                           
  2573                           ;Lab4.c: 234: else if(RB6==0) return '2';
  2574   001D66  BC81               	btfsc	3969,6,c	;volatile
  2575   001D68  D002               	goto	l290
  2576   001D6A  0E32               	movlw	50
  2577   001D6C  0012               	return	
  2578   001D6E                     l290:
  2579                           
  2580                           ;Lab4.c: 235: else if(RB7==0) return '1';
  2581   001D6E  BE81               	btfsc	3969,7,c	;volatile
  2582   001D70  D002               	goto	l287
  2583   001D72  0E31               	movlw	49
  2584   001D74  0012               	return	
  2585   001D76                     l287:
  2586                           
  2587                           ;Lab4.c: 236: };Lab4.c: 237: };Lab4.c: 238: };Lab4.c: 239: return '?';
  2588   001D76  0E3F               	movlw	63
  2589   001D78  0012               	return		;funcret
  2590   001D7A                     __end_of_LeerTeclado:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _InicializaLCD *****************
  2594 ;; Defined at:
  2595 ;;		line 62 in file "LibLCDXC8.h"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 8
  2616 ;; This function calls:
  2617 ;;		_BorraLCD
  2618 ;;		_EnviaDato
  2619 ;;		_HabilitaLCD
  2620 ;;		_RetardoLCD
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text4
  2627   00210C                     __ptext4:
  2628                           	callstack 0
  2629   00210C                     _InicializaLCD:
  2630                           	callstack 22
  2631                           
  2632                           ;LibLCDXC8.h: 64: LATE0=0;
  2633                           
  2634                           ;incstack = 0
  2635   00210C  908D               	bcf	3981,0,c	;volatile
  2636                           
  2637                           ;LibLCDXC8.h: 65: if(interfaz==4)
  2638   00210E  0E04               	movlw	4
  2639   002110  1850               	xorwf	_interfaz^0,w,c
  2640   002112  A4D8               	btfss	status,2,c
  2641   002114  D004               	goto	l3517
  2642                           
  2643                           ;LibLCDXC8.h: 66: LATD=(LATD & 0b00001111) | 0x30;
  2644   002116  508C               	movf	140,w,c	;volatile
  2645   002118  0B0F               	andlw	15
  2646   00211A  0930               	iorlw	48
  2647   00211C  D001               	goto	L5
  2648   00211E                     l3517:
  2649                           
  2650                           ;LibLCDXC8.h: 67: else;LibLCDXC8.h: 68: LATD=0x3F;
  2651   00211E  0E3F               	movlw	63
  2652   002120                     L5:
  2653   002120  6E8C               	movwf	140,c	;volatile
  2654                           
  2655                           ;LibLCDXC8.h: 69: HabilitaLCD();
  2656   002122  ECDD  F014         	call	_HabilitaLCD	;wreg free
  2657                           
  2658                           ;LibLCDXC8.h: 70: RetardoLCD(1);
  2659   002126  0E01               	movlw	1
  2660   002128  ECBE  F012         	call	_RetardoLCD
  2661                           
  2662                           ;LibLCDXC8.h: 71: if(interfaz==4)
  2663   00212C  0E04               	movlw	4
  2664   00212E  1850               	xorwf	_interfaz^0,w,c
  2665   002130  A4D8               	btfss	status,2,c
  2666   002132  D004               	goto	l3527
  2667                           
  2668                           ;LibLCDXC8.h: 72: LATD=(LATD & 0b00001111) | 0x30;
  2669   002134  508C               	movf	140,w,c	;volatile
  2670   002136  0B0F               	andlw	15
  2671   002138  0930               	iorlw	48
  2672   00213A  D001               	goto	L6
  2673   00213C                     l3527:
  2674                           
  2675                           ;LibLCDXC8.h: 73: else;LibLCDXC8.h: 74: LATD=0x3F;
  2676   00213C  0E3F               	movlw	63
  2677   00213E                     L6:
  2678   00213E  6E8C               	movwf	140,c	;volatile
  2679                           
  2680                           ;LibLCDXC8.h: 75: HabilitaLCD();
  2681   002140  ECDD  F014         	call	_HabilitaLCD	;wreg free
  2682                           
  2683                           ;LibLCDXC8.h: 76: RetardoLCD(3);
  2684   002144  0E03               	movlw	3
  2685   002146  ECBE  F012         	call	_RetardoLCD
  2686                           
  2687                           ;LibLCDXC8.h: 77: if(interfaz==4)
  2688   00214A  0E04               	movlw	4
  2689   00214C  1850               	xorwf	_interfaz^0,w,c
  2690   00214E  A4D8               	btfss	status,2,c
  2691   002150  D004               	goto	l3537
  2692                           
  2693                           ;LibLCDXC8.h: 78: LATD=(LATD & 0b00001111) | 0x30;
  2694   002152  508C               	movf	140,w,c	;volatile
  2695   002154  0B0F               	andlw	15
  2696   002156  0930               	iorlw	48
  2697   002158  D001               	goto	L7
  2698   00215A                     l3537:
  2699                           
  2700                           ;LibLCDXC8.h: 79: else;LibLCDXC8.h: 80: LATD=0x3F;
  2701   00215A  0E3F               	movlw	63
  2702   00215C                     L7:
  2703   00215C  6E8C               	movwf	140,c	;volatile
  2704                           
  2705                           ;LibLCDXC8.h: 81: HabilitaLCD();
  2706   00215E  ECDD  F014         	call	_HabilitaLCD	;wreg free
  2707                           
  2708                           ;LibLCDXC8.h: 82: RetardoLCD(4);
  2709   002162  0E04               	movlw	4
  2710   002164  ECBE  F012         	call	_RetardoLCD
  2711                           
  2712                           ;LibLCDXC8.h: 83: if(interfaz==4){
  2713   002168  0E04               	movlw	4
  2714   00216A  1850               	xorwf	_interfaz^0,w,c
  2715   00216C  A4D8               	btfss	status,2,c
  2716   00216E  D011               	goto	l3557
  2717                           
  2718                           ;LibLCDXC8.h: 84: LATD=(LATD & 0b00001111) | 0x20;
  2719   002170  508C               	movf	140,w,c	;volatile
  2720   002172  0B0F               	andlw	15
  2721   002174  0920               	iorlw	32
  2722   002176  6E8C               	movwf	140,c	;volatile
  2723                           
  2724                           ;LibLCDXC8.h: 85: HabilitaLCD();
  2725   002178  ECDD  F014         	call	_HabilitaLCD	;wreg free
  2726                           
  2727                           ;LibLCDXC8.h: 86: RetardoLCD(4);
  2728   00217C  0E04               	movlw	4
  2729   00217E  ECBE  F012         	call	_RetardoLCD
  2730                           
  2731                           ;LibLCDXC8.h: 87: EnviaDato(0x2F);
  2732   002182  0E2F               	movlw	47
  2733   002184  EC8F  F013         	call	_EnviaDato
  2734                           
  2735                           ;LibLCDXC8.h: 88: HabilitaLCD();
  2736   002188  ECDD  F014         	call	_HabilitaLCD	;wreg free
  2737                           
  2738                           ;LibLCDXC8.h: 89: RetardoLCD(4);
  2739   00218C  0E04               	movlw	4
  2740   00218E  ECBE  F012         	call	_RetardoLCD
  2741   002192                     l3557:
  2742                           
  2743                           ;LibLCDXC8.h: 90: };LibLCDXC8.h: 91: BorraLCD();
  2744   002192  ECC9  F014         	call	_BorraLCD	;wreg free
  2745                           
  2746                           ;LibLCDXC8.h: 92: EnviaDato(0xF);
  2747   002196  0E0F               	movlw	15
  2748   002198  EC8F  F013         	call	_EnviaDato
  2749                           
  2750                           ;LibLCDXC8.h: 93: HabilitaLCD();
  2751   00219C  ECDD  F014         	call	_HabilitaLCD	;wreg free
  2752                           
  2753                           ;LibLCDXC8.h: 94: RetardoLCD(4);
  2754   0021A0  0E04               	movlw	4
  2755   0021A2  ECBE  F012         	call	_RetardoLCD
  2756   0021A6  0012               	return		;funcret
  2757   0021A8                     __end_of_InicializaLCD:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _BorraLCD *****************
  2761 ;; Defined at:
  2762 ;;		line 103 in file "LibLCDXC8.h"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2779 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 7
  2783 ;; This function calls:
  2784 ;;		_EnviaDato
  2785 ;;		_HabilitaLCD
  2786 ;;		_RetardoLCD
  2787 ;; This function is called by:
  2788 ;;		_InicializaLCD
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text5
  2794   002992                     __ptext5:
  2795                           	callstack 0
  2796   002992                     _BorraLCD:
  2797                           	callstack 22
  2798                           
  2799                           ;LibLCDXC8.h: 105: LATE0=0;
  2800                           
  2801                           ;incstack = 0
  2802   002992  908D               	bcf	3981,0,c	;volatile
  2803                           
  2804                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  2805   002994  0E01               	movlw	1
  2806   002996  EC8F  F013         	call	_EnviaDato
  2807                           
  2808                           ;LibLCDXC8.h: 107: HabilitaLCD();
  2809   00299A  ECDD  F014         	call	_HabilitaLCD	;wreg free
  2810                           
  2811                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  2812   00299E  0E02               	movlw	2
  2813   0029A0  ECBE  F012         	call	_RetardoLCD
  2814   0029A4  0012               	return		;funcret
  2815   0029A6                     __end_of_BorraLCD:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _Imprimir_Resultado *****************
  2819 ;; Defined at:
  2820 ;;		line 304 in file "Lab4.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  r               4   42[BANK0 ] long 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  j               2   58[BANK0 ] int 
  2825 ;;  i               2   50[BANK0 ] int 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2835 ;;      Params:         0       4       0       0       0       0       0       0       0
  2836 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2837 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2838 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2839 ;;Total ram usage:       18 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 10
  2842 ;; This function calls:
  2843 ;;		_DireccionaLCD
  2844 ;;		_EscribeLCD_c
  2845 ;;		_MensajeLCD_Var
  2846 ;;		___aldiv
  2847 ;;		___almod
  2848 ;;		___awtoft
  2849 ;;		___fttol
  2850 ;;		___lmul
  2851 ;;		___lwdiv
  2852 ;;		___lwmod
  2853 ;;		___wmul
  2854 ;;		_pow
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text6
  2861   000F3A                     __ptext6:
  2862                           	callstack 0
  2863   000F3A                     _Imprimir_Resultado:
  2864                           	callstack 20
  2865                           
  2866                           ;Lab4.c: 305: if ((partdecl-(r*100))>0 | (partdecl-(r*100))<0){
  2867                           
  2868                           ;incstack = 0
  2869   000F3A  C08A  F00E         	movff	Imprimir_Resultado@r,___lmul@multiplier
  2870   000F3E  C08B  F00F         	movff	Imprimir_Resultado@r+1,___lmul@multiplier+1
  2871   000F42  C08C  F010         	movff	Imprimir_Resultado@r+2,___lmul@multiplier+2
  2872   000F46  C08D  F011         	movff	Imprimir_Resultado@r+3,___lmul@multiplier+3
  2873   000F4A  0E9C               	movlw	156
  2874   000F4C  6E12               	movwf	___lmul@multiplicand^0,c
  2875   000F4E  0EFF               	movlw	255
  2876   000F50  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  2877   000F52  0EFF               	movlw	255
  2878   000F54  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  2879   000F56  0EFF               	movlw	255
  2880   000F58  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  2881   000F5A  EC93  F012         	call	___lmul	;wreg free
  2882   000F5E  0100               	movlb	0	; () banked
  2883   000F60  51AB               	movf	_partdecl& (0+255),w,b
  2884   000F62  240E               	addwf	?___lmul^0,w,c
  2885   000F64  6F8E               	movwf	??_Imprimir_Resultado& (0+255),b
  2886   000F66  51AC               	movf	(_partdecl+1)& (0+255),w,b
  2887   000F68  200F               	addwfc	(?___lmul+1)^0,w,c
  2888   000F6A  6F8F               	movwf	(??_Imprimir_Resultado+1)& (0+255),b
  2889   000F6C  51AD               	movf	(_partdecl+2)& (0+255),w,b
  2890   000F6E  2010               	addwfc	(?___lmul+2)^0,w,c
  2891   000F70  6F90               	movwf	(??_Imprimir_Resultado+2)& (0+255),b
  2892   000F72  51AE               	movf	(_partdecl+3)& (0+255),w,b
  2893   000F74  2011               	addwfc	(?___lmul+3)^0,w,c
  2894   000F76  6F91               	movwf	(??_Imprimir_Resultado+3)& (0+255),b
  2895   000F78  518E               	movf	??_Imprimir_Resultado& (0+255),w,b
  2896   000F7A  118F               	iorwf	(??_Imprimir_Resultado+1)& (0+255),w,b
  2897   000F7C  1190               	iorwf	(??_Imprimir_Resultado+2)& (0+255),w,b
  2898   000F7E  1191               	iorwf	(??_Imprimir_Resultado+3)& (0+255),w,b
  2899   000F80  B4D8               	btfsc	status,2,c
  2900   000F82  D059               	goto	l4827
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;Lab4.c: 306: for (int i = 0; i < 3; i++) {
  2904   000F84  0E00               	movlw	0
  2905   000F86  6F93               	movwf	(Imprimir_Resultado@i+1)& (0+255),b
  2906   000F88  0E00               	movlw	0
  2907   000F8A  6F92               	movwf	Imprimir_Resultado@i& (0+255),b
  2908   000F8C                     l4811:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;Lab4.c: 307: r = n1 / n2;
  2912   000F8C  C0B5  F014         	movff	_n1,___lwdiv@dividend
  2913   000F90  C0B6  F015         	movff	_n1+1,___lwdiv@dividend+1
  2914   000F94  C0B3  F016         	movff	_n2,___lwdiv@divisor
  2915   000F98  C0B4  F017         	movff	_n2+1,___lwdiv@divisor+1
  2916   000F9C  EC14  F013         	call	___lwdiv	;wreg free
  2917   000FA0  C014  F08A         	movff	?___lwdiv,Imprimir_Resultado@r
  2918   000FA4  C015  F08B         	movff	?___lwdiv+1,Imprimir_Resultado@r+1
  2919   000FA8  0100               	movlb	0	; () banked
  2920   000FAA  6B8C               	clrf	(Imprimir_Resultado@r+2)& (0+255),b
  2921   000FAC  6B8D               	clrf	(Imprimir_Resultado@r+3)& (0+255),b
  2922                           
  2923                           ;Lab4.c: 308: m = n1 % n2;
  2924   000FAE  C0B5  F00E         	movff	_n1,___lwmod@dividend
  2925   000FB2  C0B6  F00F         	movff	_n1+1,___lwmod@dividend+1
  2926   000FB6  C0B3  F010         	movff	_n2,___lwmod@divisor
  2927   000FBA  C0B4  F011         	movff	_n2+1,___lwmod@divisor+1
  2928   000FBE  ECD5  F013         	call	___lwmod	;wreg free
  2929   000FC2  C00E  F0BA         	movff	?___lwmod,_m
  2930   000FC6  C00F  F0BB         	movff	?___lwmod+1,_m+1
  2931   000FCA  6BBC               	clrf	(_m+2)& (0+255),b
  2932   000FCC  6BBD               	clrf	(_m+3)& (0+255),b
  2933                           
  2934                           ;Lab4.c: 309: EscribeLCD_c(r+'0');
  2935   000FCE  518A               	movf	Imprimir_Resultado@r& (0+255),w,b
  2936   000FD0  0F30               	addlw	48
  2937   000FD2  EC9D  F014         	call	_EscribeLCD_c
  2938                           
  2939                           ;Lab4.c: 310: if(i == 0 && m != 0) {
  2940   000FD6  0100               	movlb	0	; () banked
  2941   000FD8  5192               	movf	Imprimir_Resultado@i& (0+255),w,b
  2942   000FDA  1193               	iorwf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2943   000FDC  A4D8               	btfss	status,2,c
  2944   000FDE  D009               	goto	l4819
  2945                           
  2946                           ; BSR set to: 0
  2947   000FE0  51BA               	movf	_m& (0+255),w,b
  2948   000FE2  11BB               	iorwf	(_m+1)& (0+255),w,b
  2949   000FE4  11BC               	iorwf	(_m+2)& (0+255),w,b
  2950   000FE6  11BD               	iorwf	(_m+3)& (0+255),w,b
  2951   000FE8  B4D8               	btfsc	status,2,c
  2952   000FEA  D003               	goto	l4819
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;Lab4.c: 311: EscribeLCD_c(',');
  2956   000FEC  0E2C               	movlw	44
  2957   000FEE  EC9D  F014         	call	_EscribeLCD_c
  2958   000FF2                     l4819:
  2959                           
  2960                           ;Lab4.c: 312: };Lab4.c: 314: if (m != 0) {
  2961   000FF2  0100               	movlb	0	; () banked
  2962   000FF4  51BA               	movf	_m& (0+255),w,b
  2963   000FF6  11BB               	iorwf	(_m+1)& (0+255),w,b
  2964   000FF8  11BC               	iorwf	(_m+2)& (0+255),w,b
  2965   000FFA  11BD               	iorwf	(_m+3)& (0+255),w,b
  2966   000FFC  B4D8               	btfsc	status,2,c
  2967   000FFE  0012               	return	
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;Lab4.c: 315: n1 = m * 10;
  2971   001000  C0BA  F00E         	movff	_m,___wmul@multiplier
  2972   001004  C0BB  F00F         	movff	_m+1,___wmul@multiplier+1
  2973   001008  0E00               	movlw	0
  2974   00100A  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  2975   00100C  0E0A               	movlw	10
  2976   00100E  6E10               	movwf	___wmul@multiplicand^0,c
  2977   001010  EC5A  F014         	call	___wmul	;wreg free
  2978   001014  C00E  F0B5         	movff	?___wmul,_n1
  2979   001018  C00F  F0B6         	movff	?___wmul+1,_n1+1
  2980                           
  2981                           ;Lab4.c: 316: } else {
  2982   00101C  0100               	movlb	0	; () banked
  2983   00101E  4B92               	infsnz	Imprimir_Resultado@i& (0+255),f,b
  2984   001020  2B93               	incf	(Imprimir_Resultado@i+1)& (0+255),f,b
  2985                           
  2986                           ; BSR set to: 0
  2987   001022  BF93               	btfsc	(Imprimir_Resultado@i+1)& (0+255),7,b
  2988   001024  D7B3               	goto	l4811
  2989   001026  5193               	movf	(Imprimir_Resultado@i+1)& (0+255),w,b
  2990   001028  E105               	bnz	u6060
  2991   00102A  0E03               	movlw	3
  2992   00102C  5D92               	subwf	Imprimir_Resultado@i& (0+255),w,b
  2993   00102E  B0D8               	btfsc	status,0,c
  2994   001030  0012               	return	
  2995   001032  D7AC               	goto	l4811
  2996   001034                     u6060:
  2997   001034  0012               	return	
  2998   001036                     l4827:
  2999                           
  3000                           ; BSR set to: 0
  3001   001036  BF8D               	btfsc	(Imprimir_Resultado@r+3)& (0+255),7,b
  3002   001038  D02E               	goto	l4839
  3003   00103A  518D               	movf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3004   00103C  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3005   00103E  118B               	iorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3006   001040  E104               	bnz	u6070
  3007   001042  0E52               	movlw	82
  3008   001044  5D8A               	subwf	Imprimir_Resultado@r& (0+255),w,b
  3009   001046  A0D8               	btfss	status,0,c
  3010   001048  D026               	goto	l4839
  3011   00104A                     u6070:
  3012                           
  3013                           ; BSR set to: 0
  3014   00104A  0EE8               	movlw	232
  3015   00104C  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3016   00104E  E106               	bnz	u6080
  3017   001050  0E03               	movlw	3
  3018   001052  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3019   001054  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3020   001056  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3021   001058  B4D8               	btfsc	status,2,c
  3022   00105A  D01D               	goto	l4839
  3023   00105C                     u6080:
  3024                           
  3025                           ; BSR set to: 0
  3026   00105C  0EE9               	movlw	233
  3027   00105E  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3028   001060  E106               	bnz	u6090
  3029   001062  0E03               	movlw	3
  3030   001064  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3031   001066  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3032   001068  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3033   00106A  B4D8               	btfsc	status,2,c
  3034   00106C  D014               	goto	l4839
  3035   00106E                     u6090:
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;Lab4.c: 322: EscribeLCD_c('-');
  3039   00106E  0E2D               	movlw	45
  3040   001070  EC9D  F014         	call	_EscribeLCD_c
  3041                           
  3042                           ;Lab4.c: 323: DireccionaLCD(0x85);
  3043   001074  0E85               	movlw	133
  3044   001076  ECA8  F014         	call	_DireccionaLCD
  3045                           
  3046                           ;Lab4.c: 324: r = ~r+1;
  3047   00107A  0100               	movlb	0	; () banked
  3048   00107C  1F8D               	comf	(Imprimir_Resultado@r+3)& (0+255),f,b
  3049   00107E  1F8C               	comf	(Imprimir_Resultado@r+2)& (0+255),f,b
  3050   001080  1F8B               	comf	(Imprimir_Resultado@r+1)& (0+255),f,b
  3051   001082  6D8A               	negf	Imprimir_Resultado@r& (0+255),b
  3052   001084  0E00               	movlw	0
  3053   001086  238B               	addwfc	(Imprimir_Resultado@r+1)& (0+255),f,b
  3054   001088  238C               	addwfc	(Imprimir_Resultado@r+2)& (0+255),f,b
  3055   00108A  238D               	addwfc	(Imprimir_Resultado@r+3)& (0+255),f,b
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;Lab4.c: 325: EscribeLCD_c(r+'0');
  3059   00108C  518A               	movf	Imprimir_Resultado@r& (0+255),w,b
  3060   00108E  0F30               	addlw	48
  3061   001090  EC9D  F014         	call	_EscribeLCD_c
  3062                           
  3063                           ;Lab4.c: 326: }else{
  3064   001094  0012               	return	
  3065   001096                     l4839:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;Lab4.c: 327: if(r>0xFFFF & r!=1000 & r !=1001){
  3069   001096  BF8D               	btfsc	(Imprimir_Resultado@r+3)& (0+255),7,b
  3070   001098  D026               	goto	l4851
  3071   00109A  518D               	movf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3072   00109C  E103               	bnz	u6100
  3073   00109E  058C               	decf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3074   0010A0  A0D8               	btfss	status,0,c
  3075   0010A2  D021               	goto	l4851
  3076   0010A4                     u6100:
  3077                           
  3078                           ; BSR set to: 0
  3079   0010A4  0EE8               	movlw	232
  3080   0010A6  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3081   0010A8  E106               	bnz	u6110
  3082   0010AA  0E03               	movlw	3
  3083   0010AC  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3084   0010AE  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3085   0010B0  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3086   0010B2  B4D8               	btfsc	status,2,c
  3087   0010B4  D018               	goto	l4851
  3088   0010B6                     u6110:
  3089                           
  3090                           ; BSR set to: 0
  3091   0010B6  0EE9               	movlw	233
  3092   0010B8  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3093   0010BA  E106               	bnz	u6120
  3094   0010BC  0E03               	movlw	3
  3095   0010BE  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3096   0010C0  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3097   0010C2  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3098   0010C4  B4D8               	btfsc	status,2,c
  3099   0010C6  D00F               	goto	l4851
  3100   0010C8                     u6120:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;Lab4.c: 328: DireccionaLCD(0x85);
  3104   0010C8  0E85               	movlw	133
  3105   0010CA  ECA8  F014         	call	_DireccionaLCD
  3106                           
  3107                           ;Lab4.c: 329: MensajeLCD_Var("Imposible");
  3108   0010CE  0E93               	movlw	low STR_12
  3109   0010D0  6E13               	movwf	MensajeLCD_Var@a^0,c
  3110   0010D2  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  3111                           
  3112                           ;Lab4.c: 330: DireccionaLCD(0xC0);
  3113   0010D6  0EC0               	movlw	192
  3114   0010D8  ECA8  F014         	call	_DireccionaLCD
  3115                           
  3116                           ;Lab4.c: 331: MensajeLCD_Var("de calcular");
  3117   0010DC  0E72               	movlw	low STR_13
  3118   0010DE  6E13               	movwf	MensajeLCD_Var@a^0,c
  3119   0010E0  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  3120                           
  3121                           ;Lab4.c: 332: }else{
  3122   0010E4  0012               	return	
  3123   0010E6                     l4851:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;Lab4.c: 333: if(r>=0xA & r!=1000 & r !=1001){
  3127   0010E6  BF8D               	btfsc	(Imprimir_Resultado@r+3)& (0+255),7,b
  3128   0010E8  D0EA               	goto	l4883
  3129   0010EA  518D               	movf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3130   0010EC  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3131   0010EE  118B               	iorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3132   0010F0  E104               	bnz	u6130
  3133   0010F2  0E0A               	movlw	10
  3134   0010F4  5D8A               	subwf	Imprimir_Resultado@r& (0+255),w,b
  3135   0010F6  A0D8               	btfss	status,0,c
  3136   0010F8  D0E2               	goto	l4883
  3137   0010FA                     u6130:
  3138                           
  3139                           ; BSR set to: 0
  3140   0010FA  0EE8               	movlw	232
  3141   0010FC  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3142   0010FE  E106               	bnz	u6140
  3143   001100  0E03               	movlw	3
  3144   001102  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3145   001104  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3146   001106  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3147   001108  B4D8               	btfsc	status,2,c
  3148   00110A  D0D9               	goto	l4883
  3149   00110C                     u6140:
  3150                           
  3151                           ; BSR set to: 0
  3152   00110C  0EE9               	movlw	233
  3153   00110E  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3154   001110  E106               	bnz	u6150
  3155   001112  0E03               	movlw	3
  3156   001114  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3157   001116  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3158   001118  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3159   00111A  B4D8               	btfsc	status,2,c
  3160   00111C  D0D0               	goto	l4883
  3161   00111E                     u6150:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;Lab4.c: 357: for(int j=9;j>=0;j--){
  3165   00111E  0E00               	movlw	0
  3166   001120  6F9B               	movwf	(Imprimir_Resultado@j+1)& (0+255),b
  3167   001122  0E09               	movlw	9
  3168   001124  6F9A               	movwf	Imprimir_Resultado@j& (0+255),b
  3169   001126                     l4863:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;Lab4.c: 358: if(r/(long)pow(10,j)>0){
  3173   001126  C09A  F016         	movff	Imprimir_Resultado@j,___awtoft@c
  3174   00112A  C09B  F017         	movff	Imprimir_Resultado@j+1,___awtoft@c+1
  3175   00112E  EC16  F014         	call	___awtoft	;wreg free
  3176   001132  C016  F094         	movff	?___awtoft,_Imprimir_Resultado$906
  3177   001136  C017  F095         	movff	?___awtoft+1,_Imprimir_Resultado$906+1
  3178   00113A  C018  F096         	movff	?___awtoft+2,_Imprimir_Resultado$906+2
  3179                           
  3180                           ;Lab4.c: 358: if(r/(long)pow(10,j)>0){
  3181   00113E  C094  F06E         	movff	_Imprimir_Resultado$906,pow@y
  3182   001142  C095  F06F         	movff	_Imprimir_Resultado$906+1,pow@y+1
  3183   001146  C096  F070         	movff	_Imprimir_Resultado$906+2,pow@y+2
  3184   00114A  0E00               	movlw	0
  3185   00114C  0100               	movlb	0	; () banked
  3186   00114E  6F6B               	movwf	pow@x& (0+255),b
  3187   001150  0E20               	movlw	32
  3188   001152  6F6C               	movwf	(pow@x+1)& (0+255),b
  3189   001154  0E41               	movlw	65
  3190   001156  6F6D               	movwf	(pow@x+2)& (0+255),b
  3191   001158  EC4C  F00B         	call	_pow	;wreg free
  3192   00115C  C06B  F097         	movff	?_pow,_Imprimir_Resultado$907
  3193   001160  C06C  F098         	movff	?_pow+1,_Imprimir_Resultado$907+1
  3194   001164  C06D  F099         	movff	?_pow+2,_Imprimir_Resultado$907+2
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;Lab4.c: 358: if(r/(long)pow(10,j)>0){
  3198   001168  C08A  F07C         	movff	Imprimir_Resultado@r,___aldiv@dividend
  3199   00116C  C08B  F07D         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  3200   001170  C08C  F07E         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  3201   001174  C08D  F07F         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  3202   001178  C097  F01A         	movff	_Imprimir_Resultado$907,___fttol@f1
  3203   00117C  C098  F01B         	movff	_Imprimir_Resultado$907+1,___fttol@f1+1
  3204   001180  C099  F01C         	movff	_Imprimir_Resultado$907+2,___fttol@f1+2
  3205   001184  ECED  F00D         	call	___fttol	;wreg free
  3206   001188  C01A  F080         	movff	?___fttol,___aldiv@divisor
  3207   00118C  C01B  F081         	movff	?___fttol+1,___aldiv@divisor+1
  3208   001190  C01C  F082         	movff	?___fttol+2,___aldiv@divisor+2
  3209   001194  C01D  F083         	movff	?___fttol+3,___aldiv@divisor+3
  3210   001198  ECBD  F00E         	call	___aldiv	;wreg free
  3211   00119C  BF7F               	btfsc	(?___aldiv+3)& (0+255),7,b
  3212   00119E  D089               	goto	l4879
  3213   0011A0  517F               	movf	(?___aldiv+3)& (0+255),w,b
  3214   0011A2  117E               	iorwf	(?___aldiv+2)& (0+255),w,b
  3215   0011A4  117D               	iorwf	(?___aldiv+1)& (0+255),w,b
  3216   0011A6  E103               	bnz	u6160
  3217   0011A8  057C               	decf	?___aldiv& (0+255),w,b
  3218   0011AA  A0D8               	btfss	status,0,c
  3219   0011AC  D082               	goto	l4879
  3220   0011AE                     u6160:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;Lab4.c: 359: EscribeLCD_c(r/(long)pow(10,j)+48);
  3224   0011AE  C09A  F016         	movff	Imprimir_Resultado@j,___awtoft@c
  3225   0011B2  C09B  F017         	movff	Imprimir_Resultado@j+1,___awtoft@c+1
  3226   0011B6  EC16  F014         	call	___awtoft	;wreg free
  3227   0011BA  C016  F094         	movff	?___awtoft,_Imprimir_Resultado$906
  3228   0011BE  C017  F095         	movff	?___awtoft+1,_Imprimir_Resultado$906+1
  3229   0011C2  C018  F096         	movff	?___awtoft+2,_Imprimir_Resultado$906+2
  3230                           
  3231                           ;Lab4.c: 359: EscribeLCD_c(r/(long)pow(10,j)+48);
  3232   0011C6  C094  F06E         	movff	_Imprimir_Resultado$906,pow@y
  3233   0011CA  C095  F06F         	movff	_Imprimir_Resultado$906+1,pow@y+1
  3234   0011CE  C096  F070         	movff	_Imprimir_Resultado$906+2,pow@y+2
  3235   0011D2  0E00               	movlw	0
  3236   0011D4  0100               	movlb	0	; () banked
  3237   0011D6  6F6B               	movwf	pow@x& (0+255),b
  3238   0011D8  0E20               	movlw	32
  3239   0011DA  6F6C               	movwf	(pow@x+1)& (0+255),b
  3240   0011DC  0E41               	movlw	65
  3241   0011DE  6F6D               	movwf	(pow@x+2)& (0+255),b
  3242   0011E0  EC4C  F00B         	call	_pow	;wreg free
  3243   0011E4  C06B  F097         	movff	?_pow,_Imprimir_Resultado$907
  3244   0011E8  C06C  F098         	movff	?_pow+1,_Imprimir_Resultado$907+1
  3245   0011EC  C06D  F099         	movff	?_pow+2,_Imprimir_Resultado$907+2
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;Lab4.c: 359: EscribeLCD_c(r/(long)pow(10,j)+48);
  3249   0011F0  C08A  F07C         	movff	Imprimir_Resultado@r,___aldiv@dividend
  3250   0011F4  C08B  F07D         	movff	Imprimir_Resultado@r+1,___aldiv@dividend+1
  3251   0011F8  C08C  F07E         	movff	Imprimir_Resultado@r+2,___aldiv@dividend+2
  3252   0011FC  C08D  F07F         	movff	Imprimir_Resultado@r+3,___aldiv@dividend+3
  3253   001200  C097  F01A         	movff	_Imprimir_Resultado$907,___fttol@f1
  3254   001204  C098  F01B         	movff	_Imprimir_Resultado$907+1,___fttol@f1+1
  3255   001208  C099  F01C         	movff	_Imprimir_Resultado$907+2,___fttol@f1+2
  3256   00120C  ECED  F00D         	call	___fttol	;wreg free
  3257   001210  C01A  F080         	movff	?___fttol,___aldiv@divisor
  3258   001214  C01B  F081         	movff	?___fttol+1,___aldiv@divisor+1
  3259   001218  C01C  F082         	movff	?___fttol+2,___aldiv@divisor+2
  3260   00121C  C01D  F083         	movff	?___fttol+3,___aldiv@divisor+3
  3261   001220  ECBD  F00E         	call	___aldiv	;wreg free
  3262   001224  517C               	movf	?___aldiv& (0+255),w,b
  3263   001226  0F30               	addlw	48
  3264   001228  EC9D  F014         	call	_EscribeLCD_c
  3265                           
  3266                           ;Lab4.c: 360: r=r%(long)pow(10,j);
  3267   00122C  C09A  F016         	movff	Imprimir_Resultado@j,___awtoft@c
  3268   001230  C09B  F017         	movff	Imprimir_Resultado@j+1,___awtoft@c+1
  3269   001234  EC16  F014         	call	___awtoft	;wreg free
  3270   001238  C016  F094         	movff	?___awtoft,_Imprimir_Resultado$906
  3271   00123C  C017  F095         	movff	?___awtoft+1,_Imprimir_Resultado$906+1
  3272   001240  C018  F096         	movff	?___awtoft+2,_Imprimir_Resultado$906+2
  3273                           
  3274                           ;Lab4.c: 360: r=r%(long)pow(10,j);
  3275   001244  C094  F06E         	movff	_Imprimir_Resultado$906,pow@y
  3276   001248  C095  F06F         	movff	_Imprimir_Resultado$906+1,pow@y+1
  3277   00124C  C096  F070         	movff	_Imprimir_Resultado$906+2,pow@y+2
  3278   001250  0E00               	movlw	0
  3279   001252  0100               	movlb	0	; () banked
  3280   001254  6F6B               	movwf	pow@x& (0+255),b
  3281   001256  0E20               	movlw	32
  3282   001258  6F6C               	movwf	(pow@x+1)& (0+255),b
  3283   00125A  0E41               	movlw	65
  3284   00125C  6F6D               	movwf	(pow@x+2)& (0+255),b
  3285   00125E  EC4C  F00B         	call	_pow	;wreg free
  3286   001262  C06B  F097         	movff	?_pow,_Imprimir_Resultado$907
  3287   001266  C06C  F098         	movff	?_pow+1,_Imprimir_Resultado$907+1
  3288   00126A  C06D  F099         	movff	?_pow+2,_Imprimir_Resultado$907+2
  3289                           
  3290                           ;Lab4.c: 360: r=r%(long)pow(10,j);
  3291   00126E  C08A  F07C         	movff	Imprimir_Resultado@r,___almod@dividend
  3292   001272  C08B  F07D         	movff	Imprimir_Resultado@r+1,___almod@dividend+1
  3293   001276  C08C  F07E         	movff	Imprimir_Resultado@r+2,___almod@dividend+2
  3294   00127A  C08D  F07F         	movff	Imprimir_Resultado@r+3,___almod@dividend+3
  3295   00127E  C097  F01A         	movff	_Imprimir_Resultado$907,___fttol@f1
  3296   001282  C098  F01B         	movff	_Imprimir_Resultado$907+1,___fttol@f1+1
  3297   001286  C099  F01C         	movff	_Imprimir_Resultado$907+2,___fttol@f1+2
  3298   00128A  ECED  F00D         	call	___fttol	;wreg free
  3299   00128E  C01A  F080         	movff	?___fttol,___almod@divisor
  3300   001292  C01B  F081         	movff	?___fttol+1,___almod@divisor+1
  3301   001296  C01C  F082         	movff	?___fttol+2,___almod@divisor+2
  3302   00129A  C01D  F083         	movff	?___fttol+3,___almod@divisor+3
  3303   00129E  ECE0  F00F         	call	___almod	;wreg free
  3304   0012A2  C07C  F08A         	movff	?___almod,Imprimir_Resultado@r
  3305   0012A6  C07D  F08B         	movff	?___almod+1,Imprimir_Resultado@r+1
  3306   0012AA  C07E  F08C         	movff	?___almod+2,Imprimir_Resultado@r+2
  3307   0012AE  C07F  F08D         	movff	?___almod+3,Imprimir_Resultado@r+3
  3308   0012B2                     l4879:
  3309                           
  3310                           ; BSR set to: 0
  3311   0012B2  079A               	decf	Imprimir_Resultado@j& (0+255),f,b
  3312   0012B4  A0D8               	btfss	status,0,c
  3313   0012B6  079B               	decf	(Imprimir_Resultado@j+1)& (0+255),f,b
  3314                           
  3315                           ; BSR set to: 0
  3316   0012B8  BF9B               	btfsc	(Imprimir_Resultado@j+1)& (0+255),7,b
  3317   0012BA  0012               	return	
  3318   0012BC  D734               	goto	l4863
  3319   0012BE                     l4883:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;Lab4.c: 364: if(r==1000){
  3323   0012BE  0EE8               	movlw	232
  3324   0012C0  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3325   0012C2  E10B               	bnz	l4887
  3326   0012C4  0E03               	movlw	3
  3327   0012C6  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3328   0012C8  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3329   0012CA  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3330   0012CC  A4D8               	btfss	status,2,c
  3331   0012CE  D005               	goto	l4887
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;Lab4.c: 365: MensajeLCD_Var("Infinito");
  3335   0012D0  0E9D               	movlw	low STR_14
  3336   0012D2  6E13               	movwf	MensajeLCD_Var@a^0,c
  3337   0012D4  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  3338                           
  3339                           ;Lab4.c: 366: }else{
  3340   0012D8  0012               	return	
  3341   0012DA                     l4887:
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;Lab4.c: 367: if(r==1001){
  3345   0012DA  0EE9               	movlw	233
  3346   0012DC  198A               	xorwf	Imprimir_Resultado@r& (0+255),w,b
  3347   0012DE  E10E               	bnz	l4893
  3348   0012E0  0E03               	movlw	3
  3349   0012E2  198B               	xorwf	(Imprimir_Resultado@r+1)& (0+255),w,b
  3350   0012E4  118C               	iorwf	(Imprimir_Resultado@r+2)& (0+255),w,b
  3351   0012E6  118D               	iorwf	(Imprimir_Resultado@r+3)& (0+255),w,b
  3352   0012E8  A4D8               	btfss	status,2,c
  3353   0012EA  D008               	goto	l4893
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;Lab4.c: 368: DireccionaLCD(0xC1);
  3357   0012EC  0EC1               	movlw	193
  3358   0012EE  ECA8  F014         	call	_DireccionaLCD
  3359                           
  3360                           ;Lab4.c: 369: MensajeLCD_Var("Indeterminado");
  3361   0012F2  0E57               	movlw	low STR_15
  3362   0012F4  6E13               	movwf	MensajeLCD_Var@a^0,c
  3363   0012F6  EC3D  F013         	call	_MensajeLCD_Var	;wreg free
  3364                           
  3365                           ;Lab4.c: 370: }else{
  3366   0012FA  0012               	return	
  3367   0012FC                     l4893:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;Lab4.c: 371: EscribeLCD_c(r+'0');
  3371   0012FC  518A               	movf	Imprimir_Resultado@r& (0+255),w,b
  3372   0012FE  0F30               	addlw	48
  3373   001300  EC9D  F014         	call	_EscribeLCD_c
  3374   001304  0012               	return		;funcret
  3375   001306                     __end_of_Imprimir_Resultado:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function _pow *****************
  3379 ;; Defined at:
  3380 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\pow.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  x               3   11[BANK0 ] void 
  3383 ;;  y               3   14[BANK0 ] void 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  yi              4   24[BANK0 ] unsigned long 
  3386 ;;  sign            1   23[BANK0 ] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  3   11[BANK0 ] unsigned char 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 3F/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3396 ;;      Params:         0       6       0       0       0       0       0       0       0
  3397 ;;      Locals:         0      11       0       0       0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3399 ;;      Totals:         0      17       0       0       0       0       0       0       0
  3400 ;;Total ram usage:       17 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; Hardware stack levels required when called: 9
  3403 ;; This function calls:
  3404 ;;		___ftge
  3405 ;;		___ftmul
  3406 ;;		___ftneg
  3407 ;;		___fttol
  3408 ;;		___lltoft
  3409 ;;		_exp
  3410 ;;		_log
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;;		_Imprimir_Resultado
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text7
  3418   001698                     __ptext7:
  3419                           	callstack 0
  3420   001698                     _pow:
  3421                           	callstack 21
  3422                           
  3423                           ;incstack = 0
  3424   001698  0E00               	movlw	0
  3425   00169A  0100               	movlb	0	; () banked
  3426   00169C  6F77               	movwf	pow@sign& (0+255),b
  3427                           
  3428                           ; BSR set to: 0
  3429   00169E  516B               	movf	pow@x& (0+255),w,b
  3430   0016A0  116C               	iorwf	(pow@x+1)& (0+255),w,b
  3431   0016A2  116D               	iorwf	(pow@x+2)& (0+255),w,b
  3432   0016A4  A4D8               	btfss	status,2,c
  3433   0016A6  D01D               	goto	l4735
  3434                           
  3435                           ; BSR set to: 0
  3436   0016A8  0E00               	movlw	0
  3437   0016AA  6E0E               	movwf	___ftge@ff1^0,c
  3438   0016AC  0E00               	movlw	0
  3439   0016AE  6E0F               	movwf	(___ftge@ff1+1)^0,c
  3440   0016B0  0E00               	movlw	0
  3441   0016B2  6E10               	movwf	(___ftge@ff1+2)^0,c
  3442   0016B4  C06E  F011         	movff	pow@y,___ftge@ff2
  3443   0016B8  C06F  F012         	movff	pow@y+1,___ftge@ff2+1
  3444   0016BC  C070  F013         	movff	pow@y+2,___ftge@ff2+2
  3445   0016C0  ECD4  F011         	call	___ftge	;wreg free
  3446   0016C4  A0D8               	btfss	status,0,c
  3447   0016C6  D005               	goto	l1020
  3448   0016C8  0E00               	movlw	0
  3449   0016CA  0100               	movlb	0	; () banked
  3450   0016CC  6FB0               	movwf	(_errno+1)& (0+255),b
  3451   0016CE  0E21               	movlw	33
  3452   0016D0  6FAF               	movwf	_errno& (0+255),b
  3453   0016D2                     l1020:
  3454   0016D2  0E00               	movlw	0
  3455   0016D4  0100               	movlb	0	; () banked
  3456   0016D6  6F6B               	movwf	?_pow& (0+255),b
  3457   0016D8  0E00               	movlw	0
  3458   0016DA  6F6C               	movwf	(?_pow+1)& (0+255),b
  3459   0016DC  0E00               	movlw	0
  3460   0016DE  6F6D               	movwf	(?_pow+2)& (0+255),b
  3461   0016E0  0012               	return	
  3462   0016E2                     l4735:
  3463                           
  3464                           ; BSR set to: 0
  3465   0016E2  516E               	movf	pow@y& (0+255),w,b
  3466   0016E4  116F               	iorwf	(pow@y+1)& (0+255),w,b
  3467   0016E6  1170               	iorwf	(pow@y+2)& (0+255),w,b
  3468   0016E8  A4D8               	btfss	status,2,c
  3469   0016EA  D007               	goto	l4741
  3470                           
  3471                           ; BSR set to: 0
  3472   0016EC  0E00               	movlw	0
  3473   0016EE  6F6B               	movwf	?_pow& (0+255),b
  3474   0016F0  0E80               	movlw	128
  3475   0016F2  6F6C               	movwf	(?_pow+1)& (0+255),b
  3476   0016F4  0E3F               	movlw	63
  3477   0016F6  6F6D               	movwf	(?_pow+2)& (0+255),b
  3478   0016F8  0012               	return	
  3479   0016FA                     l4741:
  3480                           
  3481                           ; BSR set to: 0
  3482   0016FA  AF6D               	btfss	(pow@x+2)& (0+255),7,b
  3483   0016FC  D041               	goto	l4753
  3484                           
  3485                           ; BSR set to: 0
  3486   0016FE  C06E  F01A         	movff	pow@y,___fttol@f1
  3487   001702  C06F  F01B         	movff	pow@y+1,___fttol@f1+1
  3488   001706  C070  F01C         	movff	pow@y+2,___fttol@f1+2
  3489   00170A  ECED  F00D         	call	___fttol	;wreg free
  3490   00170E  C01A  F078         	movff	?___fttol,pow@yi
  3491   001712  C01B  F079         	movff	?___fttol+1,pow@yi+1
  3492   001716  C01C  F07A         	movff	?___fttol+2,pow@yi+2
  3493   00171A  C01D  F07B         	movff	?___fttol+3,pow@yi+3
  3494   00171E  C078  F016         	movff	pow@yi,___lltoft@c
  3495   001722  C079  F017         	movff	pow@yi+1,___lltoft@c+1
  3496   001726  C07A  F018         	movff	pow@yi+2,___lltoft@c+2
  3497   00172A  C07B  F019         	movff	pow@yi+3,___lltoft@c+3
  3498   00172E  EC0E  F012         	call	___lltoft	;wreg free
  3499   001732  0100               	movlb	0	; () banked
  3500   001734  516E               	movf	pow@y& (0+255),w,b
  3501   001736  1816               	xorwf	?___lltoft^0,w,c
  3502   001738  E107               	bnz	u5940
  3503   00173A  516F               	movf	(pow@y+1)& (0+255),w,b
  3504   00173C  1817               	xorwf	(?___lltoft+1)^0,w,c
  3505   00173E  E104               	bnz	u5940
  3506   001740  5170               	movf	(pow@y+2)& (0+255),w,b
  3507   001742  1818               	xorwf	(?___lltoft+2)^0,w,c
  3508   001744  B4D8               	btfsc	status,2,c
  3509   001746  D00B               	goto	l4749
  3510   001748                     u5940:
  3511                           
  3512                           ; BSR set to: 0
  3513   001748  0E00               	movlw	0
  3514   00174A  6FB0               	movwf	(_errno+1)& (0+255),b
  3515   00174C  0E21               	movlw	33
  3516   00174E  6FAF               	movwf	_errno& (0+255),b
  3517   001750  0E00               	movlw	0
  3518   001752  6F6B               	movwf	?_pow& (0+255),b
  3519   001754  0E00               	movlw	0
  3520   001756  6F6C               	movwf	(?_pow+1)& (0+255),b
  3521   001758  0E00               	movlw	0
  3522   00175A  6F6D               	movwf	(?_pow+2)& (0+255),b
  3523   00175C  0012               	return	
  3524   00175E                     l4749:
  3525                           
  3526                           ; BSR set to: 0
  3527   00175E  5178               	movf	pow@yi& (0+255),w,b
  3528   001760  0B01               	andlw	1
  3529   001762  6F77               	movwf	pow@sign& (0+255),b
  3530                           
  3531                           ; BSR set to: 0
  3532   001764  C06B  F00E         	movff	pow@x,___ftneg@f1
  3533   001768  C06C  F00F         	movff	pow@x+1,___ftneg@f1+1
  3534   00176C  C06D  F010         	movff	pow@x+2,___ftneg@f1+2
  3535   001770  EC7F  F014         	call	___ftneg	;wreg free
  3536   001774  C00E  F06B         	movff	?___ftneg,pow@x
  3537   001778  C00F  F06C         	movff	?___ftneg+1,pow@x+1
  3538   00177C  C010  F06D         	movff	?___ftneg+2,pow@x+2
  3539   001780                     l4753:
  3540                           
  3541                           ; BSR set to: 0
  3542   001780  C06B  F03F         	movff	pow@x,log@x
  3543   001784  C06C  F040         	movff	pow@x+1,log@x+1
  3544   001788  C06D  F041         	movff	pow@x+2,log@x+2
  3545   00178C  EC0A  F00C         	call	_log	;wreg free
  3546   001790  C03F  F071         	movff	?_log,_pow$908
  3547   001794  C040  F072         	movff	?_log+1,_pow$908+1
  3548   001798  C041  F073         	movff	?_log+2,_pow$908+2
  3549   00179C  C071  F01A         	movff	_pow$908,___ftmul@f1
  3550   0017A0  C072  F01B         	movff	_pow$908+1,___ftmul@f1+1
  3551   0017A4  C073  F01C         	movff	_pow$908+2,___ftmul@f1+2
  3552   0017A8  C06E  F01D         	movff	pow@y,___ftmul@f2
  3553   0017AC  C06F  F01E         	movff	pow@y+1,___ftmul@f2+1
  3554   0017B0  C070  F01F         	movff	pow@y+2,___ftmul@f2+2
  3555   0017B4  EC93  F00C         	call	___ftmul	;wreg free
  3556   0017B8  C01A  F074         	movff	?___ftmul,_pow$909
  3557   0017BC  C01B  F075         	movff	?___ftmul+1,_pow$909+1
  3558   0017C0  C01C  F076         	movff	?___ftmul+2,_pow$909+2
  3559   0017C4  C074  F062         	movff	_pow$909,exp@x
  3560   0017C8  C075  F063         	movff	_pow$909+1,exp@x+1
  3561   0017CC  C076  F064         	movff	_pow$909+2,exp@x+2
  3562   0017D0  EC83  F009         	call	_exp	;wreg free
  3563   0017D4  C062  F06B         	movff	?_exp,pow@x
  3564   0017D8  C063  F06C         	movff	?_exp+1,pow@x+1
  3565   0017DC  C064  F06D         	movff	?_exp+2,pow@x+2
  3566   0017E0  0100               	movlb	0	; () banked
  3567   0017E2  5177               	movf	pow@sign& (0+255),w,b
  3568   0017E4  B4D8               	btfsc	status,2,c
  3569   0017E6  D00F               	goto	l1025
  3570                           
  3571                           ; BSR set to: 0
  3572   0017E8  C06B  F00E         	movff	pow@x,___ftneg@f1
  3573   0017EC  C06C  F00F         	movff	pow@x+1,___ftneg@f1+1
  3574   0017F0  C06D  F010         	movff	pow@x+2,___ftneg@f1+2
  3575   0017F4  EC7F  F014         	call	___ftneg	;wreg free
  3576   0017F8  C00E  F06B         	movff	?___ftneg,?_pow
  3577   0017FC  C00F  F06C         	movff	?___ftneg+1,?_pow+1
  3578   001800  C010  F06D         	movff	?___ftneg+2,?_pow+2
  3579   001804  0012               	return	
  3580   001806                     l1025:
  3581                           
  3582                           ; BSR set to: 0
  3583   001806  C06B  F06B         	movff	pow@x,?_pow
  3584   00180A  C06C  F06C         	movff	pow@x+1,?_pow+1
  3585   00180E  C06D  F06D         	movff	pow@x+2,?_pow+2
  3586                           
  3587                           ; BSR set to: 0
  3588   001812  0012               	return		;funcret
  3589   001814                     __end_of_pow:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _log *****************
  3593 ;; Defined at:
  3594 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\log.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  x               3   62[COMRAM] unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  exponent        2   65[COMRAM] int 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  3   62[COMRAM] int 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 3F/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3608 ;;      Params:         3       0       0       0       0       0       0       0       0
  3609 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3611 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3612 ;;Total ram usage:        5 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; Hardware stack levels required when called: 8
  3615 ;; This function calls:
  3616 ;;		___awtoft
  3617 ;;		___ftadd
  3618 ;;		___ftmul
  3619 ;;		_eval_poly
  3620 ;;		_frexp
  3621 ;; This function is called by:
  3622 ;;		_pow
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text8
  3627   001814                     __ptext8:
  3628                           	callstack 0
  3629   001814                     _log:
  3630                           	callstack 21
  3631                           
  3632                           ; BSR set to: 0
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;incstack = 0
  3636   001814  AE41               	btfss	(log@x+2)^0,7,c
  3637   001816  D00B               	goto	l4665
  3638                           
  3639                           ; BSR set to: 0
  3640   001818  0E00               	movlw	0
  3641   00181A  6FB0               	movwf	(_errno+1)& (0+255),b
  3642   00181C  0E21               	movlw	33
  3643   00181E  6FAF               	movwf	_errno& (0+255),b
  3644   001820  0E00               	movlw	0
  3645   001822  6E3F               	movwf	?_log^0,c
  3646   001824  0E00               	movlw	0
  3647   001826  6E40               	movwf	(?_log+1)^0,c
  3648   001828  0E00               	movlw	0
  3649   00182A  6E41               	movwf	(?_log+2)^0,c
  3650   00182C  0012               	return	
  3651   00182E                     l4665:
  3652                           
  3653                           ; BSR set to: 0
  3654   00182E  503F               	movf	log@x^0,w,c
  3655   001830  1040               	iorwf	(log@x+1)^0,w,c
  3656   001832  1041               	iorwf	(log@x+2)^0,w,c
  3657   001834  A4D8               	btfss	status,2,c
  3658   001836  D00B               	goto	l4671
  3659                           
  3660                           ; BSR set to: 0
  3661   001838  0E00               	movlw	0
  3662   00183A  6FB0               	movwf	(_errno+1)& (0+255),b
  3663   00183C  0E22               	movlw	34
  3664   00183E  6FAF               	movwf	_errno& (0+255),b
  3665   001840  0E00               	movlw	0
  3666   001842  6E3F               	movwf	?_log^0,c
  3667   001844  0E00               	movlw	0
  3668   001846  6E40               	movwf	(?_log+1)^0,c
  3669   001848  0E00               	movlw	0
  3670   00184A  6E41               	movwf	(?_log+2)^0,c
  3671   00184C  0012               	return	
  3672   00184E                     l4671:
  3673                           
  3674                           ; BSR set to: 0
  3675   00184E  0E00               	movlw	0
  3676   001850  6E1D               	movwf	___ftmul@f2^0,c
  3677   001852  0E00               	movlw	0
  3678   001854  6E1E               	movwf	(___ftmul@f2+1)^0,c
  3679   001856  0E40               	movlw	64
  3680   001858  6E1F               	movwf	(___ftmul@f2+2)^0,c
  3681   00185A  0E42               	movlw	low log@exponent
  3682   00185C  6E11               	movwf	frexp@eptr^0,c
  3683   00185E  C03F  F00E         	movff	log@x,frexp@value
  3684   001862  C040  F00F         	movff	log@x+1,frexp@value+1
  3685   001866  C041  F010         	movff	log@x+2,frexp@value+2
  3686   00186A  EC1A  F011         	call	_frexp	;wreg free
  3687   00186E  C00E  F01A         	movff	?_frexp,___ftmul@f1
  3688   001872  C00F  F01B         	movff	?_frexp+1,___ftmul@f1+1
  3689   001876  C010  F01C         	movff	?_frexp+2,___ftmul@f1+2
  3690   00187A  EC93  F00C         	call	___ftmul	;wreg free
  3691   00187E  C01A  F029         	movff	?___ftmul,___ftadd@f1
  3692   001882  C01B  F02A         	movff	?___ftmul+1,___ftadd@f1+1
  3693   001886  C01C  F02B         	movff	?___ftmul+2,___ftadd@f1+2
  3694   00188A  0E00               	movlw	0
  3695   00188C  6E2C               	movwf	___ftadd@f2^0,c
  3696   00188E  0E80               	movlw	128
  3697   001890  6E2D               	movwf	(___ftadd@f2+1)^0,c
  3698   001892  0EBF               	movlw	191
  3699   001894  6E2E               	movwf	(___ftadd@f2+2)^0,c
  3700   001896  EC78  F00A         	call	___ftadd	;wreg free
  3701   00189A  C029  F03F         	movff	?___ftadd,log@x
  3702   00189E  C02A  F040         	movff	?___ftadd+1,log@x+1
  3703   0018A2  C02B  F041         	movff	?___ftadd+2,log@x+2
  3704   0018A6  0642               	decf	log@exponent^0,f,c
  3705   0018A8  A0D8               	btfss	status,0,c
  3706   0018AA  0643               	decf	(log@exponent+1)^0,f,c
  3707   0018AC  C03F  F035         	movff	log@x,eval_poly@x
  3708   0018B0  C040  F036         	movff	log@x+1,eval_poly@x+1
  3709   0018B4  C041  F037         	movff	log@x+2,eval_poly@x+2
  3710   0018B8  0E1F               	movlw	low log@coeff
  3711   0018BA  6E38               	movwf	eval_poly@d^0,c
  3712   0018BC  0E00               	movlw	0
  3713   0018BE  6E3A               	movwf	(eval_poly@n+1)^0,c
  3714   0018C0  0E08               	movlw	8
  3715   0018C2  6E39               	movwf	eval_poly@n^0,c
  3716   0018C4  EC37  F010         	call	_eval_poly	;wreg free
  3717   0018C8  C035  F03F         	movff	?_eval_poly,log@x
  3718   0018CC  C036  F040         	movff	?_eval_poly+1,log@x+1
  3719   0018D0  C037  F041         	movff	?_eval_poly+2,log@x+2
  3720   0018D4  0E72               	movlw	114
  3721   0018D6  6E1D               	movwf	___ftmul@f2^0,c
  3722   0018D8  0E31               	movlw	49
  3723   0018DA  6E1E               	movwf	(___ftmul@f2+1)^0,c
  3724   0018DC  0E3F               	movlw	63
  3725   0018DE  6E1F               	movwf	(___ftmul@f2+2)^0,c
  3726   0018E0  C042  F016         	movff	log@exponent,___awtoft@c
  3727   0018E4  C043  F017         	movff	log@exponent+1,___awtoft@c+1
  3728   0018E8  EC16  F014         	call	___awtoft	;wreg free
  3729   0018EC  C016  F01A         	movff	?___awtoft,___ftmul@f1
  3730   0018F0  C017  F01B         	movff	?___awtoft+1,___ftmul@f1+1
  3731   0018F4  C018  F01C         	movff	?___awtoft+2,___ftmul@f1+2
  3732   0018F8  EC93  F00C         	call	___ftmul	;wreg free
  3733   0018FC  C01A  F029         	movff	?___ftmul,___ftadd@f1
  3734   001900  C01B  F02A         	movff	?___ftmul+1,___ftadd@f1+1
  3735   001904  C01C  F02B         	movff	?___ftmul+2,___ftadd@f1+2
  3736   001908  C03F  F02C         	movff	log@x,___ftadd@f2
  3737   00190C  C040  F02D         	movff	log@x+1,___ftadd@f2+1
  3738   001910  C041  F02E         	movff	log@x+2,___ftadd@f2+2
  3739   001914  EC78  F00A         	call	___ftadd	;wreg free
  3740   001918  C029  F03F         	movff	?___ftadd,?_log
  3741   00191C  C02A  F040         	movff	?___ftadd+1,?_log+1
  3742   001920  C02B  F041         	movff	?___ftadd+2,?_log+2
  3743   001924  0012               	return		;funcret
  3744   001926                     __end_of_log:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _exp *****************
  3748 ;; Defined at:
  3749 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\exp.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  x               3    2[BANK0 ] int 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  exponent        2    8[BANK0 ] int 
  3754 ;;  sign            1   10[BANK0 ] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  3    2[BANK0 ] unsigned char 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3764 ;;      Params:         0       3       0       0       0       0       0       0       0
  3765 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3767 ;;      Totals:         0       9       0       0       0       0       0       0       0
  3768 ;;Total ram usage:        9 bytes
  3769 ;; Hardware stack levels used: 1
  3770 ;; Hardware stack levels required when called: 8
  3771 ;; This function calls:
  3772 ;;		___awtoft
  3773 ;;		___ftdiv
  3774 ;;		___ftge
  3775 ;;		___ftmul
  3776 ;;		___ftneg
  3777 ;;		___ftsub
  3778 ;;		___fttol
  3779 ;;		_eval_poly
  3780 ;;		_floor
  3781 ;;		_ldexp
  3782 ;; This function is called by:
  3783 ;;		_pow
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text9
  3788   001306                     __ptext9:
  3789                           	callstack 0
  3790   001306                     _exp:
  3791                           	callstack 21
  3792                           
  3793                           ;incstack = 0
  3794   001306  0100               	movlb	0	; () banked
  3795   001308  5162               	movf	exp@x& (0+255),w,b
  3796   00130A  1163               	iorwf	(exp@x+1)& (0+255),w,b
  3797   00130C  1164               	iorwf	(exp@x+2)& (0+255),w,b
  3798   00130E  A4D8               	btfss	status,2,c
  3799   001310  D007               	goto	l4687
  3800                           
  3801                           ; BSR set to: 0
  3802   001312  0E00               	movlw	0
  3803   001314  6F62               	movwf	?_exp& (0+255),b
  3804   001316  0E80               	movlw	128
  3805   001318  6F63               	movwf	(?_exp+1)& (0+255),b
  3806   00131A  0E3F               	movlw	63
  3807   00131C  6F64               	movwf	(?_exp+2)& (0+255),b
  3808   00131E  0012               	return	
  3809   001320                     l4687:
  3810                           
  3811                           ; BSR set to: 0
  3812   001320  0E72               	movlw	114
  3813   001322  6E0E               	movwf	___ftge@ff1^0,c
  3814   001324  0E31               	movlw	49
  3815   001326  6E0F               	movwf	(___ftge@ff1+1)^0,c
  3816   001328  0E44               	movlw	68
  3817   00132A  6E10               	movwf	(___ftge@ff1+2)^0,c
  3818   00132C  C062  F011         	movff	exp@x,___ftge@ff2
  3819   001330  C063  F012         	movff	exp@x+1,___ftge@ff2+1
  3820   001334  C064  F013         	movff	exp@x+2,___ftge@ff2+2
  3821   001338  ECD4  F011         	call	___ftge	;wreg free
  3822   00133C  B0D8               	btfsc	status,0,c
  3823   00133E  D00C               	goto	l4693
  3824   001340  0E00               	movlw	0
  3825   001342  0100               	movlb	0	; () banked
  3826   001344  6FB0               	movwf	(_errno+1)& (0+255),b
  3827   001346  0E22               	movlw	34
  3828   001348  6FAF               	movwf	_errno& (0+255),b
  3829   00134A  0EFF               	movlw	255
  3830   00134C  6F62               	movwf	?_exp& (0+255),b
  3831   00134E  0E7F               	movlw	127
  3832   001350  6F63               	movwf	(?_exp+1)& (0+255),b
  3833   001352  0E7F               	movlw	127
  3834   001354  6F64               	movwf	(?_exp+2)& (0+255),b
  3835   001356  0012               	return	
  3836   001358                     l4693:
  3837   001358  C062  F00E         	movff	exp@x,___ftge@ff1
  3838   00135C  C063  F00F         	movff	exp@x+1,___ftge@ff1+1
  3839   001360  C064  F010         	movff	exp@x+2,___ftge@ff1+2
  3840   001364  0E49               	movlw	73
  3841   001366  6E11               	movwf	___ftge@ff2^0,c
  3842   001368  0E3A               	movlw	58
  3843   00136A  6E12               	movwf	(___ftge@ff2+1)^0,c
  3844   00136C  0EC4               	movlw	196
  3845   00136E  6E13               	movwf	(___ftge@ff2+2)^0,c
  3846   001370  ECD4  F011         	call	___ftge	;wreg free
  3847   001374  B0D8               	btfsc	status,0,c
  3848   001376  D00C               	goto	l4699
  3849   001378  0E00               	movlw	0
  3850   00137A  0100               	movlb	0	; () banked
  3851   00137C  6FB0               	movwf	(_errno+1)& (0+255),b
  3852   00137E  0E22               	movlw	34
  3853   001380  6FAF               	movwf	_errno& (0+255),b
  3854   001382  0E00               	movlw	0
  3855   001384  6F62               	movwf	?_exp& (0+255),b
  3856   001386  0E00               	movlw	0
  3857   001388  6F63               	movwf	(?_exp+1)& (0+255),b
  3858   00138A  0E00               	movlw	0
  3859   00138C  6F64               	movwf	(?_exp+2)& (0+255),b
  3860   00138E  0012               	return	
  3861   001390                     l4699:
  3862   001390  0100               	movlb	0	; () banked
  3863   001392  AF64               	btfss	(exp@x+2)& (0+255),7,b
  3864   001394  D002               	goto	u5850
  3865   001396  0E01               	movlw	1
  3866   001398  D001               	goto	u5860
  3867   00139A                     u5850:
  3868   00139A  0E00               	movlw	0
  3869   00139C                     u5860:
  3870   00139C  6F6A               	movwf	exp@sign& (0+255),b
  3871                           
  3872                           ; BSR set to: 0
  3873   00139E  516A               	movf	exp@sign& (0+255),w,b
  3874   0013A0  B4D8               	btfsc	status,2,c
  3875   0013A2  D00E               	goto	l1044
  3876                           
  3877                           ; BSR set to: 0
  3878   0013A4  C062  F00E         	movff	exp@x,___ftneg@f1
  3879   0013A8  C063  F00F         	movff	exp@x+1,___ftneg@f1+1
  3880   0013AC  C064  F010         	movff	exp@x+2,___ftneg@f1+2
  3881   0013B0  EC7F  F014         	call	___ftneg	;wreg free
  3882   0013B4  C00E  F062         	movff	?___ftneg,exp@x
  3883   0013B8  C00F  F063         	movff	?___ftneg+1,exp@x+1
  3884   0013BC  C010  F064         	movff	?___ftneg+2,exp@x+2
  3885   0013C0                     l1044:
  3886                           
  3887                           ; BSR set to: 0
  3888   0013C0  C062  F01A         	movff	exp@x,___ftmul@f1
  3889   0013C4  C063  F01B         	movff	exp@x+1,___ftmul@f1+1
  3890   0013C8  C064  F01C         	movff	exp@x+2,___ftmul@f1+2
  3891   0013CC  0EAA               	movlw	170
  3892   0013CE  6E1D               	movwf	___ftmul@f2^0,c
  3893   0013D0  0EB8               	movlw	184
  3894   0013D2  6E1E               	movwf	(___ftmul@f2+1)^0,c
  3895   0013D4  0E3F               	movlw	63
  3896   0013D6  6E1F               	movwf	(___ftmul@f2+2)^0,c
  3897   0013D8  EC93  F00C         	call	___ftmul	;wreg free
  3898   0013DC  C01A  F062         	movff	?___ftmul,exp@x
  3899   0013E0  C01B  F063         	movff	?___ftmul+1,exp@x+1
  3900   0013E4  C01C  F064         	movff	?___ftmul+2,exp@x+2
  3901   0013E8  C062  F035         	movff	exp@x,floor@x
  3902   0013EC  C063  F036         	movff	exp@x+1,floor@x+1
  3903   0013F0  C064  F037         	movff	exp@x+2,floor@x+2
  3904   0013F4  EC80  F00D         	call	_floor	;wreg free
  3905   0013F8  C035  F065         	movff	?_floor,_exp$910
  3906   0013FC  C036  F066         	movff	?_floor+1,_exp$910+1
  3907   001400  C037  F067         	movff	?_floor+2,_exp$910+2
  3908   001404  C065  F01A         	movff	_exp$910,___fttol@f1
  3909   001408  C066  F01B         	movff	_exp$910+1,___fttol@f1+1
  3910   00140C  C067  F01C         	movff	_exp$910+2,___fttol@f1+2
  3911   001410  ECED  F00D         	call	___fttol	;wreg free
  3912   001414  C01A  F068         	movff	?___fttol,exp@exponent
  3913   001418  C01B  F069         	movff	?___fttol+1,exp@exponent+1
  3914   00141C  C062  F035         	movff	exp@x,___ftsub@f1
  3915   001420  C063  F036         	movff	exp@x+1,___ftsub@f1+1
  3916   001424  C064  F037         	movff	exp@x+2,___ftsub@f1+2
  3917   001428  C068  F016         	movff	exp@exponent,___awtoft@c
  3918   00142C  C069  F017         	movff	exp@exponent+1,___awtoft@c+1
  3919   001430  EC16  F014         	call	___awtoft	;wreg free
  3920   001434  C016  F038         	movff	?___awtoft,___ftsub@f2
  3921   001438  C017  F039         	movff	?___awtoft+1,___ftsub@f2+1
  3922   00143C  C018  F03A         	movff	?___awtoft+2,___ftsub@f2+2
  3923   001440  ECF6  F013         	call	___ftsub	;wreg free
  3924   001444  C035  F062         	movff	?___ftsub,exp@x
  3925   001448  C036  F063         	movff	?___ftsub+1,exp@x+1
  3926   00144C  C037  F064         	movff	?___ftsub+2,exp@x+2
  3927   001450  C062  F035         	movff	exp@x,eval_poly@x
  3928   001454  C063  F036         	movff	exp@x+1,eval_poly@x+1
  3929   001458  C064  F037         	movff	exp@x+2,eval_poly@x+2
  3930   00145C  0E01               	movlw	low exp@coeff
  3931   00145E  6E38               	movwf	eval_poly@d^0,c
  3932   001460  0E00               	movlw	0
  3933   001462  6E3A               	movwf	(eval_poly@n+1)^0,c
  3934   001464  0E09               	movlw	9
  3935   001466  6E39               	movwf	eval_poly@n^0,c
  3936   001468  EC37  F010         	call	_eval_poly	;wreg free
  3937   00146C  C035  F03F         	movff	?_eval_poly,ldexp@value
  3938   001470  C036  F040         	movff	?_eval_poly+1,ldexp@value+1
  3939   001474  C037  F041         	movff	?_eval_poly+2,ldexp@value+2
  3940   001478  C068  F042         	movff	exp@exponent,ldexp@newexp
  3941   00147C  C069  F043         	movff	exp@exponent+1,ldexp@newexp+1
  3942   001480  EC24  F00F         	call	_ldexp	;wreg free
  3943   001484  C03F  F062         	movff	?_ldexp,exp@x
  3944   001488  C040  F063         	movff	?_ldexp+1,exp@x+1
  3945   00148C  C041  F064         	movff	?_ldexp+2,exp@x+2
  3946   001490  0100               	movlb	0	; () banked
  3947   001492  516A               	movf	exp@sign& (0+255),w,b
  3948   001494  B4D8               	btfsc	status,2,c
  3949   001496  D025               	goto	l1045
  3950                           
  3951                           ; BSR set to: 0
  3952   001498  2962               	incf	exp@x& (0+255),w,b
  3953   00149A  E10E               	bnz	l4721
  3954   00149C  0E7F               	movlw	127
  3955   00149E  1963               	xorwf	(exp@x+1)& (0+255),w,b
  3956   0014A0  E10B               	bnz	l4721
  3957   0014A2  0E7F               	movlw	127
  3958   0014A4  1964               	xorwf	(exp@x+2)& (0+255),w,b
  3959   0014A6  A4D8               	btfss	status,2,c
  3960   0014A8  D007               	goto	l4721
  3961                           
  3962                           ; BSR set to: 0
  3963   0014AA  0E00               	movlw	0
  3964   0014AC  6F62               	movwf	?_exp& (0+255),b
  3965   0014AE  0E00               	movlw	0
  3966   0014B0  6F63               	movwf	(?_exp+1)& (0+255),b
  3967   0014B2  0E00               	movlw	0
  3968   0014B4  6F64               	movwf	(?_exp+2)& (0+255),b
  3969   0014B6  0012               	return	
  3970   0014B8                     l4721:
  3971                           
  3972                           ; BSR set to: 0
  3973   0014B8  0E00               	movlw	0
  3974   0014BA  6E16               	movwf	___ftdiv@f1^0,c
  3975   0014BC  0E80               	movlw	128
  3976   0014BE  6E17               	movwf	(___ftdiv@f1+1)^0,c
  3977   0014C0  0E3F               	movlw	63
  3978   0014C2  6E18               	movwf	(___ftdiv@f1+2)^0,c
  3979   0014C4  C062  F019         	movff	exp@x,___ftdiv@f2
  3980   0014C8  C063  F01A         	movff	exp@x+1,___ftdiv@f2+1
  3981   0014CC  C064  F01B         	movff	exp@x+2,___ftdiv@f2+2
  3982   0014D0  EC0D  F00D         	call	___ftdiv	;wreg free
  3983   0014D4  C016  F062         	movff	?___ftdiv,?_exp
  3984   0014D8  C017  F063         	movff	?___ftdiv+1,?_exp+1
  3985   0014DC  C018  F064         	movff	?___ftdiv+2,?_exp+2
  3986   0014E0  0012               	return	
  3987   0014E2                     l1045:
  3988                           
  3989                           ; BSR set to: 0
  3990   0014E2  C062  F062         	movff	exp@x,?_exp
  3991   0014E6  C063  F063         	movff	exp@x+1,?_exp+1
  3992   0014EA  C064  F064         	movff	exp@x+2,?_exp+2
  3993   0014EE  0012               	return		;funcret
  3994   0014F0                     __end_of_exp:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _ldexp *****************
  3998 ;; Defined at:
  3999 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\frexp.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  value           3   62[COMRAM] unsigned char 
  4002 ;;  newexp          2   65[COMRAM] int 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  3   62[COMRAM] int 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4014 ;;      Params:         5       0       0       0       0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4016 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4017 ;;      Totals:         5       2       0       0       0       0       0       0       0
  4018 ;;Total ram usage:        7 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; Hardware stack levels required when called: 5
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_exp
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text10
  4029   001E48                     __ptext10:
  4030                           	callstack 0
  4031   001E48                     _ldexp:
  4032                           	callstack 23
  4033                           
  4034                           ;incstack = 0
  4035   001E48  503F               	movf	ldexp@value^0,w,c
  4036   001E4A  1040               	iorwf	(ldexp@value+1)^0,w,c
  4037   001E4C  1041               	iorwf	(ldexp@value+2)^0,w,c
  4038   001E4E  A4D8               	btfss	status,2,c
  4039   001E50  D007               	goto	l4619
  4040   001E52  0E00               	movlw	0
  4041   001E54  6E3F               	movwf	?_ldexp^0,c
  4042   001E56  0E00               	movlw	0
  4043   001E58  6E40               	movwf	(?_ldexp+1)^0,c
  4044   001E5A  0E00               	movlw	0
  4045   001E5C  6E41               	movwf	(?_ldexp+2)^0,c
  4046   001E5E  0012               	return	
  4047   001E60                     l4619:
  4048   001E60  5041               	movf	(ldexp@value+2)^0,w,c
  4049   001E62  0B7F               	andlw	127
  4050   001E64  0100               	movlb	0	; () banked
  4051   001E66  6F60               	movwf	??_ldexp& (0+255),b
  4052   001E68  6B61               	clrf	(??_ldexp+1)& (0+255),b
  4053   001E6A  90D8               	bcf	status,0,c
  4054   001E6C  3760               	rlcf	??_ldexp& (0+255),f,b
  4055   001E6E  3761               	rlcf	(??_ldexp+1)& (0+255),f,b
  4056   001E70  5160               	movf	??_ldexp& (0+255),w,b
  4057   001E72  2642               	addwf	ldexp@newexp^0,f,c
  4058   001E74  5161               	movf	(??_ldexp+1)& (0+255),w,b
  4059   001E76  2243               	addwfc	(ldexp@newexp+1)^0,f,c
  4060   001E78  AE40               	btfss	(ldexp@value+1)^0,7,c
  4061   001E7A  D003               	goto	u5750
  4062   001E7C  6B60               	clrf	??_ldexp& (0+255),b
  4063   001E7E  2B60               	incf	??_ldexp& (0+255),f,b
  4064   001E80  D002               	goto	u5758
  4065   001E82                     u5750:
  4066   001E82  0100               	movlb	0	; () banked
  4067   001E84  6B60               	clrf	??_ldexp& (0+255),b
  4068   001E86                     u5758:
  4069   001E86  5160               	movf	??_ldexp& (0+255),w,b
  4070   001E88  2642               	addwf	ldexp@newexp^0,f,c
  4071   001E8A  0E00               	movlw	0
  4072   001E8C  2243               	addwfc	(ldexp@newexp+1)^0,f,c
  4073   001E8E  AE43               	btfss	(ldexp@newexp+1)^0,7,c
  4074   001E90  D00B               	goto	l4627
  4075                           
  4076                           ; BSR set to: 0
  4077   001E92  0E00               	movlw	0
  4078   001E94  6FB0               	movwf	(_errno+1)& (0+255),b
  4079   001E96  0E22               	movlw	34
  4080   001E98  6FAF               	movwf	_errno& (0+255),b
  4081   001E9A  0E00               	movlw	0
  4082   001E9C  6E3F               	movwf	?_ldexp^0,c
  4083   001E9E  0E00               	movlw	0
  4084   001EA0  6E40               	movwf	(?_ldexp+1)^0,c
  4085   001EA2  0E00               	movlw	0
  4086   001EA4  6E41               	movwf	(?_ldexp+2)^0,c
  4087   001EA6  0012               	return	
  4088   001EA8                     l4627:
  4089                           
  4090                           ; BSR set to: 0
  4091   001EA8  BE43               	btfsc	(ldexp@newexp+1)^0,7,c
  4092   001EAA  D017               	goto	l4643
  4093   001EAC  0443               	decf	(ldexp@newexp+1)^0,w,c
  4094   001EAE  A0D8               	btfss	status,0,c
  4095   001EB0  D014               	goto	l4643
  4096                           
  4097                           ; BSR set to: 0
  4098   001EB2  0E00               	movlw	0
  4099   001EB4  6FB0               	movwf	(_errno+1)& (0+255),b
  4100   001EB6  0E22               	movlw	34
  4101   001EB8  6FAF               	movwf	_errno& (0+255),b
  4102                           
  4103                           ; BSR set to: 0
  4104   001EBA  AE41               	btfss	(ldexp@value+2)^0,7,c
  4105   001EBC  D007               	goto	l4639
  4106                           
  4107                           ; BSR set to: 0
  4108   001EBE  0EFF               	movlw	255
  4109   001EC0  6E3F               	movwf	?_ldexp^0,c
  4110   001EC2  0E7F               	movlw	127
  4111   001EC4  6E40               	movwf	(?_ldexp+1)^0,c
  4112   001EC6  0EFF               	movlw	255
  4113   001EC8  6E41               	movwf	(?_ldexp+2)^0,c
  4114   001ECA  0012               	return	
  4115   001ECC                     l4639:
  4116                           
  4117                           ; BSR set to: 0
  4118   001ECC  0EFF               	movlw	255
  4119   001ECE  6E3F               	movwf	?_ldexp^0,c
  4120   001ED0  0E7F               	movlw	127
  4121   001ED2  6E40               	movwf	(?_ldexp+1)^0,c
  4122   001ED4  0E7F               	movlw	127
  4123   001ED6  6E41               	movwf	(?_ldexp+2)^0,c
  4124   001ED8  0012               	return	
  4125   001EDA                     l4643:
  4126                           
  4127                           ; BSR set to: 0
  4128   001EDA  3443               	rlcf	(ldexp@newexp+1)^0,w,c
  4129   001EDC  3043               	rrcf	(ldexp@newexp+1)^0,w,c
  4130   001EDE  6F61               	movwf	(??_ldexp+1)& (0+255),b
  4131   001EE0  3042               	rrcf	ldexp@newexp^0,w,c
  4132   001EE2  6F60               	movwf	??_ldexp& (0+255),b
  4133   001EE4  5041               	movf	(ldexp@value+2)^0,w,c
  4134   001EE6  1960               	xorwf	??_ldexp& (0+255),w,b
  4135   001EE8  0B80               	andlw	-128
  4136   001EEA  1960               	xorwf	??_ldexp& (0+255),w,b
  4137   001EEC  6E41               	movwf	(ldexp@value+2)^0,c
  4138   001EEE  C042  F060         	movff	ldexp@newexp,??_ldexp
  4139   001EF2  0E01               	movlw	1
  4140   001EF4  1760               	andwf	??_ldexp& (0+255),f,b
  4141   001EF6  3360               	rrcf	??_ldexp& (0+255),f,b
  4142   001EF8  3360               	rrcf	??_ldexp& (0+255),f,b
  4143   001EFA  5040               	movf	(ldexp@value+1)^0,w,c
  4144   001EFC  1960               	xorwf	??_ldexp& (0+255),w,b
  4145   001EFE  0B7F               	andlw	-129
  4146   001F00  1960               	xorwf	??_ldexp& (0+255),w,b
  4147   001F02  6E40               	movwf	(ldexp@value+1)^0,c
  4148                           
  4149                           ; BSR set to: 0
  4150   001F04  C03F  F03F         	movff	ldexp@value,?_ldexp
  4151   001F08  C040  F040         	movff	ldexp@value+1,?_ldexp+1
  4152   001F0C  C041  F041         	movff	ldexp@value+2,?_ldexp+2
  4153   001F10  0012               	return		;funcret
  4154   001F12                     __end_of_ldexp:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _floor *****************
  4158 ;; Defined at:
  4159 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\floor.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  x               3   52[COMRAM] int 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  i               3   55[COMRAM] int 
  4164 ;;  expon           2   58[COMRAM] int 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  3   52[COMRAM] int 
  4167 ;; Registers used:
  4168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4174 ;;      Params:         3       0       0       0       0       0       0       0       0
  4175 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4177 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4178 ;;Total ram usage:        8 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; Hardware stack levels required when called: 7
  4181 ;; This function calls:
  4182 ;;		___altoft
  4183 ;;		___ftadd
  4184 ;;		___ftge
  4185 ;;		___fttol
  4186 ;;		_frexp
  4187 ;; This function is called by:
  4188 ;;		_exp
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text11
  4193   001B00                     __ptext11:
  4194                           	callstack 0
  4195   001B00                     _floor:
  4196                           	callstack 21
  4197                           
  4198                           ;incstack = 0
  4199   001B00  C035  F00E         	movff	floor@x,frexp@value
  4200   001B04  C036  F00F         	movff	floor@x+1,frexp@value+1
  4201   001B08  C037  F010         	movff	floor@x+2,frexp@value+2
  4202   001B0C  0E3B               	movlw	low floor@expon
  4203   001B0E  6E11               	movwf	frexp@eptr^0,c
  4204   001B10  EC1A  F011         	call	_frexp	;wreg free
  4205   001B14  AE3C               	btfss	(floor@expon+1)^0,7,c
  4206   001B16  D010               	goto	l4597
  4207   001B18  AE37               	btfss	(floor@x+2)^0,7,c
  4208   001B1A  D007               	goto	l4593
  4209   001B1C  0E00               	movlw	0
  4210   001B1E  6E35               	movwf	?_floor^0,c
  4211   001B20  0E80               	movlw	128
  4212   001B22  6E36               	movwf	(?_floor+1)^0,c
  4213   001B24  0EBF               	movlw	191
  4214   001B26  6E37               	movwf	(?_floor+2)^0,c
  4215   001B28  0012               	return	
  4216   001B2A                     l4593:
  4217   001B2A  0E00               	movlw	0
  4218   001B2C  6E35               	movwf	?_floor^0,c
  4219   001B2E  0E00               	movlw	0
  4220   001B30  6E36               	movwf	(?_floor+1)^0,c
  4221   001B32  0E00               	movlw	0
  4222   001B34  6E37               	movwf	(?_floor+2)^0,c
  4223   001B36  0012               	return	
  4224   001B38                     l4597:
  4225   001B38  503C               	movf	(floor@expon+1)^0,w,c
  4226   001B3A  E104               	bnz	u5710
  4227   001B3C  0E15               	movlw	21
  4228   001B3E  5C3B               	subwf	floor@expon^0,w,c
  4229   001B40  A0D8               	btfss	status,0,c
  4230   001B42  D007               	goto	l4601
  4231   001B44                     u5710:
  4232   001B44  C035  F035         	movff	floor@x,?_floor
  4233   001B48  C036  F036         	movff	floor@x+1,?_floor+1
  4234   001B4C  C037  F037         	movff	floor@x+2,?_floor+2
  4235   001B50  0012               	return	
  4236   001B52                     l4601:
  4237   001B52  C035  F01A         	movff	floor@x,___fttol@f1
  4238   001B56  C036  F01B         	movff	floor@x+1,___fttol@f1+1
  4239   001B5A  C037  F01C         	movff	floor@x+2,___fttol@f1+2
  4240   001B5E  ECED  F00D         	call	___fttol	;wreg free
  4241   001B62  C01A  F029         	movff	?___fttol,___altoft@c
  4242   001B66  C01B  F02A         	movff	?___fttol+1,___altoft@c+1
  4243   001B6A  C01C  F02B         	movff	?___fttol+2,___altoft@c+2
  4244   001B6E  C01D  F02C         	movff	?___fttol+3,___altoft@c+3
  4245   001B72  EC98  F011         	call	___altoft	;wreg free
  4246   001B76  C029  F038         	movff	?___altoft,floor@i
  4247   001B7A  C02A  F039         	movff	?___altoft+1,floor@i+1
  4248   001B7E  C02B  F03A         	movff	?___altoft+2,floor@i+2
  4249   001B82  C035  F00E         	movff	floor@x,___ftge@ff1
  4250   001B86  C036  F00F         	movff	floor@x+1,___ftge@ff1+1
  4251   001B8A  C037  F010         	movff	floor@x+2,___ftge@ff1+2
  4252   001B8E  C038  F011         	movff	floor@i,___ftge@ff2
  4253   001B92  C039  F012         	movff	floor@i+1,___ftge@ff2+1
  4254   001B96  C03A  F013         	movff	floor@i+2,___ftge@ff2+2
  4255   001B9A  ECD4  F011         	call	___ftge	;wreg free
  4256   001B9E  B0D8               	btfsc	status,0,c
  4257   001BA0  D015               	goto	l1061
  4258   001BA2  C038  F029         	movff	floor@i,___ftadd@f1
  4259   001BA6  C039  F02A         	movff	floor@i+1,___ftadd@f1+1
  4260   001BAA  C03A  F02B         	movff	floor@i+2,___ftadd@f1+2
  4261   001BAE  0E00               	movlw	0
  4262   001BB0  6E2C               	movwf	___ftadd@f2^0,c
  4263   001BB2  0E80               	movlw	128
  4264   001BB4  6E2D               	movwf	(___ftadd@f2+1)^0,c
  4265   001BB6  0EBF               	movlw	191
  4266   001BB8  6E2E               	movwf	(___ftadd@f2+2)^0,c
  4267   001BBA  EC78  F00A         	call	___ftadd	;wreg free
  4268   001BBE  C029  F035         	movff	?___ftadd,?_floor
  4269   001BC2  C02A  F036         	movff	?___ftadd+1,?_floor+1
  4270   001BC6  C02B  F037         	movff	?___ftadd+2,?_floor+2
  4271   001BCA  0012               	return	
  4272   001BCC                     l1061:
  4273   001BCC  C038  F035         	movff	floor@i,?_floor
  4274   001BD0  C039  F036         	movff	floor@i+1,?_floor+1
  4275   001BD4  C03A  F037         	movff	floor@i+2,?_floor+2
  4276   001BD8  0012               	return		;funcret
  4277   001BDA                     __end_of_floor:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _frexp *****************
  4281 ;; Defined at:
  4282 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\frexp.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  value           3   13[COMRAM] int 
  4285 ;;  eptr            1   16[COMRAM] PTR int 
  4286 ;;		 -> log@exponent(2), floor@expon(2), 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  3   13[COMRAM] PTR int 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4298 ;;      Params:         4       0       0       0       0       0       0       0       0
  4299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4300 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4301 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4302 ;;Total ram usage:        6 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 5
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_floor
  4309 ;;		_log
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text12
  4314   002234                     __ptext12:
  4315                           	callstack 0
  4316   002234                     _frexp:
  4317                           	callstack 23
  4318                           
  4319                           ;incstack = 0
  4320   002234  500E               	movf	frexp@value^0,w,c
  4321   002236  100F               	iorwf	(frexp@value+1)^0,w,c
  4322   002238  1010               	iorwf	(frexp@value+2)^0,w,c
  4323   00223A  A4D8               	btfss	status,2,c
  4324   00223C  D00E               	goto	l4501
  4325   00223E  5011               	movf	frexp@eptr^0,w,c
  4326   002240  6ED9               	movwf	fsr2l,c
  4327   002242  6ADA               	clrf	fsr2h,c
  4328   002244  0E00               	movlw	0
  4329   002246  6EDE               	movwf	postinc2,c
  4330   002248  0E00               	movlw	0
  4331   00224A  6EDD               	movwf	postdec2,c
  4332   00224C  0E00               	movlw	0
  4333   00224E  6E0E               	movwf	?_frexp^0,c
  4334   002250  0E00               	movlw	0
  4335   002252  6E0F               	movwf	(?_frexp+1)^0,c
  4336   002254  0E00               	movlw	0
  4337   002256  6E10               	movwf	(?_frexp+2)^0,c
  4338   002258  0012               	return	
  4339   00225A                     l4501:
  4340   00225A  5010               	movf	(frexp@value+2)^0,w,c
  4341   00225C  0B7F               	andlw	127
  4342   00225E  6E12               	movwf	??_frexp^0,c
  4343   002260  6A13               	clrf	(??_frexp+1)^0,c
  4344   002262  90D8               	bcf	status,0,c
  4345   002264  3612               	rlcf	??_frexp^0,f,c
  4346   002266  3613               	rlcf	(??_frexp+1)^0,f,c
  4347   002268  5011               	movf	frexp@eptr^0,w,c
  4348   00226A  6ED9               	movwf	fsr2l,c
  4349   00226C  6ADA               	clrf	fsr2h,c
  4350   00226E  C012  FFDE         	movff	??_frexp,postinc2
  4351   002272  C013  FFDD         	movff	??_frexp+1,postdec2
  4352   002276  5011               	movf	frexp@eptr^0,w,c
  4353   002278  6ED9               	movwf	fsr2l,c
  4354   00227A  6ADA               	clrf	fsr2h,c
  4355   00227C  AE0F               	btfss	(frexp@value+1)^0,7,c
  4356   00227E  D003               	goto	u5600
  4357   002280  6A12               	clrf	??_frexp^0,c
  4358   002282  2A12               	incf	??_frexp^0,f,c
  4359   002284  D001               	goto	u5608
  4360   002286                     u5600:
  4361   002286  6A12               	clrf	??_frexp^0,c
  4362   002288                     u5608:
  4363   002288  5012               	movf	??_frexp^0,w,c
  4364   00228A  12DE               	iorwf	postinc2,f,c
  4365   00228C  0E00               	movlw	0
  4366   00228E  12DD               	iorwf	postdec2,f,c
  4367   002290  5011               	movf	frexp@eptr^0,w,c
  4368   002292  6ED9               	movwf	fsr2l,c
  4369   002294  6ADA               	clrf	fsr2h,c
  4370   002296  0E82               	movlw	130
  4371   002298  26DE               	addwf	postinc2,f,c
  4372   00229A  0EFF               	movlw	255
  4373   00229C  22DD               	addwfc	postdec2,f,c
  4374   00229E  5010               	movf	(frexp@value+2)^0,w,c
  4375   0022A0  0B80               	andlw	-128
  4376   0022A2  093F               	iorlw	63
  4377   0022A4  6E10               	movwf	(frexp@value+2)^0,c
  4378   0022A6  9E0F               	bcf	(frexp@value+1)^0,7,c
  4379   0022A8  C00E  F00E         	movff	frexp@value,?_frexp
  4380   0022AC  C00F  F00F         	movff	frexp@value+1,?_frexp+1
  4381   0022B0  C010  F010         	movff	frexp@value+2,?_frexp+2
  4382   0022B4  0012               	return		;funcret
  4383   0022B6                     __end_of_frexp:
  4384                           	callstack 0
  4385                           
  4386 ;; *************** function ___fttol *****************
  4387 ;; Defined at:
  4388 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fttol.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  f1              3   25[COMRAM] float 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  lval            4   35[COMRAM] unsigned long 
  4393 ;;  exp1            1   39[COMRAM] unsigned char 
  4394 ;;  sign1           1   34[COMRAM] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  4   25[COMRAM] long 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4404 ;;      Params:         4       0       0       0       0       0       0       0       0
  4405 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4406 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4407 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4408 ;;Total ram usage:       15 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; Hardware stack levels required when called: 5
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_main
  4415 ;;		_Imprimir_Resultado
  4416 ;;		_pow
  4417 ;;		_exp
  4418 ;;		_floor
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text13
  4423   001BDA                     __ptext13:
  4424                           	callstack 0
  4425   001BDA                     ___fttol:
  4426                           	callstack 22
  4427                           
  4428                           ;incstack = 0
  4429   001BDA  C01C  F01E         	movff	___fttol@f1+2,??___fttol
  4430   001BDE  6A1F               	clrf	(??___fttol+1)^0,c
  4431   001BE0  6A20               	clrf	(??___fttol+2)^0,c
  4432   001BE2  341B               	rlcf	(___fttol@f1+1)^0,w,c
  4433   001BE4  361E               	rlcf	??___fttol^0,f,c
  4434   001BE6  E301               	bnc	u5511
  4435   001BE8  801F               	bsf	(??___fttol+1)^0,0,c
  4436   001BEA                     u5511:
  4437   001BEA  501E               	movf	??___fttol^0,w,c
  4438   001BEC  6E28               	movwf	___fttol@exp1^0,c
  4439   001BEE  5028               	movf	___fttol@exp1^0,w,c
  4440   001BF0  A4D8               	btfss	status,2,c
  4441   001BF2  D009               	goto	l4453
  4442   001BF4                     u5520:
  4443   001BF4  0E00               	movlw	0
  4444   001BF6  6E1A               	movwf	?___fttol^0,c
  4445   001BF8  0E00               	movlw	0
  4446   001BFA  6E1B               	movwf	(?___fttol+1)^0,c
  4447   001BFC  0E00               	movlw	0
  4448   001BFE  6E1C               	movwf	(?___fttol+2)^0,c
  4449   001C00  0E00               	movlw	0
  4450   001C02  6E1D               	movwf	(?___fttol+3)^0,c
  4451   001C04  0012               	return	
  4452   001C06                     l4453:
  4453   001C06  0E17               	movlw	23
  4454   001C08  6E1E               	movwf	??___fttol^0,c
  4455   001C0A  C01A  F01F         	movff	___fttol@f1,??___fttol+1
  4456   001C0E  C01B  F020         	movff	___fttol@f1+1,??___fttol+2
  4457   001C12  C01C  F021         	movff	___fttol@f1+2,??___fttol+3
  4458   001C16  281E               	incf	??___fttol^0,w,c
  4459   001C18  6E22               	movwf	(??___fttol+4)^0,c
  4460   001C1A  D004               	goto	u5530
  4461   001C1C                     u5535:
  4462   001C1C  90D8               	bcf	status,0,c
  4463   001C1E  3221               	rrcf	(??___fttol+3)^0,f,c
  4464   001C20  3220               	rrcf	(??___fttol+2)^0,f,c
  4465   001C22  321F               	rrcf	(??___fttol+1)^0,f,c
  4466   001C24                     u5530:
  4467   001C24  2E22               	decfsz	(??___fttol+4)^0,f,c
  4468   001C26  D7FA               	goto	u5535
  4469   001C28  501F               	movf	(??___fttol+1)^0,w,c
  4470   001C2A  6E23               	movwf	___fttol@sign1^0,c
  4471   001C2C  8E1B               	bsf	(___fttol@f1+1)^0,7,c
  4472   001C2E  0EFF               	movlw	255
  4473   001C30  161A               	andwf	___fttol@f1^0,f,c
  4474   001C32  0EFF               	movlw	255
  4475   001C34  161B               	andwf	(___fttol@f1+1)^0,f,c
  4476   001C36  0E00               	movlw	0
  4477   001C38  161C               	andwf	(___fttol@f1+2)^0,f,c
  4478   001C3A  501A               	movf	___fttol@f1^0,w,c
  4479   001C3C  6E24               	movwf	___fttol@lval^0,c
  4480   001C3E  501B               	movf	(___fttol@f1+1)^0,w,c
  4481   001C40  6E25               	movwf	(___fttol@lval+1)^0,c
  4482   001C42  501C               	movf	(___fttol@f1+2)^0,w,c
  4483   001C44  6E26               	movwf	(___fttol@lval+2)^0,c
  4484   001C46  6A27               	clrf	(___fttol@lval+3)^0,c
  4485   001C48  0E8E               	movlw	142
  4486   001C4A  5E28               	subwf	___fttol@exp1^0,f,c
  4487   001C4C  AE28               	btfss	___fttol@exp1^0,7,c
  4488   001C4E  D00D               	goto	l4475
  4489   001C50  5028               	movf	___fttol@exp1^0,w,c
  4490   001C52  0A80               	xorlw	128
  4491   001C54  0F8F               	addlw	143
  4492   001C56  A0D8               	btfss	status,0,c
  4493   001C58  D7CD               	goto	u5520
  4494   001C5A                     l4471:
  4495   001C5A  90D8               	bcf	status,0,c
  4496   001C5C  3227               	rrcf	(___fttol@lval+3)^0,f,c
  4497   001C5E  3226               	rrcf	(___fttol@lval+2)^0,f,c
  4498   001C60  3225               	rrcf	(___fttol@lval+1)^0,f,c
  4499   001C62  3224               	rrcf	___fttol@lval^0,f,c
  4500   001C64  3E28               	incfsz	___fttol@exp1^0,f,c
  4501   001C66  D7F9               	goto	l4471
  4502   001C68  D00D               	goto	u5570
  4503   001C6A                     l4475:
  4504   001C6A  0E17               	movlw	23
  4505   001C6C  6428               	cpfsgt	___fttol@exp1^0,c
  4506   001C6E  D007               	goto	l4483
  4507   001C70  D7C1               	goto	u5520
  4508   001C72                     l4481:
  4509   001C72  90D8               	bcf	status,0,c
  4510   001C74  3624               	rlcf	___fttol@lval^0,f,c
  4511   001C76  3625               	rlcf	(___fttol@lval+1)^0,f,c
  4512   001C78  3626               	rlcf	(___fttol@lval+2)^0,f,c
  4513   001C7A  3627               	rlcf	(___fttol@lval+3)^0,f,c
  4514   001C7C  0628               	decf	___fttol@exp1^0,f,c
  4515   001C7E                     l4483:
  4516   001C7E  5028               	movf	___fttol@exp1^0,w,c
  4517   001C80  A4D8               	btfss	status,2,c
  4518   001C82  D7F7               	goto	l4481
  4519   001C84                     u5570:
  4520   001C84  5023               	movf	___fttol@sign1^0,w,c
  4521   001C86  B4D8               	btfsc	status,2,c
  4522   001C88  D008               	goto	l4489
  4523   001C8A  1E27               	comf	(___fttol@lval+3)^0,f,c
  4524   001C8C  1E26               	comf	(___fttol@lval+2)^0,f,c
  4525   001C8E  1E25               	comf	(___fttol@lval+1)^0,f,c
  4526   001C90  6C24               	negf	___fttol@lval^0,c
  4527   001C92  0E00               	movlw	0
  4528   001C94  2225               	addwfc	(___fttol@lval+1)^0,f,c
  4529   001C96  2226               	addwfc	(___fttol@lval+2)^0,f,c
  4530   001C98  2227               	addwfc	(___fttol@lval+3)^0,f,c
  4531   001C9A                     l4489:
  4532   001C9A  C024  F01A         	movff	___fttol@lval,?___fttol
  4533   001C9E  C025  F01B         	movff	___fttol@lval+1,?___fttol+1
  4534   001CA2  C026  F01C         	movff	___fttol@lval+2,?___fttol+2
  4535   001CA6  C027  F01D         	movff	___fttol@lval+3,?___fttol+3
  4536   001CAA  0012               	return		;funcret
  4537   001CAC                     __end_of___fttol:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function ___ftge *****************
  4541 ;; Defined at:
  4542 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftge.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  ff1             3   13[COMRAM] float 
  4545 ;;  ff2             3   16[COMRAM] float 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;		None               void
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4557 ;;      Params:         6       0       0       0       0       0       0       0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4559 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4560 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4561 ;;Total ram usage:        9 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 5
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_pow
  4568 ;;		_exp
  4569 ;;		_floor
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text14
  4574   0023A8                     __ptext14:
  4575                           	callstack 0
  4576   0023A8                     ___ftge:
  4577                           	callstack 22
  4578                           
  4579                           ;incstack = 0
  4580   0023A8  AE10               	btfss	(___ftge@ff1+2)^0,7,c
  4581   0023AA  D00F               	goto	l4433
  4582   0023AC  0E00               	movlw	0
  4583   0023AE  6E14               	movwf	??___ftge^0,c
  4584   0023B0  0E00               	movlw	0
  4585   0023B2  6E15               	movwf	(??___ftge+1)^0,c
  4586   0023B4  0E80               	movlw	128
  4587   0023B6  6E16               	movwf	(??___ftge+2)^0,c
  4588   0023B8  500E               	movf	___ftge@ff1^0,w,c
  4589   0023BA  5C14               	subwf	??___ftge^0,w,c
  4590   0023BC  6E0E               	movwf	___ftge@ff1^0,c
  4591   0023BE  500F               	movf	(___ftge@ff1+1)^0,w,c
  4592   0023C0  5815               	subwfb	(??___ftge+1)^0,w,c
  4593   0023C2  6E0F               	movwf	(___ftge@ff1+1)^0,c
  4594   0023C4  5010               	movf	(___ftge@ff1+2)^0,w,c
  4595   0023C6  5816               	subwfb	(??___ftge+2)^0,w,c
  4596   0023C8  6E10               	movwf	(___ftge@ff1+2)^0,c
  4597   0023CA                     l4433:
  4598   0023CA  AE13               	btfss	(___ftge@ff2+2)^0,7,c
  4599   0023CC  D00F               	goto	l4437
  4600   0023CE  0E00               	movlw	0
  4601   0023D0  6E14               	movwf	??___ftge^0,c
  4602   0023D2  0E00               	movlw	0
  4603   0023D4  6E15               	movwf	(??___ftge+1)^0,c
  4604   0023D6  0E80               	movlw	128
  4605   0023D8  6E16               	movwf	(??___ftge+2)^0,c
  4606   0023DA  5011               	movf	___ftge@ff2^0,w,c
  4607   0023DC  5C14               	subwf	??___ftge^0,w,c
  4608   0023DE  6E11               	movwf	___ftge@ff2^0,c
  4609   0023E0  5012               	movf	(___ftge@ff2+1)^0,w,c
  4610   0023E2  5815               	subwfb	(??___ftge+1)^0,w,c
  4611   0023E4  6E12               	movwf	(___ftge@ff2+1)^0,c
  4612   0023E6  5013               	movf	(___ftge@ff2+2)^0,w,c
  4613   0023E8  5816               	subwfb	(??___ftge+2)^0,w,c
  4614   0023EA  6E13               	movwf	(___ftge@ff2+2)^0,c
  4615   0023EC                     l4437:
  4616   0023EC  0E00               	movlw	0
  4617   0023EE  1A0E               	xorwf	___ftge@ff1^0,f,c
  4618   0023F0  0E00               	movlw	0
  4619   0023F2  1A0F               	xorwf	(___ftge@ff1+1)^0,f,c
  4620   0023F4  0E80               	movlw	128
  4621   0023F6  1A10               	xorwf	(___ftge@ff1+2)^0,f,c
  4622   0023F8  0E00               	movlw	0
  4623   0023FA  1A11               	xorwf	___ftge@ff2^0,f,c
  4624   0023FC  0E00               	movlw	0
  4625   0023FE  1A12               	xorwf	(___ftge@ff2+1)^0,f,c
  4626   002400  0E80               	movlw	128
  4627   002402  1A13               	xorwf	(___ftge@ff2+2)^0,f,c
  4628   002404  5011               	movf	___ftge@ff2^0,w,c
  4629   002406  5C0E               	subwf	___ftge@ff1^0,w,c
  4630   002408  5012               	movf	(___ftge@ff2+1)^0,w,c
  4631   00240A  580F               	subwfb	(___ftge@ff1+1)^0,w,c
  4632   00240C  5013               	movf	(___ftge@ff2+2)^0,w,c
  4633   00240E  5810               	subwfb	(___ftge@ff1+2)^0,w,c
  4634   002410  B0D8               	btfsc	status,0,c
  4635   002412  D002               	goto	l4443
  4636   002414  90D8               	bcf	status,0,c
  4637   002416  0012               	return	
  4638   002418                     l4443:
  4639   002418  80D8               	bsf	status,0,c
  4640   00241A  0012               	return		;funcret
  4641   00241C                     __end_of___ftge:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function ___altoft *****************
  4645 ;; Defined at:
  4646 ;;		line 42 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\altoft.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  c               4   40[COMRAM] long 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  sign            1   49[COMRAM] unsigned char 
  4651 ;;  exp             1   48[COMRAM] unsigned char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  3   40[COMRAM] float 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4661 ;;      Params:         4       0       0       0       0       0       0       0       0
  4662 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4663 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4664 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4665 ;;Total ram usage:       10 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; Hardware stack levels required when called: 6
  4668 ;; This function calls:
  4669 ;;		___ftpack
  4670 ;; This function is called by:
  4671 ;;		_floor
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text15
  4676   002330                     __ptext15:
  4677                           	callstack 0
  4678   002330                     ___altoft:
  4679                           	callstack 21
  4680                           
  4681                           ;incstack = 0
  4682   002330  0E00               	movlw	0
  4683   002332  6E32               	movwf	___altoft@sign^0,c
  4684   002334  0E8E               	movlw	142
  4685   002336  6E31               	movwf	___altoft@exp^0,c
  4686   002338  AE2C               	btfss	(___altoft@c+3)^0,7,c
  4687   00233A  D011               	goto	l4305
  4688   00233C  1E2C               	comf	(___altoft@c+3)^0,f,c
  4689   00233E  1E2B               	comf	(___altoft@c+2)^0,f,c
  4690   002340  1E2A               	comf	(___altoft@c+1)^0,f,c
  4691   002342  6C29               	negf	___altoft@c^0,c
  4692   002344  0E00               	movlw	0
  4693   002346  222A               	addwfc	(___altoft@c+1)^0,f,c
  4694   002348  222B               	addwfc	(___altoft@c+2)^0,f,c
  4695   00234A  222C               	addwfc	(___altoft@c+3)^0,f,c
  4696   00234C  0E01               	movlw	1
  4697   00234E  6E32               	movwf	___altoft@sign^0,c
  4698   002350  D006               	goto	l4305
  4699   002352                     l4303:
  4700   002352  90D8               	bcf	status,0,c
  4701   002354  322C               	rrcf	(___altoft@c+3)^0,f,c
  4702   002356  322B               	rrcf	(___altoft@c+2)^0,f,c
  4703   002358  322A               	rrcf	(___altoft@c+1)^0,f,c
  4704   00235A  3229               	rrcf	___altoft@c^0,f,c
  4705   00235C  2A31               	incf	___altoft@exp^0,f,c
  4706   00235E                     l4305:
  4707   00235E  0E00               	movlw	0
  4708   002360  1429               	andwf	___altoft@c^0,w,c
  4709   002362  6E2D               	movwf	??___altoft^0,c
  4710   002364  0E00               	movlw	0
  4711   002366  142A               	andwf	(___altoft@c+1)^0,w,c
  4712   002368  6E2E               	movwf	(??___altoft+1)^0,c
  4713   00236A  0E00               	movlw	0
  4714   00236C  142B               	andwf	(___altoft@c+2)^0,w,c
  4715   00236E  6E2F               	movwf	(??___altoft+2)^0,c
  4716   002370  0EFF               	movlw	255
  4717   002372  142C               	andwf	(___altoft@c+3)^0,w,c
  4718   002374  6E30               	movwf	(??___altoft+3)^0,c
  4719   002376  502D               	movf	??___altoft^0,w,c
  4720   002378  102E               	iorwf	(??___altoft+1)^0,w,c
  4721   00237A  102F               	iorwf	(??___altoft+2)^0,w,c
  4722   00237C  1030               	iorwf	(??___altoft+3)^0,w,c
  4723   00237E  A4D8               	btfss	status,2,c
  4724   002380  D7E8               	goto	l4303
  4725   002382  C029  F00E         	movff	___altoft@c,___ftpack@arg
  4726   002386  C02A  F00F         	movff	___altoft@c+1,___ftpack@arg+1
  4727   00238A  C02B  F010         	movff	___altoft@c+2,___ftpack@arg+2
  4728   00238E  C031  F011         	movff	___altoft@exp,___ftpack@exp
  4729   002392  C032  F012         	movff	___altoft@sign,___ftpack@sign
  4730   002396  EC89  F00F         	call	___ftpack	;wreg free
  4731   00239A  C00E  F029         	movff	?___ftpack,?___altoft
  4732   00239E  C00F  F02A         	movff	?___ftpack+1,?___altoft+1
  4733   0023A2  C010  F02B         	movff	?___ftpack+2,?___altoft+2
  4734   0023A6  0012               	return		;funcret
  4735   0023A8                     __end_of___altoft:
  4736                           	callstack 0
  4737                           
  4738 ;; *************** function _eval_poly *****************
  4739 ;; Defined at:
  4740 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\evalpoly.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  x               3   52[COMRAM] float 
  4743 ;;  d               1   55[COMRAM] PTR const 
  4744 ;;		 -> log@coeff(27), exp@coeff(30), 
  4745 ;;  n               2   56[COMRAM] int 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  res             3   59[COMRAM] int 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  3   52[COMRAM] int 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4757 ;;      Params:         6       0       0       0       0       0       0       0       0
  4758 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4759 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4760 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4761 ;;Total ram usage:       10 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; Hardware stack levels required when called: 7
  4764 ;; This function calls:
  4765 ;;		___ftadd
  4766 ;;		___ftmul
  4767 ;; This function is called by:
  4768 ;;		_exp
  4769 ;;		_log
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text16
  4774   00206E                     __ptext16:
  4775                           	callstack 0
  4776   00206E                     _eval_poly:
  4777                           	callstack 21
  4778                           
  4779                           ;incstack = 0
  4780   00206E  5039               	movf	eval_poly@n^0,w,c
  4781   002070  0D03               	mullw	3
  4782   002072  5038               	movf	eval_poly@d^0,w,c
  4783   002074  24F3               	addwf	243,w,c
  4784   002076  6E3B               	movwf	??_eval_poly^0,c
  4785   002078  C03B  FFF6         	movff	??_eval_poly,tblptrl
  4786   00207C                     	if	1	;There is more than 1 active tblptr byte
  4787   00207C  0E08               	movlw	high __smallconst
  4788   00207E  6EF7               	movwf	tblptrh,c
  4789   002080                     	endif
  4790   002080                     	if	0	;tblptru may be non-zero
  4791   002080                     	endif
  4792   002080                     	if	0	;tblptru may be non-zero
  4793   002080                     	endif
  4794   002080  0009               	tblrd		*+
  4795   002082  CFF5 F03C          	movff	tablat,eval_poly@res
  4796   002086  0009               	tblrd		*+
  4797   002088  CFF5 F03D          	movff	tablat,eval_poly@res+1
  4798   00208C  000A               	tblrd		*-
  4799   00208E  CFF5 F03E          	movff	tablat,eval_poly@res+2
  4800   002092  D031               	goto	l4611
  4801   002094                     l4609:
  4802   002094  C03C  F01D         	movff	eval_poly@res,___ftmul@f2
  4803   002098  C03D  F01E         	movff	eval_poly@res+1,___ftmul@f2+1
  4804   00209C  C03E  F01F         	movff	eval_poly@res+2,___ftmul@f2+2
  4805   0020A0  C035  F01A         	movff	eval_poly@x,___ftmul@f1
  4806   0020A4  C036  F01B         	movff	eval_poly@x+1,___ftmul@f1+1
  4807   0020A8  C037  F01C         	movff	eval_poly@x+2,___ftmul@f1+2
  4808   0020AC  EC93  F00C         	call	___ftmul	;wreg free
  4809   0020B0  C01A  F029         	movff	?___ftmul,___ftadd@f1
  4810   0020B4  C01B  F02A         	movff	?___ftmul+1,___ftadd@f1+1
  4811   0020B8  C01C  F02B         	movff	?___ftmul+2,___ftadd@f1+2
  4812   0020BC  0639               	decf	eval_poly@n^0,f,c
  4813   0020BE  A0D8               	btfss	status,0,c
  4814   0020C0  063A               	decf	(eval_poly@n+1)^0,f,c
  4815   0020C2  5039               	movf	eval_poly@n^0,w,c
  4816   0020C4  0D03               	mullw	3
  4817   0020C6  5038               	movf	eval_poly@d^0,w,c
  4818   0020C8  24F3               	addwf	243,w,c
  4819   0020CA  6E3B               	movwf	??_eval_poly^0,c
  4820   0020CC  C03B  FFF6         	movff	??_eval_poly,tblptrl
  4821   0020D0                     	if	1	;There is more than 1 active tblptr byte
  4822   0020D0  0E08               	movlw	high __smallconst
  4823   0020D2  6EF7               	movwf	tblptrh,c
  4824   0020D4                     	endif
  4825   0020D4                     	if	0	;tblptru may be non-zero
  4826   0020D4                     	endif
  4827   0020D4                     	if	0	;tblptru may be non-zero
  4828   0020D4                     	endif
  4829   0020D4  0009               	tblrd		*+
  4830   0020D6  CFF5 F02C          	movff	tablat,___ftadd@f2
  4831   0020DA  0009               	tblrd		*+
  4832   0020DC  CFF5 F02D          	movff	tablat,___ftadd@f2+1
  4833   0020E0  000A               	tblrd		*-
  4834   0020E2  CFF5 F02E          	movff	tablat,___ftadd@f2+2
  4835   0020E6  EC78  F00A         	call	___ftadd	;wreg free
  4836   0020EA  C029  F03C         	movff	?___ftadd,eval_poly@res
  4837   0020EE  C02A  F03D         	movff	?___ftadd+1,eval_poly@res+1
  4838   0020F2  C02B  F03E         	movff	?___ftadd+2,eval_poly@res+2
  4839   0020F6                     l4611:
  4840   0020F6  5039               	movf	eval_poly@n^0,w,c
  4841   0020F8  103A               	iorwf	(eval_poly@n+1)^0,w,c
  4842   0020FA  A4D8               	btfss	status,2,c
  4843   0020FC  D7CB               	goto	l4609
  4844   0020FE  C03C  F035         	movff	eval_poly@res,?_eval_poly
  4845   002102  C03D  F036         	movff	eval_poly@res+1,?_eval_poly+1
  4846   002106  C03E  F037         	movff	eval_poly@res+2,?_eval_poly+2
  4847   00210A  0012               	return		;funcret
  4848   00210C                     __end_of_eval_poly:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function ___ftmul *****************
  4852 ;; Defined at:
  4853 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftmul.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  f1              3   25[COMRAM] float 
  4856 ;;  f2              3   28[COMRAM] float 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  f3_as_produc    3   35[COMRAM] unsigned um
  4859 ;;  sign            1   39[COMRAM] unsigned char 
  4860 ;;  cntr            1   38[COMRAM] unsigned char 
  4861 ;;  exp             1   34[COMRAM] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  3   25[COMRAM] float 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0, cstack
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4871 ;;      Params:         6       0       0       0       0       0       0       0       0
  4872 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4873 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4874 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4875 ;;Total ram usage:       15 bytes
  4876 ;; Hardware stack levels used: 1
  4877 ;; Hardware stack levels required when called: 6
  4878 ;; This function calls:
  4879 ;;		___ftpack
  4880 ;; This function is called by:
  4881 ;;		_pow
  4882 ;;		_exp
  4883 ;;		_eval_poly
  4884 ;;		_log
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text17
  4889   001926                     __ptext17:
  4890                           	callstack 0
  4891   001926                     ___ftmul:
  4892                           	callstack 21
  4893                           
  4894                           ;incstack = 0
  4895   001926  C01C  F020         	movff	___ftmul@f1+2,??___ftmul
  4896   00192A  6A21               	clrf	(??___ftmul+1)^0,c
  4897   00192C  6A22               	clrf	(??___ftmul+2)^0,c
  4898   00192E  341B               	rlcf	(___ftmul@f1+1)^0,w,c
  4899   001930  3620               	rlcf	??___ftmul^0,f,c
  4900   001932  E301               	bnc	u5421
  4901   001934  8021               	bsf	(??___ftmul+1)^0,0,c
  4902   001936                     u5421:
  4903   001936  5020               	movf	??___ftmul^0,w,c
  4904   001938  6E23               	movwf	___ftmul@exp^0,c
  4905   00193A  5023               	movf	___ftmul@exp^0,w,c
  4906   00193C  A4D8               	btfss	status,2,c
  4907   00193E  D007               	goto	l4387
  4908   001940  0E00               	movlw	0
  4909   001942  6E1A               	movwf	?___ftmul^0,c
  4910   001944  0E00               	movlw	0
  4911   001946  6E1B               	movwf	(?___ftmul+1)^0,c
  4912   001948  0E00               	movlw	0
  4913   00194A  6E1C               	movwf	(?___ftmul+2)^0,c
  4914   00194C  0012               	return	
  4915   00194E                     l4387:
  4916   00194E  C01F  F020         	movff	___ftmul@f2+2,??___ftmul
  4917   001952  6A21               	clrf	(??___ftmul+1)^0,c
  4918   001954  6A22               	clrf	(??___ftmul+2)^0,c
  4919   001956  341E               	rlcf	(___ftmul@f2+1)^0,w,c
  4920   001958  3620               	rlcf	??___ftmul^0,f,c
  4921   00195A  E301               	bnc	u5441
  4922   00195C  8021               	bsf	(??___ftmul+1)^0,0,c
  4923   00195E                     u5441:
  4924   00195E  5020               	movf	??___ftmul^0,w,c
  4925   001960  6E28               	movwf	___ftmul@sign^0,c
  4926   001962  5028               	movf	___ftmul@sign^0,w,c
  4927   001964  A4D8               	btfss	status,2,c
  4928   001966  D007               	goto	l4393
  4929   001968  0E00               	movlw	0
  4930   00196A  6E1A               	movwf	?___ftmul^0,c
  4931   00196C  0E00               	movlw	0
  4932   00196E  6E1B               	movwf	(?___ftmul+1)^0,c
  4933   001970  0E00               	movlw	0
  4934   001972  6E1C               	movwf	(?___ftmul+2)^0,c
  4935   001974  0012               	return	
  4936   001976                     l4393:
  4937   001976  5028               	movf	___ftmul@sign^0,w,c
  4938   001978  0F7B               	addlw	123
  4939   00197A  2623               	addwf	___ftmul@exp^0,f,c
  4940   00197C  C01C  F028         	movff	___ftmul@f1+2,___ftmul@sign
  4941   001980  501F               	movf	(___ftmul@f2+2)^0,w,c
  4942   001982  1A28               	xorwf	___ftmul@sign^0,f,c
  4943   001984  0E80               	movlw	128
  4944   001986  1628               	andwf	___ftmul@sign^0,f,c
  4945   001988  8E1B               	bsf	(___ftmul@f1+1)^0,7,c
  4946   00198A  8E1E               	bsf	(___ftmul@f2+1)^0,7,c
  4947   00198C  0EFF               	movlw	255
  4948   00198E  161D               	andwf	___ftmul@f2^0,f,c
  4949   001990  0EFF               	movlw	255
  4950   001992  161E               	andwf	(___ftmul@f2+1)^0,f,c
  4951   001994  0E00               	movlw	0
  4952   001996  161F               	andwf	(___ftmul@f2+2)^0,f,c
  4953   001998  0E00               	movlw	0
  4954   00199A  6E24               	movwf	___ftmul@f3_as_product^0,c
  4955   00199C  0E00               	movlw	0
  4956   00199E  6E25               	movwf	(___ftmul@f3_as_product+1)^0,c
  4957   0019A0  0E00               	movlw	0
  4958   0019A2  6E26               	movwf	(___ftmul@f3_as_product+2)^0,c
  4959   0019A4  0E07               	movlw	7
  4960   0019A6  6E27               	movwf	___ftmul@cntr^0,c
  4961   0019A8                     l4407:
  4962   0019A8  A01A               	btfss	___ftmul@f1^0,0,c
  4963   0019AA  D006               	goto	l4411
  4964   0019AC  501D               	movf	___ftmul@f2^0,w,c
  4965   0019AE  2624               	addwf	___ftmul@f3_as_product^0,f,c
  4966   0019B0  501E               	movf	(___ftmul@f2+1)^0,w,c
  4967   0019B2  2225               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4968   0019B4  501F               	movf	(___ftmul@f2+2)^0,w,c
  4969   0019B6  2226               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4970   0019B8                     l4411:
  4971   0019B8  90D8               	bcf	status,0,c
  4972   0019BA  321C               	rrcf	(___ftmul@f1+2)^0,f,c
  4973   0019BC  321B               	rrcf	(___ftmul@f1+1)^0,f,c
  4974   0019BE  321A               	rrcf	___ftmul@f1^0,f,c
  4975   0019C0  90D8               	bcf	status,0,c
  4976   0019C2  361D               	rlcf	___ftmul@f2^0,f,c
  4977   0019C4  361E               	rlcf	(___ftmul@f2+1)^0,f,c
  4978   0019C6  361F               	rlcf	(___ftmul@f2+2)^0,f,c
  4979   0019C8  2E27               	decfsz	___ftmul@cntr^0,f,c
  4980   0019CA  D7EE               	goto	l4407
  4981   0019CC  0E09               	movlw	9
  4982   0019CE  6E27               	movwf	___ftmul@cntr^0,c
  4983   0019D0                     l4417:
  4984   0019D0  A01A               	btfss	___ftmul@f1^0,0,c
  4985   0019D2  D006               	goto	l4421
  4986   0019D4  501D               	movf	___ftmul@f2^0,w,c
  4987   0019D6  2624               	addwf	___ftmul@f3_as_product^0,f,c
  4988   0019D8  501E               	movf	(___ftmul@f2+1)^0,w,c
  4989   0019DA  2225               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  4990   0019DC  501F               	movf	(___ftmul@f2+2)^0,w,c
  4991   0019DE  2226               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  4992   0019E0                     l4421:
  4993   0019E0  90D8               	bcf	status,0,c
  4994   0019E2  321C               	rrcf	(___ftmul@f1+2)^0,f,c
  4995   0019E4  321B               	rrcf	(___ftmul@f1+1)^0,f,c
  4996   0019E6  321A               	rrcf	___ftmul@f1^0,f,c
  4997   0019E8  90D8               	bcf	status,0,c
  4998   0019EA  3226               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  4999   0019EC  3225               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  5000   0019EE  3224               	rrcf	___ftmul@f3_as_product^0,f,c
  5001   0019F0  2E27               	decfsz	___ftmul@cntr^0,f,c
  5002   0019F2  D7EE               	goto	l4417
  5003   0019F4  C024  F00E         	movff	___ftmul@f3_as_product,___ftpack@arg
  5004   0019F8  C025  F00F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5005   0019FC  C026  F010         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5006   001A00  C023  F011         	movff	___ftmul@exp,___ftpack@exp
  5007   001A04  C028  F012         	movff	___ftmul@sign,___ftpack@sign
  5008   001A08  EC89  F00F         	call	___ftpack	;wreg free
  5009   001A0C  C00E  F01A         	movff	?___ftpack,?___ftmul
  5010   001A10  C00F  F01B         	movff	?___ftpack+1,?___ftmul+1
  5011   001A14  C010  F01C         	movff	?___ftpack+2,?___ftmul+2
  5012   001A18  0012               	return		;funcret
  5013   001A1A                     __end_of___ftmul:
  5014                           	callstack 0
  5015                           
  5016 ;; *************** function ___ftsub *****************
  5017 ;; Defined at:
  5018 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftsub.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  f1              3   52[COMRAM] float 
  5021 ;;  f2              3   55[COMRAM] float 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;		None
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  3   52[COMRAM] float 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5033 ;;      Params:         6       0       0       0       0       0       0       0       0
  5034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5036 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5037 ;;Total ram usage:        6 bytes
  5038 ;; Hardware stack levels used: 1
  5039 ;; Hardware stack levels required when called: 7
  5040 ;; This function calls:
  5041 ;;		___ftadd
  5042 ;; This function is called by:
  5043 ;;		_exp
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text18
  5048   0027EC                     __ptext18:
  5049                           	callstack 0
  5050   0027EC                     ___ftsub:
  5051                           	callstack 21
  5052                           
  5053                           ;incstack = 0
  5054   0027EC  5038               	movf	___ftsub@f2^0,w,c
  5055   0027EE  1039               	iorwf	(___ftsub@f2+1)^0,w,c
  5056   0027F0  103A               	iorwf	(___ftsub@f2+2)^0,w,c
  5057   0027F2  B4D8               	btfsc	status,2,c
  5058   0027F4  D006               	goto	l4563
  5059   0027F6  0E00               	movlw	0
  5060   0027F8  1A38               	xorwf	___ftsub@f2^0,f,c
  5061   0027FA  0E00               	movlw	0
  5062   0027FC  1A39               	xorwf	(___ftsub@f2+1)^0,f,c
  5063   0027FE  0E80               	movlw	128
  5064   002800  1A3A               	xorwf	(___ftsub@f2+2)^0,f,c
  5065   002802                     l4563:
  5066   002802  C035  F029         	movff	___ftsub@f1,___ftadd@f1
  5067   002806  C036  F02A         	movff	___ftsub@f1+1,___ftadd@f1+1
  5068   00280A  C037  F02B         	movff	___ftsub@f1+2,___ftadd@f1+2
  5069   00280E  C038  F02C         	movff	___ftsub@f2,___ftadd@f2
  5070   002812  C039  F02D         	movff	___ftsub@f2+1,___ftadd@f2+1
  5071   002816  C03A  F02E         	movff	___ftsub@f2+2,___ftadd@f2+2
  5072   00281A  EC78  F00A         	call	___ftadd	;wreg free
  5073   00281E  C029  F035         	movff	?___ftadd,?___ftsub
  5074   002822  C02A  F036         	movff	?___ftadd+1,?___ftsub+1
  5075   002826  C02B  F037         	movff	?___ftadd+2,?___ftsub+2
  5076   00282A  0012               	return		;funcret
  5077   00282C                     __end_of___ftsub:
  5078                           	callstack 0
  5079                           
  5080 ;; *************** function ___ftadd *****************
  5081 ;; Defined at:
  5082 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftadd.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  f1              3   40[COMRAM] float 
  5085 ;;  f2              3   43[COMRAM] float 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  exp1            1   51[COMRAM] unsigned char 
  5088 ;;  exp2            1   50[COMRAM] unsigned char 
  5089 ;;  sign            1   49[COMRAM] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  3   40[COMRAM] float 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0, cstack
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5099 ;;      Params:         6       0       0       0       0       0       0       0       0
  5100 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5101 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5102 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5103 ;;Total ram usage:       12 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; Hardware stack levels required when called: 6
  5106 ;; This function calls:
  5107 ;;		___ftpack
  5108 ;; This function is called by:
  5109 ;;		___ftsub
  5110 ;;		_eval_poly
  5111 ;;		_floor
  5112 ;;		_log
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text19
  5117   0014F0                     __ptext19:
  5118                           	callstack 0
  5119   0014F0                     ___ftadd:
  5120                           	callstack 21
  5121                           
  5122                           ;incstack = 0
  5123   0014F0  C02B  F02F         	movff	___ftadd@f1+2,??___ftadd
  5124   0014F4  6A30               	clrf	(??___ftadd+1)^0,c
  5125   0014F6  6A31               	clrf	(??___ftadd+2)^0,c
  5126   0014F8  342A               	rlcf	(___ftadd@f1+1)^0,w,c
  5127   0014FA  362F               	rlcf	??___ftadd^0,f,c
  5128   0014FC  E301               	bnc	u5211
  5129   0014FE  8030               	bsf	(??___ftadd+1)^0,0,c
  5130   001500                     u5211:
  5131   001500  502F               	movf	??___ftadd^0,w,c
  5132   001502  6E34               	movwf	___ftadd@exp1^0,c
  5133   001504  C02E  F02F         	movff	___ftadd@f2+2,??___ftadd
  5134   001508  6A30               	clrf	(??___ftadd+1)^0,c
  5135   00150A  6A31               	clrf	(??___ftadd+2)^0,c
  5136   00150C  342D               	rlcf	(___ftadd@f2+1)^0,w,c
  5137   00150E  362F               	rlcf	??___ftadd^0,f,c
  5138   001510  E301               	bnc	u5221
  5139   001512  8030               	bsf	(??___ftadd+1)^0,0,c
  5140   001514                     u5221:
  5141   001514  502F               	movf	??___ftadd^0,w,c
  5142   001516  6E33               	movwf	___ftadd@exp2^0,c
  5143   001518  5034               	movf	___ftadd@exp1^0,w,c
  5144   00151A  B4D8               	btfsc	status,2,c
  5145   00151C  D00A               	goto	u5250
  5146   00151E  5033               	movf	___ftadd@exp2^0,w,c
  5147   001520  5C34               	subwf	___ftadd@exp1^0,w,c
  5148   001522  B0D8               	btfsc	status,0,c
  5149   001524  D00D               	goto	l4319
  5150   001526  5034               	movf	___ftadd@exp1^0,w,c
  5151   001528  5C33               	subwf	___ftadd@exp2^0,w,c
  5152   00152A  6E2F               	movwf	??___ftadd^0,c
  5153   00152C  0E18               	movlw	24
  5154   00152E  642F               	cpfsgt	??___ftadd^0,c
  5155   001530  D007               	goto	l4319
  5156   001532                     u5250:
  5157   001532  C02C  F029         	movff	___ftadd@f2,?___ftadd
  5158   001536  C02D  F02A         	movff	___ftadd@f2+1,?___ftadd+1
  5159   00153A  C02E  F02B         	movff	___ftadd@f2+2,?___ftadd+2
  5160   00153E  0012               	return	
  5161   001540                     l4319:
  5162   001540  5033               	movf	___ftadd@exp2^0,w,c
  5163   001542  B4D8               	btfsc	status,2,c
  5164   001544  D00A               	goto	u5280
  5165   001546  5034               	movf	___ftadd@exp1^0,w,c
  5166   001548  5C33               	subwf	___ftadd@exp2^0,w,c
  5167   00154A  B0D8               	btfsc	status,0,c
  5168   00154C  D00D               	goto	l4325
  5169   00154E  5033               	movf	___ftadd@exp2^0,w,c
  5170   001550  5C34               	subwf	___ftadd@exp1^0,w,c
  5171   001552  6E2F               	movwf	??___ftadd^0,c
  5172   001554  0E18               	movlw	24
  5173   001556  642F               	cpfsgt	??___ftadd^0,c
  5174   001558  D007               	goto	l4325
  5175   00155A                     u5280:
  5176   00155A  C029  F029         	movff	___ftadd@f1,?___ftadd
  5177   00155E  C02A  F02A         	movff	___ftadd@f1+1,?___ftadd+1
  5178   001562  C02B  F02B         	movff	___ftadd@f1+2,?___ftadd+2
  5179   001566  0012               	return	
  5180   001568                     l4325:
  5181   001568  0E06               	movlw	6
  5182   00156A  6E32               	movwf	___ftadd@sign^0,c
  5183   00156C  BE2B               	btfsc	(___ftadd@f1+2)^0,7,c
  5184   00156E  8E32               	bsf	___ftadd@sign^0,7,c
  5185   001570  BE2E               	btfsc	(___ftadd@f2+2)^0,7,c
  5186   001572  8C32               	bsf	___ftadd@sign^0,6,c
  5187   001574  8E2A               	bsf	(___ftadd@f1+1)^0,7,c
  5188   001576  0EFF               	movlw	255
  5189   001578  1629               	andwf	___ftadd@f1^0,f,c
  5190   00157A  0EFF               	movlw	255
  5191   00157C  162A               	andwf	(___ftadd@f1+1)^0,f,c
  5192   00157E  0E00               	movlw	0
  5193   001580  162B               	andwf	(___ftadd@f1+2)^0,f,c
  5194   001582  8E2D               	bsf	(___ftadd@f2+1)^0,7,c
  5195   001584  0EFF               	movlw	255
  5196   001586  162C               	andwf	___ftadd@f2^0,f,c
  5197   001588  0EFF               	movlw	255
  5198   00158A  162D               	andwf	(___ftadd@f2+1)^0,f,c
  5199   00158C  0E00               	movlw	0
  5200   00158E  162E               	andwf	(___ftadd@f2+2)^0,f,c
  5201   001590  5033               	movf	___ftadd@exp2^0,w,c
  5202   001592  5C34               	subwf	___ftadd@exp1^0,w,c
  5203   001594  B0D8               	btfsc	status,0,c
  5204   001596  D01B               	goto	l4351
  5205   001598                     u5310:
  5206   001598  90D8               	bcf	status,0,c
  5207   00159A  362C               	rlcf	___ftadd@f2^0,f,c
  5208   00159C  362D               	rlcf	(___ftadd@f2+1)^0,f,c
  5209   00159E  362E               	rlcf	(___ftadd@f2+2)^0,f,c
  5210   0015A0  0633               	decf	___ftadd@exp2^0,f,c
  5211   0015A2  5034               	movf	___ftadd@exp1^0,w,c
  5212   0015A4  1833               	xorwf	___ftadd@exp2^0,w,c
  5213   0015A6  B4D8               	btfsc	status,2,c
  5214   0015A8  D00D               	goto	l4349
  5215   0015AA  0632               	decf	___ftadd@sign^0,f,c
  5216   0015AC  C032  F02F         	movff	___ftadd@sign,??___ftadd
  5217   0015B0  0E07               	movlw	7
  5218   0015B2  162F               	andwf	??___ftadd^0,f,c
  5219   0015B4  B4D8               	btfsc	status,2,c
  5220   0015B6  D006               	goto	l4349
  5221   0015B8  D7EF               	goto	u5310
  5222   0015BA                     l4347:
  5223   0015BA  90D8               	bcf	status,0,c
  5224   0015BC  322B               	rrcf	(___ftadd@f1+2)^0,f,c
  5225   0015BE  322A               	rrcf	(___ftadd@f1+1)^0,f,c
  5226   0015C0  3229               	rrcf	___ftadd@f1^0,f,c
  5227   0015C2  2A34               	incf	___ftadd@exp1^0,f,c
  5228   0015C4                     l4349:
  5229   0015C4  5033               	movf	___ftadd@exp2^0,w,c
  5230   0015C6  1834               	xorwf	___ftadd@exp1^0,w,c
  5231   0015C8  B4D8               	btfsc	status,2,c
  5232   0015CA  D01F               	goto	u5380
  5233   0015CC  D7F6               	goto	l4347
  5234   0015CE                     l4351:
  5235   0015CE  5034               	movf	___ftadd@exp1^0,w,c
  5236   0015D0  5C33               	subwf	___ftadd@exp2^0,w,c
  5237   0015D2  B0D8               	btfsc	status,0,c
  5238   0015D4  D01A               	goto	u5380
  5239   0015D6                     u5350:
  5240   0015D6  90D8               	bcf	status,0,c
  5241   0015D8  3629               	rlcf	___ftadd@f1^0,f,c
  5242   0015DA  362A               	rlcf	(___ftadd@f1+1)^0,f,c
  5243   0015DC  362B               	rlcf	(___ftadd@f1+2)^0,f,c
  5244   0015DE  0634               	decf	___ftadd@exp1^0,f,c
  5245   0015E0  5034               	movf	___ftadd@exp1^0,w,c
  5246   0015E2  1833               	xorwf	___ftadd@exp2^0,w,c
  5247   0015E4  B4D8               	btfsc	status,2,c
  5248   0015E6  D00D               	goto	l4361
  5249   0015E8  0632               	decf	___ftadd@sign^0,f,c
  5250   0015EA  C032  F02F         	movff	___ftadd@sign,??___ftadd
  5251   0015EE  0E07               	movlw	7
  5252   0015F0  162F               	andwf	??___ftadd^0,f,c
  5253   0015F2  B4D8               	btfsc	status,2,c
  5254   0015F4  D006               	goto	l4361
  5255   0015F6  D7EF               	goto	u5350
  5256   0015F8                     l4359:
  5257   0015F8  90D8               	bcf	status,0,c
  5258   0015FA  322E               	rrcf	(___ftadd@f2+2)^0,f,c
  5259   0015FC  322D               	rrcf	(___ftadd@f2+1)^0,f,c
  5260   0015FE  322C               	rrcf	___ftadd@f2^0,f,c
  5261   001600  2A33               	incf	___ftadd@exp2^0,f,c
  5262   001602                     l4361:
  5263   001602  5033               	movf	___ftadd@exp2^0,w,c
  5264   001604  1834               	xorwf	___ftadd@exp1^0,w,c
  5265   001606  A4D8               	btfss	status,2,c
  5266   001608  D7F7               	goto	l4359
  5267   00160A                     u5380:
  5268   00160A  AE32               	btfss	___ftadd@sign^0,7,c
  5269   00160C  D00C               	goto	l681
  5270   00160E  0EFF               	movlw	255
  5271   001610  1A29               	xorwf	___ftadd@f1^0,f,c
  5272   001612  0EFF               	movlw	255
  5273   001614  1A2A               	xorwf	(___ftadd@f1+1)^0,f,c
  5274   001616  0EFF               	movlw	255
  5275   001618  1A2B               	xorwf	(___ftadd@f1+2)^0,f,c
  5276   00161A  0E01               	movlw	1
  5277   00161C  2629               	addwf	___ftadd@f1^0,f,c
  5278   00161E  0E00               	movlw	0
  5279   001620  222A               	addwfc	(___ftadd@f1+1)^0,f,c
  5280   001622  0E00               	movlw	0
  5281   001624  222B               	addwfc	(___ftadd@f1+2)^0,f,c
  5282   001626                     l681:
  5283   001626  AC32               	btfss	___ftadd@sign^0,6,c
  5284   001628  D00C               	goto	l4367
  5285   00162A  0EFF               	movlw	255
  5286   00162C  1A2C               	xorwf	___ftadd@f2^0,f,c
  5287   00162E  0EFF               	movlw	255
  5288   001630  1A2D               	xorwf	(___ftadd@f2+1)^0,f,c
  5289   001632  0EFF               	movlw	255
  5290   001634  1A2E               	xorwf	(___ftadd@f2+2)^0,f,c
  5291   001636  0E01               	movlw	1
  5292   001638  262C               	addwf	___ftadd@f2^0,f,c
  5293   00163A  0E00               	movlw	0
  5294   00163C  222D               	addwfc	(___ftadd@f2+1)^0,f,c
  5295   00163E  0E00               	movlw	0
  5296   001640  222E               	addwfc	(___ftadd@f2+2)^0,f,c
  5297   001642                     l4367:
  5298   001642  0E00               	movlw	0
  5299   001644  6E32               	movwf	___ftadd@sign^0,c
  5300   001646  5029               	movf	___ftadd@f1^0,w,c
  5301   001648  262C               	addwf	___ftadd@f2^0,f,c
  5302   00164A  502A               	movf	(___ftadd@f1+1)^0,w,c
  5303   00164C  222D               	addwfc	(___ftadd@f2+1)^0,f,c
  5304   00164E  502B               	movf	(___ftadd@f1+2)^0,w,c
  5305   001650  222E               	addwfc	(___ftadd@f2+2)^0,f,c
  5306   001652  AE2E               	btfss	(___ftadd@f2+2)^0,7,c
  5307   001654  D00E               	goto	l4377
  5308   001656  0EFF               	movlw	255
  5309   001658  1A2C               	xorwf	___ftadd@f2^0,f,c
  5310   00165A  0EFF               	movlw	255
  5311   00165C  1A2D               	xorwf	(___ftadd@f2+1)^0,f,c
  5312   00165E  0EFF               	movlw	255
  5313   001660  1A2E               	xorwf	(___ftadd@f2+2)^0,f,c
  5314   001662  0E01               	movlw	1
  5315   001664  262C               	addwf	___ftadd@f2^0,f,c
  5316   001666  0E00               	movlw	0
  5317   001668  222D               	addwfc	(___ftadd@f2+1)^0,f,c
  5318   00166A  0E00               	movlw	0
  5319   00166C  222E               	addwfc	(___ftadd@f2+2)^0,f,c
  5320   00166E  0E01               	movlw	1
  5321   001670  6E32               	movwf	___ftadd@sign^0,c
  5322   001672                     l4377:
  5323   001672  C02C  F00E         	movff	___ftadd@f2,___ftpack@arg
  5324   001676  C02D  F00F         	movff	___ftadd@f2+1,___ftpack@arg+1
  5325   00167A  C02E  F010         	movff	___ftadd@f2+2,___ftpack@arg+2
  5326   00167E  C034  F011         	movff	___ftadd@exp1,___ftpack@exp
  5327   001682  C032  F012         	movff	___ftadd@sign,___ftpack@sign
  5328   001686  EC89  F00F         	call	___ftpack	;wreg free
  5329   00168A  C00E  F029         	movff	?___ftpack,?___ftadd
  5330   00168E  C00F  F02A         	movff	?___ftpack+1,?___ftadd+1
  5331   001692  C010  F02B         	movff	?___ftpack+2,?___ftadd+2
  5332   001696  0012               	return		;funcret
  5333   001698                     __end_of___ftadd:
  5334                           	callstack 0
  5335                           
  5336 ;; *************** function ___ftneg *****************
  5337 ;; Defined at:
  5338 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftneg.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  f1              3   13[COMRAM] float 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  3   13[COMRAM] float 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 3F/0
  5349 ;;		On exit  : 3F/0
  5350 ;;		Unchanged: 3F/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5352 ;;      Params:         3       0       0       0       0       0       0       0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5355 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5356 ;;Total ram usage:        3 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; Hardware stack levels required when called: 5
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_pow
  5363 ;;		_exp
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text20
  5368   0028FE                     __ptext20:
  5369                           	callstack 0
  5370   0028FE                     ___ftneg:
  5371                           	callstack 23
  5372                           
  5373                           ; BSR set to: 0
  5374                           
  5375                           ;incstack = 0
  5376   0028FE  500E               	movf	___ftneg@f1^0,w,c
  5377   002900  100F               	iorwf	(___ftneg@f1+1)^0,w,c
  5378   002902  1010               	iorwf	(___ftneg@f1+2)^0,w,c
  5379   002904  B4D8               	btfsc	status,2,c
  5380   002906  D006               	goto	l714
  5381                           
  5382                           ; BSR set to: 0
  5383   002908  0E00               	movlw	0
  5384   00290A  1A0E               	xorwf	___ftneg@f1^0,f,c
  5385   00290C  0E00               	movlw	0
  5386   00290E  1A0F               	xorwf	(___ftneg@f1+1)^0,f,c
  5387   002910  0E80               	movlw	128
  5388   002912  1A10               	xorwf	(___ftneg@f1+2)^0,f,c
  5389   002914                     l714:
  5390                           
  5391                           ; BSR set to: 0
  5392   002914  C00E  F00E         	movff	___ftneg@f1,?___ftneg
  5393   002918  C00F  F00F         	movff	___ftneg@f1+1,?___ftneg+1
  5394   00291C  C010  F010         	movff	___ftneg@f1+2,?___ftneg+2
  5395                           
  5396                           ; BSR set to: 0
  5397   002920  0012               	return		;funcret
  5398   002922                     __end_of___ftneg:
  5399                           	callstack 0
  5400                           
  5401 ;; *************** function ___ftdiv *****************
  5402 ;; Defined at:
  5403 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdiv.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  f1              3   21[COMRAM] float 
  5406 ;;  f2              3   24[COMRAM] float 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  f3              3   31[COMRAM] float 
  5409 ;;  sign            1   35[COMRAM] unsigned char 
  5410 ;;  exp             1   34[COMRAM] unsigned char 
  5411 ;;  cntr            1   30[COMRAM] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  3   21[COMRAM] float 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 3F/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5421 ;;      Params:         6       0       0       0       0       0       0       0       0
  5422 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5423 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5424 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5425 ;;Total ram usage:       15 bytes
  5426 ;; Hardware stack levels used: 1
  5427 ;; Hardware stack levels required when called: 6
  5428 ;; This function calls:
  5429 ;;		___ftpack
  5430 ;; This function is called by:
  5431 ;;		_exp
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text21
  5436   001A1A                     __ptext21:
  5437                           	callstack 0
  5438   001A1A                     ___ftdiv:
  5439                           	callstack 22
  5440                           
  5441                           ; BSR set to: 0
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;incstack = 0
  5445   001A1A  C018  F01C         	movff	___ftdiv@f1+2,??___ftdiv
  5446   001A1E  6A1D               	clrf	(??___ftdiv+1)^0,c
  5447   001A20  6A1E               	clrf	(??___ftdiv+2)^0,c
  5448   001A22  3417               	rlcf	(___ftdiv@f1+1)^0,w,c
  5449   001A24  361C               	rlcf	??___ftdiv^0,f,c
  5450   001A26  E301               	bnc	u5611
  5451   001A28  801D               	bsf	(??___ftdiv+1)^0,0,c
  5452   001A2A                     u5611:
  5453   001A2A  501C               	movf	??___ftdiv^0,w,c
  5454   001A2C  6E23               	movwf	___ftdiv@exp^0,c
  5455   001A2E  5023               	movf	___ftdiv@exp^0,w,c
  5456   001A30  A4D8               	btfss	status,2,c
  5457   001A32  D007               	goto	l4519
  5458                           
  5459                           ; BSR set to: 0
  5460   001A34  0E00               	movlw	0
  5461   001A36  6E16               	movwf	?___ftdiv^0,c
  5462   001A38  0E00               	movlw	0
  5463   001A3A  6E17               	movwf	(?___ftdiv+1)^0,c
  5464   001A3C  0E00               	movlw	0
  5465   001A3E  6E18               	movwf	(?___ftdiv+2)^0,c
  5466   001A40  0012               	return	
  5467   001A42                     l4519:
  5468                           
  5469                           ; BSR set to: 0
  5470   001A42  C01B  F01C         	movff	___ftdiv@f2+2,??___ftdiv
  5471   001A46  6A1D               	clrf	(??___ftdiv+1)^0,c
  5472   001A48  6A1E               	clrf	(??___ftdiv+2)^0,c
  5473   001A4A  341A               	rlcf	(___ftdiv@f2+1)^0,w,c
  5474   001A4C  361C               	rlcf	??___ftdiv^0,f,c
  5475   001A4E  E301               	bnc	u5631
  5476   001A50  801D               	bsf	(??___ftdiv+1)^0,0,c
  5477   001A52                     u5631:
  5478   001A52  501C               	movf	??___ftdiv^0,w,c
  5479   001A54  6E24               	movwf	___ftdiv@sign^0,c
  5480   001A56  5024               	movf	___ftdiv@sign^0,w,c
  5481   001A58  A4D8               	btfss	status,2,c
  5482   001A5A  D007               	goto	l4525
  5483                           
  5484                           ; BSR set to: 0
  5485   001A5C  0E00               	movlw	0
  5486   001A5E  6E16               	movwf	?___ftdiv^0,c
  5487   001A60  0E00               	movlw	0
  5488   001A62  6E17               	movwf	(?___ftdiv+1)^0,c
  5489   001A64  0E00               	movlw	0
  5490   001A66  6E18               	movwf	(?___ftdiv+2)^0,c
  5491   001A68  0012               	return	
  5492   001A6A                     l4525:
  5493                           
  5494                           ; BSR set to: 0
  5495   001A6A  0E00               	movlw	0
  5496   001A6C  6E20               	movwf	___ftdiv@f3^0,c
  5497   001A6E  0E00               	movlw	0
  5498   001A70  6E21               	movwf	(___ftdiv@f3+1)^0,c
  5499   001A72  0E00               	movlw	0
  5500   001A74  6E22               	movwf	(___ftdiv@f3+2)^0,c
  5501                           
  5502                           ; BSR set to: 0
  5503   001A76  5024               	movf	___ftdiv@sign^0,w,c
  5504   001A78  0F89               	addlw	137
  5505   001A7A  5E23               	subwf	___ftdiv@exp^0,f,c
  5506                           
  5507                           ; BSR set to: 0
  5508   001A7C  C018  F024         	movff	___ftdiv@f1+2,___ftdiv@sign
  5509                           
  5510                           ; BSR set to: 0
  5511   001A80  501B               	movf	(___ftdiv@f2+2)^0,w,c
  5512   001A82  1A24               	xorwf	___ftdiv@sign^0,f,c
  5513                           
  5514                           ; BSR set to: 0
  5515   001A84  0E80               	movlw	128
  5516   001A86  1624               	andwf	___ftdiv@sign^0,f,c
  5517                           
  5518                           ; BSR set to: 0
  5519   001A88  8E17               	bsf	(___ftdiv@f1+1)^0,7,c
  5520                           
  5521                           ; BSR set to: 0
  5522   001A8A  0EFF               	movlw	255
  5523   001A8C  1616               	andwf	___ftdiv@f1^0,f,c
  5524   001A8E  0EFF               	movlw	255
  5525   001A90  1617               	andwf	(___ftdiv@f1+1)^0,f,c
  5526   001A92  0E00               	movlw	0
  5527   001A94  1618               	andwf	(___ftdiv@f1+2)^0,f,c
  5528                           
  5529                           ; BSR set to: 0
  5530   001A96  8E1A               	bsf	(___ftdiv@f2+1)^0,7,c
  5531                           
  5532                           ; BSR set to: 0
  5533   001A98  0EFF               	movlw	255
  5534   001A9A  1619               	andwf	___ftdiv@f2^0,f,c
  5535   001A9C  0EFF               	movlw	255
  5536   001A9E  161A               	andwf	(___ftdiv@f2+1)^0,f,c
  5537   001AA0  0E00               	movlw	0
  5538   001AA2  161B               	andwf	(___ftdiv@f2+2)^0,f,c
  5539                           
  5540                           ; BSR set to: 0
  5541   001AA4  0E18               	movlw	24
  5542   001AA6  6E1F               	movwf	___ftdiv@cntr^0,c
  5543   001AA8                     l4545:
  5544                           
  5545                           ; BSR set to: 0
  5546   001AA8  90D8               	bcf	status,0,c
  5547   001AAA  3620               	rlcf	___ftdiv@f3^0,f,c
  5548   001AAC  3621               	rlcf	(___ftdiv@f3+1)^0,f,c
  5549   001AAE  3622               	rlcf	(___ftdiv@f3+2)^0,f,c
  5550                           
  5551                           ; BSR set to: 0
  5552   001AB0  5019               	movf	___ftdiv@f2^0,w,c
  5553   001AB2  5C16               	subwf	___ftdiv@f1^0,w,c
  5554   001AB4  501A               	movf	(___ftdiv@f2+1)^0,w,c
  5555   001AB6  5817               	subwfb	(___ftdiv@f1+1)^0,w,c
  5556   001AB8  501B               	movf	(___ftdiv@f2+2)^0,w,c
  5557   001ABA  5818               	subwfb	(___ftdiv@f1+2)^0,w,c
  5558   001ABC  A0D8               	btfss	status,0,c
  5559   001ABE  D007               	goto	l692
  5560                           
  5561                           ; BSR set to: 0
  5562   001AC0  5019               	movf	___ftdiv@f2^0,w,c
  5563   001AC2  5E16               	subwf	___ftdiv@f1^0,f,c
  5564   001AC4  501A               	movf	(___ftdiv@f2+1)^0,w,c
  5565   001AC6  5A17               	subwfb	(___ftdiv@f1+1)^0,f,c
  5566   001AC8  501B               	movf	(___ftdiv@f2+2)^0,w,c
  5567   001ACA  5A18               	subwfb	(___ftdiv@f1+2)^0,f,c
  5568                           
  5569                           ; BSR set to: 0
  5570   001ACC  8020               	bsf	___ftdiv@f3^0,0,c
  5571   001ACE                     l692:
  5572                           
  5573                           ; BSR set to: 0
  5574   001ACE  90D8               	bcf	status,0,c
  5575   001AD0  3616               	rlcf	___ftdiv@f1^0,f,c
  5576   001AD2  3617               	rlcf	(___ftdiv@f1+1)^0,f,c
  5577   001AD4  3618               	rlcf	(___ftdiv@f1+2)^0,f,c
  5578                           
  5579                           ; BSR set to: 0
  5580   001AD6  2E1F               	decfsz	___ftdiv@cntr^0,f,c
  5581   001AD8  D7E7               	goto	l4545
  5582                           
  5583                           ; BSR set to: 0
  5584   001ADA  C020  F00E         	movff	___ftdiv@f3,___ftpack@arg
  5585   001ADE  C021  F00F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5586   001AE2  C022  F010         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5587   001AE6  C023  F011         	movff	___ftdiv@exp,___ftpack@exp
  5588   001AEA  C024  F012         	movff	___ftdiv@sign,___ftpack@sign
  5589   001AEE  EC89  F00F         	call	___ftpack	;wreg free
  5590   001AF2  C00E  F016         	movff	?___ftpack,?___ftdiv
  5591   001AF6  C00F  F017         	movff	?___ftpack+1,?___ftdiv+1
  5592   001AFA  C010  F018         	movff	?___ftpack+2,?___ftdiv+2
  5593   001AFE  0012               	return		;funcret
  5594   001B00                     __end_of___ftdiv:
  5595                           	callstack 0
  5596                           
  5597 ;; *************** function ___awtoft *****************
  5598 ;; Defined at:
  5599 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awtoft.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  c               2   21[COMRAM] int 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  sign            1   24[COMRAM] unsigned char 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  3   21[COMRAM] float 
  5606 ;; Registers used:
  5607 ;;		wreg, status,2, status,0, cstack
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5613 ;;      Params:         3       0       0       0       0       0       0       0       0
  5614 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5616 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5617 ;;Total ram usage:        4 bytes
  5618 ;; Hardware stack levels used: 1
  5619 ;; Hardware stack levels required when called: 6
  5620 ;; This function calls:
  5621 ;;		___ftpack
  5622 ;; This function is called by:
  5623 ;;		_Imprimir_Resultado
  5624 ;;		_exp
  5625 ;;		_log
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text22
  5630   00282C                     __ptext22:
  5631                           	callstack 0
  5632   00282C                     ___awtoft:
  5633                           	callstack 22
  5634                           
  5635                           ;incstack = 0
  5636   00282C  0E00               	movlw	0
  5637   00282E  6E19               	movwf	___awtoft@sign^0,c
  5638   002830  AE17               	btfss	(___awtoft@c+1)^0,7,c
  5639   002832  D006               	goto	l4575
  5640   002834  6C16               	negf	___awtoft@c^0,c
  5641   002836  1E17               	comf	(___awtoft@c+1)^0,f,c
  5642   002838  B0D8               	btfsc	status,0,c
  5643   00283A  2A17               	incf	(___awtoft@c+1)^0,f,c
  5644   00283C  0E01               	movlw	1
  5645   00283E  6E19               	movwf	___awtoft@sign^0,c
  5646   002840                     l4575:
  5647   002840  C016  F00E         	movff	___awtoft@c,___ftpack@arg
  5648   002844  C017  F00F         	movff	___awtoft@c+1,___ftpack@arg+1
  5649   002848  6A10               	clrf	(___ftpack@arg+2)^0,c
  5650   00284A  0E8E               	movlw	142
  5651   00284C  6E11               	movwf	___ftpack@exp^0,c
  5652   00284E  C019  F012         	movff	___awtoft@sign,___ftpack@sign
  5653   002852  EC89  F00F         	call	___ftpack	;wreg free
  5654   002856  C00E  F016         	movff	?___ftpack,?___awtoft
  5655   00285A  C00F  F017         	movff	?___ftpack+1,?___awtoft+1
  5656   00285E  C010  F018         	movff	?___ftpack+2,?___awtoft+2
  5657   002862  0012               	return		;funcret
  5658   002864                     __end_of___awtoft:
  5659                           	callstack 0
  5660                           
  5661 ;; *************** function ___lltoft *****************
  5662 ;; Defined at:
  5663 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lltoft.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  c               4   21[COMRAM] unsigned long 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  exp             1   29[COMRAM] unsigned char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  3   21[COMRAM] float 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5677 ;;      Params:         4       0       0       0       0       0       0       0       0
  5678 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5679 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5680 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5681 ;;Total ram usage:        9 bytes
  5682 ;; Hardware stack levels used: 1
  5683 ;; Hardware stack levels required when called: 6
  5684 ;; This function calls:
  5685 ;;		___ftpack
  5686 ;; This function is called by:
  5687 ;;		_pow
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text23
  5692   00241C                     __ptext23:
  5693                           	callstack 0
  5694   00241C                     ___lltoft:
  5695                           	callstack 23
  5696                           
  5697                           ;incstack = 0
  5698   00241C  0E8E               	movlw	142
  5699   00241E  6E1E               	movwf	___lltoft@exp^0,c
  5700   002420  D006               	goto	l4653
  5701   002422                     l4651:
  5702   002422  90D8               	bcf	status,0,c
  5703   002424  3219               	rrcf	(___lltoft@c+3)^0,f,c
  5704   002426  3218               	rrcf	(___lltoft@c+2)^0,f,c
  5705   002428  3217               	rrcf	(___lltoft@c+1)^0,f,c
  5706   00242A  3216               	rrcf	___lltoft@c^0,f,c
  5707   00242C  2A1E               	incf	___lltoft@exp^0,f,c
  5708   00242E                     l4653:
  5709   00242E  0E00               	movlw	0
  5710   002430  1416               	andwf	___lltoft@c^0,w,c
  5711   002432  6E1A               	movwf	??___lltoft^0,c
  5712   002434  0E00               	movlw	0
  5713   002436  1417               	andwf	(___lltoft@c+1)^0,w,c
  5714   002438  6E1B               	movwf	(??___lltoft+1)^0,c
  5715   00243A  0E00               	movlw	0
  5716   00243C  1418               	andwf	(___lltoft@c+2)^0,w,c
  5717   00243E  6E1C               	movwf	(??___lltoft+2)^0,c
  5718   002440  0EFF               	movlw	255
  5719   002442  1419               	andwf	(___lltoft@c+3)^0,w,c
  5720   002444  6E1D               	movwf	(??___lltoft+3)^0,c
  5721   002446  501A               	movf	??___lltoft^0,w,c
  5722   002448  101B               	iorwf	(??___lltoft+1)^0,w,c
  5723   00244A  101C               	iorwf	(??___lltoft+2)^0,w,c
  5724   00244C  101D               	iorwf	(??___lltoft+3)^0,w,c
  5725   00244E  A4D8               	btfss	status,2,c
  5726   002450  D7E8               	goto	l4651
  5727   002452  C016  F00E         	movff	___lltoft@c,___ftpack@arg
  5728   002456  C017  F00F         	movff	___lltoft@c+1,___ftpack@arg+1
  5729   00245A  C018  F010         	movff	___lltoft@c+2,___ftpack@arg+2
  5730   00245E  C01E  F011         	movff	___lltoft@exp,___ftpack@exp
  5731   002462  0E00               	movlw	0
  5732   002464  6E12               	movwf	___ftpack@sign^0,c
  5733   002466  EC89  F00F         	call	___ftpack	;wreg free
  5734   00246A  C00E  F016         	movff	?___ftpack,?___lltoft
  5735   00246E  C00F  F017         	movff	?___ftpack+1,?___lltoft+1
  5736   002472  C010  F018         	movff	?___ftpack+2,?___lltoft+2
  5737   002476  0012               	return		;funcret
  5738   002478                     __end_of___lltoft:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function ___ftpack *****************
  5742 ;; Defined at:
  5743 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\float.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  arg             3   13[COMRAM] unsigned um
  5746 ;;  exp             1   16[COMRAM] unsigned char 
  5747 ;;  sign            1   17[COMRAM] unsigned char 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  3   13[COMRAM] float 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5759 ;;      Params:         5       0       0       0       0       0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5761 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5762 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5763 ;;Total ram usage:        8 bytes
  5764 ;; Hardware stack levels used: 1
  5765 ;; Hardware stack levels required when called: 5
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		___altoft
  5770 ;;		___awtoft
  5771 ;;		___ftadd
  5772 ;;		___ftdiv
  5773 ;;		___ftmul
  5774 ;;		___lltoft
  5775 ;;		___lwtoft
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text24
  5780   001F12                     __ptext24:
  5781                           	callstack 0
  5782   001F12                     ___ftpack:
  5783                           	callstack 21
  5784                           
  5785                           ;incstack = 0
  5786   001F12  5011               	movf	___ftpack@exp^0,w,c
  5787   001F14  B4D8               	btfsc	status,2,c
  5788   001F16  D005               	goto	u5120
  5789   001F18  500E               	movf	___ftpack@arg^0,w,c
  5790   001F1A  100F               	iorwf	(___ftpack@arg+1)^0,w,c
  5791   001F1C  1010               	iorwf	(___ftpack@arg+2)^0,w,c
  5792   001F1E  A4D8               	btfss	status,2,c
  5793   001F20  D00C               	goto	l4269
  5794   001F22                     u5120:
  5795   001F22  0E00               	movlw	0
  5796   001F24  6E0E               	movwf	?___ftpack^0,c
  5797   001F26  0E00               	movlw	0
  5798   001F28  6E0F               	movwf	(?___ftpack+1)^0,c
  5799   001F2A  0E00               	movlw	0
  5800   001F2C  6E10               	movwf	(?___ftpack+2)^0,c
  5801   001F2E  0012               	return	
  5802   001F30                     l4267:
  5803   001F30  2A11               	incf	___ftpack@exp^0,f,c
  5804   001F32  90D8               	bcf	status,0,c
  5805   001F34  3210               	rrcf	(___ftpack@arg+2)^0,f,c
  5806   001F36  320F               	rrcf	(___ftpack@arg+1)^0,f,c
  5807   001F38  320E               	rrcf	___ftpack@arg^0,f,c
  5808   001F3A                     l4269:
  5809   001F3A  0E00               	movlw	0
  5810   001F3C  140E               	andwf	___ftpack@arg^0,w,c
  5811   001F3E  6E13               	movwf	??___ftpack^0,c
  5812   001F40  0E00               	movlw	0
  5813   001F42  140F               	andwf	(___ftpack@arg+1)^0,w,c
  5814   001F44  6E14               	movwf	(??___ftpack+1)^0,c
  5815   001F46  0EFE               	movlw	254
  5816   001F48  1410               	andwf	(___ftpack@arg+2)^0,w,c
  5817   001F4A  6E15               	movwf	(??___ftpack+2)^0,c
  5818   001F4C  5013               	movf	??___ftpack^0,w,c
  5819   001F4E  1014               	iorwf	(??___ftpack+1)^0,w,c
  5820   001F50  1015               	iorwf	(??___ftpack+2)^0,w,c
  5821   001F52  B4D8               	btfsc	status,2,c
  5822   001F54  D00C               	goto	l4275
  5823   001F56  D7EC               	goto	l4267
  5824   001F58                     l4271:
  5825   001F58  2A11               	incf	___ftpack@exp^0,f,c
  5826   001F5A  0E01               	movlw	1
  5827   001F5C  260E               	addwf	___ftpack@arg^0,f,c
  5828   001F5E  0E00               	movlw	0
  5829   001F60  220F               	addwfc	(___ftpack@arg+1)^0,f,c
  5830   001F62  0E00               	movlw	0
  5831   001F64  2210               	addwfc	(___ftpack@arg+2)^0,f,c
  5832   001F66  90D8               	bcf	status,0,c
  5833   001F68  3210               	rrcf	(___ftpack@arg+2)^0,f,c
  5834   001F6A  320F               	rrcf	(___ftpack@arg+1)^0,f,c
  5835   001F6C  320E               	rrcf	___ftpack@arg^0,f,c
  5836   001F6E                     l4275:
  5837   001F6E  0E00               	movlw	0
  5838   001F70  140E               	andwf	___ftpack@arg^0,w,c
  5839   001F72  6E13               	movwf	??___ftpack^0,c
  5840   001F74  0E00               	movlw	0
  5841   001F76  140F               	andwf	(___ftpack@arg+1)^0,w,c
  5842   001F78  6E14               	movwf	(??___ftpack+1)^0,c
  5843   001F7A  0EFF               	movlw	255
  5844   001F7C  1410               	andwf	(___ftpack@arg+2)^0,w,c
  5845   001F7E  6E15               	movwf	(??___ftpack+2)^0,c
  5846   001F80  5013               	movf	??___ftpack^0,w,c
  5847   001F82  1014               	iorwf	(??___ftpack+1)^0,w,c
  5848   001F84  1015               	iorwf	(??___ftpack+2)^0,w,c
  5849   001F86  B4D8               	btfsc	status,2,c
  5850   001F88  D006               	goto	l4279
  5851   001F8A  D7E6               	goto	l4271
  5852   001F8C                     l4277:
  5853   001F8C  0611               	decf	___ftpack@exp^0,f,c
  5854   001F8E  90D8               	bcf	status,0,c
  5855   001F90  360E               	rlcf	___ftpack@arg^0,f,c
  5856   001F92  360F               	rlcf	(___ftpack@arg+1)^0,f,c
  5857   001F94  3610               	rlcf	(___ftpack@arg+2)^0,f,c
  5858   001F96                     l4279:
  5859   001F96  BE0F               	btfsc	(___ftpack@arg+1)^0,7,c
  5860   001F98  D003               	goto	u5160
  5861   001F9A  0E02               	movlw	2
  5862   001F9C  6011               	cpfslt	___ftpack@exp^0,c
  5863   001F9E  D7F6               	goto	l4277
  5864   001FA0                     u5160:
  5865   001FA0  A011               	btfss	___ftpack@exp^0,0,c
  5866   001FA2  9E0F               	bcf	(___ftpack@arg+1)^0,7,c
  5867   001FA4  90D8               	bcf	status,0,c
  5868   001FA6  3211               	rrcf	___ftpack@exp^0,f,c
  5869   001FA8  5011               	movf	___ftpack@exp^0,w,c
  5870   001FAA  1210               	iorwf	(___ftpack@arg+2)^0,f,c
  5871   001FAC  5012               	movf	___ftpack@sign^0,w,c
  5872   001FAE  A4D8               	btfss	status,2,c
  5873   001FB0  8E10               	bsf	(___ftpack@arg+2)^0,7,c
  5874   001FB2  C00E  F00E         	movff	___ftpack@arg,?___ftpack
  5875   001FB6  C00F  F00F         	movff	___ftpack@arg+1,?___ftpack+1
  5876   001FBA  C010  F010         	movff	___ftpack@arg+2,?___ftpack+2
  5877   001FBE  0012               	return		;funcret
  5878   001FC0                     __end_of___ftpack:
  5879                           	callstack 0
  5880                           
  5881 ;; *************** function ___wmul *****************
  5882 ;; Defined at:
  5883 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  multiplier      2   13[COMRAM] unsigned int 
  5886 ;;  multiplicand    2   15[COMRAM] unsigned int 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  product         2   17[COMRAM] unsigned int 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  2   13[COMRAM] unsigned int 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0, prodl, prodh
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5898 ;;      Params:         4       0       0       0       0       0       0       0       0
  5899 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5901 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5902 ;;Total ram usage:        6 bytes
  5903 ;; Hardware stack levels used: 1
  5904 ;; Hardware stack levels required when called: 5
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_main
  5909 ;;		_factorial_function
  5910 ;;		_Imprimir_Resultado
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text25
  5915   0028B4                     __ptext25:
  5916                           	callstack 0
  5917   0028B4                     ___wmul:
  5918                           	callstack 24
  5919                           
  5920                           ;incstack = 0
  5921   0028B4  500E               	movf	___wmul@multiplier^0,w,c
  5922   0028B6  0210               	mulwf	___wmul@multiplicand^0,c
  5923   0028B8  CFF3 F012          	movff	prodl,___wmul@product
  5924   0028BC  CFF4 F013          	movff	prodh,___wmul@product+1
  5925   0028C0  500E               	movf	___wmul@multiplier^0,w,c
  5926   0028C2  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  5927   0028C4  50F3               	movf	243,w,c
  5928   0028C6  2613               	addwf	(___wmul@product+1)^0,f,c
  5929   0028C8  500F               	movf	(___wmul@multiplier+1)^0,w,c
  5930   0028CA  0210               	mulwf	___wmul@multiplicand^0,c
  5931   0028CC  50F3               	movf	243,w,c
  5932   0028CE  2613               	addwf	(___wmul@product+1)^0,f,c
  5933   0028D0  C012  F00E         	movff	___wmul@product,?___wmul
  5934   0028D4  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  5935   0028D8  0012               	return		;funcret
  5936   0028DA                     __end_of___wmul:
  5937                           	callstack 0
  5938                           
  5939 ;; *************** function ___lwmod *****************
  5940 ;; Defined at:
  5941 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  dividend        2   13[COMRAM] unsigned int 
  5944 ;;  divisor         2   15[COMRAM] unsigned int 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  counter         1   17[COMRAM] unsigned char 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  2   13[COMRAM] unsigned int 
  5949 ;; Registers used:
  5950 ;;		wreg, status,2, status,0
  5951 ;; Tracked objects:
  5952 ;;		On entry : 3F/0
  5953 ;;		On exit  : 3F/0
  5954 ;;		Unchanged: 3F/0
  5955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5956 ;;      Params:         4       0       0       0       0       0       0       0       0
  5957 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5959 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5960 ;;Total ram usage:        5 bytes
  5961 ;; Hardware stack levels used: 1
  5962 ;; Hardware stack levels required when called: 5
  5963 ;; This function calls:
  5964 ;;		Nothing
  5965 ;; This function is called by:
  5966 ;;		_Imprimir_Resultado
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           	psect	text26
  5971   0027AA                     __ptext26:
  5972                           	callstack 0
  5973   0027AA                     ___lwmod:
  5974                           	callstack 24
  5975                           
  5976                           ; BSR set to: 0
  5977                           
  5978                           ;incstack = 0
  5979   0027AA  5010               	movf	___lwmod@divisor^0,w,c
  5980   0027AC  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  5981   0027AE  B4D8               	btfsc	status,2,c
  5982   0027B0  D018               	goto	l840
  5983                           
  5984                           ; BSR set to: 0
  5985   0027B2  0E01               	movlw	1
  5986   0027B4  6E12               	movwf	___lwmod@counter^0,c
  5987   0027B6  D004               	goto	l3479
  5988   0027B8                     l3477:
  5989                           
  5990                           ; BSR set to: 0
  5991   0027B8  90D8               	bcf	status,0,c
  5992   0027BA  3610               	rlcf	___lwmod@divisor^0,f,c
  5993   0027BC  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  5994   0027BE  2A12               	incf	___lwmod@counter^0,f,c
  5995   0027C0                     l3479:
  5996                           
  5997                           ; BSR set to: 0
  5998   0027C0  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  5999   0027C2  D7FA               	goto	l3477
  6000   0027C4                     u3660:
  6001                           
  6002                           ; BSR set to: 0
  6003   0027C4  5010               	movf	___lwmod@divisor^0,w,c
  6004   0027C6  5C0E               	subwf	___lwmod@dividend^0,w,c
  6005   0027C8  5011               	movf	(___lwmod@divisor+1)^0,w,c
  6006   0027CA  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  6007   0027CC  A0D8               	btfss	status,0,c
  6008   0027CE  D004               	goto	l3485
  6009                           
  6010                           ; BSR set to: 0
  6011   0027D0  5010               	movf	___lwmod@divisor^0,w,c
  6012   0027D2  5E0E               	subwf	___lwmod@dividend^0,f,c
  6013   0027D4  5011               	movf	(___lwmod@divisor+1)^0,w,c
  6014   0027D6  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  6015   0027D8                     l3485:
  6016                           
  6017                           ; BSR set to: 0
  6018   0027D8  90D8               	bcf	status,0,c
  6019   0027DA  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  6020   0027DC  3210               	rrcf	___lwmod@divisor^0,f,c
  6021                           
  6022                           ; BSR set to: 0
  6023   0027DE  2E12               	decfsz	___lwmod@counter^0,f,c
  6024   0027E0  D7F1               	goto	u3660
  6025   0027E2                     l840:
  6026                           
  6027                           ; BSR set to: 0
  6028   0027E2  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  6029   0027E6  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  6030                           
  6031                           ; BSR set to: 0
  6032   0027EA  0012               	return		;funcret
  6033   0027EC                     __end_of___lwmod:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function ___lwdiv *****************
  6037 ;; Defined at:
  6038 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  dividend        2   19[COMRAM] unsigned int 
  6041 ;;  divisor         2   21[COMRAM] unsigned int 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  quotient        2   23[COMRAM] unsigned int 
  6044 ;;  counter         1   25[COMRAM] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  2   19[COMRAM] unsigned int 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6054 ;;      Params:         4       0       0       0       0       0       0       0       0
  6055 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6057 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6058 ;;Total ram usage:        7 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; Hardware stack levels required when called: 5
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_main
  6065 ;;		_Imprimir_Resultado
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text27
  6070   002628                     __ptext27:
  6071                           	callstack 0
  6072   002628                     ___lwdiv:
  6073                           	callstack 25
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;incstack = 0
  6077   002628  0E00               	movlw	0
  6078   00262A  6E19               	movwf	(___lwdiv@quotient+1)^0,c
  6079   00262C  0E00               	movlw	0
  6080   00262E  6E18               	movwf	___lwdiv@quotient^0,c
  6081   002630  5016               	movf	___lwdiv@divisor^0,w,c
  6082   002632  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6083   002634  B4D8               	btfsc	status,2,c
  6084   002636  D01C               	goto	l830
  6085   002638  0E01               	movlw	1
  6086   00263A  6E1A               	movwf	___lwdiv@counter^0,c
  6087   00263C  D004               	goto	l3459
  6088   00263E                     l3457:
  6089   00263E  90D8               	bcf	status,0,c
  6090   002640  3616               	rlcf	___lwdiv@divisor^0,f,c
  6091   002642  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6092   002644  2A1A               	incf	___lwdiv@counter^0,f,c
  6093   002646                     l3459:
  6094   002646  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  6095   002648  D7FA               	goto	l3457
  6096   00264A                     u3630:
  6097   00264A  90D8               	bcf	status,0,c
  6098   00264C  3618               	rlcf	___lwdiv@quotient^0,f,c
  6099   00264E  3619               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6100   002650  5016               	movf	___lwdiv@divisor^0,w,c
  6101   002652  5C14               	subwf	___lwdiv@dividend^0,w,c
  6102   002654  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  6103   002656  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6104   002658  A0D8               	btfss	status,0,c
  6105   00265A  D005               	goto	l3469
  6106   00265C  5016               	movf	___lwdiv@divisor^0,w,c
  6107   00265E  5E14               	subwf	___lwdiv@dividend^0,f,c
  6108   002660  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  6109   002662  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6110   002664  8018               	bsf	___lwdiv@quotient^0,0,c
  6111   002666                     l3469:
  6112   002666  90D8               	bcf	status,0,c
  6113   002668  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6114   00266A  3216               	rrcf	___lwdiv@divisor^0,f,c
  6115   00266C  2E1A               	decfsz	___lwdiv@counter^0,f,c
  6116   00266E  D7ED               	goto	u3630
  6117   002670                     l830:
  6118   002670  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  6119   002674  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6120   002678  0012               	return		;funcret
  6121   00267A                     __end_of___lwdiv:
  6122                           	callstack 0
  6123                           
  6124 ;; *************** function ___lmul *****************
  6125 ;; Defined at:
  6126 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  multiplier      4   13[COMRAM] unsigned long 
  6129 ;;  multiplicand    4   17[COMRAM] unsigned long 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  product         4   21[COMRAM] unsigned long 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  4   13[COMRAM] unsigned long 
  6134 ;; Registers used:
  6135 ;;		wreg, status,2, status,0
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6141 ;;      Params:         8       0       0       0       0       0       0       0       0
  6142 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6144 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6145 ;;Total ram usage:       12 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; Hardware stack levels required when called: 5
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_main
  6152 ;;		_Imprimir_Resultado
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text28
  6157   002526                     __ptext28:
  6158                           	callstack 0
  6159   002526                     ___lmul:
  6160                           	callstack 25
  6161                           
  6162                           ;incstack = 0
  6163   002526  0E00               	movlw	0
  6164   002528  6E16               	movwf	___lmul@product^0,c
  6165   00252A  0E00               	movlw	0
  6166   00252C  6E17               	movwf	(___lmul@product+1)^0,c
  6167   00252E  0E00               	movlw	0
  6168   002530  6E18               	movwf	(___lmul@product+2)^0,c
  6169   002532  0E00               	movlw	0
  6170   002534  6E19               	movwf	(___lmul@product+3)^0,c
  6171   002536                     l3363:
  6172   002536  A00E               	btfss	___lmul@multiplier^0,0,c
  6173   002538  D008               	goto	l3367
  6174   00253A  5012               	movf	___lmul@multiplicand^0,w,c
  6175   00253C  2616               	addwf	___lmul@product^0,f,c
  6176   00253E  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  6177   002540  2217               	addwfc	(___lmul@product+1)^0,f,c
  6178   002542  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  6179   002544  2218               	addwfc	(___lmul@product+2)^0,f,c
  6180   002546  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  6181   002548  2219               	addwfc	(___lmul@product+3)^0,f,c
  6182   00254A                     l3367:
  6183   00254A  90D8               	bcf	status,0,c
  6184   00254C  3612               	rlcf	___lmul@multiplicand^0,f,c
  6185   00254E  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6186   002550  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6187   002552  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6188   002554  90D8               	bcf	status,0,c
  6189   002556  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  6190   002558  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  6191   00255A  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  6192   00255C  320E               	rrcf	___lmul@multiplier^0,f,c
  6193   00255E  500E               	movf	___lmul@multiplier^0,w,c
  6194   002560  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  6195   002562  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  6196   002564  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  6197   002566  A4D8               	btfss	status,2,c
  6198   002568  D7E6               	goto	l3363
  6199   00256A  C016  F00E         	movff	___lmul@product,?___lmul
  6200   00256E  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  6201   002572  C018  F010         	movff	___lmul@product+2,?___lmul+2
  6202   002576  C019  F011         	movff	___lmul@product+3,?___lmul+3
  6203   00257A  0012               	return		;funcret
  6204   00257C                     __end_of___lmul:
  6205                           	callstack 0
  6206                           
  6207 ;; *************** function ___almod *****************
  6208 ;; Defined at:
  6209 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  dividend        4   28[BANK0 ] long 
  6212 ;;  divisor         4   32[BANK0 ] long 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  sign            1   37[BANK0 ] unsigned char 
  6215 ;;  counter         1   36[BANK0 ] unsigned char 
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  4   28[BANK0 ] long 
  6218 ;; Registers used:
  6219 ;;		wreg, status,2, status,0
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 3F/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6225 ;;      Params:         0       8       0       0       0       0       0       0       0
  6226 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6228 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6229 ;;Total ram usage:       10 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; Hardware stack levels required when called: 5
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_Imprimir_Resultado
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text29
  6240   001FC0                     __ptext29:
  6241                           	callstack 0
  6242   001FC0                     ___almod:
  6243                           	callstack 24
  6244                           
  6245                           ;incstack = 0
  6246   001FC0  0E00               	movlw	0
  6247   001FC2  0100               	movlb	0	; () banked
  6248   001FC4  6F85               	movwf	___almod@sign& (0+255),b
  6249                           
  6250                           ; BSR set to: 0
  6251   001FC6  AF7F               	btfss	(___almod@dividend+3)& (0+255),7,b
  6252   001FC8  D00A               	goto	l4773
  6253                           
  6254                           ; BSR set to: 0
  6255   001FCA  1F7F               	comf	(___almod@dividend+3)& (0+255),f,b
  6256   001FCC  1F7E               	comf	(___almod@dividend+2)& (0+255),f,b
  6257   001FCE  1F7D               	comf	(___almod@dividend+1)& (0+255),f,b
  6258   001FD0  6D7C               	negf	___almod@dividend& (0+255),b
  6259   001FD2  0E00               	movlw	0
  6260   001FD4  237D               	addwfc	(___almod@dividend+1)& (0+255),f,b
  6261   001FD6  237E               	addwfc	(___almod@dividend+2)& (0+255),f,b
  6262   001FD8  237F               	addwfc	(___almod@dividend+3)& (0+255),f,b
  6263                           
  6264                           ; BSR set to: 0
  6265   001FDA  0E01               	movlw	1
  6266   001FDC  6F85               	movwf	___almod@sign& (0+255),b
  6267   001FDE                     l4773:
  6268                           
  6269                           ; BSR set to: 0
  6270   001FDE  AF83               	btfss	(___almod@divisor+3)& (0+255),7,b
  6271   001FE0  D008               	goto	l4777
  6272                           
  6273                           ; BSR set to: 0
  6274   001FE2  1F83               	comf	(___almod@divisor+3)& (0+255),f,b
  6275   001FE4  1F82               	comf	(___almod@divisor+2)& (0+255),f,b
  6276   001FE6  1F81               	comf	(___almod@divisor+1)& (0+255),f,b
  6277   001FE8  6D80               	negf	___almod@divisor& (0+255),b
  6278   001FEA  0E00               	movlw	0
  6279   001FEC  2381               	addwfc	(___almod@divisor+1)& (0+255),f,b
  6280   001FEE  2382               	addwfc	(___almod@divisor+2)& (0+255),f,b
  6281   001FF0  2383               	addwfc	(___almod@divisor+3)& (0+255),f,b
  6282   001FF2                     l4777:
  6283                           
  6284                           ; BSR set to: 0
  6285   001FF2  5180               	movf	___almod@divisor& (0+255),w,b
  6286   001FF4  1181               	iorwf	(___almod@divisor+1)& (0+255),w,b
  6287   001FF6  1182               	iorwf	(___almod@divisor+2)& (0+255),w,b
  6288   001FF8  1183               	iorwf	(___almod@divisor+3)& (0+255),w,b
  6289   001FFA  B4D8               	btfsc	status,2,c
  6290   001FFC  D024               	goto	l4793
  6291                           
  6292                           ; BSR set to: 0
  6293   001FFE  0E01               	movlw	1
  6294   002000  6F84               	movwf	___almod@counter& (0+255),b
  6295   002002  D006               	goto	l4783
  6296   002004                     l4781:
  6297                           
  6298                           ; BSR set to: 0
  6299   002004  90D8               	bcf	status,0,c
  6300   002006  3780               	rlcf	___almod@divisor& (0+255),f,b
  6301   002008  3781               	rlcf	(___almod@divisor+1)& (0+255),f,b
  6302   00200A  3782               	rlcf	(___almod@divisor+2)& (0+255),f,b
  6303   00200C  3783               	rlcf	(___almod@divisor+3)& (0+255),f,b
  6304   00200E  2B84               	incf	___almod@counter& (0+255),f,b
  6305   002010                     l4783:
  6306                           
  6307                           ; BSR set to: 0
  6308   002010  AF83               	btfss	(___almod@divisor+3)& (0+255),7,b
  6309   002012  D7F8               	goto	l4781
  6310   002014                     u5990:
  6311                           
  6312                           ; BSR set to: 0
  6313   002014  5180               	movf	___almod@divisor& (0+255),w,b
  6314   002016  5D7C               	subwf	___almod@dividend& (0+255),w,b
  6315   002018  5181               	movf	(___almod@divisor+1)& (0+255),w,b
  6316   00201A  597D               	subwfb	(___almod@dividend+1)& (0+255),w,b
  6317   00201C  5182               	movf	(___almod@divisor+2)& (0+255),w,b
  6318   00201E  597E               	subwfb	(___almod@dividend+2)& (0+255),w,b
  6319   002020  5183               	movf	(___almod@divisor+3)& (0+255),w,b
  6320   002022  597F               	subwfb	(___almod@dividend+3)& (0+255),w,b
  6321   002024  A0D8               	btfss	status,0,c
  6322   002026  D008               	goto	l4789
  6323                           
  6324                           ; BSR set to: 0
  6325   002028  5180               	movf	___almod@divisor& (0+255),w,b
  6326   00202A  5F7C               	subwf	___almod@dividend& (0+255),f,b
  6327   00202C  5181               	movf	(___almod@divisor+1)& (0+255),w,b
  6328   00202E  5B7D               	subwfb	(___almod@dividend+1)& (0+255),f,b
  6329   002030  5182               	movf	(___almod@divisor+2)& (0+255),w,b
  6330   002032  5B7E               	subwfb	(___almod@dividend+2)& (0+255),f,b
  6331   002034  5183               	movf	(___almod@divisor+3)& (0+255),w,b
  6332   002036  5B7F               	subwfb	(___almod@dividend+3)& (0+255),f,b
  6333   002038                     l4789:
  6334                           
  6335                           ; BSR set to: 0
  6336   002038  90D8               	bcf	status,0,c
  6337   00203A  3383               	rrcf	(___almod@divisor+3)& (0+255),f,b
  6338   00203C  3382               	rrcf	(___almod@divisor+2)& (0+255),f,b
  6339   00203E  3381               	rrcf	(___almod@divisor+1)& (0+255),f,b
  6340   002040  3380               	rrcf	___almod@divisor& (0+255),f,b
  6341                           
  6342                           ; BSR set to: 0
  6343   002042  2F84               	decfsz	___almod@counter& (0+255),f,b
  6344   002044  D7E7               	goto	u5990
  6345   002046                     l4793:
  6346                           
  6347                           ; BSR set to: 0
  6348   002046  5185               	movf	___almod@sign& (0+255),w,b
  6349   002048  B4D8               	btfsc	status,2,c
  6350   00204A  D008               	goto	l4797
  6351                           
  6352                           ; BSR set to: 0
  6353   00204C  1F7F               	comf	(___almod@dividend+3)& (0+255),f,b
  6354   00204E  1F7E               	comf	(___almod@dividend+2)& (0+255),f,b
  6355   002050  1F7D               	comf	(___almod@dividend+1)& (0+255),f,b
  6356   002052  6D7C               	negf	___almod@dividend& (0+255),b
  6357   002054  0E00               	movlw	0
  6358   002056  237D               	addwfc	(___almod@dividend+1)& (0+255),f,b
  6359   002058  237E               	addwfc	(___almod@dividend+2)& (0+255),f,b
  6360   00205A  237F               	addwfc	(___almod@dividend+3)& (0+255),f,b
  6361   00205C                     l4797:
  6362                           
  6363                           ; BSR set to: 0
  6364   00205C  C07C  F07C         	movff	___almod@dividend,?___almod
  6365   002060  C07D  F07D         	movff	___almod@dividend+1,?___almod+1
  6366   002064  C07E  F07E         	movff	___almod@dividend+2,?___almod+2
  6367   002068  C07F  F07F         	movff	___almod@dividend+3,?___almod+3
  6368                           
  6369                           ; BSR set to: 0
  6370   00206C  0012               	return		;funcret
  6371   00206E                     __end_of___almod:
  6372                           	callstack 0
  6373                           
  6374 ;; *************** function ___aldiv *****************
  6375 ;; Defined at:
  6376 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  dividend        4   28[BANK0 ] long 
  6379 ;;  divisor         4   32[BANK0 ] long 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  quotient        4   38[BANK0 ] long 
  6382 ;;  sign            1   37[BANK0 ] unsigned char 
  6383 ;;  counter         1   36[BANK0 ] unsigned char 
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  4   28[BANK0 ] long 
  6386 ;; Registers used:
  6387 ;;		wreg, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 3F/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6393 ;;      Params:         0       8       0       0       0       0       0       0       0
  6394 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6396 ;;      Totals:         0      14       0       0       0       0       0       0       0
  6397 ;;Total ram usage:       14 bytes
  6398 ;; Hardware stack levels used: 1
  6399 ;; Hardware stack levels required when called: 5
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_Imprimir_Resultado
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	text30
  6408   001D7A                     __ptext30:
  6409                           	callstack 0
  6410   001D7A                     ___aldiv:
  6411                           	callstack 24
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;incstack = 0
  6415   001D7A  0E00               	movlw	0
  6416   001D7C  0100               	movlb	0	; () banked
  6417   001D7E  6F85               	movwf	___aldiv@sign& (0+255),b
  6418                           
  6419                           ; BSR set to: 0
  6420   001D80  AF83               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6421   001D82  D00A               	goto	l3379
  6422                           
  6423                           ; BSR set to: 0
  6424   001D84  1F83               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6425   001D86  1F82               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6426   001D88  1F81               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6427   001D8A  6D80               	negf	___aldiv@divisor& (0+255),b
  6428   001D8C  0E00               	movlw	0
  6429   001D8E  2381               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6430   001D90  2382               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6431   001D92  2383               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6432                           
  6433                           ; BSR set to: 0
  6434   001D94  0E01               	movlw	1
  6435   001D96  6F85               	movwf	___aldiv@sign& (0+255),b
  6436   001D98                     l3379:
  6437                           
  6438                           ; BSR set to: 0
  6439   001D98  AF7F               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6440   001D9A  D00A               	goto	l3385
  6441                           
  6442                           ; BSR set to: 0
  6443   001D9C  1F7F               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6444   001D9E  1F7E               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6445   001DA0  1F7D               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6446   001DA2  6D7C               	negf	___aldiv@dividend& (0+255),b
  6447   001DA4  0E00               	movlw	0
  6448   001DA6  237D               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6449   001DA8  237E               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6450   001DAA  237F               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6451                           
  6452                           ; BSR set to: 0
  6453   001DAC  0E01               	movlw	1
  6454   001DAE  1B85               	xorwf	___aldiv@sign& (0+255),f,b
  6455   001DB0                     l3385:
  6456                           
  6457                           ; BSR set to: 0
  6458   001DB0  0E00               	movlw	0
  6459   001DB2  6F86               	movwf	___aldiv@quotient& (0+255),b
  6460   001DB4  0E00               	movlw	0
  6461   001DB6  6F87               	movwf	(___aldiv@quotient+1)& (0+255),b
  6462   001DB8  0E00               	movlw	0
  6463   001DBA  6F88               	movwf	(___aldiv@quotient+2)& (0+255),b
  6464   001DBC  0E00               	movlw	0
  6465   001DBE  6F89               	movwf	(___aldiv@quotient+3)& (0+255),b
  6466                           
  6467                           ; BSR set to: 0
  6468   001DC0  5180               	movf	___aldiv@divisor& (0+255),w,b
  6469   001DC2  1181               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6470   001DC4  1182               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6471   001DC6  1183               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6472   001DC8  B4D8               	btfsc	status,2,c
  6473   001DCA  D02A               	goto	l3407
  6474                           
  6475                           ; BSR set to: 0
  6476   001DCC  0E01               	movlw	1
  6477   001DCE  6F84               	movwf	___aldiv@counter& (0+255),b
  6478   001DD0  D006               	goto	l3393
  6479   001DD2                     l3391:
  6480                           
  6481                           ; BSR set to: 0
  6482   001DD2  90D8               	bcf	status,0,c
  6483   001DD4  3780               	rlcf	___aldiv@divisor& (0+255),f,b
  6484   001DD6  3781               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6485   001DD8  3782               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6486   001DDA  3783               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6487   001DDC  2B84               	incf	___aldiv@counter& (0+255),f,b
  6488   001DDE                     l3393:
  6489                           
  6490                           ; BSR set to: 0
  6491   001DDE  AF83               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6492   001DE0  D7F8               	goto	l3391
  6493   001DE2                     u3530:
  6494                           
  6495                           ; BSR set to: 0
  6496   001DE2  90D8               	bcf	status,0,c
  6497   001DE4  3786               	rlcf	___aldiv@quotient& (0+255),f,b
  6498   001DE6  3787               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6499   001DE8  3788               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6500   001DEA  3789               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6501                           
  6502                           ; BSR set to: 0
  6503   001DEC  5180               	movf	___aldiv@divisor& (0+255),w,b
  6504   001DEE  5D7C               	subwf	___aldiv@dividend& (0+255),w,b
  6505   001DF0  5181               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6506   001DF2  597D               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6507   001DF4  5182               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6508   001DF6  597E               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6509   001DF8  5183               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6510   001DFA  597F               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6511   001DFC  A0D8               	btfss	status,0,c
  6512   001DFE  D009               	goto	l3403
  6513                           
  6514                           ; BSR set to: 0
  6515   001E00  5180               	movf	___aldiv@divisor& (0+255),w,b
  6516   001E02  5F7C               	subwf	___aldiv@dividend& (0+255),f,b
  6517   001E04  5181               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6518   001E06  5B7D               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6519   001E08  5182               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6520   001E0A  5B7E               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6521   001E0C  5183               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6522   001E0E  5B7F               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6523                           
  6524                           ; BSR set to: 0
  6525   001E10  8186               	bsf	___aldiv@quotient& (0+255),0,b
  6526   001E12                     l3403:
  6527                           
  6528                           ; BSR set to: 0
  6529   001E12  90D8               	bcf	status,0,c
  6530   001E14  3383               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6531   001E16  3382               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6532   001E18  3381               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6533   001E1A  3380               	rrcf	___aldiv@divisor& (0+255),f,b
  6534                           
  6535                           ; BSR set to: 0
  6536   001E1C  2F84               	decfsz	___aldiv@counter& (0+255),f,b
  6537   001E1E  D7E1               	goto	u3530
  6538   001E20                     l3407:
  6539                           
  6540                           ; BSR set to: 0
  6541   001E20  5185               	movf	___aldiv@sign& (0+255),w,b
  6542   001E22  B4D8               	btfsc	status,2,c
  6543   001E24  D008               	goto	l3411
  6544                           
  6545                           ; BSR set to: 0
  6546   001E26  1F89               	comf	(___aldiv@quotient+3)& (0+255),f,b
  6547   001E28  1F88               	comf	(___aldiv@quotient+2)& (0+255),f,b
  6548   001E2A  1F87               	comf	(___aldiv@quotient+1)& (0+255),f,b
  6549   001E2C  6D86               	negf	___aldiv@quotient& (0+255),b
  6550   001E2E  0E00               	movlw	0
  6551   001E30  2387               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  6552   001E32  2388               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  6553   001E34  2389               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  6554   001E36                     l3411:
  6555                           
  6556                           ; BSR set to: 0
  6557   001E36  C086  F07C         	movff	___aldiv@quotient,?___aldiv
  6558   001E3A  C087  F07D         	movff	___aldiv@quotient+1,?___aldiv+1
  6559   001E3E  C088  F07E         	movff	___aldiv@quotient+2,?___aldiv+2
  6560   001E42  C089  F07F         	movff	___aldiv@quotient+3,?___aldiv+3
  6561                           
  6562                           ; BSR set to: 0
  6563   001E46  0012               	return		;funcret
  6564   001E48                     __end_of___aldiv:
  6565                           	callstack 0
  6566                           
  6567 ;; *************** function _MensajeLCD_Var *****************
  6568 ;; Defined at:
  6569 ;;		line 261 in file "LibLCDXC8.h"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;  a               1   18[COMRAM] PTR unsigned char 
  6572 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  6573 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  6574 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  6575 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  i               2   20[COMRAM] int 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6587 ;;      Params:         1       0       0       0       0       0       0       0       0
  6588 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6589 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6590 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6591 ;;Total ram usage:        4 bytes
  6592 ;; Hardware stack levels used: 1
  6593 ;; Hardware stack levels required when called: 8
  6594 ;; This function calls:
  6595 ;;		_EscribeLCD_c
  6596 ;;		_strlen
  6597 ;; This function is called by:
  6598 ;;		_main
  6599 ;;		_Imprimir_Resultado
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text31
  6604   00267A                     __ptext31:
  6605                           	callstack 0
  6606   00267A                     _MensajeLCD_Var:
  6607                           	callstack 22
  6608                           
  6609                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;incstack = 0
  6613   00267A  0E00               	movlw	0
  6614   00267C  6E16               	movwf	(MensajeLCD_Var@i+1)^0,c
  6615   00267E  0E00               	movlw	0
  6616   002680  6E15               	movwf	MensajeLCD_Var@i^0,c
  6617   002682  D019               	goto	l3305
  6618   002684                     l3297:
  6619                           
  6620                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  6621   002684  5013               	movf	MensajeLCD_Var@a^0,w,c
  6622   002686  2415               	addwf	MensajeLCD_Var@i^0,w,c
  6623   002688  6E14               	movwf	??_MensajeLCD_Var^0,c
  6624   00268A  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  6625   00268E                     	if	1	;There is more than 1 active tblptr byte
  6626   00268E  0E08               	movlw	high __smallconst
  6627   002690  6EF7               	movwf	tblptrh,c
  6628   002692                     	endif
  6629   002692                     	if	0	;tblptru may be non-zero
  6630   002692                     	endif
  6631   002692                     	if	0	;tblptru may be non-zero
  6632   002692                     	endif
  6633   002692  0008               	tblrd		*
  6634   002694  50F5               	movf	tablat,w,c
  6635   002696  0900               	iorlw	0
  6636   002698  B4D8               	btfsc	status,2,c
  6637   00269A  0012               	return	
  6638                           
  6639                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  6640   00269C  5013               	movf	MensajeLCD_Var@a^0,w,c
  6641   00269E  2415               	addwf	MensajeLCD_Var@i^0,w,c
  6642   0026A0  6E14               	movwf	??_MensajeLCD_Var^0,c
  6643   0026A2  C014  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  6644   0026A6                     	if	1	;There is more than 1 active tblptr byte
  6645   0026A6  0E08               	movlw	high __smallconst
  6646   0026A8  6EF7               	movwf	tblptrh,c
  6647   0026AA                     	endif
  6648   0026AA                     	if	0	;tblptru may be non-zero
  6649   0026AA                     	endif
  6650   0026AA                     	if	0	;tblptru may be non-zero
  6651   0026AA                     	endif
  6652   0026AA  0008               	tblrd		*
  6653   0026AC  50F5               	movf	tablat,w,c
  6654   0026AE  EC9D  F014         	call	_EscribeLCD_c
  6655   0026B2  4A15               	infsnz	MensajeLCD_Var@i^0,f,c
  6656   0026B4  2A16               	incf	(MensajeLCD_Var@i+1)^0,f,c
  6657   0026B6                     l3305:
  6658   0026B6  C013  F00E         	movff	MensajeLCD_Var@a,strlen@s
  6659   0026BA  EC32  F014         	call	_strlen	;wreg free
  6660   0026BE  500E               	movf	?_strlen^0,w,c
  6661   0026C0  5C15               	subwf	MensajeLCD_Var@i^0,w,c
  6662   0026C2  500F               	movf	(?_strlen+1)^0,w,c
  6663   0026C4  5816               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  6664   0026C6  B0D8               	btfsc	status,0,c
  6665   0026C8  0012               	return	
  6666   0026CA  D7DC               	goto	l3297
  6667   0026CC                     __end_of_MensajeLCD_Var:
  6668                           	callstack 0
  6669                           
  6670 ;; *************** function _strlen *****************
  6671 ;; Defined at:
  6672 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  s               1   13[COMRAM] PTR const unsigned char 
  6675 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  6676 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  6677 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  6678 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;  cp              1   15[COMRAM] PTR const unsigned char 
  6681 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  6682 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  6683 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  6684 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  2   13[COMRAM] unsigned int 
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6694 ;;      Params:         2       0       0       0       0       0       0       0       0
  6695 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6697 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6698 ;;Total ram usage:        3 bytes
  6699 ;; Hardware stack levels used: 1
  6700 ;; Hardware stack levels required when called: 5
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_MensajeLCD_Var
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text32
  6709   002864                     __ptext32:
  6710                           	callstack 0
  6711   002864                     _strlen:
  6712                           	callstack 24
  6713                           
  6714                           ;incstack = 0
  6715   002864  C00E  F010         	movff	strlen@s,strlen@cp
  6716   002868  D001               	goto	l3191
  6717   00286A                     l3189:
  6718   00286A  2A10               	incf	strlen@cp^0,f,c
  6719   00286C                     l3191:
  6720   00286C  C010  FFF6         	movff	strlen@cp,tblptrl
  6721   002870                     	if	1	;There is more than 1 active tblptr byte
  6722   002870  0E08               	movlw	high __smallconst
  6723   002872  6EF7               	movwf	tblptrh,c
  6724   002874                     	endif
  6725   002874                     	if	0	;tblptru may be non-zero
  6726   002874                     	endif
  6727   002874                     	if	0	;tblptru may be non-zero
  6728   002874                     	endif
  6729   002874  0008               	tblrd		*
  6730   002876  50F5               	movf	tablat,w,c
  6731   002878  0900               	iorlw	0
  6732   00287A  A4D8               	btfss	status,2,c
  6733   00287C  D7F6               	goto	l3189
  6734   00287E  500E               	movf	strlen@s^0,w,c
  6735   002880  5C10               	subwf	strlen@cp^0,w,c
  6736   002882  6E0E               	movwf	?_strlen^0,c
  6737   002884  6A0F               	clrf	(?_strlen+1)^0,c
  6738   002886  BE0E               	btfsc	?_strlen^0,7,c
  6739   002888  060F               	decf	(?_strlen+1)^0,f,c
  6740   00288A  0012               	return		;funcret
  6741   00288C                     __end_of_strlen:
  6742                           	callstack 0
  6743                           
  6744 ;; *************** function _EscribeLCD_c *****************
  6745 ;; Defined at:
  6746 ;;		line 117 in file "LibLCDXC8.h"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  a               1    wreg     unsigned char 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  a               1   17[COMRAM] unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      void 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0, cstack
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6760 ;;      Params:         0       0       0       0       0       0       0       0       0
  6761 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6763 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6764 ;;Total ram usage:        1 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; Hardware stack levels required when called: 7
  6767 ;; This function calls:
  6768 ;;		_EnviaDato
  6769 ;;		_HabilitaLCD
  6770 ;;		_RetardoLCD
  6771 ;; This function is called by:
  6772 ;;		_MensajeLCD_Var
  6773 ;;		_main
  6774 ;;		_Imprimir_Resultado
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text33
  6779   00293A                     __ptext33:
  6780                           	callstack 0
  6781   00293A                     _EscribeLCD_c:
  6782                           	callstack 22
  6783                           
  6784                           ;incstack = 0
  6785                           ;EscribeLCD_c@a stored from wreg
  6786   00293A  6E12               	movwf	EscribeLCD_c@a^0,c
  6787                           
  6788                           ;LibLCDXC8.h: 121: LATE0=1;
  6789   00293C  808D               	bsf	3981,0,c	;volatile
  6790                           
  6791                           ;LibLCDXC8.h: 122: EnviaDato(a);
  6792   00293E  5012               	movf	EscribeLCD_c@a^0,w,c
  6793   002940  EC8F  F013         	call	_EnviaDato
  6794                           
  6795                           ;LibLCDXC8.h: 123: HabilitaLCD();
  6796   002944  ECDD  F014         	call	_HabilitaLCD	;wreg free
  6797                           
  6798                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  6799   002948  0E04               	movlw	4
  6800   00294A  ECBE  F012         	call	_RetardoLCD
  6801   00294E  0012               	return		;funcret
  6802   002950                     __end_of_EscribeLCD_c:
  6803                           	callstack 0
  6804                           
  6805 ;; *************** function _DireccionaLCD *****************
  6806 ;; Defined at:
  6807 ;;		line 273 in file "LibLCDXC8.h"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  a               1    wreg     unsigned char 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  a               1   17[COMRAM] unsigned char 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      void 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0
  6822 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6824 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6825 ;;Total ram usage:        1 bytes
  6826 ;; Hardware stack levels used: 1
  6827 ;; Hardware stack levels required when called: 7
  6828 ;; This function calls:
  6829 ;;		_EnviaDato
  6830 ;;		_HabilitaLCD
  6831 ;;		_RetardoLCD
  6832 ;; This function is called by:
  6833 ;;		_main
  6834 ;;		_Imprimir_Resultado
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text34
  6839   002950                     __ptext34:
  6840                           	callstack 0
  6841   002950                     _DireccionaLCD:
  6842                           	callstack 22
  6843                           
  6844                           ;incstack = 0
  6845                           ;DireccionaLCD@a stored from wreg
  6846   002950  6E12               	movwf	DireccionaLCD@a^0,c
  6847                           
  6848                           ;LibLCDXC8.h: 276: LATE0=0;
  6849   002952  908D               	bcf	3981,0,c	;volatile
  6850                           
  6851                           ;LibLCDXC8.h: 277: EnviaDato(a);
  6852   002954  5012               	movf	DireccionaLCD@a^0,w,c
  6853   002956  EC8F  F013         	call	_EnviaDato
  6854                           
  6855                           ;LibLCDXC8.h: 278: HabilitaLCD();
  6856   00295A  ECDD  F014         	call	_HabilitaLCD	;wreg free
  6857                           
  6858                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  6859   00295E  0E04               	movlw	4
  6860   002960  ECBE  F012         	call	_RetardoLCD
  6861   002964  0012               	return		;funcret
  6862   002966                     __end_of_DireccionaLCD:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function _EnviaDato *****************
  6866 ;; Defined at:
  6867 ;;		line 52 in file "LibLCDXC8.h"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  a               1    wreg     unsigned char 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  a               1   16[COMRAM] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		wreg, status,2, status,0, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6881 ;;      Params:         0       0       0       0       0       0       0       0       0
  6882 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6883 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6884 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6885 ;;Total ram usage:        2 bytes
  6886 ;; Hardware stack levels used: 1
  6887 ;; Hardware stack levels required when called: 6
  6888 ;; This function calls:
  6889 ;;		_HabilitaLCD
  6890 ;;		_RetardoLCD
  6891 ;; This function is called by:
  6892 ;;		_InicializaLCD
  6893 ;;		_BorraLCD
  6894 ;;		_EscribeLCD_c
  6895 ;;		_DireccionaLCD
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text35
  6900   00271E                     __ptext35:
  6901                           	callstack 0
  6902   00271E                     _EnviaDato:
  6903                           	callstack 22
  6904                           
  6905                           ;incstack = 0
  6906                           ;EnviaDato@a stored from wreg
  6907   00271E  6E11               	movwf	EnviaDato@a^0,c
  6908                           
  6909                           ;LibLCDXC8.h: 53: if(interfaz==4){
  6910   002720  0E04               	movlw	4
  6911   002722  1850               	xorwf	_interfaz^0,w,c
  6912   002724  A4D8               	btfss	status,2,c
  6913   002726  D017               	goto	l3019
  6914                           
  6915                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  6916   002728  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  6917   00272C  0EF0               	movlw	240
  6918   00272E  1610               	andwf	??_EnviaDato^0,f,c
  6919   002730  508C               	movf	140,w,c	;volatile
  6920   002732  0B0F               	andlw	15
  6921   002734  1010               	iorwf	??_EnviaDato^0,w,c
  6922   002736  6E8C               	movwf	140,c	;volatile
  6923                           
  6924                           ;LibLCDXC8.h: 55: HabilitaLCD();
  6925   002738  ECDD  F014         	call	_HabilitaLCD	;wreg free
  6926                           
  6927                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  6928   00273C  0E01               	movlw	1
  6929   00273E  ECBE  F012         	call	_RetardoLCD
  6930                           
  6931                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  6932   002742  C011  F010         	movff	EnviaDato@a,??_EnviaDato
  6933   002746  3A10               	swapf	??_EnviaDato^0,f,c
  6934   002748  0EF0               	movlw	240
  6935   00274A  1610               	andwf	??_EnviaDato^0,f,c
  6936   00274C  508C               	movf	140,w,c	;volatile
  6937   00274E  0B0F               	andlw	15
  6938   002750  1010               	iorwf	??_EnviaDato^0,w,c
  6939   002752  6E8C               	movwf	140,c	;volatile
  6940                           
  6941                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  6942   002754  0012               	return	
  6943   002756                     l3019:
  6944   002756  0E08               	movlw	8
  6945   002758  1850               	xorwf	_interfaz^0,w,c
  6946   00275A  A4D8               	btfss	status,2,c
  6947   00275C  0012               	return	
  6948                           
  6949                           ;LibLCDXC8.h: 59: LATD=a;
  6950   00275E  C011  FF8C         	movff	EnviaDato@a,3980	;volatile
  6951   002762  0012               	return		;funcret
  6952   002764                     __end_of_EnviaDato:
  6953                           	callstack 0
  6954                           
  6955 ;; *************** function _RetardoLCD *****************
  6956 ;; Defined at:
  6957 ;;		line 309 in file "LibLCDXC8.h"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;  a               1    wreg     unsigned char 
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  a               1   14[COMRAM] unsigned char 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1    wreg      void 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2, status,0
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6971 ;;      Params:         0       0       0       0       0       0       0       0       0
  6972 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6973 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6974 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6975 ;;Total ram usage:        2 bytes
  6976 ;; Hardware stack levels used: 1
  6977 ;; Hardware stack levels required when called: 5
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_EnviaDato
  6982 ;;		_InicializaLCD
  6983 ;;		_BorraLCD
  6984 ;;		_EscribeLCD_c
  6985 ;;		_DireccionaLCD
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text36
  6990   00257C                     __ptext36:
  6991                           	callstack 0
  6992   00257C                     _RetardoLCD:
  6993                           	callstack 23
  6994                           
  6995                           ;incstack = 0
  6996                           ;RetardoLCD@a stored from wreg
  6997   00257C  6E0F               	movwf	RetardoLCD@a^0,c
  6998                           
  6999                           ;LibLCDXC8.h: 310: switch(a){
  7000   00257E  D01B               	goto	l2789
  7001   002580                     l2779:
  7002   002580  0E05               	movlw	5
  7003   002582  6E0E               	movwf	??_RetardoLCD^0,c
  7004   002584  0EDE               	movlw	222
  7005   002586                     u7057:
  7006   002586  2EE8               	decfsz	wreg,f,c
  7007   002588  D7FE               	bra	u7057
  7008   00258A  2E0E               	decfsz	??_RetardoLCD^0,f,c
  7009   00258C  D7FC               	bra	u7057
  7010                           
  7011                           ;LibLCDXC8.h: 313: break;
  7012   00258E  0012               	return	
  7013   002590                     l2781:
  7014   002590  0E53               	movlw	83
  7015   002592                     u7067:
  7016   002592  2EE8               	decfsz	wreg,f,c
  7017   002594  D7FE               	bra	u7067
  7018   002596  F000               	nop	
  7019                           
  7020                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  7021   002598  0E35               	movlw	53
  7022   00259A                     u7077:
  7023   00259A  2EE8               	decfsz	wreg,f,c
  7024   00259C  D7FE               	bra	u7077
  7025   00259E  F000               	nop	
  7026                           
  7027                           ;LibLCDXC8.h: 317: break;
  7028   0025A0  0012               	return	
  7029   0025A2                     l2783:
  7030   0025A2  0E08               	movlw	8
  7031   0025A4                     u7087:
  7032   0025A4  2EE8               	decfsz	wreg,f,c
  7033   0025A6  D7FE               	bra	u7087
  7034   0025A8  F000               	nop	
  7035                           
  7036                           ;LibLCDXC8.h: 320: break;
  7037   0025AA  0012               	return	
  7038   0025AC                     l2785:
  7039   0025AC  0E03               	movlw	3
  7040   0025AE                     u7097:
  7041   0025AE  2EE8               	decfsz	wreg,f,c
  7042   0025B0  D7FE               	bra	u7097
  7043   0025B2  F000               	nop	
  7044                           
  7045                           ;LibLCDXC8.h: 323: break;
  7046   0025B4  0012               	return	
  7047   0025B6                     l2789:
  7048   0025B6  500F               	movf	RetardoLCD@a^0,w,c
  7049                           
  7050                           ; Switch size 1, requested type "simple"
  7051                           ; Number of cases is 4, Range of values is 1 to 4
  7052                           ; switch strategies available:
  7053                           ; Name         Instructions Cycles
  7054                           ; simple_byte           13     7 (average)
  7055                           ;	Chosen strategy is simple_byte
  7056   0025B8  0A01               	xorlw	1	; case 1
  7057   0025BA  B4D8               	btfsc	status,2,c
  7058   0025BC  D7E1               	goto	l2779
  7059   0025BE  0A03               	xorlw	3	; case 2
  7060   0025C0  B4D8               	btfsc	status,2,c
  7061   0025C2  D7E6               	goto	l2781
  7062   0025C4  0A01               	xorlw	1	; case 3
  7063   0025C6  B4D8               	btfsc	status,2,c
  7064   0025C8  D7EC               	goto	l2783
  7065   0025CA  0A07               	xorlw	7	; case 4
  7066   0025CC  A4D8               	btfss	status,2,c
  7067   0025CE  0012               	return	
  7068   0025D0  D7ED               	goto	l2785
  7069   0025D2                     __end_of_RetardoLCD:
  7070                           	callstack 0
  7071                           
  7072 ;; *************** function _HabilitaLCD *****************
  7073 ;; Defined at:
  7074 ;;		line 96 in file "LibLCDXC8.h"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;		None
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;		None
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  1    wreg      void 
  7081 ;; Registers used:
  7082 ;;		wreg
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7088 ;;      Params:         0       0       0       0       0       0       0       0       0
  7089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7091 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7092 ;;Total ram usage:        0 bytes
  7093 ;; Hardware stack levels used: 1
  7094 ;; Hardware stack levels required when called: 5
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_EnviaDato
  7099 ;;		_InicializaLCD
  7100 ;;		_BorraLCD
  7101 ;;		_EscribeLCD_c
  7102 ;;		_DireccionaLCD
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text37
  7107   0029BA                     __ptext37:
  7108                           	callstack 0
  7109   0029BA                     _HabilitaLCD:
  7110                           	callstack 23
  7111                           
  7112                           ;LibLCDXC8.h: 98: LATE1=1;
  7113                           
  7114                           ;incstack = 0
  7115   0029BA  828D               	bsf	3981,1,c	;volatile
  7116                           
  7117                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  7118   0029BC  0E03               	movlw	3
  7119   0029BE                     u7107:
  7120   0029BE  2EE8               	decfsz	wreg,f,c
  7121   0029C0  D7FE               	bra	u7107
  7122   0029C2  F000               	nop	
  7123                           
  7124                           ;LibLCDXC8.h: 101: LATE1=0;
  7125   0029C4  928D               	bcf	3981,1,c	;volatile
  7126   0029C6  0012               	return		;funcret
  7127   0029C8                     __end_of_HabilitaLCD:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _ConfiguraLCD *****************
  7131 ;; Defined at:
  7132 ;;		line 48 in file "LibLCDXC8.h"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  a               1    wreg     unsigned char 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  a               1   13[COMRAM] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0
  7147 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7149 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7150 ;;Total ram usage:        1 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 5
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_main
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text38
  7161   002922                     __ptext38:
  7162                           	callstack 0
  7163   002922                     _ConfiguraLCD:
  7164                           	callstack 25
  7165                           
  7166                           ;incstack = 0
  7167                           ;ConfiguraLCD@a stored from wreg
  7168   002922  6E0E               	movwf	ConfiguraLCD@a^0,c
  7169                           
  7170                           ;LibLCDXC8.h: 49: if(a==4 | a ==8)
  7171   002924  0E04               	movlw	4
  7172   002926  180E               	xorwf	ConfiguraLCD@a^0,w,c
  7173   002928  B4D8               	btfsc	status,2,c
  7174   00292A  D004               	goto	u3700
  7175   00292C  0E08               	movlw	8
  7176   00292E  180E               	xorwf	ConfiguraLCD@a^0,w,c
  7177   002930  A4D8               	btfss	status,2,c
  7178   002932  0012               	return	
  7179   002934                     u3700:
  7180                           
  7181                           ;LibLCDXC8.h: 50: interfaz=a;
  7182   002934  C00E  F050         	movff	ConfiguraLCD@a,_interfaz
  7183   002938  0012               	return		;funcret
  7184   00293A                     __end_of_ConfiguraLCD:
  7185                           	callstack 0
  7186                           
  7187 ;; *************** function _ColorRGB *****************
  7188 ;; Defined at:
  7189 ;;		line 242 in file "Lab4.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;		None
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      void 
  7196 ;; Registers used:
  7197 ;;		wreg, status,2, status,0
  7198 ;; Tracked objects:
  7199 ;;		On entry : 3F/0
  7200 ;;		On exit  : 3F/0
  7201 ;;		Unchanged: 3F/0
  7202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7203 ;;      Params:         0       0       0       0       0       0       0       0       0
  7204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7205 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7206 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7207 ;;Total ram usage:        2 bytes
  7208 ;; Hardware stack levels used: 1
  7209 ;; Hardware stack levels required when called: 5
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_main
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text39
  7218   0022B6                     __ptext39:
  7219                           	callstack 0
  7220   0022B6                     _ColorRGB:
  7221                           	callstack 25
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;Lab4.c: 243: if(color==8) color = 0;
  7225                           
  7226                           ;incstack = 0
  7227   0022B6  0E08               	movlw	8
  7228   0022B8  184E               	xorwf	_color^0,w,c
  7229   0022BA  104F               	iorwf	(_color+1)^0,w,c
  7230   0022BC  A4D8               	btfss	status,2,c
  7231   0022BE  D014               	goto	l3725
  7232                           
  7233                           ; BSR set to: 0
  7234   0022C0  0E00               	movlw	0
  7235   0022C2  6E4F               	movwf	(_color+1)^0,c
  7236   0022C4  0E00               	movlw	0
  7237   0022C6  6E4E               	movwf	_color^0,c
  7238   0022C8  D00F               	goto	l3725
  7239   0022CA                     l3707:
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;Lab4.c: 246: LATC = 0b00000000;
  7243   0022CA  0E00               	movlw	0
  7244   0022CC  D00B               	goto	L13
  7245   0022CE                     l3709:
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;Lab4.c: 249: LATC = 0b00000101;
  7249   0022CE  0E05               	movlw	5
  7250   0022D0  D009               	goto	L13
  7251   0022D2                     l3711:
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;Lab4.c: 252: LATC = 0b00000110;
  7255   0022D2  0E06               	movlw	6
  7256   0022D4  D007               	goto	L13
  7257   0022D6                     l3713:
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;Lab4.c: 255: LATC = 0b00000011;
  7261   0022D6  0E03               	movlw	3
  7262   0022D8  D005               	goto	L13
  7263   0022DA                     l3715:
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;Lab4.c: 258: LATC = 0b00000010;
  7267   0022DA  0E02               	movlw	2
  7268   0022DC  D003               	goto	L13
  7269   0022DE                     l3719:
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;Lab4.c: 264: LATC = 0b00000100;
  7273   0022DE  0E04               	movlw	4
  7274   0022E0  D001               	goto	L13
  7275   0022E2                     l3721:
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;Lab4.c: 267: LATC = 0b00000111;
  7279   0022E2  0E07               	movlw	7
  7280   0022E4                     L13:
  7281   0022E4  6E8B               	movwf	139,c	;volatile
  7282                           
  7283                           ;Lab4.c: 268: break;
  7284   0022E6  D021               	goto	l3727
  7285   0022E8                     l3725:
  7286                           
  7287                           ; BSR set to: 0
  7288   0022E8  C04E  F00E         	movff	_color,??_ColorRGB
  7289   0022EC  C04F  F00F         	movff	_color+1,??_ColorRGB+1
  7290                           
  7291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7292                           ; Switch size 1, requested type "simple"
  7293                           ; Number of cases is 1, Range of values is 0 to 0
  7294                           ; switch strategies available:
  7295                           ; Name         Instructions Cycles
  7296                           ; simple_byte            4     3 (average)
  7297                           ;	Chosen strategy is simple_byte
  7298   0022F0  500F               	movf	(??_ColorRGB+1)^0,w,c
  7299   0022F2  0A00               	xorlw	0	; case 0
  7300   0022F4  A4D8               	btfss	status,2,c
  7301   0022F6  D019               	goto	l3727
  7302                           
  7303                           ; BSR set to: 0
  7304                           ; Switch size 1, requested type "simple"
  7305                           ; Number of cases is 8, Range of values is 0 to 7
  7306                           ; switch strategies available:
  7307                           ; Name         Instructions Cycles
  7308                           ; simple_byte           25    13 (average)
  7309                           ;	Chosen strategy is simple_byte
  7310   0022F8  500E               	movf	??_ColorRGB^0,w,c
  7311   0022FA  0A00               	xorlw	0	; case 0
  7312   0022FC  B4D8               	btfsc	status,2,c
  7313   0022FE  D7E5               	goto	l3707
  7314   002300  0A01               	xorlw	1	; case 1
  7315   002302  B4D8               	btfsc	status,2,c
  7316   002304  D7E4               	goto	l3709
  7317   002306  0A03               	xorlw	3	; case 2
  7318   002308  B4D8               	btfsc	status,2,c
  7319   00230A  D7E3               	goto	l3711
  7320   00230C  0A01               	xorlw	1	; case 3
  7321   00230E  B4D8               	btfsc	status,2,c
  7322   002310  D7E2               	goto	l3713
  7323   002312  0A07               	xorlw	7	; case 4
  7324   002314  B4D8               	btfsc	status,2,c
  7325   002316  D7E1               	goto	l3715
  7326   002318  0A01               	xorlw	1	; case 5
  7327   00231A  B4D8               	btfsc	status,2,c
  7328   00231C  D7DA               	goto	l3711
  7329   00231E  0A03               	xorlw	3	; case 6
  7330   002320  B4D8               	btfsc	status,2,c
  7331   002322  D7DD               	goto	l3719
  7332   002324  0A01               	xorlw	1	; case 7
  7333   002326  B4D8               	btfsc	status,2,c
  7334   002328  D7DC               	goto	l3721
  7335   00232A                     l3727:
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;Lab4.c: 272: color += 1;
  7339   00232A  4A4E               	infsnz	_color^0,f,c
  7340   00232C  2A4F               	incf	(_color+1)^0,f,c
  7341                           
  7342                           ; BSR set to: 0
  7343   00232E  0012               	return		;funcret
  7344   002330                     __end_of_ColorRGB:
  7345                           	callstack 0
  7346                           
  7347 ;; *************** function _ISR *****************
  7348 ;; Defined at:
  7349 ;;		line 283 in file "Lab4.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      void 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7363 ;;      Params:         0       0       0       0       0       0       0       0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7365 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7366 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7367 ;;Total ram usage:        4 bytes
  7368 ;; Hardware stack levels used: 1
  7369 ;; Hardware stack levels required when called: 4
  7370 ;; This function calls:
  7371 ;;		i2_BorraLCD
  7372 ;;		i2_DireccionaLCD
  7373 ;;		i2_MensajeLCD_Var
  7374 ;; This function is called by:
  7375 ;;		Interrupt level 2
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           	psect	intcode
  7380   000008                     __pintcode:
  7381                           	callstack 0
  7382   000008                     _ISR:
  7383                           	callstack 20
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;incstack = 0
  7387   000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7388   00000A  EDD4  F010         	call	int_func,f	;refresh shadow registers
  7389                           
  7390                           	psect	intcode_body
  7391   0021A8                     __pintcode_body:
  7392                           	callstack 20
  7393   0021A8                     int_func:
  7394                           	callstack 20
  7395   0021A8  0006               	pop		; remove dummy address from shadow register refresh
  7396   0021AA  CFF6 F00A          	movff	tblptrl,??_ISR
  7397   0021AE  CFF7 F00B          	movff	tblptrh,??_ISR+1
  7398   0021B2  CFF8 F00C          	movff	tblptru,??_ISR+2
  7399   0021B6  CFF5 F00D          	movff	tablat,??_ISR+3
  7400                           
  7401                           ;Lab4.c: 284: if(TMR0IF==1){
  7402   0021BA  A4F2               	btfss	4082,2,c	;volatile
  7403   0021BC  D019               	goto	i2l4225
  7404                           
  7405                           ;Lab4.c: 285: if(!verificador) contador = contador +1;
  7406   0021BE  5048               	movf	_verificador^0,w,c
  7407   0021C0  1049               	iorwf	(_verificador+1)^0,w,c
  7408   0021C2  A4D8               	btfss	status,2,c
  7409   0021C4  D007               	goto	i2l4219
  7410   0021C6  0E01               	movlw	1
  7411   0021C8  244C               	addwf	_contador^0,w,c
  7412   0021CA  6E4C               	movwf	_contador^0,c
  7413   0021CC  0E00               	movlw	0
  7414   0021CE  204D               	addwfc	(_contador+1)^0,w,c
  7415   0021D0  6E4D               	movwf	(_contador+1)^0,c
  7416   0021D2  D004               	goto	i2l4221
  7417   0021D4                     i2l4219:
  7418                           
  7419                           ;Lab4.c: 286: else contador = 0;
  7420   0021D4  0E00               	movlw	0
  7421   0021D6  6E4D               	movwf	(_contador+1)^0,c
  7422   0021D8  0E00               	movlw	0
  7423   0021DA  6E4C               	movwf	_contador^0,c
  7424   0021DC                     i2l4221:
  7425                           
  7426                           ;Lab4.c: 287: TMR0IF=0;
  7427   0021DC  94F2               	bcf	4082,2,c	;volatile
  7428                           
  7429                           ;Lab4.c: 288: LATE2 = !LATE2;
  7430   0021DE  B48D               	btfsc	3981,2,c	;volatile
  7431   0021E0  D002               	goto	i2u505_40
  7432   0021E2  848D               	bsf	3981,2,c	;volatile
  7433   0021E4  D001               	goto	i2u506_45
  7434   0021E6                     i2u505_40:
  7435   0021E6  948D               	bcf	3981,2,c	;volatile
  7436   0021E8                     i2u506_45:
  7437                           
  7438                           ;Lab4.c: 289: TMR0 = 49911;
  7439   0021E8  0EC2               	movlw	194
  7440   0021EA  6ED7               	movwf	215,c	;volatile
  7441   0021EC  0EF7               	movlw	247
  7442   0021EE  6ED6               	movwf	214,c	;volatile
  7443   0021F0                     i2l4225:
  7444                           
  7445                           ;Lab4.c: 290: };Lab4.c: 292: if(contador == 20){
  7446   0021F0  0E14               	movlw	20
  7447   0021F2  184C               	xorwf	_contador^0,w,c
  7448   0021F4  104D               	iorwf	(_contador+1)^0,w,c
  7449   0021F6  A4D8               	btfss	status,2,c
  7450   0021F8  D013               	goto	i2l323
  7451                           
  7452                           ;Lab4.c: 293: if(!verificador){
  7453   0021FA  5048               	movf	_verificador^0,w,c
  7454   0021FC  1049               	iorwf	(_verificador+1)^0,w,c
  7455   0021FE  A4D8               	btfss	status,2,c
  7456   002200  D00F               	goto	i2l323
  7457                           
  7458                           ;Lab4.c: 294: LATC7 = !LATC7;
  7459   002202  BE8B               	btfsc	3979,7,c	;volatile
  7460   002204  D002               	goto	i2u509_40
  7461   002206  8E8B               	bsf	3979,7,c	;volatile
  7462   002208  D001               	goto	i2u510_45
  7463   00220A                     i2u509_40:
  7464   00220A  9E8B               	bcf	3979,7,c	;volatile
  7465   00220C                     i2u510_45:
  7466                           
  7467                           ;Lab4.c: 295: BorraLCD();
  7468   00220C  ECD3  F014         	call	i2_BorraLCD	;wreg free
  7469                           
  7470                           ;Lab4.c: 296: DireccionaLCD(0x82);
  7471   002210  0E82               	movlw	130
  7472   002212  ECBE  F014         	call	i2_DireccionaLCD
  7473                           
  7474                           ;Lab4.c: 297: MensajeLCD_Var("LVP Activado");
  7475   002216  0E65               	movlw	low STR_11
  7476   002218  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  7477   00221A  EC66  F013         	call	i2_MensajeLCD_Var	;wreg free
  7478   00221E  0003               	sleep		;# 
  7479   002220                     i2l323:
  7480   002220  C00D  FFF5         	movff	??_ISR+3,tablat
  7481   002224  C00C  FFF8         	movff	??_ISR+2,tblptru
  7482   002228  C00B  FFF7         	movff	??_ISR+1,tblptrh
  7483   00222C  C00A  FFF6         	movff	??_ISR,tblptrl
  7484   002230  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7485   002232  0011               	retfie		f
  7486   002234                     __end_of_ISR:
  7487                           	callstack 0
  7488                           
  7489 ;; *************** function i2_MensajeLCD_Var *****************
  7490 ;; Defined at:
  7491 ;;		line 261 in file "LibLCDXC8.h"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  a               1    5[COMRAM] PTR unsigned char 
  7494 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  7495 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  7496 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  7497 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  i               2    7[COMRAM] int 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  1    wreg      void 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7509 ;;      Params:         1       0       0       0       0       0       0       0       0
  7510 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7511 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7512 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7513 ;;Total ram usage:        4 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 3
  7516 ;; This function calls:
  7517 ;;		i2_EscribeLCD_c
  7518 ;;		i2_strlen
  7519 ;; This function is called by:
  7520 ;;		_ISR
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text41
  7525   0026CC                     __ptext41:
  7526                           	callstack 0
  7527   0026CC                     i2_MensajeLCD_Var:
  7528                           	callstack 20
  7529                           
  7530                           ;LibLCDXC8.h: 265: for(int i = 0; i<strlen(a); i++){
  7531                           
  7532                           ;incstack = 0
  7533   0026CC  0E00               	movlw	0
  7534   0026CE  6E09               	movwf	(i2MensajeLCD_Var@i+1)^0,c
  7535   0026D0  0E00               	movlw	0
  7536   0026D2  6E08               	movwf	i2MensajeLCD_Var@i^0,c
  7537   0026D4  D019               	goto	i2l3863
  7538   0026D6                     i2l3855:
  7539                           
  7540                           ;LibLCDXC8.h: 266: if(a[i] == (0)){
  7541   0026D6  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  7542   0026D8  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  7543   0026DA  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  7544   0026DC  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  7545   0026E0                     	if	1	;There is more than 1 active tblptr byte
  7546   0026E0  0E08               	movlw	high __smallconst
  7547   0026E2  6EF7               	movwf	tblptrh,c
  7548   0026E4                     	endif
  7549   0026E4                     	if	0	;tblptru may be non-zero
  7550   0026E4                     	endif
  7551   0026E4                     	if	0	;tblptru may be non-zero
  7552   0026E4                     	endif
  7553   0026E4  0008               	tblrd		*
  7554   0026E6  50F5               	movf	tablat,w,c
  7555   0026E8  0900               	iorlw	0
  7556   0026EA  B4D8               	btfsc	status,2,c
  7557   0026EC  0012               	return	
  7558                           
  7559                           ;LibLCDXC8.h: 268: };LibLCDXC8.h: 269: EscribeLCD_c(a[i]);
  7560   0026EE  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  7561   0026F0  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  7562   0026F2  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  7563   0026F4  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  7564   0026F8                     	if	1	;There is more than 1 active tblptr byte
  7565   0026F8  0E08               	movlw	high __smallconst
  7566   0026FA  6EF7               	movwf	tblptrh,c
  7567   0026FC                     	endif
  7568   0026FC                     	if	0	;tblptru may be non-zero
  7569   0026FC                     	endif
  7570   0026FC                     	if	0	;tblptru may be non-zero
  7571   0026FC                     	endif
  7572   0026FC  0008               	tblrd		*
  7573   0026FE  50F5               	movf	tablat,w,c
  7574   002700  ECB3  F014         	call	i2_EscribeLCD_c
  7575   002704  4A08               	infsnz	i2MensajeLCD_Var@i^0,f,c
  7576   002706  2A09               	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  7577   002708                     i2l3863:
  7578   002708  C006  F001         	movff	i2MensajeLCD_Var@a,i2strlen@s
  7579   00270C  EC46  F014         	call	i2_strlen	;wreg free
  7580   002710  5001               	movf	?i2_strlen^0,w,c
  7581   002712  5C08               	subwf	i2MensajeLCD_Var@i^0,w,c
  7582   002714  5002               	movf	(?i2_strlen+1)^0,w,c
  7583   002716  5809               	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  7584   002718  B0D8               	btfsc	status,0,c
  7585   00271A  0012               	return	
  7586   00271C  D7DC               	goto	i2l3855
  7587   00271E                     __end_ofi2_MensajeLCD_Var:
  7588                           	callstack 0
  7589                           
  7590 ;; *************** function i2_strlen *****************
  7591 ;; Defined at:
  7592 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;  s               1    0[COMRAM] PTR const unsigned char 
  7595 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  7596 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  7597 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  7598 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  7601 ;;		 -> STR_15(14), STR_14(9), STR_13(12), STR_12(10), 
  7602 ;;		 -> STR_11(13), STR_10(9), STR_9(11), STR_8(9), 
  7603 ;;		 -> STR_7(15), STR_6(9), STR_5(10), STR_4(9), 
  7604 ;;		 -> STR_3(14), STR_2(5), STR_1(8), 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  2    0[COMRAM] unsigned int 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7614 ;;      Params:         2       0       0       0       0       0       0       0       0
  7615 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7617 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7618 ;;Total ram usage:        3 bytes
  7619 ;; Hardware stack levels used: 1
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		i2_MensajeLCD_Var
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text42
  7628   00288C                     __ptext42:
  7629                           	callstack 0
  7630   00288C                     i2_strlen:
  7631                           	callstack 22
  7632                           
  7633                           ;incstack = 0
  7634   00288C  C001  F003         	movff	i2strlen@s,i2strlen@cp
  7635   002890  D001               	goto	i2l3501
  7636   002892                     i2l3499:
  7637   002892  2A03               	incf	i2strlen@cp^0,f,c
  7638   002894                     i2l3501:
  7639   002894  C003  FFF6         	movff	i2strlen@cp,tblptrl
  7640   002898                     	if	1	;There is more than 1 active tblptr byte
  7641   002898  0E08               	movlw	high __smallconst
  7642   00289A  6EF7               	movwf	tblptrh,c
  7643   00289C                     	endif
  7644   00289C                     	if	0	;tblptru may be non-zero
  7645   00289C                     	endif
  7646   00289C                     	if	0	;tblptru may be non-zero
  7647   00289C                     	endif
  7648   00289C  0008               	tblrd		*
  7649   00289E  50F5               	movf	tablat,w,c
  7650   0028A0  0900               	iorlw	0
  7651   0028A2  A4D8               	btfss	status,2,c
  7652   0028A4  D7F6               	goto	i2l3499
  7653   0028A6  5001               	movf	i2strlen@s^0,w,c
  7654   0028A8  5C03               	subwf	i2strlen@cp^0,w,c
  7655   0028AA  6E01               	movwf	?i2_strlen^0,c
  7656   0028AC  6A02               	clrf	(?i2_strlen+1)^0,c
  7657   0028AE  BE01               	btfsc	?i2_strlen^0,7,c
  7658   0028B0  0602               	decf	(?i2_strlen+1)^0,f,c
  7659   0028B2  0012               	return		;funcret
  7660   0028B4                     __end_ofi2_strlen:
  7661                           	callstack 0
  7662                           
  7663 ;; *************** function i2_EscribeLCD_c *****************
  7664 ;; Defined at:
  7665 ;;		line 117 in file "LibLCDXC8.h"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  a               1    wreg     unsigned char 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;  a               1    4[COMRAM] unsigned char 
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      void 
  7672 ;; Registers used:
  7673 ;;		wreg, status,2, status,0, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7679 ;;      Params:         0       0       0       0       0       0       0       0       0
  7680 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7682 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7683 ;;Total ram usage:        1 bytes
  7684 ;; Hardware stack levels used: 1
  7685 ;; Hardware stack levels required when called: 2
  7686 ;; This function calls:
  7687 ;;		i2_EnviaDato
  7688 ;;		i2_HabilitaLCD
  7689 ;;		i2_RetardoLCD
  7690 ;; This function is called by:
  7691 ;;		i2_MensajeLCD_Var
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           	psect	text43
  7696   002966                     __ptext43:
  7697                           	callstack 0
  7698   002966                     i2_EscribeLCD_c:
  7699                           	callstack 20
  7700                           
  7701                           ;incstack = 0
  7702                           ;i2EscribeLCD_c@a stored from wreg
  7703   002966  6E05               	movwf	i2EscribeLCD_c@a^0,c
  7704                           
  7705                           ;LibLCDXC8.h: 121: LATE0=1;
  7706   002968  808D               	bsf	3981,0,c	;volatile
  7707                           
  7708                           ;LibLCDXC8.h: 122: EnviaDato(a);
  7709   00296A  5005               	movf	i2EscribeLCD_c@a^0,w,c
  7710   00296C  ECB2  F013         	call	i2_EnviaDato
  7711                           
  7712                           ;LibLCDXC8.h: 123: HabilitaLCD();
  7713   002970  ECE4  F014         	call	i2_HabilitaLCD	;wreg free
  7714                           
  7715                           ;LibLCDXC8.h: 124: RetardoLCD(4);
  7716   002974  0E04               	movlw	4
  7717   002976  ECE9  F012         	call	i2_RetardoLCD
  7718   00297A  0012               	return		;funcret
  7719   00297C                     __end_ofi2_EscribeLCD_c:
  7720                           	callstack 0
  7721                           
  7722 ;; *************** function i2_DireccionaLCD *****************
  7723 ;; Defined at:
  7724 ;;		line 273 in file "LibLCDXC8.h"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  a               1    wreg     unsigned char 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  a               1    4[COMRAM] unsigned char 
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  1    wreg      void 
  7731 ;; Registers used:
  7732 ;;		wreg, status,2, status,0, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7738 ;;      Params:         0       0       0       0       0       0       0       0       0
  7739 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7741 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7742 ;;Total ram usage:        1 bytes
  7743 ;; Hardware stack levels used: 1
  7744 ;; Hardware stack levels required when called: 2
  7745 ;; This function calls:
  7746 ;;		i2_EnviaDato
  7747 ;;		i2_HabilitaLCD
  7748 ;;		i2_RetardoLCD
  7749 ;; This function is called by:
  7750 ;;		_ISR
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text44
  7755   00297C                     __ptext44:
  7756                           	callstack 0
  7757   00297C                     i2_DireccionaLCD:
  7758                           	callstack 21
  7759                           
  7760                           ;incstack = 0
  7761                           ;i2DireccionaLCD@a stored from wreg
  7762   00297C  6E05               	movwf	i2DireccionaLCD@a^0,c
  7763                           
  7764                           ;LibLCDXC8.h: 276: LATE0=0;
  7765   00297E  908D               	bcf	3981,0,c	;volatile
  7766                           
  7767                           ;LibLCDXC8.h: 277: EnviaDato(a);
  7768   002980  5005               	movf	i2DireccionaLCD@a^0,w,c
  7769   002982  ECB2  F013         	call	i2_EnviaDato
  7770                           
  7771                           ;LibLCDXC8.h: 278: HabilitaLCD();
  7772   002986  ECE4  F014         	call	i2_HabilitaLCD	;wreg free
  7773                           
  7774                           ;LibLCDXC8.h: 279: RetardoLCD(4);
  7775   00298A  0E04               	movlw	4
  7776   00298C  ECE9  F012         	call	i2_RetardoLCD
  7777   002990  0012               	return		;funcret
  7778   002992                     __end_ofi2_DireccionaLCD:
  7779                           	callstack 0
  7780                           
  7781 ;; *************** function i2_BorraLCD *****************
  7782 ;; Defined at:
  7783 ;;		line 103 in file "LibLCDXC8.h"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;		None
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  1    wreg      void 
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7797 ;;      Params:         0       0       0       0       0       0       0       0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7800 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7801 ;;Total ram usage:        0 bytes
  7802 ;; Hardware stack levels used: 1
  7803 ;; Hardware stack levels required when called: 2
  7804 ;; This function calls:
  7805 ;;		i2_EnviaDato
  7806 ;;		i2_HabilitaLCD
  7807 ;;		i2_RetardoLCD
  7808 ;; This function is called by:
  7809 ;;		_ISR
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text45
  7814   0029A6                     __ptext45:
  7815                           	callstack 0
  7816   0029A6                     i2_BorraLCD:
  7817                           	callstack 21
  7818                           
  7819                           ;LibLCDXC8.h: 105: LATE0=0;
  7820                           
  7821                           ;incstack = 0
  7822   0029A6  908D               	bcf	3981,0,c	;volatile
  7823                           
  7824                           ;LibLCDXC8.h: 106: EnviaDato(0x01);
  7825   0029A8  0E01               	movlw	1
  7826   0029AA  ECB2  F013         	call	i2_EnviaDato
  7827                           
  7828                           ;LibLCDXC8.h: 107: HabilitaLCD();
  7829   0029AE  ECE4  F014         	call	i2_HabilitaLCD	;wreg free
  7830                           
  7831                           ;LibLCDXC8.h: 108: RetardoLCD(2);
  7832   0029B2  0E02               	movlw	2
  7833   0029B4  ECE9  F012         	call	i2_RetardoLCD
  7834   0029B8  0012               	return		;funcret
  7835   0029BA                     __end_ofi2_BorraLCD:
  7836                           	callstack 0
  7837                           
  7838 ;; *************** function i2_EnviaDato *****************
  7839 ;; Defined at:
  7840 ;;		line 52 in file "LibLCDXC8.h"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;  a               1    wreg     unsigned char 
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  a               1    3[COMRAM] unsigned char 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1    wreg      void 
  7847 ;; Registers used:
  7848 ;;		wreg, status,2, status,0, cstack
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0
  7855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7856 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7857 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7858 ;;Total ram usage:        2 bytes
  7859 ;; Hardware stack levels used: 1
  7860 ;; Hardware stack levels required when called: 1
  7861 ;; This function calls:
  7862 ;;		i2_HabilitaLCD
  7863 ;;		i2_RetardoLCD
  7864 ;; This function is called by:
  7865 ;;		i2_BorraLCD
  7866 ;;		i2_EscribeLCD_c
  7867 ;;		i2_DireccionaLCD
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text46
  7872   002764                     __ptext46:
  7873                           	callstack 0
  7874   002764                     i2_EnviaDato:
  7875                           	callstack 20
  7876                           
  7877                           ;incstack = 0
  7878                           ;i2EnviaDato@a stored from wreg
  7879   002764  6E04               	movwf	i2EnviaDato@a^0,c
  7880                           
  7881                           ;LibLCDXC8.h: 53: if(interfaz==4){
  7882   002766  0E04               	movlw	4
  7883   002768  1850               	xorwf	_interfaz^0,w,c
  7884   00276A  A4D8               	btfss	status,2,c
  7885   00276C  D017               	goto	i2l3283
  7886                           
  7887                           ;LibLCDXC8.h: 54: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  7888   00276E  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  7889   002772  0EF0               	movlw	240
  7890   002774  1603               	andwf	??i2_EnviaDato^0,f,c
  7891   002776  508C               	movf	140,w,c	;volatile
  7892   002778  0B0F               	andlw	15
  7893   00277A  1003               	iorwf	??i2_EnviaDato^0,w,c
  7894   00277C  6E8C               	movwf	140,c	;volatile
  7895                           
  7896                           ;LibLCDXC8.h: 55: HabilitaLCD();
  7897   00277E  ECE4  F014         	call	i2_HabilitaLCD	;wreg free
  7898                           
  7899                           ;LibLCDXC8.h: 56: RetardoLCD(1);
  7900   002782  0E01               	movlw	1
  7901   002784  ECE9  F012         	call	i2_RetardoLCD
  7902                           
  7903                           ;LibLCDXC8.h: 57: LATD=(LATD & 0b00001111) | (a<<4);
  7904   002788  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  7905   00278C  3A03               	swapf	??i2_EnviaDato^0,f,c
  7906   00278E  0EF0               	movlw	240
  7907   002790  1603               	andwf	??i2_EnviaDato^0,f,c
  7908   002792  508C               	movf	140,w,c	;volatile
  7909   002794  0B0F               	andlw	15
  7910   002796  1003               	iorwf	??i2_EnviaDato^0,w,c
  7911   002798  6E8C               	movwf	140,c	;volatile
  7912                           
  7913                           ;LibLCDXC8.h: 58: }else if(interfaz==8){
  7914   00279A  0012               	return	
  7915   00279C                     i2l3283:
  7916   00279C  0E08               	movlw	8
  7917   00279E  1850               	xorwf	_interfaz^0,w,c
  7918   0027A0  A4D8               	btfss	status,2,c
  7919   0027A2  0012               	return	
  7920                           
  7921                           ;LibLCDXC8.h: 59: LATD=a;
  7922   0027A4  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  7923   0027A8  0012               	return		;funcret
  7924   0027AA                     __end_ofi2_EnviaDato:
  7925                           	callstack 0
  7926                           
  7927 ;; *************** function i2_RetardoLCD *****************
  7928 ;; Defined at:
  7929 ;;		line 309 in file "LibLCDXC8.h"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  a               1    wreg     unsigned char 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;  a               1    1[COMRAM] unsigned char 
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  1    wreg      void 
  7936 ;; Registers used:
  7937 ;;		wreg, status,2, status,0
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7943 ;;      Params:         0       0       0       0       0       0       0       0       0
  7944 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7945 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7946 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7947 ;;Total ram usage:        2 bytes
  7948 ;; Hardware stack levels used: 1
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		i2_EnviaDato
  7953 ;;		i2_BorraLCD
  7954 ;;		i2_EscribeLCD_c
  7955 ;;		i2_DireccionaLCD
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           	psect	text47
  7960   0025D2                     __ptext47:
  7961                           	callstack 0
  7962   0025D2                     i2_RetardoLCD:
  7963                           	callstack 21
  7964                           
  7965                           ;incstack = 0
  7966                           ;i2RetardoLCD@a stored from wreg
  7967   0025D2  6E02               	movwf	i2RetardoLCD@a^0,c
  7968                           
  7969                           ;LibLCDXC8.h: 310: switch(a){
  7970   0025D4  D01B               	goto	i2l3177
  7971   0025D6                     i2l3167:
  7972   0025D6  0E05               	movlw	5
  7973   0025D8  6E01               	movwf	??i2_RetardoLCD^0,c
  7974   0025DA  0EDE               	movlw	222
  7975   0025DC                     i2u711_47:
  7976   0025DC  2EE8               	decfsz	wreg,f,c
  7977   0025DE  D7FE               	bra	i2u711_47
  7978   0025E0  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  7979   0025E2  D7FC               	bra	i2u711_47
  7980                           
  7981                           ;LibLCDXC8.h: 313: break;
  7982   0025E4  0012               	return	
  7983   0025E6                     i2l3169:
  7984   0025E6  0E53               	movlw	83
  7985   0025E8                     i2u712_47:
  7986   0025E8  2EE8               	decfsz	wreg,f,c
  7987   0025EA  D7FE               	bra	i2u712_47
  7988   0025EC  F000               	nop	
  7989                           
  7990                           ;LibLCDXC8.h: 315: _delay((unsigned long)((640)*(1000000/4000000.0)));
  7991   0025EE  0E35               	movlw	53
  7992   0025F0                     i2u713_47:
  7993   0025F0  2EE8               	decfsz	wreg,f,c
  7994   0025F2  D7FE               	bra	i2u713_47
  7995   0025F4  F000               	nop	
  7996                           
  7997                           ;LibLCDXC8.h: 317: break;
  7998   0025F6  0012               	return	
  7999   0025F8                     i2l3171:
  8000   0025F8  0E08               	movlw	8
  8001   0025FA                     i2u714_47:
  8002   0025FA  2EE8               	decfsz	wreg,f,c
  8003   0025FC  D7FE               	bra	i2u714_47
  8004   0025FE  F000               	nop	
  8005                           
  8006                           ;LibLCDXC8.h: 320: break;
  8007   002600  0012               	return	
  8008   002602                     i2l3173:
  8009   002602  0E03               	movlw	3
  8010   002604                     i2u715_47:
  8011   002604  2EE8               	decfsz	wreg,f,c
  8012   002606  D7FE               	bra	i2u715_47
  8013   002608  F000               	nop	
  8014                           
  8015                           ;LibLCDXC8.h: 323: break;
  8016   00260A  0012               	return	
  8017   00260C                     i2l3177:
  8018   00260C  5002               	movf	i2RetardoLCD@a^0,w,c
  8019                           
  8020                           ; Switch size 1, requested type "simple"
  8021                           ; Number of cases is 4, Range of values is 1 to 4
  8022                           ; switch strategies available:
  8023                           ; Name         Instructions Cycles
  8024                           ; simple_byte           13     7 (average)
  8025                           ;	Chosen strategy is simple_byte
  8026   00260E  0A01               	xorlw	1	; case 1
  8027   002610  B4D8               	btfsc	status,2,c
  8028   002612  D7E1               	goto	i2l3167
  8029   002614  0A03               	xorlw	3	; case 2
  8030   002616  B4D8               	btfsc	status,2,c
  8031   002618  D7E6               	goto	i2l3169
  8032   00261A  0A01               	xorlw	1	; case 3
  8033   00261C  B4D8               	btfsc	status,2,c
  8034   00261E  D7EC               	goto	i2l3171
  8035   002620  0A07               	xorlw	7	; case 4
  8036   002622  A4D8               	btfss	status,2,c
  8037   002624  0012               	return	
  8038   002626  D7ED               	goto	i2l3173
  8039   002628                     __end_ofi2_RetardoLCD:
  8040                           	callstack 0
  8041                           
  8042 ;; *************** function i2_HabilitaLCD *****************
  8043 ;; Defined at:
  8044 ;;		line 96 in file "LibLCDXC8.h"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;		None
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;		None
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  1    wreg      void 
  8051 ;; Registers used:
  8052 ;;		wreg
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8058 ;;      Params:         0       0       0       0       0       0       0       0       0
  8059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8061 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8062 ;;Total ram usage:        0 bytes
  8063 ;; Hardware stack levels used: 1
  8064 ;; This function calls:
  8065 ;;		Nothing
  8066 ;; This function is called by:
  8067 ;;		i2_EnviaDato
  8068 ;;		i2_BorraLCD
  8069 ;;		i2_EscribeLCD_c
  8070 ;;		i2_DireccionaLCD
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           	psect	text48
  8075   0029C8                     __ptext48:
  8076                           	callstack 0
  8077   0029C8                     i2_HabilitaLCD:
  8078                           	callstack 21
  8079                           
  8080                           ;LibLCDXC8.h: 98: LATE1=1;
  8081                           
  8082                           ;incstack = 0
  8083   0029C8  828D               	bsf	3981,1,c	;volatile
  8084                           
  8085                           ;LibLCDXC8.h: 99: _delay((unsigned long)((40)*(1000000/4000000.0)));
  8086   0029CA  0E03               	movlw	3
  8087   0029CC                     i2u716_47:
  8088   0029CC  2EE8               	decfsz	wreg,f,c
  8089   0029CE  D7FE               	bra	i2u716_47
  8090   0029D0  F000               	nop	
  8091                           
  8092                           ;LibLCDXC8.h: 101: LATE1=0;
  8093   0029D2  928D               	bcf	3981,1,c	;volatile
  8094   0029D4  0012               	return		;funcret
  8095   0029D6                     __end_ofi2_HabilitaLCD:
  8096                           	callstack 0
  8097                           
  8098                           	psect	rparam
  8099   000000                     
  8100                           	psect	temp
  8101   000051                     btemp:
  8102                           	callstack 0
  8103   000051                     	ds	1
  8104   000000                     int$flags	set	btemp
  8105   000000                     wtemp8	set	btemp+1
  8106   000000                     ttemp5	set	btemp+1
  8107   000000                     ttemp6	set	btemp+4
  8108   000000                     ttemp7	set	btemp+8
  8109                           
  8110                           	psect	idloc
  8111                           
  8112                           ;Config register IDLOC0 @ 0x200000
  8113                           ;	unspecified, using default values
  8114   200000                     	org	2097152
  8115   200000  FF                 	db	255
  8116                           
  8117                           ;Config register IDLOC1 @ 0x200001
  8118                           ;	unspecified, using default values
  8119   200001                     	org	2097153
  8120   200001  FF                 	db	255
  8121                           
  8122                           ;Config register IDLOC2 @ 0x200002
  8123                           ;	unspecified, using default values
  8124   200002                     	org	2097154
  8125   200002  FF                 	db	255
  8126                           
  8127                           ;Config register IDLOC3 @ 0x200003
  8128                           ;	unspecified, using default values
  8129   200003                     	org	2097155
  8130   200003  FF                 	db	255
  8131                           
  8132                           ;Config register IDLOC4 @ 0x200004
  8133                           ;	unspecified, using default values
  8134   200004                     	org	2097156
  8135   200004  FF                 	db	255
  8136                           
  8137                           ;Config register IDLOC5 @ 0x200005
  8138                           ;	unspecified, using default values
  8139   200005                     	org	2097157
  8140   200005  FF                 	db	255
  8141                           
  8142                           ;Config register IDLOC6 @ 0x200006
  8143                           ;	unspecified, using default values
  8144   200006                     	org	2097158
  8145   200006  FF                 	db	255
  8146                           
  8147                           ;Config register IDLOC7 @ 0x200007
  8148                           ;	unspecified, using default values
  8149   200007                     	org	2097159
  8150   200007  FF                 	db	255
  8151                           
  8152                           	psect	config
  8153                           
  8154                           ;Config register CONFIG1L @ 0x300000
  8155                           ;	unspecified, using default values
  8156                           ;	PLL Prescaler Selection bits
  8157                           ;	PLLDIV = 0x0, unprogrammed default
  8158                           ;	System Clock Postscaler Selection bits
  8159                           ;	CPUDIV = 0x0, unprogrammed default
  8160                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8161                           ;	USBDIV = 0x0, unprogrammed default
  8162   300000                     	org	3145728
  8163   300000  00                 	db	0
  8164                           
  8165                           ;Config register CONFIG1H @ 0x300001
  8166                           ;	Oscillator Selection bits
  8167                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8168                           ;	Fail-Safe Clock Monitor Enable bit
  8169                           ;	FCMEN = 0x0, unprogrammed default
  8170                           ;	Internal/External Oscillator Switchover bit
  8171                           ;	IESO = 0x0, unprogrammed default
  8172   300001                     	org	3145729
  8173   300001  09                 	db	9
  8174                           
  8175                           ;Config register CONFIG2L @ 0x300002
  8176                           ;	unspecified, using default values
  8177                           ;	Power-up Timer Enable bit
  8178                           ;	PWRT = 0x1, unprogrammed default
  8179                           ;	Brown-out Reset Enable bits
  8180                           ;	BOR = 0x3, unprogrammed default
  8181                           ;	Brown-out Reset Voltage bits
  8182                           ;	BORV = 0x3, unprogrammed default
  8183                           ;	USB Voltage Regulator Enable bit
  8184                           ;	VREGEN = 0x0, unprogrammed default
  8185   300002                     	org	3145730
  8186   300002  1F                 	db	31
  8187                           
  8188                           ;Config register CONFIG2H @ 0x300003
  8189                           ;	Watchdog Timer Enable bit
  8190                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8191                           ;	Watchdog Timer Postscale Select bits
  8192                           ;	WDTPS = 0xF, unprogrammed default
  8193   300003                     	org	3145731
  8194   300003  1E                 	db	30
  8195                           
  8196                           ; Padding undefined space
  8197   300004                     	org	3145732
  8198   300004  FF                 	db	255
  8199                           
  8200                           ;Config register CONFIG3H @ 0x300005
  8201                           ;	CCP2 MUX bit
  8202                           ;	CCP2MX = 0x1, unprogrammed default
  8203                           ;	PORTB A/D Enable bit
  8204                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8205                           ;	Low-Power Timer 1 Oscillator Enable bit
  8206                           ;	LPT1OSC = 0x0, unprogrammed default
  8207                           ;	MCLR Pin Enable bit
  8208                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8209   300005                     	org	3145733
  8210   300005  81                 	db	129
  8211                           
  8212                           ;Config register CONFIG4L @ 0x300006
  8213                           ;	Stack Full/Underflow Reset Enable bit
  8214                           ;	STVREN = 0x1, unprogrammed default
  8215                           ;	Single-Supply ICSP Enable bit
  8216                           ;	LVP = OFF, Single-Supply ICSP disabled
  8217                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8218                           ;	ICPRT = 0x0, unprogrammed default
  8219                           ;	Extended Instruction Set Enable bit
  8220                           ;	XINST = 0x0, unprogrammed default
  8221                           ;	Background Debugger Enable bit
  8222                           ;	DEBUG = 0x1, unprogrammed default
  8223   300006                     	org	3145734
  8224   300006  81                 	db	129
  8225                           
  8226                           ; Padding undefined space
  8227   300007                     	org	3145735
  8228   300007  FF                 	db	255
  8229                           
  8230                           ;Config register CONFIG5L @ 0x300008
  8231                           ;	unspecified, using default values
  8232                           ;	Code Protection bit
  8233                           ;	CP0 = 0x1, unprogrammed default
  8234                           ;	Code Protection bit
  8235                           ;	CP1 = 0x1, unprogrammed default
  8236                           ;	Code Protection bit
  8237                           ;	CP2 = 0x1, unprogrammed default
  8238                           ;	Code Protection bit
  8239                           ;	CP3 = 0x1, unprogrammed default
  8240   300008                     	org	3145736
  8241   300008  0F                 	db	15
  8242                           
  8243                           ;Config register CONFIG5H @ 0x300009
  8244                           ;	unspecified, using default values
  8245                           ;	Boot Block Code Protection bit
  8246                           ;	CPB = 0x1, unprogrammed default
  8247                           ;	Data EEPROM Code Protection bit
  8248                           ;	CPD = 0x1, unprogrammed default
  8249   300009                     	org	3145737
  8250   300009  C0                 	db	192
  8251                           
  8252                           ;Config register CONFIG6L @ 0x30000A
  8253                           ;	unspecified, using default values
  8254                           ;	Write Protection bit
  8255                           ;	WRT0 = 0x1, unprogrammed default
  8256                           ;	Write Protection bit
  8257                           ;	WRT1 = 0x1, unprogrammed default
  8258                           ;	Write Protection bit
  8259                           ;	WRT2 = 0x1, unprogrammed default
  8260                           ;	Write Protection bit
  8261                           ;	WRT3 = 0x1, unprogrammed default
  8262   30000A                     	org	3145738
  8263   30000A  0F                 	db	15
  8264                           
  8265                           ;Config register CONFIG6H @ 0x30000B
  8266                           ;	unspecified, using default values
  8267                           ;	Configuration Register Write Protection bit
  8268                           ;	WRTC = 0x1, unprogrammed default
  8269                           ;	Boot Block Write Protection bit
  8270                           ;	WRTB = 0x1, unprogrammed default
  8271                           ;	Data EEPROM Write Protection bit
  8272                           ;	WRTD = 0x1, unprogrammed default
  8273   30000B                     	org	3145739
  8274   30000B  E0                 	db	224
  8275                           
  8276                           ;Config register CONFIG7L @ 0x30000C
  8277                           ;	unspecified, using default values
  8278                           ;	Table Read Protection bit
  8279                           ;	EBTR0 = 0x1, unprogrammed default
  8280                           ;	Table Read Protection bit
  8281                           ;	EBTR1 = 0x1, unprogrammed default
  8282                           ;	Table Read Protection bit
  8283                           ;	EBTR2 = 0x1, unprogrammed default
  8284                           ;	Table Read Protection bit
  8285                           ;	EBTR3 = 0x1, unprogrammed default
  8286   30000C                     	org	3145740
  8287   30000C  0F                 	db	15
  8288                           
  8289                           ;Config register CONFIG7H @ 0x30000D
  8290                           ;	unspecified, using default values
  8291                           ;	Boot Block Table Read Protection bit
  8292                           ;	EBTRB = 0x1, unprogrammed default
  8293   30000D                     	org	3145741
  8294   30000D  40                 	db	64
  8295                           tosu	equ	0xFFF
  8296                           tosh	equ	0xFFE
  8297                           tosl	equ	0xFFD
  8298                           stkptr	equ	0xFFC
  8299                           pclatu	equ	0xFFB
  8300                           pclath	equ	0xFFA
  8301                           pcl	equ	0xFF9
  8302                           tblptru	equ	0xFF8
  8303                           tblptrh	equ	0xFF7
  8304                           tblptrl	equ	0xFF6
  8305                           tablat	equ	0xFF5
  8306                           prodh	equ	0xFF4
  8307                           prodl	equ	0xFF3
  8308                           indf0	equ	0xFEF
  8309                           postinc0	equ	0xFEE
  8310                           postdec0	equ	0xFED
  8311                           preinc0	equ	0xFEC
  8312                           plusw0	equ	0xFEB
  8313                           fsr0h	equ	0xFEA
  8314                           fsr0l	equ	0xFE9
  8315                           wreg	equ	0xFE8
  8316                           indf1	equ	0xFE7
  8317                           postinc1	equ	0xFE6
  8318                           postdec1	equ	0xFE5
  8319                           preinc1	equ	0xFE4
  8320                           plusw1	equ	0xFE3
  8321                           fsr1h	equ	0xFE2
  8322                           fsr1l	equ	0xFE1
  8323                           bsr	equ	0xFE0
  8324                           indf2	equ	0xFDF
  8325                           postinc2	equ	0xFDE
  8326                           postdec2	equ	0xFDD
  8327                           preinc2	equ	0xFDC
  8328                           plusw2	equ	0xFDB
  8329                           fsr2h	equ	0xFDA
  8330                           fsr2l	equ	0xFD9
  8331                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    57
    Data        4
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      80
    BANK0           160     67      97
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_15(CODE[14]), STR_14(CODE[9]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[15]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[14]), STR_2(CODE[5]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _factorial_function->___wmul
    ___lwtoft->___ftpack
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _pow->_log
    _log->_eval_poly
    _exp->_ldexp
    _exp->_log
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___awtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lwdiv->___wmul
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    _main->_Imprimir_Resultado
    _Imprimir_Resultado->___aldiv
    _pow->_exp
    _exp->_ldexp
    ___almod->_pow
    ___aldiv->_pow

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  198327
                                             60 BANK0      7     7      0
                           _BorraLCD
                           _ColorRGB
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                 _Imprimir_Resultado
                      _InicializaLCD
                        _LeerTeclado
                     _MensajeLCD_Var
                            ___fttol
                             ___lmul
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                 _factorial_function
                                _pow
 ---------------------------------------------------------------------------------
 (1) _factorial_function                                   6     2      4    1003
                                             19 COMRAM     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3704
                                             21 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _LeerTeclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     220
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0     110
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Resultado                                  18    14      4   99981
                                             42 BANK0     18    14      4
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                            ___aldiv
                            ___almod
                           ___awtoft
                            ___fttol
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                                _pow
 ---------------------------------------------------------------------------------
 (1) _pow                                                 17    11      6   87565
                                             11 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                           ___lwtoft (ARG)
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  5     2      3   27812
                                             62 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                  9     6      3   47410
                                              2 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                7     2      5     539
                                             62 COMRAM     5     0      5
                                              0 BANK0      2     2      0
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                8     5      3   12604
                                             52 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     682
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4    1001
                                             25 COMRAM    15    11      4
                           ___awtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     918
                                             13 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    3787
                                             40 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     4      6   11719
                                             52 COMRAM    10     4      6
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5167
                                             25 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    6174
                                             52 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    5758
                                             40 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     335
                                             13 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    4239
                                             21 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    4076
                                             21 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3685
                                             21 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    3493
                                             13 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     859
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                             19 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8    1282
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     613
                                             28 BANK0     10     2      8
                           ___awtoft (ARG)
                            ___fttol (ARG)
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                             28 BANK0     14     6      8
                           ___awtoft (ARG)
                            ___fttol (ARG)
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD_Var                                       4     3      1    1546
                                             18 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _EscribeLCD_c                                         1     1      0     132
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0     132
                                             17 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _EnviaDato                                            2     2      0      88
                                             15 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (3) _RetardoLCD                                           2     2      0      22
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      66
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ColorRGB                                             2     2      0       0
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  4     4      0     650
                                              9 COMRAM     4     4      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (8) i2_MensajeLCD_Var                                     4     3      1     408
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (9) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_DireccionaLCD                                      1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (8) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (10) i2_EnviaDato                                         2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (10) i2_RetardoLCD                                        2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_HabilitaLCD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ColorRGB
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _Imprimir_Resultado
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
       _EscribeLCD_c
       _strlen
     ___aldiv
       ___awtoft (ARG)
         ___ftpack
       ___fttol (ARG)
         ___awtoft (ARG)
         ___lwtoft (ARG)
           ___ftpack
       _pow (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
         ___lltoft
           ___ftpack
         ___lwtoft (ARG)
         _exp (ARG)
           ___awtoft
           ___ftdiv
             ___ftpack
           ___ftge
           ___ftmul
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
             ___ftadd (ARG)
               ___awtoft (ARG)
               ___ftmul (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           ___fttol
           _eval_poly
             ___ftadd
             ___ftmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___ftadd
             ___ftge
             ___fttol
             _frexp
           _ldexp
             _eval_poly (ARG)
           _log (ARG)
             ___awtoft
             ___ftadd
             ___ftmul
             _eval_poly
             _frexp
         _log (ARG)
     ___almod
       ___awtoft (ARG)
       ___fttol (ARG)
       _pow (ARG)
     ___awtoft
     ___fttol
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
     _pow
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _LeerTeclado
   _MensajeLCD_Var
   ___fttol
   ___lmul
   ___lwdiv
   ___lwtoft
   ___wmul
   _factorial_function
     ___wmul
   _pow

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_DireccionaLCD
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      32        0.0%
BIGRAM             3EE      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK3            EF      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     43      61       4       60.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      50       1       85.1%
BITBIGSFR_1l        24      0       0      26        0.0%
BITBIGSFRlll        21      0       0      30        0.0%
BITBIGSFR_1hl        E      0       0      25        0.0%
BITBIGSFR_5h         9      0       0      19        0.0%
BITBIGSFRllh         8      0       0      29        0.0%
BITBIGSFRhh          5      0       0      27        0.0%
BITBIGSFRhll         5      0       0      28        0.0%
BITBIGSFR_4          3      0       0      21        0.0%
BITBIGSFR_3          3      0       0      22        0.0%
BITBIGSFR_2          3      0       0      23        0.0%
BITBIGSFR_1hh        2      0       0      24        0.0%
BITBIGSFR_5l         1      0       0      20        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B1      31        0.0%
DATA                 0      0      B1      34        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 18 09:49:32 2023

              ___altoft@exp 0031                           _a 0046                           _b 0044  
                         _i 00B1                           _m 00BA                           _r 00A7  
             ___altoft@sign 0032            i2DireccionaLCD@a 0005                          _PD 007E82  
                        _TO 007E83                          _n1 00B5                          _n2 00B3  
                EnviaDato@a 0011                          _op 00C0         ___wmul@multiplicand 0010  
              ___ftadd@exp1 0034                ___ftadd@exp2 0033               ??_LeerTeclado 000E  
              ___ftadd@sign 0032               _InicializaLCD 210C                         l261 1CE8  
                       l181 0904                         l263 1CF0                         l255 1CE0  
                       l280 1D42                         l272 1D1E                         l290 1D6E  
                       l282 1D4A                         l274 1D26                         l267 1D16  
                       l286 1D5E                         l278 1D3A                         l287 1D76  
                       l288 1D66                         l714 2914                         l830 2670  
                       l840 27E2                         l681 1626                         l692 1ACE  
                       _GIE 007F97                         _RB4 007C0C                         _RB5 007C0D  
                       _RB6 007C0E                         _RB7 007C0F                         _ISR 0008  
                       _POR 007E81                         _n1c 00BF                         _n2c 00BE  
                       _exp 1306                         _log 1814                         _res 00A3  
                       _pow 1698                         wreg 000FE8                        ?_ISR 0001  
              ___ftdiv@cntr 001F            ??i2_EscribeLCD_c 0005                ___ftdiv@sign 0024  
                      l1020 16D2                        l1025 1806                        l1044 13C0  
                      l1061 1BCC                        l1045 14E2                        l3019 2756  
                      l3305 26B6                        l3411 1E36                        l3403 1E12  
                      l3191 286C                        l3407 1E20                        l4303 2352  
                      l5103 0BD6                        l4305 235E                        l5009 0A5A  
                      l3363 2536                        l4411 19B8                        l5211 0E7C  
                      l5203 0E40                        l5019 0A78                        l3189 286A  
                      l4325 1568                        l4421 19E0                        l4501 225A  
                      l3517 211E                        l3621 1D0C                        l5213 0E92  
                      l5045 0AE4                        l3711 22D2                        l3391 1DD2  
                      l3367 254A                        l4271 1F58                        l4351 15CE  
                      l4319 1540                        l4407 19A8                        l3527 213C  
                      l5223 0EB2                        l5207 0E52                        l5127 0C38  
                      l5151 0C90                        l5047 0AEA                        l3721 22E2  
                      l3713 22D6                        l3297 2684                        l3393 1DDE  
                      l3385 1DB0                        l3457 263E                        l4361 1602  
                      l4417 19D0                        l4433 23CA                        l4601 1B52  
                      l3537 215A                        l3609 1CF8                        l5209 0E76  
                      l5065 0B38                        l3715 22DA                        l3707 22CA  
                      l3379 1D98                        l3459 2646                        l4275 1F6E  
                      l4267 1F30                        l4347 15BA                        l4611 20F6  
                      l4443 2418                        l5235 0F20                        l5171 0D1E  
                      l5163 0CC4                        l3709 22CE                        l3725 22E8  
                      l2781 2590                        l3469 2666                        l3485 27D8  
                      l3477 27B8                        l4277 1F8C                        l4269 1F3A  
                      l4525 1A6A                        l4349 15C4                        l4437 23EC  
                      l4453 1C06                        l3557 2192                        l3645 1D2E  
                      l5165 0CDC                        l5069 0B4C                        l5237 0F26  
                      l3719 22DE                        l3727 232A                        l2783 25A2  
                      l3479 27C0                        l4279 1F96                        l4519 1A42  
                      l4367 1642                        l4359 15F8                        l4471 1C5A  
                      l3831 248A                        l5183 0DA8                        l5175 0D3E  
                      l5167 0D12                        l5095 0BBE                        l2785 25AC  
                      l4545 1AA8                        l4377 1672                        l4393 1976  
                      l4609 2094                        l4481 1C72                        l4721 14B8  
                      l3673 1D52                        l3585 1CD6                        l2779 2580  
                      l4651 2422                        l4563 2802                        l4387 194E  
                      l4483 1C7E                        l4475 1C6A                        l4643 1EDA  
                      l4627 1EA8                        l4619 1E60                        l4811 0F8C  
                      l3835 24AC                        l2789 25B6                        l4653 242E  
                      l4741 16FA                        l5197 0DDE                        l5189 0DBC  
                      l4575 2840                        l4639 1ECC                        l4671 184E  
                      l4735 16E2                        l4489 1C9A                        l4593 1B2A  
                      l4665 182E                        l4753 1780                        l4851 10E6  
                      l4819 0FF2                        l4827 1036                        l4931 092E  
                      ?_exp 0062                        l4781 2004                        l4773 1FDE  
                      l4597 1B38                        l4693 1358                        l4749 175E  
                      l4933 0932                        ?_log 003F                        l4783 2010  
                      l4687 1320                        l4863 1126                        l4839 1096  
                      l4793 2046                        l4777 1FF2                        l4929 0914  
                      l4699 1390                        l4883 12BE                        l4947 0988  
                      l4797 205C                        l4789 2038                        l4893 12FC  
                      l4973 09EE                        l4887 12DA                        l4879 12B2  
                      l4967 09D4                        l4983 0A0C                        ?_pow 006B  
                      STR_1 08A6                        STR_2 08AE                        STR_3 0849  
                      STR_4 0869                        STR_5 0889                        STR_6 0869  
                      STR_7 083A                        STR_8 0869                        STR_9 087E  
                      _LATB 000F8A                        _LATC 000F8B                        _LATD 000F8C  
                      u5120 1F22                        u3530 1DE2                        u5211 1500  
                      u3700 2934                        u6100 10A4                        u4180 24BC  
                      u5221 1514                        u3630 264A                        u5310 1598  
                      u6110 10B6                        u5160 1FA0                        u6120 10C8  
                      u5250 1532                        u6130 10FA                        u3660 27C4  
                      u6140 110C                        u6060 1034                        u5421 1936  
                      u5350 15D6                        u6150 111E                        u6070 104A  
                      u5511 1BEA                        u5280 155A                        u5520 1BF4  
                      u5600 2286                        u6160 11AE                        u6080 105C  
                      u6320 0A24                        u5441 195E                        u5530 1C24  
                      u6090 106E                        u7107 29BE                        u5611 1A2A  
                      u7027 0920                        u5380 160A                        u3780 1CBA  
                      u6260 09A0                        u7037 09E0                        u5710 1B44  
                      u5631 1A52                        u5535 1C1C                        u7047 0F2E  
                      u5608 2288                        u7057 2586                        u5570 1C84  
                      u6450 0AC6                        u7067 2592                        u6380 0A90  
                      u7077 259A                        u5750 1E82                        u6550 0B2A  
                      u7087 25A4                        u7097 25AE                        u5850 139A  
                      u6650 0B9C                        u5860 139C                        u5940 1748  
                      u5758 1E86                        u6750 0C18                        u6860 0C80  
                      _RBPU 007F8F                        u5990 2014                        _TMR0 000FD6  
            ??_EscribeLCD_c 0012                        _main 08B4                ___ftpack@arg 000E  
              ___ftpack@exp 0011                        fsr2h 000FDA                        fsr2l 000FD9  
                      btemp 0051                        exp@x 0062                        log@x 003F  
                      pow@x 006B                        pow@y 006E                        prodh 000FF4  
                      prodl 000FF3                        start 000E                ___ftmul@cntr 0027  
              ___param_bank 000000                ___ftmul@sign 0028                       ??_ISR 000A  
              ___fttol@exp1 0028                       ??_exp 0044                       ??_log 0042  
              ___fttol@lval 0024                       ??_pow 0044             i2_DireccionaLCD 297C  
            ?_InicializaLCD 0001             __end_of___aldiv 1E48             __end_of___almod 206E  
                     ?_main 0001             __end_of___ftadd 1698                       STR_10 0869  
                     STR_11 0865                       STR_12 0893                       STR_13 0872  
                     STR_14 089D                       STR_15 0857               EscribeLCD_c@a 0012  
           __end_of___ftdiv 1B00             __end_of___ftneg 2922             __end_of___ftmul 1A1A  
                     _T0CON 000FD5             __end_of___ftsub 282C             __end_of___fttol 1CAC  
                     _LATE0 007C68                       _LATE1 007C69                       _LATE2 007C6A  
                     _LATC7 007C5F             __end_of___lwdiv 267A             __end_of___lwmod 27EC  
                     i2l323 2220                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96         ___lmul@multiplicand 0012  
              ___lltoft@exp 001E                       _Tecla 00B9               ___awtoft@sign 0019  
       __end_of_LeerTeclado 1D7A                       _color 004E                 ?i2_BorraLCD 0001  
                     _floor 1B00                       _ldexp 1E48                       _frexp 2234  
                     _errno 00AF               ___ftpack@sign 0012                       tablat 000FF5  
                     pow@yi 0078                 _HabilitaLCD 29BA                       ttemp5 0052  
                     ttemp6 0055                       ttemp7 0059                       status 000FD8  
                     wtemp8 0052                 exp@exponent 0068                 ldexp@newexp 0042  
          __end_ofi2_strlen 28B4            __end_of_BorraLCD 29A6            __end_of_ColorRGB 2330  
           __initialization 24D0                 log@exponent 0042                __end_of_main 0F3A  
          i2_MensajeLCD_Var 26CC                      ??_main 009C        __end_of_ConfiguraLCD 293A  
             ___fttol@sign1 0023               __activetblptr 000002                  i2strlen@cp 0003  
        _Imprimir_Resultado 0F3A                      _ADCON1 000FC1                      ?_floor 0035  
                    ?_ldexp 003F                      ?_frexp 000E            __end_of___altoft 23A8  
            DireccionaLCD@a 0012            __end_of___awtoft 2864            __end_of___ftpack 1FC0  
          _contador_digitos 004A            __end_of___lltoft 2478                      i2l3171 25F8  
                    i2l3173 2602                      i2l3501 2894                      i2l4221 21DC  
                    i2l3167 25D6                      i2l3169 25E6                      i2l3177 260C  
                    i2l4225 21F0                      i2l3283 279C                      i2l4219 21D4  
                    i2l3499 2892                      i2l3855 26D6                      i2l3863 2708  
          __end_of___lwtoft 28FE                      _OSCCON 000FD3                      _TMR0IE 007F95  
                    _TMR0IF 007F92                      _TMR0ON 007EAF         ?_Imprimir_Resultado 008A  
     __end_of_DireccionaLCD 2966                  _RetardoLCD 257C     __end_ofi2_DireccionaLCD 2992  
                    ___ftge 23A8                      ___lmul 2526                   ??___aldiv 0044  
                 ??___almod 0044                      ___wmul 28B4                   ??___ftadd 002F  
                 ??___ftdiv 001C                   ??___ftneg 0011                   ??___ftmul 0020  
                 ??___ftsub 003B                   ??___fttol 001E                   ??___lwdiv 0018  
                 ??___lwmod 0012             ??_InicializaLCD 0012                      clear_0 2506  
                    clear_1 2512                      isa$std 000001        ??_Imprimir_Resultado 008E  
      __end_of_EscribeLCD_c 2950                      _strlen 2864                      floor@i 0038  
               _LeerTeclado 1CAC                      floor@x 0035       ___ftmul@f3_as_product 0024  
              ?i2_EnviaDato 0001                __pdataCOMRAM 0050                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
__end_of_factorial_function 24D0            __end_ofexp@coeff 081F            __end_oflog@coeff 083A  
     __end_ofi2_HabilitaLCD 29D6                  __accesstop 0060     __end_of__initialization 2518  
                ___altoft@c 0029                  ___ftadd@f1 0029                  ___ftadd@f2 002C  
                ___ftge@ff1 000E                  ___ftge@ff2 0011                eval_poly@res 003C  
             ___rparam_used 000001                  ___ftdiv@f1 0016                  ___ftdiv@f2 0019  
                ___ftdiv@f3 0020                  ___ftneg@f1 000E                  ___awtoft@c 0016  
                ___ftmul@f1 001A                  ___ftmul@f2 001D                  ___ftsub@f1 0035  
                ___ftsub@f2 0038                  ___fttol@f1 001A              __pcstackCOMRAM 0001  
              __pidataBANK0 29D6                  ___lltoft@c 0016               __end_of_floor 1BDA  
             __end_of_ldexp 1F12               __end_of_frexp 22B6           __end_of_EnviaDato 2764  
                ___lwtoft@c 0016                   ?i2_strlen 0001                   ?_BorraLCD 0001  
                   ??_floor 0038                     ??_ldexp 0060                     ??_frexp 0012  
                 ?_ColorRGB 0001              _MensajeLCD_Var 267A                  __pbssBANK0 00A3  
           MensajeLCD_Var@a 0013             MensajeLCD_Var@i 0015      factorial_function@fact 0018  
               ?_RetardoLCD 0001                 RetardoLCD@a 000F            ?i2_DireccionaLCD 0001  
                   ?___ftge 000E                     ?___lmul 000E                     ?___wmul 000E  
                 ?___altoft 0029              ___lmul@product 0016                   ?___awtoft 0016  
                 ?___ftpack 000E                   ?___lltoft 0016                     ?_strlen 000E  
                 ?___lwtoft 0016      __end_of_MensajeLCD_Var 26CC                  ??i2_strlen 0003  
              ??i2_BorraLCD 0005                  ??_BorraLCD 0012                  ??_ColorRGB 000E  
  __end_ofi2_MensajeLCD_Var 271E                ?_HabilitaLCD 0001                _ConfiguraLCD 2922  
                   __Hparam 0000                     __Lparam 0000                     ___aldiv 1D7A  
                   ___almod 1FC0                     ___ftadd 14F0                     ___ftdiv 1A1A  
                   ___ftneg 28FE                     ___ftmul 1926                     ___ftsub 27EC  
                   ___fttol 1BDA                     ___lwdiv 2628                     ___lwmod 27AA  
              __psmallconst 0800                  ??___altoft 002D                     _exp$910 0065  
        __end_ofi2_BorraLCD 29BA         factorial_function@a 0014                     __pcinit 24D0  
                ??___awtoft 0019                  ??___ftpack 0013           __end_of_eval_poly 210C  
                   __ramtop 0800                  ??___lltoft 001A                     __ptext0 08B4  
                   __ptext1 2478                     __ptext2 28DA                     __ptext3 1CAC  
                   __ptext4 210C                     __ptext5 2992                     __ptext6 0F3A  
                   __ptext7 1698                     __ptext8 1814                     __ptext9 1306  
                ??___lwtoft 0019                     _pow$908 0071                     _pow$909 0074  
          ___aldiv@dividend 007C             ?_MensajeLCD_Var 0013              __pintcode_body 21A8  
      end_of_initialization 2518                     exp@sign 006A               __Lmediumconst 0000  
                   int_func 21A8                _EscribeLCD_c 293A                     pow@sign 0077  
          ___aldiv@quotient 0086                     postdec2 000FDD                     postinc0 000FEE  
                   postinc2 000FDE                     strlen@s 000E                ?_LeerTeclado 0001  
           i2EscribeLCD_c@a 0005                 ___ftdiv@exp 0023               ?i2_RetardoLCD 0001  
        _factorial_function 2478                 ___ftmul@exp 0023              __end_of___ftge 241C  
            __end_of___lmul 257C              __end_of___wmul 28DA               __pidataCOMRAM 29D9  
       ?_factorial_function 0014       __end_of_InicializaLCD 21A8                  floor@expon 003B  
                 _EnviaDato 271E              __end_of_strlen 288C         start_initialization 24D0  
                eval_poly@d 0038                  eval_poly@n 0039                  eval_poly@x 0035  
               __end_of_ISR 2234                  ldexp@value 003F                 __end_of_exp 14F0  
               __end_of_log 1926                 __end_of_pow 1814        ??_factorial_function 0018  
                 i2strlen@s 0001                  frexp@value 000E              ??i2_RetardoLCD 0001  
              ??_RetardoLCD 000E                    ??___ftge 0014                    ??___lmul 0016  
                  ??___wmul 0012                 __pdataBANK0 00BE                    ??_strlen 0010  
                ?_EnviaDato 0001                 __pbssCOMRAM 0044          __end_of_RetardoLCD 25D2  
             __pcstackBANK0 0060           ?i2_MensajeLCD_Var 0006          ??i2_MensajeLCD_Var 0007  
             _DireccionaLCD 2950              i2_EscribeLCD_c 2966            ___lwdiv@dividend 0014  
                 _factorial 00B7                   __pintcode 0008                    ?___aldiv 007C  
                  ?___almod 007C                    ?___ftadd 0029                    ?___ftdiv 0016  
                  ?___ftneg 000E                    ?___ftmul 001A                    ?___ftsub 0035  
                  ?___fttol 001A                    ?___lwdiv 0014                    ?___lwmod 000E  
          ___almod@dividend 007C            ??_MensajeLCD_Var 0014                 __smallconst 0800  
                 _eval_poly 206E            ___lwdiv@quotient 0018             ___aldiv@divisor 0080  
    _Imprimir_Resultado$906 0094      _Imprimir_Resultado$907 0097             ___aldiv@counter 0084  
            ___wmul@product 0012               i2_HabilitaLCD 29C8              ?_DireccionaLCD 0001  
    __end_ofi2_EscribeLCD_c 297C                    i2u510_45 220C                    i2u505_40 21E6  
                  i2u506_45 21E8                    i2u509_40 220A                    i2u711_47 25DC  
                  i2u712_47 25E8                    i2u713_47 25F0                    i2u714_47 25FA  
                  i2u715_47 2604                    i2u716_47 29CC           ___wmul@multiplier 000E  
             ??i2_EnviaDato 0003        __end_ofi2_RetardoLCD 2628                 ??_EnviaDato 0010  
                ?_eval_poly 0035                    i2_strlen 288C                    _BorraLCD 2992  
                  _ColorRGB 22B6           ___lmul@multiplier 000E              ?i2_HabilitaLCD 0001  
           ?i2_EscribeLCD_c 0001                   frexp@eptr 0011                    __Hrparam 0000  
                  __Lrparam 0000                    ___altoft 2330                i2EnviaDato@a 0004  
                  ___awtoft 282C                    ___ftpack 1F12                    ___lltoft 241C  
                  ___lwtoft 28DA               ConfiguraLCD@a 000E                    _main$163 00A1  
                  _main$164 00A2                    _main$905 009E           ??i2_DireccionaLCD 0005  
           ___lwdiv@divisor 0016             ___lwdiv@counter 001A                    __ptext10 1E48  
                  __ptext11 1B00                    __ptext20 28FE                    __ptext12 2234  
                  __ptext21 1A1A                    __ptext13 1BDA                    __ptext30 1D7A  
                  __ptext22 282C                    __ptext14 23A8                    __ptext31 267A  
                  __ptext23 241C                    __ptext15 2330                    __ptext32 2864  
                  __ptext24 1F12                    __ptext16 206E                    __ptext41 26CC  
                  __ptext33 293A                    __ptext25 28B4                    __ptext17 1926  
                  __ptext42 288C                    __ptext34 2950                    __ptext26 27AA  
                  __ptext18 27EC                    __ptext43 2966                    __ptext35 271E  
                  __ptext27 2628                    __ptext19 14F0                    __ptext44 297C  
                  __ptext36 257C                    __ptext28 2526                    __ptext45 29A6  
                  __ptext37 29BA                    __ptext29 1FC0                    __ptext46 2764  
                  __ptext38 2922                    __ptext47 25D2                    __ptext39 22B6  
                  __ptext48 29C8         __end_ofi2_EnviaDato 27AA             ___almod@divisor 0080  
                  _contador 004C             ___almod@counter 0084             ??_DireccionaLCD 0012  
                  _interfaz 0050                    _partdecl 00AB                    isa$xinst 000000  
                  _potencia 00B8                    int$flags 0051  __end_of_Imprimir_Resultado 1306  
                  exp@coeff 0801                    log@coeff 081F                 ??_eval_poly 003B  
           ??i2_HabilitaLCD 0001                    intlevel2 0000               ??_HabilitaLCD 000E  
          ___lwmod@dividend 000E               ?_ConfiguraLCD 0001               i2RetardoLCD@a 0002  
               i2_EnviaDato 2764             ___lwmod@divisor 0010                    strlen@cp 0010  
           ___lwmod@counter 0012                ___aldiv@sign 0085         Imprimir_Resultado@i 0092  
       Imprimir_Resultado@j 009A         Imprimir_Resultado@r 008A                  i2_BorraLCD 29A6  
              ___almod@sign 0085              ??_ConfiguraLCD 000E               ?_EscribeLCD_c 0001  
               _verificador 0048           i2MensajeLCD_Var@a 0006           i2MensajeLCD_Var@i 0008  
              i2_RetardoLCD 25D2         __end_of_HabilitaLCD 29C8  
